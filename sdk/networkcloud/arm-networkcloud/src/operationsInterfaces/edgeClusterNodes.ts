/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  EdgeClusterNode,
  EdgeClusterNodesListByEdgeClusterOptionalParams,
  EdgeClusterNodesGetOptionalParams,
  EdgeClusterNodesGetResponse,
  EdgeClusterNodesCreateOrUpdateOptionalParams,
  EdgeClusterNodesCreateOrUpdateResponse,
  EdgeClusterNodesDeleteOptionalParams,
  EdgeClusterNodesDeleteResponse,
  EdgeClusterNodesUpdateOptionalParams,
  EdgeClusterNodesUpdateResponse,
  EdgeClusterNodesReimageOptionalParams,
  EdgeClusterNodesReimageResponse,
  EdgeClusterNodesRestartOptionalParams,
  EdgeClusterNodesRestartResponse,
  EdgeClusterNodesSynchronizeTimeOptionalParams,
  EdgeClusterNodesSynchronizeTimeResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a EdgeClusterNodes. */
export interface EdgeClusterNodes {
  /**
   * Get a list of edge cluster nodes in the provided edge cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param options The options parameters.
   */
  listByEdgeCluster(
    resourceGroupName: string,
    edgeClusterName: string,
    options?: EdgeClusterNodesListByEdgeClusterOptionalParams,
  ): PagedAsyncIterableIterator<EdgeClusterNode>;
  /**
   * Get properties of the provided the edge cluster node.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param nodeName The name of the node.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    edgeClusterName: string,
    nodeName: string,
    options?: EdgeClusterNodesGetOptionalParams,
  ): Promise<EdgeClusterNodesGetResponse>;
  /**
   * Create a new edge cluster node or update properties of the edge cluster node if it exists.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param nodeName The name of the node.
   * @param edgeClusterNodeParameters The request body.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    edgeClusterName: string,
    nodeName: string,
    edgeClusterNodeParameters: EdgeClusterNode,
    options?: EdgeClusterNodesCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<EdgeClusterNodesCreateOrUpdateResponse>,
      EdgeClusterNodesCreateOrUpdateResponse
    >
  >;
  /**
   * Create a new edge cluster node or update properties of the edge cluster node if it exists.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param nodeName The name of the node.
   * @param edgeClusterNodeParameters The request body.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    edgeClusterName: string,
    nodeName: string,
    edgeClusterNodeParameters: EdgeClusterNode,
    options?: EdgeClusterNodesCreateOrUpdateOptionalParams,
  ): Promise<EdgeClusterNodesCreateOrUpdateResponse>;
  /**
   * Delete the provided edge cluster node.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param nodeName The name of the node.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    edgeClusterName: string,
    nodeName: string,
    options?: EdgeClusterNodesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<EdgeClusterNodesDeleteResponse>,
      EdgeClusterNodesDeleteResponse
    >
  >;
  /**
   * Delete the provided edge cluster node.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param nodeName The name of the node.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    edgeClusterName: string,
    nodeName: string,
    options?: EdgeClusterNodesDeleteOptionalParams,
  ): Promise<EdgeClusterNodesDeleteResponse>;
  /**
   * Patch properties of the provided edge cluster node, or update the tags assigned to the edge cluster
   * node. Properties and tag updates can be done independently.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param nodeName The name of the node.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    edgeClusterName: string,
    nodeName: string,
    options?: EdgeClusterNodesUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<EdgeClusterNodesUpdateResponse>,
      EdgeClusterNodesUpdateResponse
    >
  >;
  /**
   * Patch properties of the provided edge cluster node, or update the tags assigned to the edge cluster
   * node. Properties and tag updates can be done independently.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param nodeName The name of the node.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    edgeClusterName: string,
    nodeName: string,
    options?: EdgeClusterNodesUpdateOptionalParams,
  ): Promise<EdgeClusterNodesUpdateResponse>;
  /**
   * Reimages the edge cluster node, returning it to a refreshed OS image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param nodeName The name of the node.
   * @param options The options parameters.
   */
  beginReimage(
    resourceGroupName: string,
    edgeClusterName: string,
    nodeName: string,
    options?: EdgeClusterNodesReimageOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<EdgeClusterNodesReimageResponse>,
      EdgeClusterNodesReimageResponse
    >
  >;
  /**
   * Reimages the edge cluster node, returning it to a refreshed OS image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param nodeName The name of the node.
   * @param options The options parameters.
   */
  beginReimageAndWait(
    resourceGroupName: string,
    edgeClusterName: string,
    nodeName: string,
    options?: EdgeClusterNodesReimageOptionalParams,
  ): Promise<EdgeClusterNodesReimageResponse>;
  /**
   * Restarts the edge cluster node.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param nodeName The name of the node.
   * @param options The options parameters.
   */
  beginRestart(
    resourceGroupName: string,
    edgeClusterName: string,
    nodeName: string,
    options?: EdgeClusterNodesRestartOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<EdgeClusterNodesRestartResponse>,
      EdgeClusterNodesRestartResponse
    >
  >;
  /**
   * Restarts the edge cluster node.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param nodeName The name of the node.
   * @param options The options parameters.
   */
  beginRestartAndWait(
    resourceGroupName: string,
    edgeClusterName: string,
    nodeName: string,
    options?: EdgeClusterNodesRestartOptionalParams,
  ): Promise<EdgeClusterNodesRestartResponse>;
  /**
   * Synchronizes the time for the edge cluster node.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param nodeName The name of the node.
   * @param options The options parameters.
   */
  beginSynchronizeTime(
    resourceGroupName: string,
    edgeClusterName: string,
    nodeName: string,
    options?: EdgeClusterNodesSynchronizeTimeOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<EdgeClusterNodesSynchronizeTimeResponse>,
      EdgeClusterNodesSynchronizeTimeResponse
    >
  >;
  /**
   * Synchronizes the time for the edge cluster node.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param edgeClusterName The name of the edge cluster.
   * @param nodeName The name of the node.
   * @param options The options parameters.
   */
  beginSynchronizeTimeAndWait(
    resourceGroupName: string,
    edgeClusterName: string,
    nodeName: string,
    options?: EdgeClusterNodesSynchronizeTimeOptionalParams,
  ): Promise<EdgeClusterNodesSynchronizeTimeResponse>;
}
