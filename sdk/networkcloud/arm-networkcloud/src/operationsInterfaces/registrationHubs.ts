/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  RegistrationHub,
  RegistrationHubsListBySubscriptionOptionalParams,
  RegistrationHubsListByResourceGroupOptionalParams,
  RegistrationHubsGetOptionalParams,
  RegistrationHubsGetResponse,
  RegistrationHubsCreateOrUpdateOptionalParams,
  RegistrationHubsCreateOrUpdateResponse,
  RegistrationHubsDeleteOptionalParams,
  RegistrationHubsDeleteResponse,
  RegistrationHubsUpdateOptionalParams,
  RegistrationHubsUpdateResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a RegistrationHubs. */
export interface RegistrationHubs {
  /**
   * Get a list of registration hubs in the provided subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: RegistrationHubsListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<RegistrationHub>;
  /**
   * Get a list of registration hubs in the provided resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: RegistrationHubsListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<RegistrationHub>;
  /**
   * Get properties of the provided registration hub.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    registrationHubName: string,
    options?: RegistrationHubsGetOptionalParams,
  ): Promise<RegistrationHubsGetResponse>;
  /**
   * Create a new registration hub or update properties of the existing one.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param registrationHubParameters The request body.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    registrationHubName: string,
    registrationHubParameters: RegistrationHub,
    options?: RegistrationHubsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<RegistrationHubsCreateOrUpdateResponse>,
      RegistrationHubsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a new registration hub or update properties of the existing one.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param registrationHubParameters The request body.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    registrationHubName: string,
    registrationHubParameters: RegistrationHub,
    options?: RegistrationHubsCreateOrUpdateOptionalParams,
  ): Promise<RegistrationHubsCreateOrUpdateResponse>;
  /**
   * Delete the provided registration hub.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    registrationHubName: string,
    options?: RegistrationHubsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<RegistrationHubsDeleteResponse>,
      RegistrationHubsDeleteResponse
    >
  >;
  /**
   * Delete the provided registration hub.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    registrationHubName: string,
    options?: RegistrationHubsDeleteOptionalParams,
  ): Promise<RegistrationHubsDeleteResponse>;
  /**
   * Patch properties of the provided registration hub, or update the tags associated with the
   * registration hub. Properties and tag updates can be done independently.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    registrationHubName: string,
    options?: RegistrationHubsUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<RegistrationHubsUpdateResponse>,
      RegistrationHubsUpdateResponse
    >
  >;
  /**
   * Patch properties of the provided registration hub, or update the tags associated with the
   * registration hub. Properties and tag updates can be done independently.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    registrationHubName: string,
    options?: RegistrationHubsUpdateOptionalParams,
  ): Promise<RegistrationHubsUpdateResponse>;
}
