/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  RegistrationHubImage,
  RegistrationHubImagesListByRegistrationHubOptionalParams,
  RegistrationHubImagesGetOptionalParams,
  RegistrationHubImagesGetResponse,
  RegistrationHubImagesCreateOrUpdateOptionalParams,
  RegistrationHubImagesCreateOrUpdateResponse,
  RegistrationHubImagesDeleteOptionalParams,
  RegistrationHubImagesDeleteResponse,
  RegistrationHubImagesUpdateOptionalParams,
  RegistrationHubImagesUpdateResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a RegistrationHubImages. */
export interface RegistrationHubImages {
  /**
   * Get a list of images in the provided registration hub.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param options The options parameters.
   */
  listByRegistrationHub(
    resourceGroupName: string,
    registrationHubName: string,
    options?: RegistrationHubImagesListByRegistrationHubOptionalParams,
  ): PagedAsyncIterableIterator<RegistrationHubImage>;
  /**
   * Get properties of the provided registration hub image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param imageName The name of the registration hub image.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    registrationHubName: string,
    imageName: string,
    options?: RegistrationHubImagesGetOptionalParams,
  ): Promise<RegistrationHubImagesGetResponse>;
  /**
   * Create a new registration hub image or update properties of the existing one.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param imageName The name of the registration hub image.
   * @param registrationHubImageParameters The request body.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    registrationHubName: string,
    imageName: string,
    registrationHubImageParameters: RegistrationHubImage,
    options?: RegistrationHubImagesCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<RegistrationHubImagesCreateOrUpdateResponse>,
      RegistrationHubImagesCreateOrUpdateResponse
    >
  >;
  /**
   * Create a new registration hub image or update properties of the existing one.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param imageName The name of the registration hub image.
   * @param registrationHubImageParameters The request body.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    registrationHubName: string,
    imageName: string,
    registrationHubImageParameters: RegistrationHubImage,
    options?: RegistrationHubImagesCreateOrUpdateOptionalParams,
  ): Promise<RegistrationHubImagesCreateOrUpdateResponse>;
  /**
   * Delete the provided registration hub image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param imageName The name of the registration hub image.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    registrationHubName: string,
    imageName: string,
    options?: RegistrationHubImagesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<RegistrationHubImagesDeleteResponse>,
      RegistrationHubImagesDeleteResponse
    >
  >;
  /**
   * Delete the provided registration hub image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param imageName The name of the registration hub image.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    registrationHubName: string,
    imageName: string,
    options?: RegistrationHubImagesDeleteOptionalParams,
  ): Promise<RegistrationHubImagesDeleteResponse>;
  /**
   * Patch properties of the provided registration hub image, or update the tags associated with the
   * registration hub image. Properties and tag updates can be done independently.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param imageName The name of the registration hub image.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    registrationHubName: string,
    imageName: string,
    options?: RegistrationHubImagesUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<RegistrationHubImagesUpdateResponse>,
      RegistrationHubImagesUpdateResponse
    >
  >;
  /**
   * Patch properties of the provided registration hub image, or update the tags associated with the
   * registration hub image. Properties and tag updates can be done independently.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registrationHubName The name of the registration hub.
   * @param imageName The name of the registration hub image.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    registrationHubName: string,
    imageName: string,
    options?: RegistrationHubImagesUpdateOptionalParams,
  ): Promise<RegistrationHubImagesUpdateResponse>;
}
