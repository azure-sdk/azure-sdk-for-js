/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type FabricModelCustomPropertiesUnion =
  | FabricModelCustomProperties
  | AzStackHCIFabricModelCustomProperties
  | HyperVMigrateFabricModelCustomProperties
  | VMwareMigrateFabricModelCustomProperties;
export type FabricAgentModelCustomPropertiesUnion =
  | FabricAgentModelCustomProperties
  | VMwareFabricAgentModelCustomProperties;
export type EventModelCustomPropertiesUnion =
  | EventModelCustomProperties
  | HyperVToAzStackHCIEventModelCustomProperties
  | VMwareToAzStackHCIEventModelCustomProperties;
export type JobModelCustomPropertiesUnion =
  | JobModelCustomProperties
  | FailoverJobModelCustomProperties
  | TestFailoverCleanupJobModelCustomProperties
  | TestFailoverJobModelCustomProperties;
export type ProtectedItemModelCustomPropertiesUnion =
  | ProtectedItemModelCustomProperties
  | HyperVToAzStackHCIProtectedItemModelCustomProperties
  | VMwareToAzStackHCIProtectedItemModelCustomProperties;
export type ProtectedItemModelCustomPropertiesUpdateUnion =
  | ProtectedItemModelCustomPropertiesUpdate
  | HyperVToAzStackHCIProtectedItemModelCustomPropertiesUpdate
  | VMwareToAzStackHCIProtectedItemModelCustomPropertiesUpdate;
export type PlannedFailoverModelCustomPropertiesUnion =
  | PlannedFailoverModelCustomProperties
  | HyperVToAzStackHCIPlannedFailoverModelCustomProperties
  | VMwareToAzStackHCIPlannedFailoverModelCustomProperties;
export type RecoveryPointModelCustomPropertiesUnion =
  | RecoveryPointModelCustomProperties
  | HyperVToAzStackHCIRecoveryPointModelCustomProperties
  | VMwareToAzStackHCIRecoveryPointModelCustomProperties;
export type ReplicationExtensionModelCustomPropertiesUnion =
  | ReplicationExtensionModelCustomProperties
  | HyperVToAzStackHCIReplicationExtensionModelCustomProperties
  | VMwareToAzStackHCIReplicationExtensionModelCustomProperties;
export type PolicyModelCustomPropertiesUnion =
  | PolicyModelCustomProperties
  | HyperVToAzStackHCIPolicyModelCustomProperties
  | VMwareToAzStackHCIPolicyModelCustomProperties;

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Check name availability model. */
export interface CheckNameAvailabilityModel {
  /** Gets or sets the resource name. */
  name?: string;
  /** Gets or sets the resource type. */
  type?: string;
}

/** Check name availability response model. */
export interface CheckNameAvailabilityResponseModel {
  /** Gets or sets a value indicating whether resource name is available or not. */
  nameAvailable?: boolean;
  /** Gets or sets the reason for resource name unavailability. */
  reason?: string;
  /** Gets or sets the message for resource name unavailability. */
  message?: string;
}

/** The response of a FabricModel list operation. */
export interface FabricModelListResult {
  /** The FabricModel items on this page */
  value: FabricModel[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Fabric model properties. */
export interface FabricModelProperties {
  /**
   * Gets or sets the provisioning state of the fabric.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Gets or sets the service endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceEndpoint?: string;
  /**
   * Gets or sets the service resource Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceResourceId?: string;
  /**
   * Gets or sets the fabric health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: HealthStatus;
  /**
   * Gets or sets the list of health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthErrorModel[];
  /** Fabric model custom properties. */
  customProperties: FabricModelCustomPropertiesUnion;
}

/** Health error model. */
export interface HealthErrorModel {
  /** Gets or sets the type of affected resource type. */
  affectedResourceType?: string;
  /** Gets or sets the list of affected resource correlation Ids. This can be used to uniquely identify the count of items affected by a specific category and severity as well as count of item affected by an specific issue. */
  affectedResourceCorrelationIds?: string[];
  /** Gets or sets a list of child health errors associated with this error. */
  childErrors?: InnerHealthErrorModel[];
  /**
   * Gets or sets the error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Gets or sets the health category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthCategory?: string;
  /**
   * Gets or sets the error category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly category?: string;
  /**
   * Gets or sets the error severity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly severity?: string;
  /**
   * Gets or sets the error source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly source?: string;
  /**
   * Gets or sets the error creation time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /**
   * Gets or sets a value indicating whether the error is customer resolvable.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isCustomerResolvable?: boolean;
  /**
   * Gets or sets the error summary.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly summary?: string;
  /**
   * Gets or sets the error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Gets or sets possible causes of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly causes?: string;
  /**
   * Gets or sets recommended action to resolve the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendation?: string;
}

/** Inner health error model. */
export interface InnerHealthErrorModel {
  /**
   * Gets or sets the error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Gets or sets the health category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthCategory?: string;
  /**
   * Gets or sets the error category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly category?: string;
  /**
   * Gets or sets the error severity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly severity?: string;
  /**
   * Gets or sets the error source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly source?: string;
  /**
   * Gets or sets the error creation time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /**
   * Gets or sets a value indicating whether the error is customer resolvable.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isCustomerResolvable?: boolean;
  /**
   * Gets or sets the error summary.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly summary?: string;
  /**
   * Gets or sets the error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Gets or sets possible causes of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly causes?: string;
  /**
   * Gets or sets recommended action to resolve the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendation?: string;
}

/** Fabric model custom properties. */
export interface FabricModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "AzStackHCI" | "HyperVMigrate" | "VMwareMigrate";
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The response of a VaultModel list operation. */
export interface VaultModelListResult {
  /** The VaultModel items on this page */
  value: VaultModel[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Vault properties. */
export interface VaultModelProperties {
  /**
   * Gets or sets the provisioning state of the vault.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Gets or sets the service resource Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceResourceId?: string;
  /** Gets or sets the type of vault. */
  vaultType?: ReplicationVaultType;
}

/** Managed service identity (system assigned and/or user assigned identities) */
export interface ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */
  type: ManagedServiceIdentityType;
  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
  userAssignedIdentities?: {
    [propertyName: string]: UserAssignedIdentity | null;
  };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Deployment preflight model. */
export interface DeploymentPreflightModel {
  /** Gets or sets the list of resources. */
  resources?: DeploymentPreflightResource[];
}

/** Deployment preflight resource. */
export interface DeploymentPreflightResource {
  /** Gets or sets the resource name. */
  name?: string;
  /** Gets or sets the resource type. */
  type?: string;
  /** Gets or sets the location of the resource. */
  location?: string;
  /** Gets or sets the Api version. */
  apiVersion?: string;
  /** Gets or sets the properties of the resource. */
  properties?: any;
}

/** Defines the operation status. */
export interface OperationStatus {
  /** Gets or sets the Id. */
  id?: string;
  /** Gets or sets the operation name. */
  name?: string;
  /** Gets or sets the status of the operation. ARM expects the terminal status to be one of Succeeded/ Failed/ Canceled. All other values imply that the operation is still running. */
  status?: string;
  /** Gets or sets the start time. */
  startTime?: string;
  /** Gets or sets the end time. */
  endTime?: string;
}

/** Fabric model update. */
export interface FabricModelUpdate {
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
  /** Fabric model properties. */
  properties?: FabricModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** The response of a FabricAgentModel list operation. */
export interface FabricAgentModelListResult {
  /** The FabricAgentModel items on this page */
  value: FabricAgentModel[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Fabric agent model properties. */
export interface FabricAgentModelProperties {
  /**
   * Gets or sets the fabric agent correlation Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly correlationId?: string;
  /** Gets or sets the machine Id where fabric agent is running. */
  machineId: string;
  /** Gets or sets the machine name where fabric agent is running. */
  machineName: string;
  /** Identity model. */
  authenticationIdentity: IdentityModel;
  /** Identity model. */
  resourceAccessIdentity: IdentityModel;
  /**
   * Gets or sets a value indicating whether the fabric agent is responsive.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isResponsive?: boolean;
  /**
   * Gets or sets the time when last heartbeat was sent by the fabric agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastHeartbeat?: Date;
  /**
   * Gets or sets the fabric agent version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly versionNumber?: string;
  /**
   * Gets or sets the provisioning state of the fabric agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Gets or sets the list of health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthErrorModel[];
  /** Fabric agent model custom properties. */
  customProperties: FabricAgentModelCustomPropertiesUnion;
}

/** Identity model. */
export interface IdentityModel {
  /** Gets or sets the tenant Id of the SPN with which fabric agent communicates to service. */
  tenantId: string;
  /** Gets or sets the client/application Id of the SPN with which fabric agent communicates to service. */
  applicationId: string;
  /** Gets or sets the object Id of the SPN with which fabric agent communicates to service. */
  objectId: string;
  /** Gets or sets the audience of the SPN with which fabric agent communicates to service. */
  audience: string;
  /** Gets or sets the authority of the SPN with which fabric agent communicates to service. */
  aadAuthority: string;
}

/** Fabric agent model custom properties. */
export interface FabricAgentModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMware";
}

/** Vault model update. */
export interface VaultModelUpdate {
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
  /** Vault properties. */
  properties?: VaultModelProperties;
  /** Vault identity. */
  identity?: VaultIdentityModel;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Vault model. */
export interface VaultIdentityModel {
  /** Gets or sets the identityType which can be either SystemAssigned or None. */
  type: VaultIdentityType;
  /**
   * Gets or sets the object ID of the service principal object for the managed identity that is used to grant role-based access to an Azure resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * Gets or sets a Globally Unique Identifier (GUID) that represents the Azure AD tenant where the resource is now a member.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
}

/** The response of a EmailConfigurationModel list operation. */
export interface EmailConfigurationModelListResult {
  /** The EmailConfigurationModel items on this page */
  value: EmailConfigurationModel[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Email configuration model properties. */
export interface EmailConfigurationModelProperties {
  /** Gets or sets a value indicating whether to send email to subscription administrator. */
  sendToOwners: boolean;
  /** Gets or sets the custom email address for sending emails. */
  customEmailAddresses?: string[];
  /** Gets or sets the locale for the email notification. */
  locale?: string;
  /**
   * Gets or sets the provisioning state of the email configuration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** The response of a EventModel list operation. */
export interface EventModelListResult {
  /** The EventModel items on this page */
  value: EventModel[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Event model properties. */
export interface EventModelProperties {
  /**
   * Gets or sets the resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceType?: string;
  /**
   * Gets or sets the resource name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceName?: string;
  /**
   * Gets or sets the event type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eventType?: string;
  /**
   * Gets or sets the event name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eventName?: string;
  /**
   * Gets or sets the time at which the event occurred at source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeOfOccurrence?: Date;
  /**
   * Gets or sets the event severity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly severity?: string;
  /**
   * Gets or sets the event description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * Gets or sets the event correlation Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly correlationId?: string;
  /**
   * Gets or sets the errors associated with this event.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthErrorModel[];
  /** Event model custom properties. */
  customProperties: EventModelCustomPropertiesUnion;
  /**
   * Gets or sets the provisioning state of the event.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Event model custom properties. */
export interface EventModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI" | "VMwareToAzStackHCI";
}

/** The response of a JobModel list operation. */
export interface JobModelListResult {
  /** The JobModel items on this page */
  value: JobModel[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Job model properties. */
export interface JobModelProperties {
  /**
   * Gets or sets the friendly display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * Gets or sets the job state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: JobState;
  /**
   * Gets or sets the start time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * Gets or sets the end time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
  /**
   * Gets or sets the affected object Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectId?: string;
  /**
   * Gets or sets the affected object name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectName?: string;
  /**
   * Gets or sets the affected object internal Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectInternalId?: string;
  /**
   * Gets or sets the affected object internal name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectInternalName?: string;
  /**
   * Gets or sets the object type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectType?: JobObjectType;
  /**
   * Gets or sets the replication provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly replicationProviderId?: string;
  /**
   * Gets or sets the source fabric provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceFabricProviderId?: string;
  /**
   * Gets or sets the target fabric provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetFabricProviderId?: string;
  /**
   * Gets or sets the list of allowed actions on the job.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allowedActions?: string[];
  /**
   * Gets or sets the job activity id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activityId?: string;
  /**
   * Gets or sets the list of tasks.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tasks?: TaskModel[];
  /**
   * Gets or sets the list of errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: ErrorModel[];
  /** Job model custom properties. */
  customProperties: JobModelCustomPropertiesUnion;
  /**
   * Gets or sets the provisioning state of the job.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Task model. */
export interface TaskModel {
  /**
   * Gets or sets the task name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly taskName?: string;
  /**
   * Gets or sets the task state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: TaskState;
  /**
   * Gets or sets the start time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * Gets or sets the end time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
  /** Task model custom properties. */
  customProperties?: TaskModelCustomProperties;
  /** Gets or sets the list of children job models. */
  childrenJobs?: JobModel[];
}

/** Task model custom properties. */
export interface TaskModelCustomProperties {
  /** Gets or sets the instance type. */
  instanceType: string;
}

/** Error model. */
export interface ErrorModel {
  /**
   * Gets or sets the error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Gets or sets the error type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Gets or sets the error severity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly severity?: string;
  /**
   * Gets or sets the creation time of error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /**
   * Gets or sets the error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Gets or sets the possible causes of error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly causes?: string;
  /**
   * Gets or sets the recommended action to resolve error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendation?: string;
}

/** Job model custom properties. */
export interface JobModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "FailoverJobDetails"
    | "TestFailoverCleanupJobDetails"
    | "TestFailoverJobDetails";
  /**
   * Gets or sets any custom properties of the affected object.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly affectedObjectDetails?: JobModelCustomPropertiesAffectedObjectDetails;
}

/** Gets or sets any custom properties of the affected object. */
export interface JobModelCustomPropertiesAffectedObjectDetails {
  description?: string;
  type?: "object";
}

/** The response of a PrivateEndpointConnectionProxy list operation. */
export interface PrivateEndpointConnectionProxyListResult {
  /** The PrivateEndpointConnectionProxy items on this page */
  value: PrivateEndpointConnectionProxy[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Represents private endpoint connection proxy request. */
export interface PrivateEndpointConnectionProxyProperties {
  /**
   * Gets or sets the provisioning state of the private endpoint connection proxy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Represent remote private endpoint information for the private endpoint connection proxy. */
  remotePrivateEndpoint?: RemotePrivateEndpoint;
}

/** Represent remote private endpoint information for the private endpoint connection proxy. */
export interface RemotePrivateEndpoint {
  /** Gets or sets private link service proxy id. */
  id: string;
  /** Gets or sets the list of Private Link Service Connections and gets populated for Auto approval flow. */
  privateLinkServiceConnections?: PrivateLinkServiceConnection[];
  /** Gets or sets the list of Manual Private Link Service Connections and gets populated for Manual approval flow. */
  manualPrivateLinkServiceConnections?: PrivateLinkServiceConnection[];
  /** Gets or sets the list of private link service proxies. */
  privateLinkServiceProxies?: PrivateLinkServiceProxy[];
  /** Gets or sets the list of Connection Details. This is the connection details for private endpoint. */
  connectionDetails?: ConnectionDetails[];
}

/** Represents of an NRP private link service connection. */
export interface PrivateLinkServiceConnection {
  /** Gets or sets private link service connection name. */
  name?: string;
  /** Gets or sets group ids. */
  groupIds?: string[];
  /** Gets or sets the request message for the private link service connection. */
  requestMessage?: string;
}

/** Represents NRP private link service proxy. */
export interface PrivateLinkServiceProxy {
  /** Gets or sets private link service proxy id. */
  id?: string;
  /** Represents Private link service connection state. */
  remotePrivateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
  /** Represent remote private endpoint connection. */
  remotePrivateEndpointConnection?: RemotePrivateEndpointConnection;
  /** Gets or sets group connectivity information. */
  groupConnectivityInformation?: GroupConnectivityInformation[];
}

/** Represents Private link service connection state. */
export interface PrivateLinkServiceConnectionState {
  /** Gets or sets the status. */
  status?: PrivateEndpointConnectionStatus;
  /** Gets or sets description. */
  description?: string;
  /** Gets or sets actions required. */
  actionsRequired?: string;
}

/** Represent remote private endpoint connection. */
export interface RemotePrivateEndpointConnection {
  /** Gets or sets the remote private endpoint connection id. */
  id?: string;
}

/** Represents of a connection's group information. */
export interface GroupConnectivityInformation {
  /** Gets or sets group id. */
  groupId?: string;
  /** Gets or sets member name. */
  memberName?: string;
  /** Gets or sets customer visible FQDNs. */
  customerVisibleFqdns?: string[];
  /** Gets or sets Internal Fqdn. */
  internalFqdn?: string;
  /** Gets or sets the redirect map id. */
  redirectMapId?: string;
  /** Gets or sets the private link service arm region. */
  privateLinkServiceArmRegion?: string;
}

/** Private endpoint connection details at member level. */
export interface ConnectionDetails {
  /** Gets or sets id. */
  id?: string;
  /** Gets or sets private IP address. */
  privateIpAddress?: string;
  /** Gets or sets link identifier. */
  linkIdentifier?: string;
  /** Gets or sets group id. */
  groupId?: string;
  /** Gets or sets member name. */
  memberName?: string;
}

/** The response of a PrivateEndpointConnection list operation. */
export interface PrivateEndpointConnectionListResult {
  /** The PrivateEndpointConnection items on this page */
  value: PrivateEndpointConnection[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Represents Private endpoint connection response properties. */
export interface PrivateEndpointConnectionResponseProperties {
  /**
   * Gets or sets provisioning state of the private endpoint connection.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Represent private Endpoint network resource that is linked to the Private Endpoint connection. */
  privateEndpoint?: PrivateEndpoint;
  /** Represents Private link service connection state. */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
}

/** Represent private Endpoint network resource that is linked to the Private Endpoint connection. */
export interface PrivateEndpoint {
  /** Gets or sets the id. */
  id?: string;
}

/** The response of a PrivateLinkResource list operation. */
export interface PrivateLinkResourceListResult {
  /** The PrivateLinkResource items on this page */
  value: PrivateLinkResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Represents private link resource properties. */
export interface PrivateLinkResourceProperties {
  /** Gets or sets the group id. */
  groupId?: string;
  /** Gets or sets the required member. This translates to how many Private IPs should be created for each privately linkable resource. */
  requiredMembers?: string[];
  /** Gets or sets the private DNS zone names. */
  requiredZoneNames?: string[];
  /**
   * Gets or sets the provisioning state of the private link resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** The response of a ProtectedItemModel list operation. */
export interface ProtectedItemModelListResult {
  /** The ProtectedItemModel items on this page */
  value: ProtectedItemModel[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Protected item model properties. */
export interface ProtectedItemModelProperties {
  /** Gets or sets the policy name. */
  policyName: string;
  /** Gets or sets the replication extension name. */
  replicationExtensionName: string;
  /**
   * Gets or sets the protected item correlation Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly correlationId?: string;
  /**
   * Gets or sets the provisioning state of the fabric agent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Gets or sets the protection state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectionState?: ProtectionState;
  /**
   * Gets or sets the protection state description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectionStateDescription?: string;
  /**
   * Gets or sets the test failover state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testFailoverState?: TestFailoverState;
  /**
   * Gets or sets the Test failover state description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testFailoverStateDescription?: string;
  /**
   * Gets or sets the resynchronization state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resynchronizationState?: ResynchronizationState;
  /**
   * Gets or sets the fabric object Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricObjectId?: string;
  /**
   * Gets or sets the fabric object name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricObjectName?: string;
  /**
   * Gets or sets the source fabric provider Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceFabricProviderId?: string;
  /**
   * Gets or sets the target fabric provider Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetFabricProviderId?: string;
  /**
   * Gets or sets the fabric Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricId?: string;
  /**
   * Gets or sets the target fabric Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetFabricId?: string;
  /**
   * Gets or sets the fabric agent Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricAgentId?: string;
  /**
   * Gets or sets the target fabric agent Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetFabricAgentId?: string;
  /**
   * Gets or sets a value indicating whether resynchronization is required or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncRequired?: boolean;
  /**
   * Gets or sets the Last successful planned failover time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSuccessfulPlannedFailoverTime?: Date;
  /**
   * Gets or sets the Last successful unplanned failover time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSuccessfulUnplannedFailoverTime?: Date;
  /**
   * Gets or sets the Last successful test failover time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSuccessfulTestFailoverTime?: Date;
  /**
   * Gets or sets the current scenario.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentJob?: ProtectedItemJobProperties;
  /**
   * Gets or sets the allowed scenarios on the protected item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allowedJobs?: string[];
  /**
   * Gets or sets the last failed enabled protection job.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastFailedEnableProtectionJob?: ProtectedItemJobProperties;
  /**
   * Gets or sets the last failed planned failover job.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastFailedPlannedFailoverJob?: ProtectedItemJobProperties;
  /**
   * Gets or sets the last test failover job.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastTestFailoverJob?: ProtectedItemJobProperties;
  /**
   * Gets or sets protected item replication health.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly replicationHealth?: HealthStatus;
  /**
   * Gets or sets the list of health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthErrorModel[];
  /** Protected item model custom properties. */
  customProperties: ProtectedItemModelCustomPropertiesUnion;
}

/** Protected item job properties. */
export interface ProtectedItemJobProperties {
  /**
   * Gets or sets protection scenario name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scenarioName?: string;
  /**
   * Gets or sets job Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets job name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the job friendly display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * Gets or sets job state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: string;
  /**
   * Gets or sets start time of the job.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * Gets or sets end time of the job.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
}

/** Protected item model custom properties. */
export interface ProtectedItemModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI" | "VMwareToAzStackHCI";
}

/** Protected item model update. */
export interface ProtectedItemModelUpdate {
  /** Protected item model properties. */
  properties?: ProtectedItemModelPropertiesUpdate;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Protected item model properties update. */
export interface ProtectedItemModelPropertiesUpdate {
  /** Protected item model custom properties update. */
  customProperties?: ProtectedItemModelCustomPropertiesUpdateUnion;
}

/** Protected item model custom properties. */
export interface ProtectedItemModelCustomPropertiesUpdate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI" | "VMwareToAzStackHCI";
}

/** Planned failover model. */
export interface PlannedFailoverModel {
  /** Planned failover model properties. */
  properties: PlannedFailoverModelProperties;
}

/** Planned failover model properties. */
export interface PlannedFailoverModelProperties {
  /** Planned failover model custom properties. */
  customProperties: PlannedFailoverModelCustomPropertiesUnion;
}

/** Planned failover model custom properties. */
export interface PlannedFailoverModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI" | "VMwareToAzStackHCI";
}

/** The response of a RecoveryPointModel list operation. */
export interface RecoveryPointModelListResult {
  /** The RecoveryPointModel items on this page */
  value: RecoveryPointModel[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Recovery point model properties. */
export interface RecoveryPointModelProperties {
  /** Gets or sets the recovery point time. */
  recoveryPointTime: Date;
  /** Gets or sets the recovery point type. */
  recoveryPointType: RecoveryPointType;
  /** Recovery point model custom properties. */
  customProperties: RecoveryPointModelCustomPropertiesUnion;
  /**
   * Gets or sets the provisioning state of the recovery point item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Recovery point model custom properties. */
export interface RecoveryPointModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "HyperVToAzStackHCI"
    | "VMwareToAzStackHCIRecoveryPointModelCustomProperties";
}

/** The response of a ReplicationExtensionModel list operation. */
export interface ReplicationExtensionModelListResult {
  /** The ReplicationExtensionModel items on this page */
  value: ReplicationExtensionModel[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Replication extension model properties. */
export interface ReplicationExtensionModelProperties {
  /**
   * Gets or sets the provisioning state of the replication extension.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Replication extension model custom properties. */
  customProperties: ReplicationExtensionModelCustomPropertiesUnion;
}

/** Replication extension model custom properties. */
export interface ReplicationExtensionModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI" | "VMwareToAzStackHCI";
}

/** The response of a PolicyModel list operation. */
export interface PolicyModelListResult {
  /** The PolicyModel items on this page */
  value: PolicyModel[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Policy model properties. */
export interface PolicyModelProperties {
  /**
   * Gets or sets the provisioning state of the policy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Policy model custom properties. */
  customProperties: PolicyModelCustomPropertiesUnion;
}

/** Policy model custom properties. */
export interface PolicyModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI" | "VMwareToAzStackHCI";
}

/** AzStackHCI cluster properties. */
export interface AzStackHCIClusterProperties {
  /** Gets or sets the AzStackHCICluster FQDN name. */
  clusterName: string;
  /** Gets or sets the AzStackHCICluster resource name. */
  resourceName: string;
  /** Gets or sets the Storage account name. */
  storageAccountName: string;
  /** Gets or sets the list of AzStackHCICluster Storage Container. */
  storageContainers: StorageContainerProperties[];
}

/** Storage container properties. */
export interface StorageContainerProperties {
  /** Gets or sets the Name. */
  name: string;
  /** Gets or sets the ClusterSharedVolumePath. */
  clusterSharedVolumePath: string;
}

/** Disk controller. */
export interface DiskControllerInputs {
  /** Gets or sets the controller name (IDE,SCSI). */
  controllerName: string;
  /** Gets or sets the controller ID. */
  controllerId: number;
  /** Gets or sets the controller Location. */
  controllerLocation: number;
}

/** Failover properties of the protected item. */
export interface FailoverProtectedItemProperties {
  /**
   * Gets or sets the protected item name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedItemName?: string;
  /**
   * Gets or sets the VM name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmName?: string;
  /**
   * Gets or sets the test VM name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testVmName?: string;
  /**
   * Gets or sets the recovery point Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recoveryPointId?: string;
  /**
   * Gets or sets the recovery point time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recoveryPointTime?: Date;
  /**
   * Gets or sets the network name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkName?: string;
  /**
   * Gets or sets the network subnet.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subnet?: string;
}

/** HyperVToAzStack disk input. */
export interface HyperVToAzStackHCIDiskInput {
  /** Gets or sets the disk Id. */
  diskId: string;
  /** Gets or sets the target storage account ARM Id. */
  storageContainerId?: string;
  /** Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard disk. */
  isDynamic?: boolean;
  /** Gets or sets the disk size in GB. */
  diskSizeGB: number;
  /** Gets or sets the type of the virtual hard disk, vhd or vhdx. */
  diskFileFormat: string;
  /** Gets or sets a value indicating whether disk is os disk. */
  isOsDisk: boolean;
  /** Gets or sets a value of disk block size. */
  diskBlockSize?: number;
  /** Gets or sets a value of disk logical sector size. */
  diskLogicalSectorSize?: number;
  /** Gets or sets a value of disk physical sector size. */
  diskPhysicalSectorSize?: number;
  /** Gets or sets a value of disk identifier. */
  diskIdentifier?: string;
  /** Disk controller. */
  diskController?: DiskControllerInputs;
}

/** HyperVToAzStackHCI NIC properties. */
export interface HyperVToAzStackHCINicInput {
  /** Gets or sets the NIC Id. */
  nicId: string;
  /**
   * Gets or sets the network name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkName?: string;
  /** Gets or sets the target network Id within AzStackHCI Cluster. */
  targetNetworkId?: string;
  /** Gets or sets the target test network Id within AzStackHCI Cluster. */
  testNetworkId?: string;
  /** Gets or sets the selection type of the NIC. */
  selectionTypeForFailover: VMNicSelection;
  /** Gets or sets a value indicating whether static ip migration is enabled. */
  isStaticIpMigrationEnabled?: boolean;
  /** Gets or sets a value indicating whether mac address migration is enabled. */
  isMacMigrationEnabled?: boolean;
}

/** HyperVToAzStackHCI protected disk properties. */
export interface HyperVToAzStackHCIProtectedDiskProperties {
  /**
   * Gets or sets the ARM Id of the storage container.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageContainerId?: string;
  /**
   * Gets or sets the local path of the storage container.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageContainerLocalPath?: string;
  /**
   * Gets or sets the source disk Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceDiskId?: string;
  /**
   * Gets or sets the source disk Name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceDiskName?: string;
  /**
   * Gets or sets the seed disk name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly seedDiskName?: string;
  /**
   * Gets or sets the test failover clone disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testMigrateDiskName?: string;
  /**
   * Gets or sets the failover clone disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrateDiskName?: string;
  /**
   * Gets or sets a value indicating whether the disk is the OS disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isOsDisk?: boolean;
  /**
   * Gets or sets the disk capacity in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capacityInBytes?: number;
  /**
   * Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDynamic?: boolean;
  /**
   * Gets or sets the disk type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskType?: string;
  /**
   * Gets or sets a value of disk block size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskBlockSize?: number;
  /**
   * Gets or sets a value of disk logical sector size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskLogicalSectorSize?: number;
  /**
   * Gets or sets a value of disk physical sector size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskPhysicalSectorSize?: number;
}

/** Protected item dynamic memory config. */
export interface ProtectedItemDynamicMemoryConfig {
  /** Gets or sets maximum memory in MB. */
  maximumMemoryInMegaBytes: number;
  /** Gets or sets minimum memory in MB. */
  minimumMemoryInMegaBytes: number;
  /** Gets or sets target memory buffer in %. */
  targetMemoryBufferPercentage: number;
}

/** HyperVToAzStackHCI NIC properties. */
export interface HyperVToAzStackHCIProtectedNicProperties {
  /**
   * Gets or sets the NIC Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nicId?: string;
  /**
   * Gets or sets the NIC mac address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly macAddress?: string;
  /**
   * Gets or sets the network name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkName?: string;
  /**
   * Gets or sets the target network Id within AzStackHCI Cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetNetworkId?: string;
  /**
   * Gets or sets the target test network Id within AzStackHCI Cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testNetworkId?: string;
  /**
   * Gets or sets the selection type of the NIC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly selectionTypeForFailover?: VMNicSelection;
}

/** VMwareToAzStack disk input. */
export interface VMwareToAzStackHCIDiskInput {
  /** Gets or sets the disk Id. */
  diskId: string;
  /** Gets or sets the target storage account ARM Id. */
  storageContainerId?: string;
  /** Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard disk. */
  isDynamic?: boolean;
  /** Gets or sets the disk size in GB. */
  diskSizeGB: number;
  /** Gets or sets the type of the virtual hard disk, vhd or vhdx. */
  diskFileFormat: string;
  /** Gets or sets a value indicating whether disk is os disk. */
  isOsDisk: boolean;
  /** Gets or sets a value of disk block size. */
  diskBlockSize?: number;
  /** Gets or sets a value of disk logical sector size. */
  diskLogicalSectorSize?: number;
  /** Gets or sets a value of disk physical sector size. */
  diskPhysicalSectorSize?: number;
  /** Gets or sets a value of disk identifier. */
  diskIdentifier?: string;
  /** Disk controller. */
  diskController?: DiskControllerInputs;
}

/** VMwareToAzStackHCI NIC properties. */
export interface VMwareToAzStackHCINicInput {
  /** Gets or sets the NIC Id. */
  nicId: string;
  /** Gets or sets the NIC label. */
  label: string;
  /**
   * Gets or sets the network name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkName?: string;
  /** Gets or sets the target network Id within AzStackHCI Cluster. */
  targetNetworkId?: string;
  /** Gets or sets the target test network Id within AzStackHCI Cluster. */
  testNetworkId?: string;
  /** Gets or sets the selection type of the NIC. */
  selectionTypeForFailover: VMNicSelection;
  /** Gets or sets a value indicating whether static ip migration is enabled. */
  isStaticIpMigrationEnabled?: boolean;
  /** Gets or sets a value indicating whether mac address migration is enabled. */
  isMacMigrationEnabled?: boolean;
}

/** VMwareToAzStackHCI protected disk properties. */
export interface VMwareToAzStackHCIProtectedDiskProperties {
  /**
   * Gets or sets the ARM Id of the storage container.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageContainerId?: string;
  /**
   * Gets or sets the local path of the storage container.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageContainerLocalPath?: string;
  /**
   * Gets or sets the source disk Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceDiskId?: string;
  /**
   * Gets or sets the source disk Name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceDiskName?: string;
  /**
   * Gets or sets the seed disk name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly seedDiskName?: string;
  /**
   * Gets or sets the test failover clone disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testMigrateDiskName?: string;
  /**
   * Gets or sets the failover clone disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrateDiskName?: string;
  /**
   * Gets or sets a value indicating whether the disk is the OS disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isOsDisk?: boolean;
  /**
   * Gets or sets the disk capacity in bytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capacityInBytes?: number;
  /**
   * Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard disk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDynamic?: boolean;
  /**
   * Gets or sets the disk type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskType?: string;
  /**
   * Gets or sets a value of disk block size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskBlockSize?: number;
  /**
   * Gets or sets a value of disk logical sector size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskLogicalSectorSize?: number;
  /**
   * Gets or sets a value of disk physical sector size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskPhysicalSectorSize?: number;
}

/** VMwareToAzStackHCI NIC properties. */
export interface VMwareToAzStackHCIProtectedNicProperties {
  /**
   * Gets or sets the NIC Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nicId?: string;
  /**
   * Gets or sets the NIC mac address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly macAddress?: string;
  /**
   * Gets or sets the NIC label.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly label?: string;
  /** Gets or sets a value indicating whether this is the primary NIC. */
  isPrimaryNic?: boolean;
  /**
   * Gets or sets the network name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkName?: string;
  /**
   * Gets or sets the target network Id within AzStackHCI Cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetNetworkId?: string;
  /**
   * Gets or sets the target test network Id within AzStackHCI Cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testNetworkId?: string;
  /**
   * Gets or sets the selection type of the NIC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly selectionTypeForFailover?: VMNicSelection;
}

/** AzStackHCI fabric model custom properties. */
export interface AzStackHCIFabricModelCustomProperties
  extends FabricModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "AzStackHCI";
  /** Gets or sets the ARM Id of the AzStackHCI site. */
  azStackHciSiteId: string;
  /**
   * Gets or sets the Appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly applianceName?: string[];
  /** AzStackHCI cluster properties. */
  cluster: AzStackHCIClusterProperties;
  /**
   * Gets or sets the fabric resource Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricResourceId?: string;
  /**
   * Gets or sets the fabric container Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricContainerId?: string;
  /** Gets or sets the Migration solution ARM Id. */
  migrationSolutionId: string;
  /**
   * Gets or sets the migration hub Uri.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationHubUri?: string;
}

/** HyperV migrate fabric model custom properties. */
export interface HyperVMigrateFabricModelCustomProperties
  extends FabricModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVMigrate";
  /** Gets or sets the ARM Id of the HyperV site. */
  hyperVSiteId: string;
  /**
   * Gets or sets the fabric resource Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricResourceId?: string;
  /**
   * Gets or sets the fabric container Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fabricContainerId?: string;
  /** Gets or sets the migration solution ARM Id. */
  migrationSolutionId: string;
  /**
   * Gets or sets the migration hub Uri.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationHubUri?: string;
}

/** VMware migrate fabric model custom properties. */
export interface VMwareMigrateFabricModelCustomProperties
  extends FabricModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareMigrate";
  /** Gets or sets the ARM Id of the VMware site. */
  vmwareSiteId: string;
  /** Gets or sets the ARM Id of the migration solution. */
  migrationSolutionId: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** VMware fabric agent model custom properties. */
export interface VMwareFabricAgentModelCustomProperties
  extends FabricAgentModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMware";
  /** Gets or sets the BIOS Id of the fabric agent machine. */
  biosId: string;
  /** Identity model. */
  marsAuthenticationIdentity: IdentityModel;
}

/** HyperV to  AzStackHCI event model custom properties. This class provides provider specific details for events of type DataContract.HealthEvents.HealthEventType.ProtectedItemHealth and DataContract.HealthEvents.HealthEventType.AgentHealth. */
export interface HyperVToAzStackHCIEventModelCustomProperties
  extends EventModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
  /**
   * Gets or sets the friendly name of the source which has raised this health event.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eventSourceFriendlyName?: string;
  /**
   * Gets or sets the protected item friendly name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedItemFriendlyName?: string;
  /**
   * Gets or sets the source appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceApplianceName?: string;
  /**
   * Gets or sets the source target name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetApplianceName?: string;
  /**
   * Gets or sets the server type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serverType?: string;
}

/** VMware to  AzStackHCI event model custom properties. This class provides provider specific details for events of type DataContract.HealthEvents.HealthEventType.ProtectedItemHealth and DataContract.HealthEvents.HealthEventType.AgentHealth. */
export interface VMwareToAzStackHCIEventModelCustomProperties
  extends EventModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareToAzStackHCI";
  /**
   * Gets or sets the friendly name of the source which has raised this health event.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly eventSourceFriendlyName?: string;
  /**
   * Gets or sets the protected item friendly name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedItemFriendlyName?: string;
  /**
   * Gets or sets the source appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceApplianceName?: string;
  /**
   * Gets or sets the source target name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetApplianceName?: string;
  /**
   * Gets or sets the server type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serverType?: string;
}

/** Failover job model custom properties. */
export interface FailoverJobModelCustomProperties
  extends JobModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "FailoverJobDetails";
  /**
   * Gets or sets the failed over protected item details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedItemDetails?: FailoverProtectedItemProperties[];
}

/** Test failover cleanup job model custom properties. */
export interface TestFailoverCleanupJobModelCustomProperties
  extends JobModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "TestFailoverCleanupJobDetails";
  /**
   * Gets or sets the test failover cleanup comments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly comments?: string;
}

/** Test failover job model custom properties. */
export interface TestFailoverJobModelCustomProperties
  extends JobModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "TestFailoverJobDetails";
  /**
   * Gets or sets the test VM details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedItemDetails?: FailoverProtectedItemProperties[];
}

/** HyperV to AzStackHCI Protected item model custom properties. */
export interface HyperVToAzStackHCIProtectedItemModelCustomProperties
  extends ProtectedItemModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
  /**
   * Gets or sets the location of the protected item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activeLocation?: ProtectedItemActiveLocation;
  /** Gets or sets the Target HCI Cluster ARM Id. */
  targetHciClusterId: string;
  /** Gets or sets the Target Arc Cluster Custom Location ARM Id. */
  targetArcClusterCustomLocationId: string;
  /**
   * Gets or sets the Target AzStackHCI cluster name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetAzStackHciClusterName?: string;
  /** Gets or sets the ARM Id of the discovered machine. */
  fabricDiscoveryMachineId: string;
  /** Gets or sets the list of disks to replicate. */
  disksToInclude: HyperVToAzStackHCIDiskInput[];
  /** Gets or sets the list of VM NIC to replicate. */
  nicsToInclude: HyperVToAzStackHCINicInput[];
  /**
   * Gets or sets the source VM display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceVmName?: string;
  /**
   * Gets or sets the source VM CPU cores.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceCpuCores?: number;
  /**
   * Gets or sets the source VM ram memory size in megabytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceMemoryInMegaBytes?: number;
  /** Gets or sets the target VM display name. */
  targetVmName?: string;
  /** Gets or sets the target resource group ARM Id. */
  targetResourceGroupId: string;
  /** Gets or sets the target storage container ARM Id. */
  storageContainerId: string;
  /** Gets or sets the hypervisor generation of the virtual machine. */
  hyperVGeneration: string;
  /** Gets or sets the target network Id within AzStackHCI Cluster. */
  targetNetworkId?: string;
  /** Gets or sets the target test network Id within AzStackHCI Cluster. */
  testNetworkId?: string;
  /** Gets or sets the target CPU cores. */
  targetCpuCores?: number;
  /** Gets or sets a value indicating whether memory is dynamical. */
  isDynamicRam?: boolean;
  /** Protected item dynamic memory config. */
  dynamicMemoryConfig?: ProtectedItemDynamicMemoryConfig;
  /** Gets or sets the target memory in mega-bytes. */
  targetMemoryInMegaBytes?: number;
  /** Gets or sets the Run As account Id. */
  runAsAccountId: string;
  /** Gets or sets the source fabric agent name. */
  sourceFabricAgentName: string;
  /** Gets or sets the target fabric agent name. */
  targetFabricAgentName: string;
  /**
   * Gets or sets the source appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceApplianceName?: string;
  /**
   * Gets or sets the target appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetApplianceName?: string;
  /**
   * Gets or sets the type of the OS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: string;
  /**
   * Gets or sets the name of the OS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osName?: string;
  /**
   * Gets or sets the firmware type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly firmwareType?: string;
  /**
   * Gets or sets the target location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetLocation?: string;
  /** Gets or sets the location of Azure Arc HCI custom location resource. */
  customLocationRegion: string;
  /**
   * Gets or sets the recovery point Id to which the VM was failed over.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failoverRecoveryPointId?: string;
  /**
   * Gets or sets the last recovery point received time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointReceived?: Date;
  /**
   * Gets or sets the last recovery point Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointId?: string;
  /**
   * Gets or sets the initial replication progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialReplicationProgressPercentage?: number;
  /**
   * Gets or sets the resync progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncProgressPercentage?: number;
  /**
   * Gets or sets the list of protected disks.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedDisks?: HyperVToAzStackHCIProtectedDiskProperties[];
  /**
   * Gets or sets the VM NIC details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedNics?: HyperVToAzStackHCIProtectedNicProperties[];
  /**
   * Gets or sets the BIOS Id of the target AzStackHCI VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetVmBiosId?: string;
  /**
   * Gets or sets the latest timestamp that replication status is updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastReplicationUpdateTime?: Date;
}

/** VMware to AzStackHCI Protected item model custom properties. */
export interface VMwareToAzStackHCIProtectedItemModelCustomProperties
  extends ProtectedItemModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareToAzStackHCI";
  /**
   * Gets or sets the location of the protected item.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activeLocation?: ProtectedItemActiveLocation;
  /** Gets or sets the Target HCI Cluster ARM Id. */
  targetHciClusterId: string;
  /** Gets or sets the Target Arc Cluster Custom Location ARM Id. */
  targetArcClusterCustomLocationId: string;
  /**
   * Gets or sets the Target AzStackHCI cluster name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetAzStackHciClusterName?: string;
  /** Gets or sets the target storage container ARM Id. */
  storageContainerId: string;
  /** Gets or sets the target resource group ARM Id. */
  targetResourceGroupId: string;
  /**
   * Gets or sets the target location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetLocation?: string;
  /** Gets or sets the location of Azure Arc HCI custom location resource. */
  customLocationRegion: string;
  /** Gets or sets the list of disks to replicate. */
  disksToInclude: VMwareToAzStackHCIDiskInput[];
  /** Gets or sets the list of VM NIC to replicate. */
  nicsToInclude: VMwareToAzStackHCINicInput[];
  /**
   * Gets or sets the list of protected disks.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedDisks?: VMwareToAzStackHCIProtectedDiskProperties[];
  /**
   * Gets or sets the VM NIC details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protectedNics?: VMwareToAzStackHCIProtectedNicProperties[];
  /**
   * Gets or sets the BIOS Id of the target AzStackHCI VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetVmBiosId?: string;
  /** Gets or sets the target VM display name. */
  targetVmName?: string;
  /** Gets or sets the hypervisor generation of the virtual machine possible values are 1,2. */
  hyperVGeneration: string;
  /** Gets or sets the target network Id within AzStackHCI Cluster. */
  targetNetworkId?: string;
  /** Gets or sets the target test network Id within AzStackHCI Cluster. */
  testNetworkId?: string;
  /** Gets or sets the target CPU cores. */
  targetCpuCores?: number;
  /** Gets or sets a value indicating whether memory is dynamical. */
  isDynamicRam?: boolean;
  /** Protected item dynamic memory config. */
  dynamicMemoryConfig?: ProtectedItemDynamicMemoryConfig;
  /** Gets or sets the target memory in mega-bytes. */
  targetMemoryInMegaBytes?: number;
  /**
   * Gets or sets the type of the OS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osType?: string;
  /**
   * Gets or sets the name of the OS.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osName?: string;
  /**
   * Gets or sets the firmware type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly firmwareType?: string;
  /** Gets or sets the ARM Id of the discovered machine. */
  fabricDiscoveryMachineId: string;
  /**
   * Gets or sets the source VM display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceVmName?: string;
  /**
   * Gets or sets the source VM CPU cores.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceCpuCores?: number;
  /**
   * Gets or sets the source VM ram memory size in megabytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceMemoryInMegaBytes?: number;
  /** Gets or sets the run as account Id. */
  runAsAccountId: string;
  /** Gets or sets the source fabric agent name. */
  sourceFabricAgentName: string;
  /** Gets or sets the target fabric agent name. */
  targetFabricAgentName: string;
  /**
   * Gets or sets the source appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceApplianceName?: string;
  /**
   * Gets or sets the target appliance name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetApplianceName?: string;
  /**
   * Gets or sets the recovery point Id to which the VM was failed over.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failoverRecoveryPointId?: string;
  /**
   * Gets or sets the last recovery point received time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointReceived?: Date;
  /**
   * Gets or sets the last recovery point Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRecoveryPointId?: string;
  /**
   * Gets or sets the initial replication progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initialReplicationProgressPercentage?: number;
  /**
   * Gets or sets the migration progress percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationProgressPercentage?: number;
  /**
   * Gets or sets the resume progress percentage.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resumeProgressPercentage?: number;
  /**
   * Gets or sets the resync progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncProgressPercentage?: number;
  /**
   * Gets or sets the resync retry count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncRetryCount?: number;
  /**
   * Gets or sets a value indicating whether resync is required.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncRequired?: boolean;
  /**
   * Gets or sets the resync state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resyncState?: VMwareToAzureMigrateResyncState;
  /** Gets or sets a value indicating whether auto resync is to be done. */
  performAutoResync?: boolean;
  /**
   * Gets or sets the resume retry count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resumeRetryCount?: number;
  /**
   * Gets or sets the latest timestamp that replication status is updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastReplicationUpdateTime?: Date;
}

/** HyperV to AzStackHCI Protected item model custom properties. */
export interface HyperVToAzStackHCIProtectedItemModelCustomPropertiesUpdate
  extends ProtectedItemModelCustomPropertiesUpdate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
  /** Gets or sets the list of VM NIC to replicate. */
  nicsToInclude?: HyperVToAzStackHCINicInput[];
  /** Gets or sets the target CPU cores. */
  targetCpuCores?: number;
  /** Gets or sets a value indicating whether memory is dynamical. */
  isDynamicRam?: boolean;
  /** Protected item dynamic memory config. */
  dynamicMemoryConfig?: ProtectedItemDynamicMemoryConfig;
  /** Gets or sets the target memory in mega-bytes. */
  targetMemoryInMegaBytes?: number;
  /** Gets or sets the type of the OS. */
  osType?: string;
}

/** VMware to AzStackHCI Protected item model custom properties. */
export interface VMwareToAzStackHCIProtectedItemModelCustomPropertiesUpdate
  extends ProtectedItemModelCustomPropertiesUpdate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareToAzStackHCI";
  /** Gets or sets the list of VM NIC to replicate. */
  nicsToInclude?: VMwareToAzStackHCINicInput[];
  /** Gets or sets the target CPU cores. */
  targetCpuCores?: number;
  /** Gets or sets a value indicating whether memory is dynamical. */
  isDynamicRam?: boolean;
  /** Protected item dynamic memory config. */
  dynamicMemoryConfig?: ProtectedItemDynamicMemoryConfig;
  /** Gets or sets the target memory in mega-bytes. */
  targetMemoryInMegaBytes?: number;
  /** Gets or sets the type of the OS. */
  osType?: string;
}

/** HyperV to AzStackHCI planned failover model custom properties. */
export interface HyperVToAzStackHCIPlannedFailoverModelCustomProperties
  extends PlannedFailoverModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
  /** Gets or sets a value indicating whether VM needs to be shut down. */
  shutdownSourceVM: boolean;
}

/** VMware to AzStackHCI planned failover model custom properties. */
export interface VMwareToAzStackHCIPlannedFailoverModelCustomProperties
  extends PlannedFailoverModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareToAzStackHCI";
  /** Gets or sets a value indicating whether VM needs to be shut down. */
  shutdownSourceVM: boolean;
}

/** HyperV to AzStackHCI recovery point model custom properties. */
export interface HyperVToAzStackHCIRecoveryPointModelCustomProperties
  extends RecoveryPointModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
  /**
   * Gets or sets the list of the disk Ids.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskIds?: string[];
}

/** VMware to AzStackHCI recovery point model custom properties. */
export interface VMwareToAzStackHCIRecoveryPointModelCustomProperties
  extends RecoveryPointModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareToAzStackHCIRecoveryPointModelCustomProperties";
  /**
   * Gets or sets the list of the disk Ids.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskIds?: string[];
}

/** HyperV to AzStackHCI Replication extension model custom properties. */
export interface HyperVToAzStackHCIReplicationExtensionModelCustomProperties
  extends ReplicationExtensionModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
  /** Gets or sets the ARM Id of the source HyperV fabric. */
  hyperVFabricArmId: string;
  /**
   * Gets or sets the ARM Id of the HyperV site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hyperVSiteId?: string;
  /** Gets or sets the ARM Id of the target AzStackHCI fabric. */
  azStackHciFabricArmId: string;
  /**
   * Gets or sets the ARM Id of the AzStackHCI site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azStackHciSiteId?: string;
  /** Gets or sets the storage account Id. */
  storageAccountId?: string;
  /** Gets or sets the Sas Secret of storage account. */
  storageAccountSasSecretName?: string;
  /**
   * Gets or sets the Uri of ASR.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly asrServiceUri?: string;
  /**
   * Gets or sets the Uri of Rcm.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rcmServiceUri?: string;
  /**
   * Gets or sets the Uri of Gateway.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gatewayServiceUri?: string;
  /**
   * Gets or sets the gateway service Id of source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceGatewayServiceId?: string;
  /**
   * Gets or sets the gateway service Id of target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetGatewayServiceId?: string;
  /**
   * Gets or sets the source storage container name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceStorageContainerName?: string;
  /**
   * Gets or sets the target storage container name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetStorageContainerName?: string;
  /**
   * Gets or sets the resource location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceLocation?: string;
  /**
   * Gets or sets the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * Gets or sets the resource group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceGroup?: string;
}

/** VMware to AzStackHCI Replication extension model custom properties. */
export interface VMwareToAzStackHCIReplicationExtensionModelCustomProperties
  extends ReplicationExtensionModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareToAzStackHCI";
  /** Gets or sets the ARM Id of the source VMware fabric. */
  vmwareFabricArmId: string;
  /**
   * Gets or sets the ARM Id of the VMware site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmwareSiteId?: string;
  /** Gets or sets the ARM Id of the target AzStackHCI fabric. */
  azStackHciFabricArmId: string;
  /**
   * Gets or sets the ARM Id of the AzStackHCI site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azStackHciSiteId?: string;
  /** Gets or sets the storage account Id. */
  storageAccountId?: string;
  /** Gets or sets the Sas Secret of storage account. */
  storageAccountSasSecretName?: string;
  /**
   * Gets or sets the Uri of ASR.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly asrServiceUri?: string;
  /**
   * Gets or sets the Uri of Rcm.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rcmServiceUri?: string;
  /**
   * Gets or sets the Uri of Gateway.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gatewayServiceUri?: string;
  /**
   * Gets or sets the gateway service Id of source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceGatewayServiceId?: string;
  /**
   * Gets or sets the gateway service Id of target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetGatewayServiceId?: string;
  /**
   * Gets or sets the source storage container name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceStorageContainerName?: string;
  /**
   * Gets or sets the target storage container name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetStorageContainerName?: string;
  /**
   * Gets or sets the resource location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceLocation?: string;
  /**
   * Gets or sets the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * Gets or sets the resource group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceGroup?: string;
}

/** HyperV To AzStackHCI Policy model custom properties. */
export interface HyperVToAzStackHCIPolicyModelCustomProperties
  extends PolicyModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "HyperVToAzStackHCI";
  /** Gets or sets the duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistoryInMinutes: number;
  /** Gets or sets the crash consistent snapshot frequency (in minutes). */
  crashConsistentFrequencyInMinutes: number;
  /** Gets or sets the app consistent snapshot frequency (in minutes). */
  appConsistentFrequencyInMinutes: number;
}

/** VMware To AzStackHCI Policy model custom properties. */
export interface VMwareToAzStackHCIPolicyModelCustomProperties
  extends PolicyModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareToAzStackHCI";
  /** Gets or sets the duration in minutes until which the recovery points need to be stored. */
  recoveryPointHistoryInMinutes: number;
  /** Gets or sets the crash consistent snapshot frequency (in minutes). */
  crashConsistentFrequencyInMinutes: number;
  /** Gets or sets the app consistent snapshot frequency (in minutes). */
  appConsistentFrequencyInMinutes: number;
}

/** Fabric model. */
export interface FabricModel extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: FabricModelProperties;
}

/** Vault model. */
export interface VaultModel extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: VaultModelProperties;
  /** The managed service identities assigned to this resource. */
  identity?: ManagedServiceIdentity;
}

/** Fabric agent model. */
export interface FabricAgentModel extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: FabricAgentModelProperties;
}

/** Email configuration model. */
export interface EmailConfigurationModel extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: EmailConfigurationModelProperties;
}

/** Event model. */
export interface EventModel extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: EventModelProperties;
}

/** Job model. */
export interface JobModel extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: JobModelProperties;
}

/** Represents private endpoint connection proxy request. */
export interface PrivateEndpointConnectionProxy extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: PrivateEndpointConnectionProxyProperties;
  /** Gets or sets ETag. */
  etag?: string;
}

/** Represents private endpoint connection. */
export interface PrivateEndpointConnection extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: PrivateEndpointConnectionResponseProperties;
}

/** Represents private link resource. */
export interface PrivateLinkResource extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: PrivateLinkResourceProperties;
}

/** Protected item model. */
export interface ProtectedItemModel extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: ProtectedItemModelProperties;
}

/** Recovery point model. */
export interface RecoveryPointModel extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: RecoveryPointModelProperties;
}

/** Replication extension model. */
export interface ReplicationExtensionModel extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: ReplicationExtensionModelProperties;
}

/** Policy model. */
export interface PolicyModel extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: PolicyModelProperties;
}

/** Defines headers for Fabric_create operation. */
export interface FabricCreateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Fabric_update operation. */
export interface FabricUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Fabric_delete operation. */
export interface FabricDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Vault_create operation. */
export interface VaultCreateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Vault_update operation. */
export interface VaultUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Vault_delete operation. */
export interface VaultDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for FabricAgent_create operation. */
export interface FabricAgentCreateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for FabricAgent_delete operation. */
export interface FabricAgentDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for PrivateEndpointConnectionProxies_delete operation. */
export interface PrivateEndpointConnectionProxiesDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for PrivateEndpointConnections_delete operation. */
export interface PrivateEndpointConnectionsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for ProtectedItem_create operation. */
export interface ProtectedItemCreateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for ProtectedItem_update operation. */
export interface ProtectedItemUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for ProtectedItem_delete operation. */
export interface ProtectedItemDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for ProtectedItem_plannedFailover operation. */
export interface ProtectedItemPlannedFailoverHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for ReplicationExtension_create operation. */
export interface ReplicationExtensionCreateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for ReplicationExtension_delete operation. */
export interface ReplicationExtensionDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Policy_create operation. */
export interface PolicyCreateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Policy_delete operation. */
export interface PolicyDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Resource creation has been canceled */
  Canceled = "Canceled",
  /** Resource is being created. */
  Creating = "Creating",
  /** Resource is being deleted. */
  Deleting = "Deleting",
  /** Resource has been deleted. */
  Deleted = "Deleted",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation\/update succeeded. */
  Succeeded = "Succeeded",
  /** Resource is being updated. */
  Updating = "Updating",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Canceled**: Resource creation has been canceled \
 * **Creating**: Resource is being created. \
 * **Deleting**: Resource is being deleted. \
 * **Deleted**: Resource has been deleted. \
 * **Failed**: Resource creation failed. \
 * **Succeeded**: Resource creation\/update succeeded. \
 * **Updating**: Resource is being updated.
 */
export type ProvisioningState = string;

/** Known values of {@link HealthStatus} that the service accepts. */
export enum KnownHealthStatus {
  /** Healthy Status. */
  Normal = "Normal",
  /** Warning Status. */
  Warning = "Warning",
  /** Critical Status. */
  Critical = "Critical",
}

/**
 * Defines values for HealthStatus. \
 * {@link KnownHealthStatus} can be used interchangeably with HealthStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Normal**: Healthy Status. \
 * **Warning**: Warning Status. \
 * **Critical**: Critical Status.
 */
export type HealthStatus = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link ReplicationVaultType} that the service accepts. */
export enum KnownReplicationVaultType {
  /** Disaster recovery vault. */
  DisasterRecovery = "DisasterRecovery",
  /** Migrate vault. */
  Migrate = "Migrate",
}

/**
 * Defines values for ReplicationVaultType. \
 * {@link KnownReplicationVaultType} can be used interchangeably with ReplicationVaultType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **DisasterRecovery**: Disaster recovery vault. \
 * **Migrate**: Migrate vault.
 */
export type ReplicationVaultType = string;

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned,UserAssigned",
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned,UserAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link VaultIdentityType} that the service accepts. */
export enum KnownVaultIdentityType {
  /** No identity. */
  None = "None",
  /** System assigned identity. */
  SystemAssigned = "SystemAssigned",
  /** User assigned identity. */
  UserAssigned = "UserAssigned",
}

/**
 * Defines values for VaultIdentityType. \
 * {@link KnownVaultIdentityType} can be used interchangeably with VaultIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: No identity. \
 * **SystemAssigned**: System assigned identity. \
 * **UserAssigned**: User assigned identity.
 */
export type VaultIdentityType = string;

/** Known values of {@link JobState} that the service accepts. */
export enum KnownJobState {
  /** Job has not been started. */
  Pending = "Pending",
  /** Job is in progress. */
  Started = "Started",
  /** Job cancellation is in progress. */
  Cancelling = "Cancelling",
  /** Job has completed successfully. */
  Succeeded = "Succeeded",
  /** Job failed. */
  Failed = "Failed",
  /** Job has been cancelled. */
  Cancelled = "Cancelled",
  /** Job has completed with information. */
  CompletedWithInformation = "CompletedWithInformation",
  /** Job has completed with warnings. */
  CompletedWithWarnings = "CompletedWithWarnings",
  /** Job has completed with errors. */
  CompletedWithErrors = "CompletedWithErrors",
}

/**
 * Defines values for JobState. \
 * {@link KnownJobState} can be used interchangeably with JobState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending**: Job has not been started. \
 * **Started**: Job is in progress. \
 * **Cancelling**: Job cancellation is in progress. \
 * **Succeeded**: Job has completed successfully. \
 * **Failed**: Job failed. \
 * **Cancelled**: Job has been cancelled. \
 * **CompletedWithInformation**: Job has completed with information. \
 * **CompletedWithWarnings**: Job has completed with warnings. \
 * **CompletedWithErrors**: Job has completed with errors.
 */
export type JobState = string;

/** Known values of {@link JobObjectType} that the service accepts. */
export enum KnownJobObjectType {
  /** AVS disk pool. */
  AvsDiskPool = "AvsDiskPool",
  /** Fabric agent level workflow. */
  FabricAgent = "FabricAgent",
  /** Fabric level job. */
  Fabric = "Fabric",
  /** Policy level job. */
  Policy = "Policy",
  /** Protected item level job. */
  ProtectedItem = "ProtectedItem",
  /** Recovery plan level job. */
  RecoveryPlan = "RecoveryPlan",
  /** Replication extension level job. */
  ReplicationExtension = "ReplicationExtension",
  /** Vault level job. */
  Vault = "Vault",
}

/**
 * Defines values for JobObjectType. \
 * {@link KnownJobObjectType} can be used interchangeably with JobObjectType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AvsDiskPool**: AVS disk pool. \
 * **FabricAgent**: Fabric agent level workflow. \
 * **Fabric**: Fabric level job. \
 * **Policy**: Policy level job. \
 * **ProtectedItem**: Protected item level job. \
 * **RecoveryPlan**: Recovery plan level job. \
 * **ReplicationExtension**: Replication extension level job. \
 * **Vault**: Vault level job.
 */
export type JobObjectType = string;

/** Known values of {@link TaskState} that the service accepts. */
export enum KnownTaskState {
  /** Task has not been started. */
  Pending = "Pending",
  /** Task is in progress. */
  Started = "Started",
  /** Task has completed successfully. */
  Succeeded = "Succeeded",
  /** Task failed. */
  Failed = "Failed",
  /** Task has been cancelled. */
  Cancelled = "Cancelled",
  /** Task has been skipped. */
  Skipped = "Skipped",
}

/**
 * Defines values for TaskState. \
 * {@link KnownTaskState} can be used interchangeably with TaskState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending**: Task has not been started. \
 * **Started**: Task is in progress. \
 * **Succeeded**: Task has completed successfully. \
 * **Failed**: Task failed. \
 * **Cancelled**: Task has been cancelled. \
 * **Skipped**: Task has been skipped.
 */
export type TaskState = string;

/** Known values of {@link PrivateEndpointConnectionStatus} that the service accepts. */
export enum KnownPrivateEndpointConnectionStatus {
  /** Approved Status. */
  Approved = "Approved",
  /** Disconnected Status. */
  Disconnected = "Disconnected",
  /** Pending Status. */
  Pending = "Pending",
  /** Rejected Status. */
  Rejected = "Rejected",
}

/**
 * Defines values for PrivateEndpointConnectionStatus. \
 * {@link KnownPrivateEndpointConnectionStatus} can be used interchangeably with PrivateEndpointConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Approved**: Approved Status. \
 * **Disconnected**: Disconnected Status. \
 * **Pending**: Pending Status. \
 * **Rejected**: Rejected Status.
 */
export type PrivateEndpointConnectionStatus = string;

/** Known values of {@link ProtectionState} that the service accepts. */
export enum KnownProtectionState {
  /** Begin marker for unprotected states. */
  UnprotectedStatesBegin = "UnprotectedStatesBegin",
  /** Enable protection is in progress. */
  EnablingProtection = "EnablingProtection",
  /** Enable protection failed. */
  EnablingFailed = "EnablingFailed",
  /** Disabling protection is in progress. */
  DisablingProtection = "DisablingProtection",
  /** Disabling protection succeeded. This is a transient state before the protected item is deleted. */
  MarkedForDeletion = "MarkedForDeletion",
  /** Disable protection failed. */
  DisablingFailed = "DisablingFailed",
  /** End marker for unprotected states. */
  UnprotectedStatesEnd = "UnprotectedStatesEnd",
  /** Begin marker for initial replication states. */
  InitialReplicationStatesBegin = "InitialReplicationStatesBegin",
  /** Initial replication is in progress. */
  InitialReplicationInProgress = "InitialReplicationInProgress",
  /** Initial replication has completed on the primary side. */
  InitialReplicationCompletedOnPrimary = "InitialReplicationCompletedOnPrimary",
  /** Initial replication has completed on the recovery side. */
  InitialReplicationCompletedOnRecovery = "InitialReplicationCompletedOnRecovery",
  /** Initial replication failed and would need to be started again. */
  InitialReplicationFailed = "InitialReplicationFailed",
  /** End marker for initial replication states. */
  InitialReplicationStatesEnd = "InitialReplicationStatesEnd",
  /** Begin marker for protected steady-state states. */
  ProtectedStatesBegin = "ProtectedStatesBegin",
  /** Protected item is protected and replication is on-going. Any issues with replication will be surfaced separately via the health property and will not affect the state. */
  Protected = "Protected",
  /** End marker for protected steady-state states. */
  ProtectedStatesEnd = "ProtectedStatesEnd",
  /** Begin marker for planned failover transition states. */
  PlannedFailoverTransitionStatesBegin = "PlannedFailoverTransitionStatesBegin",
  /** Planned failover has been initiated. */
  PlannedFailoverInitiated = "PlannedFailoverInitiated",
  /** Planned failover preparing protected entities is in progress. */
  PlannedFailoverCompleting = "PlannedFailoverCompleting",
  /** Planned failover has been completed successfully. */
  PlannedFailoverCompleted = "PlannedFailoverCompleted",
  /** Planned failover initiation failed. */
  PlannedFailoverFailed = "PlannedFailoverFailed",
  /** Planned failover preparing protected entities failed. */
  PlannedFailoverCompletionFailed = "PlannedFailoverCompletionFailed",
  /** End marker for planned failover transition states. */
  PlannedFailoverTransitionStatesEnd = "PlannedFailoverTransitionStatesEnd",
  /** Begin marker for unplanned failover transition states. */
  UnplannedFailoverTransitionStatesBegin = "UnplannedFailoverTransitionStatesBegin",
  /** Unplanned failover has been initiated. */
  UnplannedFailoverInitiated = "UnplannedFailoverInitiated",
  /** Unplanned failover preparing protected entities is in progress. */
  UnplannedFailoverCompleting = "UnplannedFailoverCompleting",
  /** Unplanned failover preparing protected entities is in progress. */
  UnplannedFailoverCompleted = "UnplannedFailoverCompleted",
  /** Unplanned failover initiation failed. */
  UnplannedFailoverFailed = "UnplannedFailoverFailed",
  /** Unplanned failover preparing protected entities failed. */
  UnplannedFailoverCompletionFailed = "UnplannedFailoverCompletionFailed",
  /** End marker for unplanned failover transition states. */
  UnplannedFailoverTransitionStatesEnd = "UnplannedFailoverTransitionStatesEnd",
  /** Begin marker for commit failover states. */
  CommitFailoverStatesBegin = "CommitFailoverStatesBegin",
  /** Commit failover is in progress on the primary side. */
  CommitFailoverInProgressOnPrimary = "CommitFailoverInProgressOnPrimary",
  /** Commit failover is in progress on the recovery side. */
  CommitFailoverInProgressOnRecovery = "CommitFailoverInProgressOnRecovery",
  /** Commit failover has been completed successfully. */
  CommitFailoverCompleted = "CommitFailoverCompleted",
  /** Commit failover failed on the primary side. */
  CommitFailoverFailedOnPrimary = "CommitFailoverFailedOnPrimary",
  /** Commit failover failed on the recovery side. */
  CommitFailoverFailedOnRecovery = "CommitFailoverFailedOnRecovery",
  /** End marker for commit failover states. */
  CommitFailoverStatesEnd = "CommitFailoverStatesEnd",
  /** Begin marker for cancel failover states. */
  CancelFailoverStatesBegin = "CancelFailoverStatesBegin",
  /** Cancel failover is in progress on the primary side. */
  CancelFailoverInProgressOnPrimary = "CancelFailoverInProgressOnPrimary",
  /** Cancel failover is in progress on the recovery side. */
  CancelFailoverInProgressOnRecovery = "CancelFailoverInProgressOnRecovery",
  /** Cancel failover failed on the primary side. */
  CancelFailoverFailedOnPrimary = "CancelFailoverFailedOnPrimary",
  /** Cancel failover failed on the recovery side. */
  CancelFailoverFailedOnRecovery = "CancelFailoverFailedOnRecovery",
  /** End marker for cancel failover states. */
  CancelFailoverStatesEnd = "CancelFailoverStatesEnd",
  /** Begin marker for change recovery point states. */
  ChangeRecoveryPointStatesBegin = "ChangeRecoveryPointStatesBegin",
  /** Change recovery point has been initiated.. */
  ChangeRecoveryPointInitiated = "ChangeRecoveryPointInitiated",
  /** Change recovery point has been completed successfully. */
  ChangeRecoveryPointCompleted = "ChangeRecoveryPointCompleted",
  /** Change recovery point has failed. */
  ChangeRecoveryPointFailed = "ChangeRecoveryPointFailed",
  /** End marker for change recovery point states. */
  ChangeRecoveryPointStatesEnd = "ChangeRecoveryPointStatesEnd",
  /** Begin marker for reprotect states. */
  ReprotectStatesBegin = "ReprotectStatesBegin",
  /** Reprotect has been initiated. */
  ReprotectInitiated = "ReprotectInitiated",
  /** Reprotect has failed. */
  ReprotectFailed = "ReprotectFailed",
  /** End marker for reprotect states. */
  ReprotectStatesEnd = "ReprotectStatesEnd",
}

/**
 * Defines values for ProtectionState. \
 * {@link KnownProtectionState} can be used interchangeably with ProtectionState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **UnprotectedStatesBegin**: Begin marker for unprotected states. \
 * **EnablingProtection**: Enable protection is in progress. \
 * **EnablingFailed**: Enable protection failed. \
 * **DisablingProtection**: Disabling protection is in progress. \
 * **MarkedForDeletion**: Disabling protection succeeded. This is a transient state before the protected item is deleted. \
 * **DisablingFailed**: Disable protection failed. \
 * **UnprotectedStatesEnd**: End marker for unprotected states. \
 * **InitialReplicationStatesBegin**: Begin marker for initial replication states. \
 * **InitialReplicationInProgress**: Initial replication is in progress. \
 * **InitialReplicationCompletedOnPrimary**: Initial replication has completed on the primary side. \
 * **InitialReplicationCompletedOnRecovery**: Initial replication has completed on the recovery side. \
 * **InitialReplicationFailed**: Initial replication failed and would need to be started again. \
 * **InitialReplicationStatesEnd**: End marker for initial replication states. \
 * **ProtectedStatesBegin**: Begin marker for protected steady-state states. \
 * **Protected**: Protected item is protected and replication is on-going. Any issues with replication will be surfaced separately via the health property and will not affect the state. \
 * **ProtectedStatesEnd**: End marker for protected steady-state states. \
 * **PlannedFailoverTransitionStatesBegin**: Begin marker for planned failover transition states. \
 * **PlannedFailoverInitiated**: Planned failover has been initiated. \
 * **PlannedFailoverCompleting**: Planned failover preparing protected entities is in progress. \
 * **PlannedFailoverCompleted**: Planned failover has been completed successfully. \
 * **PlannedFailoverFailed**: Planned failover initiation failed. \
 * **PlannedFailoverCompletionFailed**: Planned failover preparing protected entities failed. \
 * **PlannedFailoverTransitionStatesEnd**: End marker for planned failover transition states. \
 * **UnplannedFailoverTransitionStatesBegin**: Begin marker for unplanned failover transition states. \
 * **UnplannedFailoverInitiated**: Unplanned failover has been initiated. \
 * **UnplannedFailoverCompleting**: Unplanned failover preparing protected entities is in progress. \
 * **UnplannedFailoverCompleted**: Unplanned failover preparing protected entities is in progress. \
 * **UnplannedFailoverFailed**: Unplanned failover initiation failed. \
 * **UnplannedFailoverCompletionFailed**: Unplanned failover preparing protected entities failed. \
 * **UnplannedFailoverTransitionStatesEnd**: End marker for unplanned failover transition states. \
 * **CommitFailoverStatesBegin**: Begin marker for commit failover states. \
 * **CommitFailoverInProgressOnPrimary**: Commit failover is in progress on the primary side. \
 * **CommitFailoverInProgressOnRecovery**: Commit failover is in progress on the recovery side. \
 * **CommitFailoverCompleted**: Commit failover has been completed successfully. \
 * **CommitFailoverFailedOnPrimary**: Commit failover failed on the primary side. \
 * **CommitFailoverFailedOnRecovery**: Commit failover failed on the recovery side. \
 * **CommitFailoverStatesEnd**: End marker for commit failover states. \
 * **CancelFailoverStatesBegin**: Begin marker for cancel failover states. \
 * **CancelFailoverInProgressOnPrimary**: Cancel failover is in progress on the primary side. \
 * **CancelFailoverInProgressOnRecovery**: Cancel failover is in progress on the recovery side. \
 * **CancelFailoverFailedOnPrimary**: Cancel failover failed on the primary side. \
 * **CancelFailoverFailedOnRecovery**: Cancel failover failed on the recovery side. \
 * **CancelFailoverStatesEnd**: End marker for cancel failover states. \
 * **ChangeRecoveryPointStatesBegin**: Begin marker for change recovery point states. \
 * **ChangeRecoveryPointInitiated**: Change recovery point has been initiated.. \
 * **ChangeRecoveryPointCompleted**: Change recovery point has been completed successfully. \
 * **ChangeRecoveryPointFailed**: Change recovery point has failed. \
 * **ChangeRecoveryPointStatesEnd**: End marker for change recovery point states. \
 * **ReprotectStatesBegin**: Begin marker for reprotect states. \
 * **ReprotectInitiated**: Reprotect has been initiated. \
 * **ReprotectFailed**: Reprotect has failed. \
 * **ReprotectStatesEnd**: End marker for reprotect states.
 */
export type ProtectionState = string;

/** Known values of {@link TestFailoverState} that the service accepts. */
export enum KnownTestFailoverState {
  /** Test failover is not active. */
  None = "None",
  /** Test failover has been initiated. */
  TestFailoverInitiated = "TestFailoverInitiated",
  /** Preparing test protected entities is in progress. */
  TestFailoverCompleting = "TestFailoverCompleting",
  /** Test failover has been completed successfully. */
  TestFailoverCompleted = "TestFailoverCompleted",
  /** Test failover initiation failed.. */
  TestFailoverFailed = "TestFailoverFailed",
  /** Preparing test protected entities failed. */
  TestFailoverCompletionFailed = "TestFailoverCompletionFailed",
  /** Test failover cleanup has been initiated. */
  TestFailoverCleanupInitiated = "TestFailoverCleanupInitiated",
  /** Cleaning up test protected entities is in progress. */
  TestFailoverCleanupCompleting = "TestFailoverCleanupCompleting",
  /** Test failover cleanup has completed\/failed. This is a transient state before the state is moved back to None. */
  MarkedForDeletion = "MarkedForDeletion",
}

/**
 * Defines values for TestFailoverState. \
 * {@link KnownTestFailoverState} can be used interchangeably with TestFailoverState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: Test failover is not active. \
 * **TestFailoverInitiated**: Test failover has been initiated. \
 * **TestFailoverCompleting**: Preparing test protected entities is in progress. \
 * **TestFailoverCompleted**: Test failover has been completed successfully. \
 * **TestFailoverFailed**: Test failover initiation failed.. \
 * **TestFailoverCompletionFailed**: Preparing test protected entities failed. \
 * **TestFailoverCleanupInitiated**: Test failover cleanup has been initiated. \
 * **TestFailoverCleanupCompleting**: Cleaning up test protected entities is in progress. \
 * **MarkedForDeletion**: Test failover cleanup has completed\/failed. This is a transient state before the state is moved back to None.
 */
export type TestFailoverState = string;

/** Known values of {@link ResynchronizationState} that the service accepts. */
export enum KnownResynchronizationState {
  /** Resynchronization is not active. */
  None = "None",
  /** Resynchronization has been initiated. */
  ResynchronizationInitiated = "ResynchronizationInitiated",
  /** Resynchronization has been completed successfully. */
  ResynchronizationCompleted = "ResynchronizationCompleted",
  /** Resynchronization has failed and would need to be started again. */
  ResynchronizationFailed = "ResynchronizationFailed",
}

/**
 * Defines values for ResynchronizationState. \
 * {@link KnownResynchronizationState} can be used interchangeably with ResynchronizationState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: Resynchronization is not active. \
 * **ResynchronizationInitiated**: Resynchronization has been initiated. \
 * **ResynchronizationCompleted**: Resynchronization has been completed successfully. \
 * **ResynchronizationFailed**: Resynchronization has failed and would need to be started again.
 */
export type ResynchronizationState = string;

/** Known values of {@link RecoveryPointType} that the service accepts. */
export enum KnownRecoveryPointType {
  /** Application consistent recovery point. */
  ApplicationConsistent = "ApplicationConsistent",
  /** Crash consistent recovery point. */
  CrashConsistent = "CrashConsistent",
}

/**
 * Defines values for RecoveryPointType. \
 * {@link KnownRecoveryPointType} can be used interchangeably with RecoveryPointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ApplicationConsistent**: Application consistent recovery point. \
 * **CrashConsistent**: Crash consistent recovery point.
 */
export type RecoveryPointType = string;

/** Known values of {@link VMNicSelection} that the service accepts. */
export enum KnownVMNicSelection {
  /** Not Selected. */
  NotSelected = "NotSelected",
  /** Selected by user. */
  SelectedByUser = "SelectedByUser",
  /** Default selection by ASR. */
  SelectedByDefault = "SelectedByDefault",
  /** NIC configuration overridden by user. Differs from SelectedByUser in the sense that the legacy SelectedByUser is used both for explicit modification by user and implicit approval of user if the settings are used for TFO\/FO. SelectedByUserOverride implies user overriding at least one of the configurations. */
  SelectedByUserOverride = "SelectedByUserOverride",
}

/**
 * Defines values for VMNicSelection. \
 * {@link KnownVMNicSelection} can be used interchangeably with VMNicSelection,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSelected**: Not Selected. \
 * **SelectedByUser**: Selected by user. \
 * **SelectedByDefault**: Default selection by ASR. \
 * **SelectedByUserOverride**: NIC configuration overridden by user. Differs from SelectedByUser in the sense that the legacy SelectedByUser is used both for explicit modification by user and implicit approval of user if the settings are used for TFO\/FO. SelectedByUserOverride implies user overriding at least one of the configurations.
 */
export type VMNicSelection = string;

/** Known values of {@link ProtectedItemActiveLocation} that the service accepts. */
export enum KnownProtectedItemActiveLocation {
  /** Protected item is active on Primary. */
  Primary = "Primary",
  /** Protected item is active on Recovery. */
  Recovery = "Recovery",
}

/**
 * Defines values for ProtectedItemActiveLocation. \
 * {@link KnownProtectedItemActiveLocation} can be used interchangeably with ProtectedItemActiveLocation,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Primary**: Protected item is active on Primary. \
 * **Recovery**: Protected item is active on Recovery.
 */
export type ProtectedItemActiveLocation = string;

/** Known values of {@link VMwareToAzureMigrateResyncState} that the service accepts. */
export enum KnownVMwareToAzureMigrateResyncState {
  /** None state. */
  None = "None",
  /** Prepared for resynchronization state. */
  PreparedForResynchronization = "PreparedForResynchronization",
  /** Started resynchronization state. */
  StartedResynchronization = "StartedResynchronization",
}

/**
 * Defines values for VMwareToAzureMigrateResyncState. \
 * {@link KnownVMwareToAzureMigrateResyncState} can be used interchangeably with VMwareToAzureMigrateResyncState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: None state. \
 * **PreparedForResynchronization**: Prepared for resynchronization state. \
 * **StartedResynchronization**: Started resynchronization state.
 */
export type VMwareToAzureMigrateResyncState = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface CheckNameAvailabilityPostOptionalParams
  extends coreClient.OperationOptions {
  /** Resource details. */
  body?: CheckNameAvailabilityModel;
}

/** Contains response data for the post operation. */
export type CheckNameAvailabilityPostResponse =
  CheckNameAvailabilityResponseModel;

/** Optional parameters. */
export interface FabricListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type FabricListBySubscriptionResponse = FabricModelListResult;

/** Optional parameters. */
export interface FabricListOptionalParams extends coreClient.OperationOptions {
  /** Continuation token from the previous call. */
  continuationToken?: string;
}

/** Contains response data for the list operation. */
export type FabricListResponse = FabricModelListResult;

/** Optional parameters. */
export interface FabricGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FabricGetResponse = FabricModel;

/** Optional parameters. */
export interface FabricCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type FabricCreateResponse = FabricModel;

/** Optional parameters. */
export interface FabricUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type FabricUpdateResponse = FabricModel;

/** Optional parameters. */
export interface FabricDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type FabricDeleteResponse = FabricDeleteHeaders;

/** Optional parameters. */
export interface FabricListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type FabricListBySubscriptionNextResponse = FabricModelListResult;

/** Optional parameters. */
export interface FabricListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type FabricListNextResponse = FabricModelListResult;

/** Optional parameters. */
export interface VaultListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type VaultListBySubscriptionResponse = VaultModelListResult;

/** Optional parameters. */
export interface VaultListOptionalParams extends coreClient.OperationOptions {
  /** Continuation token from the previous call. */
  continuationToken?: string;
}

/** Contains response data for the list operation. */
export type VaultListResponse = VaultModelListResult;

/** Optional parameters. */
export interface VaultGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VaultGetResponse = VaultModel;

/** Optional parameters. */
export interface VaultCreateOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type VaultCreateResponse = VaultModel;

/** Optional parameters. */
export interface VaultUpdateOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type VaultUpdateResponse = VaultModel;

/** Optional parameters. */
export interface VaultDeleteOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type VaultDeleteResponse = VaultDeleteHeaders;

/** Optional parameters. */
export interface VaultListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type VaultListBySubscriptionNextResponse = VaultModelListResult;

/** Optional parameters. */
export interface VaultListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type VaultListNextResponse = VaultModelListResult;

/** Optional parameters. */
export interface DeploymentPreflightPostOptionalParams
  extends coreClient.OperationOptions {
  /** Deployment preflight model. */
  body?: DeploymentPreflightModel;
}

/** Contains response data for the post operation. */
export type DeploymentPreflightPostResponse = DeploymentPreflightModel;

/** Optional parameters. */
export interface LocationBasedOperationResultsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type LocationBasedOperationResultsGetResponse = OperationStatus;

/** Optional parameters. */
export interface OperationResultsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OperationResultsGetResponse = OperationStatus;

/** Optional parameters. */
export interface FabricAgentListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type FabricAgentListResponse = FabricAgentModelListResult;

/** Optional parameters. */
export interface FabricAgentGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FabricAgentGetResponse = FabricAgentModel;

/** Optional parameters. */
export interface FabricAgentCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type FabricAgentCreateResponse = FabricAgentModel;

/** Optional parameters. */
export interface FabricAgentDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type FabricAgentDeleteResponse = FabricAgentDeleteHeaders;

/** Optional parameters. */
export interface FabricAgentListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type FabricAgentListNextResponse = FabricAgentModelListResult;

/** Optional parameters. */
export interface EmailConfigurationListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type EmailConfigurationListResponse = EmailConfigurationModelListResult;

/** Optional parameters. */
export interface EmailConfigurationGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EmailConfigurationGetResponse = EmailConfigurationModel;

/** Optional parameters. */
export interface EmailConfigurationCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type EmailConfigurationCreateResponse = EmailConfigurationModel;

/** Optional parameters. */
export interface EmailConfigurationListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type EmailConfigurationListNextResponse =
  EmailConfigurationModelListResult;

/** Optional parameters. */
export interface EventListOptionalParams extends coreClient.OperationOptions {
  /** Continuation token. */
  continuationToken?: string;
  /** OData options. */
  odataOptions?: string;
  /** Page size. */
  pageSize?: number;
}

/** Contains response data for the list operation. */
export type EventListResponse = EventModelListResult;

/** Optional parameters. */
export interface EventGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EventGetResponse = EventModel;

/** Optional parameters. */
export interface EventListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type EventListNextResponse = EventModelListResult;

/** Optional parameters. */
export interface JobListOptionalParams extends coreClient.OperationOptions {
  /** Continuation token. */
  continuationToken?: string;
  /** OData options. */
  odataOptions?: string;
  /** Page size. */
  pageSize?: number;
}

/** Contains response data for the list operation. */
export type JobListResponse = JobModelListResult;

/** Optional parameters. */
export interface JobGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type JobGetResponse = JobModel;

/** Optional parameters. */
export interface JobListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type JobListNextResponse = JobModelListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionProxiesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrivateEndpointConnectionProxiesListResponse =
  PrivateEndpointConnectionProxyListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionProxiesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateEndpointConnectionProxiesGetResponse =
  PrivateEndpointConnectionProxy;

/** Optional parameters. */
export interface PrivateEndpointConnectionProxiesCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type PrivateEndpointConnectionProxiesCreateResponse =
  PrivateEndpointConnectionProxy;

/** Optional parameters. */
export interface PrivateEndpointConnectionProxiesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type PrivateEndpointConnectionProxiesDeleteResponse =
  PrivateEndpointConnectionProxiesDeleteHeaders;

/** Optional parameters. */
export interface PrivateEndpointConnectionProxiesValidateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validate operation. */
export type PrivateEndpointConnectionProxiesValidateResponse =
  PrivateEndpointConnectionProxy;

/** Optional parameters. */
export interface PrivateEndpointConnectionProxiesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PrivateEndpointConnectionProxiesListNextResponse =
  PrivateEndpointConnectionProxyListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrivateEndpointConnectionsListResponse =
  PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type PrivateEndpointConnectionsUpdateResponse =
  PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type PrivateEndpointConnectionsDeleteResponse =
  PrivateEndpointConnectionsDeleteHeaders;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PrivateEndpointConnectionsListNextResponse =
  PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateLinkResourcesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrivateLinkResourcesListResponse = PrivateLinkResourceListResult;

/** Optional parameters. */
export interface PrivateLinkResourcesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateLinkResourcesGetResponse = PrivateLinkResource;

/** Optional parameters. */
export interface PrivateLinkResourcesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PrivateLinkResourcesListNextResponse =
  PrivateLinkResourceListResult;

/** Optional parameters. */
export interface ProtectedItemListOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token. */
  continuationToken?: string;
  /** OData options. */
  odataOptions?: string;
  /** Page size. */
  pageSize?: number;
}

/** Contains response data for the list operation. */
export type ProtectedItemListResponse = ProtectedItemModelListResult;

/** Optional parameters. */
export interface ProtectedItemGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProtectedItemGetResponse = ProtectedItemModel;

/** Optional parameters. */
export interface ProtectedItemCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ProtectedItemCreateResponse = ProtectedItemModel;

/** Optional parameters. */
export interface ProtectedItemUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ProtectedItemUpdateResponse = ProtectedItemModel;

/** Optional parameters. */
export interface ProtectedItemDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** A flag indicating whether to do force delete or not. */
  forceDelete?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ProtectedItemDeleteResponse = ProtectedItemDeleteHeaders;

/** Optional parameters. */
export interface ProtectedItemPlannedFailoverOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the plannedFailover operation. */
export type ProtectedItemPlannedFailoverResponse = PlannedFailoverModel;

/** Optional parameters. */
export interface ProtectedItemListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ProtectedItemListNextResponse = ProtectedItemModelListResult;

/** Optional parameters. */
export interface RecoveryPointListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type RecoveryPointListResponse = RecoveryPointModelListResult;

/** Optional parameters. */
export interface RecoveryPointGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RecoveryPointGetResponse = RecoveryPointModel;

/** Optional parameters. */
export interface RecoveryPointListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type RecoveryPointListNextResponse = RecoveryPointModelListResult;

/** Optional parameters. */
export interface ReplicationExtensionListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ReplicationExtensionListResponse =
  ReplicationExtensionModelListResult;

/** Optional parameters. */
export interface ReplicationExtensionGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReplicationExtensionGetResponse = ReplicationExtensionModel;

/** Optional parameters. */
export interface ReplicationExtensionCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReplicationExtensionCreateResponse = ReplicationExtensionModel;

/** Optional parameters. */
export interface ReplicationExtensionDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ReplicationExtensionDeleteResponse =
  ReplicationExtensionDeleteHeaders;

/** Optional parameters. */
export interface ReplicationExtensionListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ReplicationExtensionListNextResponse =
  ReplicationExtensionModelListResult;

/** Optional parameters. */
export interface PolicyListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PolicyListResponse = PolicyModelListResult;

/** Optional parameters. */
export interface PolicyGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PolicyGetResponse = PolicyModel;

/** Optional parameters. */
export interface PolicyCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type PolicyCreateResponse = PolicyModel;

/** Optional parameters. */
export interface PolicyDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type PolicyDeleteResponse = PolicyDeleteHeaders;

/** Optional parameters. */
export interface PolicyListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PolicyListNextResponse = PolicyModelListResult;

/** Optional parameters. */
export interface AzureSiteRecoveryManagementServiceAPIOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
