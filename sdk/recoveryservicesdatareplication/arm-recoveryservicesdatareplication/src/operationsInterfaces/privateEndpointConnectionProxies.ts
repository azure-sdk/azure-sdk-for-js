/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  PrivateEndpointConnectionProxy,
  PrivateEndpointConnectionProxiesListOptionalParams,
  PrivateEndpointConnectionProxiesGetOptionalParams,
  PrivateEndpointConnectionProxiesGetResponse,
  PrivateEndpointConnectionProxiesCreateOptionalParams,
  PrivateEndpointConnectionProxiesCreateResponse,
  PrivateEndpointConnectionProxiesDeleteOptionalParams,
  PrivateEndpointConnectionProxiesDeleteResponse,
  PrivateEndpointConnectionProxiesValidateOptionalParams,
  PrivateEndpointConnectionProxiesValidateResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PrivateEndpointConnectionProxies. */
export interface PrivateEndpointConnectionProxies {
  /**
   * Gets the all private endpoint connections proxies.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vaultName The vault name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    vaultName: string,
    options?: PrivateEndpointConnectionProxiesListOptionalParams,
  ): PagedAsyncIterableIterator<PrivateEndpointConnectionProxy>;
  /**
   * Gets the private endpoint connection proxy details.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vaultName The vault name.
   * @param privateEndpointConnectionProxyName The private endpoint connection proxy name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    vaultName: string,
    privateEndpointConnectionProxyName: string,
    options?: PrivateEndpointConnectionProxiesGetOptionalParams,
  ): Promise<PrivateEndpointConnectionProxiesGetResponse>;
  /**
   * Create a new private endpoint connection proxy which includes both auto and manual approval types.
   * Creating the proxy resource will also create a private endpoint connection resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vaultName The vault name.
   * @param privateEndpointConnectionProxyName The private endpoint connection proxy name.
   * @param body Private endpoint connection creation input.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    vaultName: string,
    privateEndpointConnectionProxyName: string,
    body: PrivateEndpointConnectionProxy,
    options?: PrivateEndpointConnectionProxiesCreateOptionalParams,
  ): Promise<PrivateEndpointConnectionProxiesCreateResponse>;
  /**
   * Returns the operation to track the deletion of private endpoint connection proxy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vaultName The vault name.
   * @param privateEndpointConnectionProxyName The private endpoint connection proxy name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    vaultName: string,
    privateEndpointConnectionProxyName: string,
    options?: PrivateEndpointConnectionProxiesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<PrivateEndpointConnectionProxiesDeleteResponse>,
      PrivateEndpointConnectionProxiesDeleteResponse
    >
  >;
  /**
   * Returns the operation to track the deletion of private endpoint connection proxy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vaultName The vault name.
   * @param privateEndpointConnectionProxyName The private endpoint connection proxy name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    vaultName: string,
    privateEndpointConnectionProxyName: string,
    options?: PrivateEndpointConnectionProxiesDeleteOptionalParams,
  ): Promise<PrivateEndpointConnectionProxiesDeleteResponse>;
  /**
   * Returns remote private endpoint connection information after validation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vaultName The vault name.
   * @param privateEndpointConnectionProxyName The private endpoint connection proxy name.
   * @param body The private endpoint connection proxy input.
   * @param options The options parameters.
   */
  validate(
    resourceGroupName: string,
    vaultName: string,
    privateEndpointConnectionProxyName: string,
    body: PrivateEndpointConnectionProxy,
    options?: PrivateEndpointConnectionProxiesValidateOptionalParams,
  ): Promise<PrivateEndpointConnectionProxiesValidateResponse>;
}
