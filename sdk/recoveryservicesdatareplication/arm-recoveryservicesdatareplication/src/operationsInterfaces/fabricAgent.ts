/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  FabricAgentModel,
  FabricAgentListOptionalParams,
  FabricAgentGetOptionalParams,
  FabricAgentGetResponse,
  FabricAgentCreateOptionalParams,
  FabricAgentCreateResponse,
  FabricAgentDeleteOptionalParams,
  FabricAgentDeleteResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a FabricAgent. */
export interface FabricAgent {
  /**
   * Gets the list of fabric agents in the given fabric.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param fabricName The fabric name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    fabricName: string,
    options?: FabricAgentListOptionalParams,
  ): PagedAsyncIterableIterator<FabricAgentModel>;
  /**
   * Gets the details of the fabric agent.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param fabricName The fabric name.
   * @param fabricAgentName The fabric agent name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    fabricName: string,
    fabricAgentName: string,
    options?: FabricAgentGetOptionalParams,
  ): Promise<FabricAgentGetResponse>;
  /**
   * Creates the fabric agent.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param fabricName The fabric name.
   * @param fabricAgentName The fabric agent name.
   * @param body Fabric agent model.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    fabricName: string,
    fabricAgentName: string,
    body: FabricAgentModel,
    options?: FabricAgentCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<FabricAgentCreateResponse>,
      FabricAgentCreateResponse
    >
  >;
  /**
   * Creates the fabric agent.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param fabricName The fabric name.
   * @param fabricAgentName The fabric agent name.
   * @param body Fabric agent model.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    fabricName: string,
    fabricAgentName: string,
    body: FabricAgentModel,
    options?: FabricAgentCreateOptionalParams,
  ): Promise<FabricAgentCreateResponse>;
  /**
   * Deletes fabric agent.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param fabricName The fabric name.
   * @param fabricAgentName The fabric agent name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    fabricName: string,
    fabricAgentName: string,
    options?: FabricAgentDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<FabricAgentDeleteResponse>,
      FabricAgentDeleteResponse
    >
  >;
  /**
   * Deletes fabric agent.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param fabricName The fabric name.
   * @param fabricAgentName The fabric agent name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    fabricName: string,
    fabricAgentName: string,
    options?: FabricAgentDeleteOptionalParams,
  ): Promise<FabricAgentDeleteResponse>;
}
