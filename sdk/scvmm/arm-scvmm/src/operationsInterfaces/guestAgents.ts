/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  GuestAgent,
  GuestAgentsListByVmOptionalParams,
  GuestAgentsCreateOptionalParams,
  GuestAgentsCreateResponse,
  GuestAgentsGetOptionalParams,
  GuestAgentsGetResponse,
  GuestAgentsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GuestAgents. */
export interface GuestAgents {
  /**
   * Returns the list of GuestAgent of the given vm.
   * @param resourceGroupName The name of the resource group.
   * @param virtualMachineName Name of the vm.
   * @param options The options parameters.
   */
  listByVm(
    resourceGroupName: string,
    virtualMachineName: string,
    options?: GuestAgentsListByVmOptionalParams
  ): PagedAsyncIterableIterator<GuestAgent>;
  /**
   * Create Or Update GuestAgent.
   * @param resourceGroupName The name of the resource group.
   * @param virtualMachineName Name of the vm.
   * @param guestAgentName Name of the guestAgents.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    virtualMachineName: string,
    guestAgentName: string,
    options?: GuestAgentsCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<GuestAgentsCreateResponse>,
      GuestAgentsCreateResponse
    >
  >;
  /**
   * Create Or Update GuestAgent.
   * @param resourceGroupName The name of the resource group.
   * @param virtualMachineName Name of the vm.
   * @param guestAgentName Name of the guestAgents.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    guestAgentName: string,
    options?: GuestAgentsCreateOptionalParams
  ): Promise<GuestAgentsCreateResponse>;
  /**
   * Implements GuestAgent GET method.
   * @param resourceGroupName The name of the resource group.
   * @param virtualMachineName Name of the vm.
   * @param guestAgentName Name of the GuestAgent.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    virtualMachineName: string,
    guestAgentName: string,
    options?: GuestAgentsGetOptionalParams
  ): Promise<GuestAgentsGetResponse>;
  /**
   * Implements GuestAgent DELETE method.
   * @param resourceGroupName The name of the resource group.
   * @param virtualMachineName Name of the vm.
   * @param guestAgentName Name of the GuestAgent.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    virtualMachineName: string,
    guestAgentName: string,
    options?: GuestAgentsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Implements GuestAgent DELETE method.
   * @param resourceGroupName The name of the resource group.
   * @param virtualMachineName Name of the vm.
   * @param guestAgentName Name of the GuestAgent.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    virtualMachineName: string,
    guestAgentName: string,
    options?: GuestAgentsDeleteOptionalParams
  ): Promise<void>;
}
