/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DryrunResource,
  ConnectorListDryrunOptionalParams,
  LinkerResource,
  ConnectorListOptionalParams,
  ConnectorGetOptionalParams,
  ConnectorGetResponse,
  ConnectorCreateOrUpdateOptionalParams,
  ConnectorCreateOrUpdateResponse,
  ConnectorDeleteOptionalParams,
  LinkerPatch,
  ConnectorUpdateOptionalParams,
  ConnectorUpdateResponse,
  ConnectorGenerateConfigurationsOptionalParams,
  ConnectorGenerateConfigurationsResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Connector. */
export interface Connector {
  /**
   * list dryrun jobs
   * @param subscriptionId The ID of the target subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param options The options parameters.
   */
  listDryrun(
    subscriptionId: string,
    resourceGroupName: string,
    location: string,
    options?: ConnectorListDryrunOptionalParams,
  ): PagedAsyncIterableIterator<DryrunResource>;
  /**
   * Returns list of connector which connects to the resource, which supports to config the target
   * service during the resource provision.
   * @param subscriptionId The ID of the target subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param options The options parameters.
   */
  list(
    subscriptionId: string,
    resourceGroupName: string,
    location: string,
    options?: ConnectorListOptionalParams,
  ): PagedAsyncIterableIterator<LinkerResource>;
  /**
   * Returns Connector resource for a given name.
   * @param subscriptionId The ID of the target subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of resource.
   * @param options The options parameters.
   */
  get(
    subscriptionId: string,
    resourceGroupName: string,
    location: string,
    connectorName: string,
    options?: ConnectorGetOptionalParams,
  ): Promise<ConnectorGetResponse>;
  /**
   * Create or update Connector resource.
   * @param subscriptionId The ID of the target subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of resource.
   * @param parameters Connector details.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    subscriptionId: string,
    resourceGroupName: string,
    location: string,
    connectorName: string,
    parameters: LinkerResource,
    options?: ConnectorCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ConnectorCreateOrUpdateResponse>,
      ConnectorCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update Connector resource.
   * @param subscriptionId The ID of the target subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of resource.
   * @param parameters Connector details.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    subscriptionId: string,
    resourceGroupName: string,
    location: string,
    connectorName: string,
    parameters: LinkerResource,
    options?: ConnectorCreateOrUpdateOptionalParams,
  ): Promise<ConnectorCreateOrUpdateResponse>;
  /**
   * Delete a Connector.
   * @param subscriptionId The ID of the target subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of resource.
   * @param options The options parameters.
   */
  beginDelete(
    subscriptionId: string,
    resourceGroupName: string,
    location: string,
    connectorName: string,
    options?: ConnectorDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a Connector.
   * @param subscriptionId The ID of the target subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    subscriptionId: string,
    resourceGroupName: string,
    location: string,
    connectorName: string,
    options?: ConnectorDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Operation to update an existing Connector.
   * @param subscriptionId The ID of the target subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of resource.
   * @param parameters Connector details.
   * @param options The options parameters.
   */
  beginUpdate(
    subscriptionId: string,
    resourceGroupName: string,
    location: string,
    connectorName: string,
    parameters: LinkerPatch,
    options?: ConnectorUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ConnectorUpdateResponse>,
      ConnectorUpdateResponse
    >
  >;
  /**
   * Operation to update an existing Connector.
   * @param subscriptionId The ID of the target subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of resource.
   * @param parameters Connector details.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    subscriptionId: string,
    resourceGroupName: string,
    location: string,
    connectorName: string,
    parameters: LinkerPatch,
    options?: ConnectorUpdateOptionalParams,
  ): Promise<ConnectorUpdateResponse>;
  /**
   * Generate configurations for a Connector.
   * @param subscriptionId The ID of the target subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of resource.
   * @param options The options parameters.
   */
  generateConfigurations(
    subscriptionId: string,
    resourceGroupName: string,
    location: string,
    connectorName: string,
    options?: ConnectorGenerateConfigurationsOptionalParams,
  ): Promise<ConnectorGenerateConfigurationsResponse>;
}
