/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  LinkerResource,
  ConnectorListOptionalParams,
  DryrunResource,
  ConnectorListDryrunOptionalParams,
  ConnectorGetOptionalParams,
  ConnectorGetResponse,
  ConnectorCreateOrUpdateOptionalParams,
  ConnectorCreateOrUpdateResponse,
  LinkerPatch,
  ConnectorUpdateOptionalParams,
  ConnectorUpdateResponse,
  ConnectorDeleteOptionalParams,
  ConnectorGenerateConfigurationsOptionalParams,
  ConnectorGenerateConfigurationsResponse,
  ConnectorValidateOptionalParams,
  ConnectorValidateResponse,
  ConnectorGetDryrunOptionalParams,
  ConnectorGetDryrunResponse,
  ConnectorCreateDryrunOptionalParams,
  ConnectorCreateDryrunResponse,
  DryrunPatch,
  ConnectorUpdateDryrunOptionalParams,
  ConnectorUpdateDryrunResponse,
  ConnectorDeleteDryrunOptionalParams,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Connector. */
export interface Connector {
  /**
   * Returns list of connector which connects to the resource, which supports to config the target
   * service during the resource provision.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    location: string,
    options?: ConnectorListOptionalParams,
  ): PagedAsyncIterableIterator<LinkerResource>;
  /**
   * list dryrun jobs
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param options The options parameters.
   */
  listDryrun(
    resourceGroupName: string,
    location: string,
    options?: ConnectorListDryrunOptionalParams,
  ): PagedAsyncIterableIterator<DryrunResource>;
  /**
   * Returns Connector resource for a given name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of the LinkerResource
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    location: string,
    connectorName: string,
    options?: ConnectorGetOptionalParams,
  ): Promise<ConnectorGetResponse>;
  /**
   * Create or update Connector resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of the LinkerResource
   * @param parameters Connector details.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    location: string,
    connectorName: string,
    parameters: LinkerResource,
    options?: ConnectorCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ConnectorCreateOrUpdateResponse>,
      ConnectorCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update Connector resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of the LinkerResource
   * @param parameters Connector details.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    location: string,
    connectorName: string,
    parameters: LinkerResource,
    options?: ConnectorCreateOrUpdateOptionalParams,
  ): Promise<ConnectorCreateOrUpdateResponse>;
  /**
   * Operation to update an existing Connector.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of the LinkerResource
   * @param parameters Connector details.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    location: string,
    connectorName: string,
    parameters: LinkerPatch,
    options?: ConnectorUpdateOptionalParams,
  ): Promise<SimplePollerLike<OperationState<ConnectorUpdateResponse>, ConnectorUpdateResponse>>;
  /**
   * Operation to update an existing Connector.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of the LinkerResource
   * @param parameters Connector details.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    location: string,
    connectorName: string,
    parameters: LinkerPatch,
    options?: ConnectorUpdateOptionalParams,
  ): Promise<ConnectorUpdateResponse>;
  /**
   * Delete a Connector.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of the LinkerResource
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    location: string,
    connectorName: string,
    options?: ConnectorDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a Connector.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of the LinkerResource
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    location: string,
    connectorName: string,
    options?: ConnectorDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Generate configurations for a Connector.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of the LinkerResource
   * @param options The options parameters.
   */
  generateConfigurations(
    resourceGroupName: string,
    location: string,
    connectorName: string,
    options?: ConnectorGenerateConfigurationsOptionalParams,
  ): Promise<ConnectorGenerateConfigurationsResponse>;
  /**
   * Validate a Connector.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of the LinkerResource
   * @param options The options parameters.
   */
  beginValidate(
    resourceGroupName: string,
    location: string,
    connectorName: string,
    options?: ConnectorValidateOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<ConnectorValidateResponse>, ConnectorValidateResponse>
  >;
  /**
   * Validate a Connector.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param connectorName The name of the LinkerResource
   * @param options The options parameters.
   */
  beginValidateAndWait(
    resourceGroupName: string,
    location: string,
    connectorName: string,
    options?: ConnectorValidateOptionalParams,
  ): Promise<ConnectorValidateResponse>;
  /**
   * get a dryrun job
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param dryrunName The name of the DryrunResource
   * @param options The options parameters.
   */
  getDryrun(
    resourceGroupName: string,
    location: string,
    dryrunName: string,
    options?: ConnectorGetDryrunOptionalParams,
  ): Promise<ConnectorGetDryrunResponse>;
  /**
   * create a dryrun job to do necessary check before actual creation
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param dryrunName The name of the DryrunResource
   * @param parameters dryrun resource.
   * @param options The options parameters.
   */
  beginCreateDryrun(
    resourceGroupName: string,
    location: string,
    dryrunName: string,
    parameters: DryrunResource,
    options?: ConnectorCreateDryrunOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<ConnectorCreateDryrunResponse>, ConnectorCreateDryrunResponse>
  >;
  /**
   * create a dryrun job to do necessary check before actual creation
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param dryrunName The name of the DryrunResource
   * @param parameters dryrun resource.
   * @param options The options parameters.
   */
  beginCreateDryrunAndWait(
    resourceGroupName: string,
    location: string,
    dryrunName: string,
    parameters: DryrunResource,
    options?: ConnectorCreateDryrunOptionalParams,
  ): Promise<ConnectorCreateDryrunResponse>;
  /**
   * update a dryrun job to do necessary check before actual creation
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param dryrunName The name of the DryrunResource
   * @param parameters dryrun resource.
   * @param options The options parameters.
   */
  beginUpdateDryrun(
    resourceGroupName: string,
    location: string,
    dryrunName: string,
    parameters: DryrunPatch,
    options?: ConnectorUpdateDryrunOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<ConnectorUpdateDryrunResponse>, ConnectorUpdateDryrunResponse>
  >;
  /**
   * update a dryrun job to do necessary check before actual creation
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param dryrunName The name of the DryrunResource
   * @param parameters dryrun resource.
   * @param options The options parameters.
   */
  beginUpdateDryrunAndWait(
    resourceGroupName: string,
    location: string,
    dryrunName: string,
    parameters: DryrunPatch,
    options?: ConnectorUpdateDryrunOptionalParams,
  ): Promise<ConnectorUpdateDryrunResponse>;
  /**
   * delete a dryrun job
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param location The name of Azure region.
   * @param dryrunName The name of the DryrunResource
   * @param options The options parameters.
   */
  deleteDryrun(
    resourceGroupName: string,
    location: string,
    dryrunName: string,
    options?: ConnectorDeleteDryrunOptionalParams,
  ): Promise<void>;
}
