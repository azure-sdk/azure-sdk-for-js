/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  JavaEnvironment,
  JavaEnvironmentsListBySubscriptionOptionalParams,
  JavaEnvironmentsListByResourceGroupOptionalParams,
  JavaEnvironmentsGetOptionalParams,
  JavaEnvironmentsGetResponse,
  JavaEnvironmentsCreateOrUpdateOptionalParams,
  JavaEnvironmentsCreateOrUpdateResponse,
  JavaEnvironmentsDeleteOptionalParams,
  JavaEnvironmentForPatchBody,
  JavaEnvironmentsUpdateOptionalParams,
  JavaEnvironmentsUpdateResponse,
  JavaEnvironmentsGetResourceUploadUrlOptionalParams,
  JavaEnvironmentsGetResourceUploadUrlResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a JavaEnvironments. */
export interface JavaEnvironments {
  /**
   * Get all the Java Environments for a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: JavaEnvironmentsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<JavaEnvironment>;
  /**
   * Get all the Java Environments in a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: JavaEnvironmentsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<JavaEnvironment>;
  /**
   * Get a Java Environment and its properties.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    options?: JavaEnvironmentsGetOptionalParams
  ): Promise<JavaEnvironmentsGetResponse>;
  /**
   * Create a new Java Environment or update an exiting Java Environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentEnvelope Configuration details of the Java Environment.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    environmentEnvelope: JavaEnvironment,
    options?: JavaEnvironmentsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<JavaEnvironmentsCreateOrUpdateResponse>,
      JavaEnvironmentsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a new Java Environment or update an exiting Java Environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentEnvelope Configuration details of the Java Environment.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    environmentEnvelope: JavaEnvironment,
    options?: JavaEnvironmentsCreateOrUpdateOptionalParams
  ): Promise<JavaEnvironmentsCreateOrUpdateResponse>;
  /**
   * Delete a Java Environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    options?: JavaEnvironmentsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a Java Environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    options?: JavaEnvironmentsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Operation to update an exiting Java Environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentEnvelope Configuration details of the Java Environment.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    environmentEnvelope: JavaEnvironmentForPatchBody,
    options?: JavaEnvironmentsUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<JavaEnvironmentsUpdateResponse>,
      JavaEnvironmentsUpdateResponse
    >
  >;
  /**
   * Operation to update an exiting Java Environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentEnvelope Configuration details of the Java Environment.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    environmentEnvelope: JavaEnvironmentForPatchBody,
    options?: JavaEnvironmentsUpdateOptionalParams
  ): Promise<JavaEnvironmentsUpdateResponse>;
  /**
   * Get an resource upload URL for the env, which may be artifacts or source archive.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  getResourceUploadUrl(
    resourceGroupName: string,
    options?: JavaEnvironmentsGetResourceUploadUrlOptionalParams
  ): Promise<JavaEnvironmentsGetResourceUploadUrlResponse>;
}
