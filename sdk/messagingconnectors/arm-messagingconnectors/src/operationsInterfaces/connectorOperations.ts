/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ConnectorInstance,
  ConnectorOperationsListBySubscriptionOptionalParams,
  ConnectorOperationsListByResourceGroupOptionalParams,
  ConnectorOperationsGetOptionalParams,
  ConnectorOperationsGetResponse,
  ConnectorOperationsCreateOrUpdateOptionalParams,
  ConnectorOperationsCreateOrUpdateResponse,
  ConnectorInstanceTagsUpdate,
  ConnectorOperationsUpdateTagsOptionalParams,
  ConnectorOperationsUpdateTagsResponse,
  ConnectorOperationsDeleteOptionalParams,
  ConnectorOperationsPauseOptionalParams,
  ConnectorOperationsResumeOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ConnectorOperations. */
export interface ConnectorOperations {
  /**
   * List Connector By Subscription
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ConnectorOperationsListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<ConnectorInstance>;
  /**
   * List Connector By ResourceGroup and Subscription
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ConnectorOperationsListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<ConnectorInstance>;
  /**
   * Gets an Connector instance for the specified subscription, resource group, and instance name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Name of the Connector resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    name: string,
    options?: ConnectorOperationsGetOptionalParams,
  ): Promise<ConnectorOperationsGetResponse>;
  /**
   * Create an Connector instance for the specified subscription, resource group, and instance name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Name of the Connector resource.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    name: string,
    resource: ConnectorInstance,
    options?: ConnectorOperationsCreateOrUpdateOptionalParams,
  ): Promise<ConnectorOperationsCreateOrUpdateResponse>;
  /**
   * Update Tags of Connector
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Name of the Connector resource.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  updateTags(
    resourceGroupName: string,
    name: string,
    properties: ConnectorInstanceTagsUpdate,
    options?: ConnectorOperationsUpdateTagsOptionalParams,
  ): Promise<ConnectorOperationsUpdateTagsResponse>;
  /**
   * Delete an Connector instance for the specified subscription, resource group, and instance name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Name of the Connector resource.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    name: string,
    options?: ConnectorOperationsDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Pause one Connector to paused status
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Name of the Connector resource.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  pause(
    resourceGroupName: string,
    name: string,
    body: Record<string, unknown>,
    options?: ConnectorOperationsPauseOptionalParams,
  ): Promise<void>;
  /**
   * Resume one Connector to running status
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Name of the Connector resource.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  resume(
    resourceGroupName: string,
    name: string,
    body: Record<string, unknown>,
    options?: ConnectorOperationsResumeOptionalParams,
  ): Promise<void>;
}
