/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type DiscountPropertiesUnion =
  | DiscountProperties
  | EntityTypeAffiliateDiscount
  | EntityTypePrimaryDiscount;
export type DiscountTypePropertiesUnion =
  | DiscountTypeProperties
  | DiscountTypeProductFamily
  | DiscountTypeProduct
  | DiscountTypeProductSku
  | DiscountTypeCustomPriceUnion;
export type DiscountTypeCustomPriceUnion =
  | DiscountTypeCustomPrice
  | DiscountTypeCustomPriceMultiCurrency;

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The SKU to be applied for this resource */
export interface ResourceSku {
  /** Name of the SKU to be applied */
  name?: string;
}

/** Properties specific to applied scope type. Not required if not applicable. */
export interface AppliedScopeProperties {
  /** Tenant ID where the benefit is applied. */
  tenantId?: string;
  /** Fully-qualified identifier of the management group where the benefit must be applied. */
  managementGroupId?: string;
  /** Fully-qualified identifier of the subscription. */
  subscriptionId?: string;
  /** Fully-qualified identifier of the resource group. */
  resourceGroupId?: string;
  /** Display name */
  displayName?: string;
}

export interface Price {
  /** The ISO 4217 3-letter currency code for the currency used by this purchase record. */
  currencyCode?: string;
  amount?: number;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Information describing the type of billing plan for this savings plan. */
export interface BillingPlanInformation {
  /** Amount of money to be paid for the Order. Tax is not included. */
  pricingCurrencyTotal?: Price;
  /** Date when the billing plan has started. */
  startDate?: Date;
  /** For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off. */
  nextPaymentDueDate?: Date;
  transactions?: PaymentDetail[];
}

/** Information about payment related to a savings plan order. */
export interface PaymentDetail {
  /** Date when the payment needs to be done. */
  dueDate?: Date;
  /** Date when the transaction is completed. Is null when it is scheduled. */
  paymentDate?: Date;
  /** Amount in pricing currency. Tax not included. */
  pricingCurrencyTotal?: Price;
  /** Amount charged in Billing currency. Tax not included. Is null for future payments */
  billingCurrencyTotal?: Price;
  /** Describes whether the payment is completed, failed, cancelled or scheduled in the future. */
  status?: PaymentStatus;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly extendedStatusInfo?: ExtendedStatusInfo;
  /** Billing account */
  billingAccount?: string;
}

export interface ExtendedStatusInfo {
  /** Status code providing additional information. */
  statusCode?: string;
  /** The message giving detailed information about the status code. */
  message?: string;
}

/** Role assignment entity */
export interface RoleAssignmentEntity {
  /** Role assignment entity id */
  id?: string;
  /** Role assignment entity name */
  name?: string;
  /** Principal Id */
  principalId?: string;
  /** Role definition id */
  roleDefinitionId?: string;
  /** Scope of the role assignment entity */
  scope?: string;
}

export interface SavingsPlanOrderModelList {
  value?: SavingsPlanOrderModel[];
  /** Url to get the next page. */
  nextLink?: string;
}

export interface SavingsPlanModelList {
  value?: SavingsPlanModel[];
  /** Url to get the next page. */
  nextLink?: string;
}

/** Savings plan utilization */
export interface Utilization {
  /**
   * The number of days trend for a savings plan
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly trend?: string;
  /** The array of aggregates of a savings plan's utilization */
  aggregates?: UtilizationAggregates[];
}

/** The aggregate values of savings plan utilization */
export interface UtilizationAggregates {
  /**
   * The grain of the aggregate
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly grain?: number;
  /**
   * The grain unit of the aggregate
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly grainUnit?: string;
  /**
   * The aggregate value
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: number;
  /**
   * The aggregate value unit
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly valueUnit?: string;
}

export interface RenewProperties {
  purchaseProperties?: PurchaseRequest;
}

export interface PurchaseRequest {
  /** The SKU to be applied for this resource */
  sku?: ResourceSku;
  /** Friendly name of the savings plan */
  displayName?: string;
  /** Subscription that will be charged for purchasing the benefit */
  billingScopeId?: string;
  /** Represent benefit term in ISO 8601 format. */
  term?: Term;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly billing plans. */
  billingPlan?: BillingPlan;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Commitment towards the benefit. */
  commitment?: Commitment;
  /**
   * DateTime of the savings plan starts providing benefit from.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly effectiveDateTime?: Date;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
}

export interface SavingsPlanModelListResult {
  /**
   * The list of savings plans.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SavingsPlanModel[];
  /**
   * Url to get the next page.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The roll out count summary of the savings plans
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalProperties?: SavingsPlanSummary[];
}

/** Savings plans list summary */
export interface SavingsPlanSummary {
  /**
   * This property has value 'summary'
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** The roll up count summary of savings plans in each state */
  value?: SavingsPlanSummaryCount;
}

/** The roll up count summary of savings plans in each state */
export interface SavingsPlanSummaryCount {
  /**
   * The number of savings plans in Succeeded state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly succeededCount?: number;
  /**
   * The number of savings plans in Failed state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failedCount?: number;
  /**
   * The number of savings plans in Expiring state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiringCount?: number;
  /**
   * The number of savings plans in Expired state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiredCount?: number;
  /**
   * The number of savings plans in Pending state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly pendingCount?: number;
  /**
   * The number of savings plans in Cancelled state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cancelledCount?: number;
  /**
   * The number of savings plans in Processing state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processingCount?: number;
  /**
   * The number of savings plans in No Benefit state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly noBenefitCount?: number;
  /**
   * The number of savings plans in Warning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly warningCount?: number;
}

/** Savings plan patch request */
export interface SavingsPlanUpdateRequest {
  /** Savings plan patch request */
  properties?: SavingsPlanUpdateRequestProperties;
}

/** Savings plan patch request */
export interface SavingsPlanUpdateRequestProperties {
  /** Display name */
  displayName?: string;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  renewProperties?: RenewProperties;
}

export interface SavingsPlanUpdateValidateRequest {
  benefits?: SavingsPlanUpdateRequestProperties[];
}

export interface SavingsPlanValidateResponse {
  benefits?: SavingsPlanValidResponseProperty[];
  /** Url to get the next page. */
  nextLink?: string;
}

/** Benefit scope response property */
export interface SavingsPlanValidResponseProperty {
  /** Indicates if the provided input was valid */
  valid?: boolean;
  /** Failure reason code if the provided input was invalid */
  reasonCode?: string;
  /** Failure reason if the provided input was invalid */
  reason?: string;
}

export interface SavingsPlanPurchaseValidateRequest {
  benefits?: SavingsPlanOrderAliasModel[];
}

/** Properties specific to each reserved resource type. Not required if not applicable. */
export interface ReservationOrderAliasRequestPropertiesReservedResourceProperties {
  /** Turning this on will apply the reservation discount to other VMs in the same VM size group. */
  instanceFlexibility?: InstanceFlexibility;
}

/** Properties specific to each reserved resource type. Not required if not applicable. */
export interface ReservationOrderAliasResponsePropertiesReservedResourceProperties {
  /** Turning this on will apply the reservation discount to other VMs in the same VM size group. */
  instanceFlexibility?: InstanceFlexibility;
}

/** Properties belonging to discounts. */
export interface DiscountProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  entityType: "Affiliate" | "Primary";
  /** This is the catalog UPN for the product. */
  productCode: string;
  /** Start date of the discount. Value is the date the discount started or will start in the future. */
  startAt: Date;
  /** This is the globally unique identifier of the Discount which will not change for the lifetime of the Discount. */
  systemId?: string;
  /**
   * The state of the resource. Supported values are Pending, Failed, Succeeded, Canceled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: DiscountProvisioningState;
  /**
   * Billing account resource id where the discount metadata is present.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountResourceId?: string;
  /**
   * Billing profile resource id where the discount is scoped to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileResourceId?: string;
  /**
   * Customer resource id where the discount is scoped to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerResourceId?: string;
  /** This defines a user friendly display name for the discount. */
  displayName?: string;
  /**
   * Represents the current status of the discount.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: DiscountStatus;
  /**
   * Fully-qualified identifier of the benefit under applicable benefit list.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly benefitResourceId?: string;
  /** List of applied scopes supported for discounts. */
  appliedScopeType?: DiscountAppliedScopeType;
}

/** Managed service identity (system assigned and/or user assigned identities) */
export interface ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */
  type: ManagedServiceIdentityType;
  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
  userAssignedIdentities?: {
    [propertyName: string]: UserAssignedIdentity | null;
  };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** The resource model definition representing SKU */
export interface Sku {
  /** The name of the SKU. E.g. P3. It is typically a letter+number code */
  name: string;
  /** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */
  tier?: SkuTier;
  /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */
  size?: string;
  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */
  family?: string;
  /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */
  capacity?: number;
}

/** Plan for the resource. */
export interface Plan {
  /** A user defined name of the 3rd Party Artifact that is being procured. */
  name: string;
  /** The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic */
  publisher: string;
  /** The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. */
  product: string;
  /** A publisher provided promotion code as provisioned in Data Market for the said product/artifact. */
  promotionCode?: string;
  /** The version of the desired product/artifact. */
  version?: string;
}

/** Discounts patch request */
export interface DiscountPatchRequest {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Display name */
  displayName?: string;
}

/** Discount list */
export interface DiscountList {
  /** List of discounts. */
  value?: Discount[];
  /** Url to get the next page. */
  nextLink?: string;
}

/** Required if status == failed or status == canceled. */
export interface OperationResultError {
  /** Required if status == failed or status == cancelled. If status == failed, provide an invariant error code used for error troubleshooting, aggregation, and analysis. */
  code?: string;
  /** Required if status == failed. Localized. If status == failed, provide an actionable error message indicating what error occurred, and what the user can do to address the issue. */
  message?: string;
}

/** billing information */
export interface BillingInformation {
  billingCurrencyTotalPaidAmount?: Price;
  billingCurrencyProratedAmount?: Price;
  billingCurrencyRemainingCommitmentAmount?: Price;
}

/** This defines the conditions for a given discount type. */
export interface DiscountTypeProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  discountType:
    | "ProductFamily"
    | "Product"
    | "Sku"
    | "CustomPrice"
    | "CustomPriceMultiCurrency";
  /** The customer action on which the discount is applied. Supported values are Purchase, Consume, and Renew. Validation: Required, one of supported values. */
  applyDiscountOn: ApplyDiscountOn;
  /** Discount percentage provided for the customer. Validation: Required unless this is a price rule. */
  discountPercentage?: number;
  /** The discount combination rule when there are multiple applicable custom prices. Validation: Required. Supported values are Stackable and BestOf. */
  discountCombinationRule?: DiscountCombinationRule;
  /** Set only in price guarantee scenario. */
  priceGuaranteeProperties?: PriceGuaranteeProperties;
  /** Array of conditions for the discount. Validation: Optional. Maximum length is 1000. */
  conditions?: ConditionsItem[];
}

/** Set only in price guarantee scenario. */
export interface PriceGuaranteeProperties {
  /** Supported values: Protected, Locked */
  pricingPolicy?: PricingPolicy;
  /** The date on which prices are to be used for guarantee calculation. Validation: expected to be 00 hours, Format: 2024-09-30T00:00:00Z. Must be in UTC. */
  priceGuaranteeDate?: Date;
}

/** Condition for a discount. */
export interface ConditionsItem {
  conditionName?: string;
  /** These items are open-ended strings. */
  value?: string[];
  type?: string;
}

/** Custom price properties for a given discount. */
export interface CustomPriceProperties {
  /** The type of the priceable node pricing rule. Validation: Required. Supported values are fixedPriceLock, fixedListPrice, and priceCeiling. */
  ruleType: DiscountRuleType;
  /** The catalog instance where the priceable node lives. Validation: Required. No defined format, will vary per team. */
  catalogId: string;
  /** The set of BigCat claims. Validation: Required. Must contain AgreementType, NationalCloud, and PricingAudience claims. Additionally requires AccessPass claim when creating custom price with action == consume on the pricing instructions. */
  catalogClaims: CatalogClaimsItem[];
  /** The term units for the priceable node. Validation: Optional, Maximum length 128 characters. Must be present if and only if the availability derived by market, product, sku, and claims has terms. */
  termUnits?: string;
  /** The billing period of the priceable node. Validation: Optional, Maximum length 128 characters. Only allowed if the availability derived by market, product, sku, and claims has terms and at least one of those terms has a billing period. When specified, termUnits must be specified. */
  billingPeriod?: string;
  /** Must be present if the market, product, sku, and claims, and optional term information resolves to multiple availabilities that only differ by meter type. Validation: Maximum length 128 characters. */
  meterType?: string;
  /** The set of market set prices of the priceable node. Validation: Required. Must contain at least one element. */
  marketSetPrices: MarketSetPricesItems[];
}

/** Catalog claim for a discount. */
export interface CatalogClaimsItem {
  catalogClaimsItemType?: string;
  value?: string;
}

/** Items in the MarketSetPrices array. */
export interface MarketSetPricesItems {
  markets: string[];
  /** The locked price for the priceable node. Validation: Required. Must be greater than or equal to 0. If the case of billing plans. This represents the price for each cycle charge. */
  value: number;
  /** The currency of the locked price value. Validation: Required. Must be a valid ISO 4217 3-letter currency code. */
  currency: string;
}

/** Commitment towards the benefit. */
export interface Commitment extends Price {
  /** Commitment grain. */
  grain?: CommitmentGrain;
}

export interface PricingCurrencyTotal extends Price {
  /** Represents either billing plan or savings plan term in ISO 8601 format. */
  duration?: PricingCurrencyDuration;
}

/** Savings plan order alias */
export interface SavingsPlanOrderAliasModel extends Resource {
  /** Savings plan SKU */
  sku: ResourceSku;
  /** Resource provider kind */
  kind?: string;
  /** Display name */
  displayName?: string;
  /**
   * Identifier of the savings plan created
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly savingsPlanOrderId?: string;
  /**
   * Provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Subscription that will be charged for purchasing the benefit */
  billingScopeId?: string;
  /** Represent benefit term in ISO 8601 format. */
  term?: Term;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly billing plans. */
  billingPlan?: BillingPlan;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
  /** Commitment towards the benefit. */
  commitment?: Commitment;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
}

/** Savings plan order */
export interface SavingsPlanOrderModel extends Resource {
  /** Savings plan SKU */
  sku: ResourceSku;
  /** Display name */
  displayName?: string;
  /**
   * Provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Subscription that will be charged for purchasing the benefit */
  billingScopeId?: string;
  /**
   * Fully-qualified identifier of the billing profile where the savings plan is applied. Present only for Field-led or Customer-led customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * Fully-qualified identifier of the customer where the savings plan is applied. Present only for Partner-led customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerId?: string;
  /**
   * Fully-qualified identifier of the billing account where the savings plan is applied. Present only for Enterprise Agreement customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountId?: string;
  /** Represent benefit term in ISO 8601 format. */
  term?: Term;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly billing plans. */
  billingPlan?: BillingPlan;
  /**
   * Expiry date time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiryDateTime?: Date;
  /** This is the DateTime when the savings plan benefit started. */
  benefitStartTime?: Date;
  /** Information describing the type of billing plan for this savings plan. */
  planInformation?: BillingPlanInformation;
  savingsPlans?: string[];
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly extendedStatusInfo?: ExtendedStatusInfo;
}

/** Savings plan */
export interface SavingsPlanModel extends Resource {
  /** Savings plan SKU */
  sku: ResourceSku;
  /** Display name */
  displayName?: string;
  /**
   * Provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The provisioning state of the savings plan for display, e.g. Succeeded
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayProvisioningState?: string;
  /** Subscription that will be charged for purchasing the benefit */
  billingScopeId?: string;
  /**
   * Fully-qualified identifier of the billing profile where the savings plan is applied. Present only for Field-led or Customer-led customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * Fully-qualified identifier of the customer where the savings plan is applied. Present only for Partner-led customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerId?: string;
  /**
   * Fully-qualified identifier of the billing account where the savings plan is applied. Present only for Enterprise Agreement customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountId?: string;
  /** Represent benefit term in ISO 8601 format. */
  term?: Term;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly billing plans. */
  billingPlan?: BillingPlan;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /**
   * The applied scope type of the savings plan for display, e.g. Shared
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly userFriendlyAppliedScopeType?: string;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
  /** Commitment towards the benefit. */
  commitment?: Commitment;
  /**
   * DateTime of the savings plan starts providing benefit from.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly effectiveDateTime?: Date;
  /**
   * Expiry date time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiryDateTime?: Date;
  /**
   * Date time when the savings plan was purchased
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaseDateTime?: Date;
  /** This is the DateTime when the savings plan benefit started. */
  benefitStartTime?: Date;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly extendedStatusInfo?: ExtendedStatusInfo;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  /**
   * Savings plan utilization
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly utilization?: Utilization;
  /** SavingsPlan Id of the SavingsPlan from which this SavingsPlan is renewed. */
  renewSource?: string;
  /** SavingsPlan Id of the SavingsPlan which is purchased because of renew. */
  renewDestination?: string;
  renewProperties?: RenewProperties;
}

/** Reservation order alias */
export interface ReservationOrderAliasRequest extends Resource {
  /** Reservation order SKU */
  sku: ResourceSku;
  /** The Azure Region where the reservation benefits are applied to. */
  location?: string;
  /** Display name */
  displayName?: string;
  /** Subscription that will be charged for purchasing the benefit */
  billingScopeId?: string;
  /** Represent benefit term in ISO 8601 format. */
  term?: Term;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly billing plans. */
  billingPlan?: BillingPlan;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
  /** Total Quantity of the SKUs purchased in the Reservation. */
  quantity?: number;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  /** The type of the resource that is being reserved. */
  reservedResourceType?: ReservedResourceType;
  /** This is the date-time when the Azure Hybrid Benefit needs to be reviewed. */
  reviewDateTime?: Date;
  /** Properties specific to each reserved resource type. Not required if not applicable. */
  reservedResourceProperties?: ReservationOrderAliasRequestPropertiesReservedResourceProperties;
}

/** Reservation order alias */
export interface ReservationOrderAliasResponse extends Resource {
  /** Reservation order SKU */
  sku: ResourceSku;
  /** The Azure Region where the reserved resource lives. */
  location?: string;
  /** Display name */
  displayName?: string;
  /**
   * Identifier of the reservation order created
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reservationOrderId?: string;
  /**
   * Provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Subscription that will be charged for purchasing the benefit */
  billingScopeId?: string;
  /** Represent benefit term in ISO 8601 format. */
  term?: Term;
  /** Represents the billing plan in ISO 8601 format. Required only for monthly billing plans. */
  billingPlan?: BillingPlan;
  /** Type of the Applied Scope. */
  appliedScopeType?: AppliedScopeType;
  /** Properties specific to applied scope type. Not required if not applicable. */
  appliedScopeProperties?: AppliedScopeProperties;
  /** Total Quantity of the SKUs purchased in the Reservation. */
  quantity?: number;
  /** Setting this to true will automatically purchase a new benefit on the expiration date time. */
  renew?: boolean;
  /** The type of the resource that is being reserved. */
  reservedResourceType?: ReservedResourceType;
  /** This is the date-time when the Reservation needs to be reviewed. */
  reviewDateTime?: Date;
  /** Properties specific to each reserved resource type. Not required if not applicable. */
  reservedResourceProperties?: ReservationOrderAliasResponsePropertiesReservedResourceProperties;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Entity type for affiliate discounts */
export interface EntityTypeAffiliateDiscount extends DiscountProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  entityType: "Affiliate";
  /**
   * This will be present in the response if the primary has a resource ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly primaryResourceId?: string;
  /**
   * End date of the discount. No duration will be supported. Allowed value is any date greater than or equal to startDate.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endAt?: Date;
}

/** Entity type for primary discounts */
export interface EntityTypePrimaryDiscount extends DiscountProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  entityType: "Primary";
  /** This defines the conditions for a given discount type. */
  discountTypeProperties?: DiscountTypePropertiesUnion;
  /** End date of the discount. No duration will be supported. Allowed value is any date greater than or equal to startDate. */
  endAt: Date;
}

/** Discount type properties including product family name */
export interface DiscountTypeProductFamily extends DiscountTypeProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  discountType: "ProductFamily";
  /** Product family for which the discount is given. Validation: Optional */
  productFamilyName?: string;
}

/** Discount type properties including product family name and product id. */
export interface DiscountTypeProduct extends DiscountTypeProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  discountType: "Product";
  /** Product family for which the discount is given. Validation: Optional */
  productFamilyName?: string;
  /** Product ID for which the discount is given. Validation: Optional. No specific format, example: DZH318Z09V6F */
  productId?: string;
}

/** Discount type properties including product family name, product id, and sku id. */
export interface DiscountTypeProductSku extends DiscountTypeProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  discountType: "Sku";
  /** Product family for which the discount is given. Validation: Optional */
  productFamilyName?: string;
  /** Product ID for which the discount is given. Validation: Optional. No specific format, example: DZH318Z09V6F */
  productId?: string;
  /** ResourceSku for the given discount. Validation: Optional. */
  skuId?: string;
}

/** Discount type properties including product family name, product id, sku, and custom price properties. Allows a single entry in marketSetPrices. */
export interface DiscountTypeCustomPrice extends DiscountTypeProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  discountType: "CustomPrice" | "CustomPriceMultiCurrency";
  /** Product family for which the discount is given. Validation: Optional */
  productFamilyName?: string;
  /** Product ID for which the discount is given. Validation: Optional. No specific format, example: DZH318Z09V6F */
  productId?: string;
  /** ResourceSku for the given discount. Validation: Optional. */
  skuId?: string;
  /** Custom price properties for a given discount. */
  customPriceProperties?: CustomPriceProperties;
}

/** The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set. */
export interface ResourceModelWithAllowedPropertySet extends TrackedResource {
  /** The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource. */
  managedBy?: string;
  /** Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. */
  kind?: string;
  /**
   * The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
  /** Managed service identity (system assigned and/or user assigned identities) */
  identity?: ManagedServiceIdentity;
  /** The resource model definition representing SKU */
  sku?: Sku;
  /** Plan for the resource. */
  plan?: Plan;
}

/** Applied discount */
export interface AppliedDiscount extends ProxyResource {
  /** This defines whether the entity being created is primary or affiliate. Supported values: primary, affiliate. Validation: Required, must match one of the 2 values. */
  entityType?: DiscountEntityType;
  /** This is the catalog UPN for the product. */
  productCode?: string;
  /** Start date of the discount. Value is the date the discount started or will start in the future. */
  startAt?: Date;
  /** This is the globally unique identifier of the Discount which will not change for the lifetime of the Discount. */
  systemId?: string;
  /**
   * The state of the resource. Supported values are Pending, Failed, Succeeded, Canceled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: DiscountProvisioningState;
  /**
   * Billing account resource id where the discount metadata is present.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountResourceId?: string;
  /**
   * Billing profile resource id where the discount is scoped to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileResourceId?: string;
  /**
   * Customer resource id where the discount is scoped to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerResourceId?: string;
  /** This defines a user friendly display name for the discount. */
  displayName?: string;
  /**
   * Represents the current status of the discount.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: DiscountStatus;
  /**
   * Fully-qualified identifier of the benefit under applicable benefit list.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly benefitResourceId?: string;
  /** List of applied scopes supported for discounts. */
  appliedScopeType?: DiscountAppliedScopeType;
}

/** Discount type properties including product family name, product id, sku, and custom price properties. Allows multiple entries in marketSetPrices. */
export interface DiscountTypeCustomPriceMultiCurrency
  extends DiscountTypeCustomPrice {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  discountType: "CustomPriceMultiCurrency";
}

/** Resource definition for Discounts. */
export interface Discount extends ResourceModelWithAllowedPropertySet {
  /** This defines whether the entity being created is primary or affiliate. Supported values: primary, affiliate. Validation: Required, must match one of the 2 values. */
  entityType?: DiscountEntityType;
  /** This is the catalog UPN for the product. */
  productCode?: string;
  /** Start date of the discount. Value is the date the discount started or will start in the future. */
  startAt?: Date;
  /** This is the globally unique identifier of the Discount which will not change for the lifetime of the Discount. */
  systemId?: string;
  /**
   * The state of the resource. Supported values are Pending, Failed, Succeeded, Canceled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: DiscountProvisioningState;
  /**
   * Billing account resource id where the discount metadata is present.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountResourceId?: string;
  /**
   * Billing profile resource id where the discount is scoped to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileResourceId?: string;
  /**
   * Customer resource id where the discount is scoped to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerResourceId?: string;
  /** This defines a user friendly display name for the discount. */
  displayName?: string;
  /**
   * Represents the current status of the discount.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: DiscountStatus;
  /**
   * Fully-qualified identifier of the benefit under applicable benefit list.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly benefitResourceId?: string;
  /** List of applied scopes supported for discounts. */
  appliedScopeType?: DiscountAppliedScopeType;
}

/** Defines headers for SavingsPlanOrderAlias_create operation. */
export interface SavingsPlanOrderAliasCreateHeaders {
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
  /** Clients should wait for the Retry-After interval before polling again */
  retryAfter?: number;
}

/** Defines headers for SavingsPlan_update operation. */
export interface SavingsPlanUpdateHeaders {
  location?: string;
}

/** Defines headers for ReservationOrderAlias_create operation. */
export interface ReservationOrderAliasCreateHeaders {
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
  /** Clients should wait for the Retry-After interval before polling again */
  retryAfter?: number;
}

/** Defines headers for Discounts_create operation. */
export interface DiscountsCreateHeaders {
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
  /** Clients should wait for the Retry-After interval before polling again */
  retryAfter?: number;
}

/** Defines headers for Discounts_delete operation. */
export interface DiscountsDeleteHeaders {
  /** Location URI to poll for result. */
  location?: string;
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
  /** Clients should wait for the Retry-After interval before polling again */
  retryAfter?: number;
}

/** Defines headers for Discounts_cancel operation. */
export interface DiscountsCancelHeaders {
  /** Location URI to poll for result. */
  location?: string;
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
  /** Clients should wait for the Retry-After interval before polling again */
  retryAfter?: number;
}

/** Defines headers for Discount_update operation. */
export interface DiscountUpdateHeaders {
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
  /** Location URI to poll for result. */
  location?: string;
  /** Clients should wait for the Retry-After interval before polling again */
  retryAfter?: number;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Creating */
  Creating = "Creating",
  /** PendingBilling */
  PendingBilling = "PendingBilling",
  /** ConfirmedBilling */
  ConfirmedBilling = "ConfirmedBilling",
  /** Created */
  Created = "Created",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** Expired */
  Expired = "Expired",
  /** Failed */
  Failed = "Failed",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **PendingBilling** \
 * **ConfirmedBilling** \
 * **Created** \
 * **Succeeded** \
 * **Cancelled** \
 * **Expired** \
 * **Failed**
 */
export type ProvisioningState = string;

/** Known values of {@link Term} that the service accepts. */
export enum KnownTerm {
  /** P1Y */
  P1Y = "P1Y",
  /** P3Y */
  P3Y = "P3Y",
  /** P5Y */
  P5Y = "P5Y",
}

/**
 * Defines values for Term. \
 * {@link KnownTerm} can be used interchangeably with Term,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **P1Y** \
 * **P3Y** \
 * **P5Y**
 */
export type Term = string;

/** Known values of {@link BillingPlan} that the service accepts. */
export enum KnownBillingPlan {
  /** P1M */
  P1M = "P1M",
}

/**
 * Defines values for BillingPlan. \
 * {@link KnownBillingPlan} can be used interchangeably with BillingPlan,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **P1M**
 */
export type BillingPlan = string;

/** Known values of {@link AppliedScopeType} that the service accepts. */
export enum KnownAppliedScopeType {
  /** Single */
  Single = "Single",
  /** Shared */
  Shared = "Shared",
  /** ManagementGroup */
  ManagementGroup = "ManagementGroup",
}

/**
 * Defines values for AppliedScopeType. \
 * {@link KnownAppliedScopeType} can be used interchangeably with AppliedScopeType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Single** \
 * **Shared** \
 * **ManagementGroup**
 */
export type AppliedScopeType = string;

/** Known values of {@link CommitmentGrain} that the service accepts. */
export enum KnownCommitmentGrain {
  /** Hourly */
  Hourly = "Hourly",
  /** FullTerm */
  FullTerm = "FullTerm",
  /** Unknown */
  Unknown = "Unknown",
}

/**
 * Defines values for CommitmentGrain. \
 * {@link KnownCommitmentGrain} can be used interchangeably with CommitmentGrain,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Hourly** \
 * **FullTerm** \
 * **Unknown**
 */
export type CommitmentGrain = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link PaymentStatus} that the service accepts. */
export enum KnownPaymentStatus {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Scheduled */
  Scheduled = "Scheduled",
  /** Cancelled */
  Cancelled = "Cancelled",
}

/**
 * Defines values for PaymentStatus. \
 * {@link KnownPaymentStatus} can be used interchangeably with PaymentStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Scheduled** \
 * **Cancelled**
 */
export type PaymentStatus = string;

/** Known values of {@link ReservedResourceType} that the service accepts. */
export enum KnownReservedResourceType {
  /** VirtualMachines */
  VirtualMachines = "VirtualMachines",
  /** SqlDatabases */
  SqlDatabases = "SqlDatabases",
  /** SuseLinux */
  SuseLinux = "SuseLinux",
  /** CosmosDb */
  CosmosDb = "CosmosDb",
  /** RedHat */
  RedHat = "RedHat",
  /** SqlDataWarehouse */
  SqlDataWarehouse = "SqlDataWarehouse",
  /** VMwareCloudSimple */
  VMwareCloudSimple = "VMwareCloudSimple",
  /** RedHatOsa */
  RedHatOsa = "RedHatOsa",
  /** Databricks */
  Databricks = "Databricks",
  /** AppService */
  AppService = "AppService",
  /** ManagedDisk */
  ManagedDisk = "ManagedDisk",
  /** BlockBlob */
  BlockBlob = "BlockBlob",
  /** RedisCache */
  RedisCache = "RedisCache",
  /** AzureDataExplorer */
  AzureDataExplorer = "AzureDataExplorer",
  /** MySql */
  MySql = "MySql",
  /** MariaDb */
  MariaDb = "MariaDb",
  /** PostgreSql */
  PostgreSql = "PostgreSql",
  /** DedicatedHost */
  DedicatedHost = "DedicatedHost",
  /** SapHana */
  SapHana = "SapHana",
  /** SqlAzureHybridBenefit */
  SqlAzureHybridBenefit = "SqlAzureHybridBenefit",
  /** AVS */
  AVS = "AVS",
  /** DataFactory */
  DataFactory = "DataFactory",
  /** NetAppStorage */
  NetAppStorage = "NetAppStorage",
  /** AzureFiles */
  AzureFiles = "AzureFiles",
  /** SqlEdge */
  SqlEdge = "SqlEdge",
  /** VirtualMachineSoftware */
  VirtualMachineSoftware = "VirtualMachineSoftware",
}

/**
 * Defines values for ReservedResourceType. \
 * {@link KnownReservedResourceType} can be used interchangeably with ReservedResourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **VirtualMachines** \
 * **SqlDatabases** \
 * **SuseLinux** \
 * **CosmosDb** \
 * **RedHat** \
 * **SqlDataWarehouse** \
 * **VMwareCloudSimple** \
 * **RedHatOsa** \
 * **Databricks** \
 * **AppService** \
 * **ManagedDisk** \
 * **BlockBlob** \
 * **RedisCache** \
 * **AzureDataExplorer** \
 * **MySql** \
 * **MariaDb** \
 * **PostgreSql** \
 * **DedicatedHost** \
 * **SapHana** \
 * **SqlAzureHybridBenefit** \
 * **AVS** \
 * **DataFactory** \
 * **NetAppStorage** \
 * **AzureFiles** \
 * **SqlEdge** \
 * **VirtualMachineSoftware**
 */
export type ReservedResourceType = string;

/** Known values of {@link InstanceFlexibility} that the service accepts. */
export enum KnownInstanceFlexibility {
  /** On */
  On = "On",
  /** Off */
  Off = "Off",
}

/**
 * Defines values for InstanceFlexibility. \
 * {@link KnownInstanceFlexibility} can be used interchangeably with InstanceFlexibility,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **On** \
 * **Off**
 */
export type InstanceFlexibility = string;

/** Known values of {@link DiscountEntityType} that the service accepts. */
export enum KnownDiscountEntityType {
  /** Primary */
  Primary = "Primary",
  /** Affiliate */
  Affiliate = "Affiliate",
}

/**
 * Defines values for DiscountEntityType. \
 * {@link KnownDiscountEntityType} can be used interchangeably with DiscountEntityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Primary** \
 * **Affiliate**
 */
export type DiscountEntityType = string;

/** Known values of {@link DiscountProvisioningState} that the service accepts. */
export enum KnownDiscountProvisioningState {
  /** Unknown */
  Unknown = "Unknown",
  /** Pending */
  Pending = "Pending",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Canceled */
  Canceled = "Canceled",
  /** Failed */
  Failed = "Failed",
}

/**
 * Defines values for DiscountProvisioningState. \
 * {@link KnownDiscountProvisioningState} can be used interchangeably with DiscountProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Pending** \
 * **Succeeded** \
 * **Canceled** \
 * **Failed**
 */
export type DiscountProvisioningState = string;

/** Known values of {@link DiscountStatus} that the service accepts. */
export enum KnownDiscountStatus {
  /** Active */
  Active = "Active",
  /** Pending */
  Pending = "Pending",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Expired */
  Expired = "Expired",
}

/**
 * Defines values for DiscountStatus. \
 * {@link KnownDiscountStatus} can be used interchangeably with DiscountStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active** \
 * **Pending** \
 * **Failed** \
 * **Canceled** \
 * **Expired**
 */
export type DiscountStatus = string;

/** Known values of {@link DiscountAppliedScopeType} that the service accepts. */
export enum KnownDiscountAppliedScopeType {
  /** BillingAccount */
  BillingAccount = "BillingAccount",
  /** BillingProfile */
  BillingProfile = "BillingProfile",
  /** Customer */
  Customer = "Customer",
}

/**
 * Defines values for DiscountAppliedScopeType. \
 * {@link KnownDiscountAppliedScopeType} can be used interchangeably with DiscountAppliedScopeType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BillingAccount** \
 * **BillingProfile** \
 * **Customer**
 */
export type DiscountAppliedScopeType = string;

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned,UserAssigned",
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned,UserAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link PricingCurrencyDuration} that the service accepts. */
export enum KnownPricingCurrencyDuration {
  /** P1M */
  P1M = "P1M",
  /** P1Y */
  P1Y = "P1Y",
  /** P3Y */
  P3Y = "P3Y",
}

/**
 * Defines values for PricingCurrencyDuration. \
 * {@link KnownPricingCurrencyDuration} can be used interchangeably with PricingCurrencyDuration,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **P1M** \
 * **P1Y** \
 * **P3Y**
 */
export type PricingCurrencyDuration = string;

/** Known values of {@link DiscountType} that the service accepts. */
export enum KnownDiscountType {
  /** ProductFamily */
  ProductFamily = "ProductFamily",
  /** Product */
  Product = "Product",
  /** Sku */
  Sku = "Sku",
  /** CustomPrice */
  CustomPrice = "CustomPrice",
  /** CustomPriceMultiCurrency */
  CustomPriceMultiCurrency = "CustomPriceMultiCurrency",
}

/**
 * Defines values for DiscountType. \
 * {@link KnownDiscountType} can be used interchangeably with DiscountType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ProductFamily** \
 * **Product** \
 * **Sku** \
 * **CustomPrice** \
 * **CustomPriceMultiCurrency**
 */
export type DiscountType = string;

/** Known values of {@link ApplyDiscountOn} that the service accepts. */
export enum KnownApplyDiscountOn {
  /** Purchase */
  Purchase = "Purchase",
  /** Consume */
  Consume = "Consume",
  /** Renew */
  Renew = "Renew",
}

/**
 * Defines values for ApplyDiscountOn. \
 * {@link KnownApplyDiscountOn} can be used interchangeably with ApplyDiscountOn,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Purchase** \
 * **Consume** \
 * **Renew**
 */
export type ApplyDiscountOn = string;

/** Known values of {@link DiscountCombinationRule} that the service accepts. */
export enum KnownDiscountCombinationRule {
  /** BestOf */
  BestOf = "BestOf",
  /** Stackable */
  Stackable = "Stackable",
}

/**
 * Defines values for DiscountCombinationRule. \
 * {@link KnownDiscountCombinationRule} can be used interchangeably with DiscountCombinationRule,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BestOf** \
 * **Stackable**
 */
export type DiscountCombinationRule = string;

/** Known values of {@link PricingPolicy} that the service accepts. */
export enum KnownPricingPolicy {
  /** Protected */
  Protected = "Protected",
  /** Locked */
  Locked = "Locked",
}

/**
 * Defines values for PricingPolicy. \
 * {@link KnownPricingPolicy} can be used interchangeably with PricingPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Protected** \
 * **Locked**
 */
export type PricingPolicy = string;

/** Known values of {@link DiscountRuleType} that the service accepts. */
export enum KnownDiscountRuleType {
  /** FixedPriceLock */
  FixedPriceLock = "FixedPriceLock",
  /** FixedListPrice */
  FixedListPrice = "FixedListPrice",
  /** PriceCeiling */
  PriceCeiling = "PriceCeiling",
}

/**
 * Defines values for DiscountRuleType. \
 * {@link KnownDiscountRuleType} can be used interchangeably with DiscountRuleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **FixedPriceLock** \
 * **FixedListPrice** \
 * **PriceCeiling**
 */
export type DiscountRuleType = string;

/** Known values of {@link DiscountProvisioningSubState} that the service accepts. */
export enum KnownDiscountProvisioningSubState {
  /** Unknown */
  Unknown = "Unknown",
  /** None */
  None = "None",
  /** Expired */
  Expired = "Expired",
}

/**
 * Defines values for DiscountProvisioningSubState. \
 * {@link KnownDiscountProvisioningSubState} can be used interchangeably with DiscountProvisioningSubState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **None** \
 * **Expired**
 */
export type DiscountProvisioningSubState = string;
/** Defines values for SkuTier. */
export type SkuTier = "Free" | "Basic" | "Standard" | "Premium";

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface SavingsPlanOrderAliasCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type SavingsPlanOrderAliasCreateResponse = SavingsPlanOrderAliasModel;

/** Optional parameters. */
export interface SavingsPlanOrderAliasGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SavingsPlanOrderAliasGetResponse = SavingsPlanOrderAliasModel;

/** Optional parameters. */
export interface SavingsPlanOrderGetOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the detail information of some properties. */
  expand?: string;
}

/** Contains response data for the get operation. */
export type SavingsPlanOrderGetResponse = SavingsPlanOrderModel;

/** Optional parameters. */
export interface SavingsPlanOrderElevateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the elevate operation. */
export type SavingsPlanOrderElevateResponse = RoleAssignmentEntity;

/** Optional parameters. */
export interface SavingsPlanOrderListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SavingsPlanOrderListResponse = SavingsPlanOrderModelList;

/** Optional parameters. */
export interface SavingsPlanOrderListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SavingsPlanOrderListNextResponse = SavingsPlanOrderModelList;

/** Optional parameters. */
export interface SavingsPlanListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SavingsPlanListResponse = SavingsPlanModelList;

/** Optional parameters. */
export interface SavingsPlanListAllOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'. Reservation properties include sku/name, properties/{appliedScopeType, archived, displayName, displayProvisioningState, effectiveDateTime, expiryDate, provisioningState, quantity, renew, reservedResourceType, term, userFriendlyAppliedScopeType, userFriendlyRenewState} */
  filter?: string;
  /** May be used to sort order by reservation properties. */
  orderby?: string;
  /** To indicate whether to refresh the roll up counts of the savings plans group by provisioning states */
  refreshSummary?: string;
  /** The number of savings plans to skip from the list before returning results */
  skiptoken?: number;
  /** The selected provisioning state */
  selectedState?: string;
  /** To number of savings plans to return */
  take?: number;
}

/** Contains response data for the listAll operation. */
export type SavingsPlanListAllResponse = SavingsPlanModelListResult;

/** Optional parameters. */
export interface SavingsPlanGetOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the detail information of some properties. */
  expand?: string;
}

/** Contains response data for the get operation. */
export type SavingsPlanGetResponse = SavingsPlanModel;

/** Optional parameters. */
export interface SavingsPlanUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type SavingsPlanUpdateResponse = SavingsPlanModel;

/** Optional parameters. */
export interface SavingsPlanValidateUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateUpdate operation. */
export type SavingsPlanValidateUpdateResponse = SavingsPlanValidateResponse;

/** Optional parameters. */
export interface SavingsPlanListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SavingsPlanListNextResponse = SavingsPlanModelList;

/** Optional parameters. */
export interface SavingsPlanListAllNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAllNext operation. */
export type SavingsPlanListAllNextResponse = SavingsPlanModelListResult;

/** Optional parameters. */
export interface ValidatePurchaseOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validatePurchase operation. */
export type ValidatePurchaseResponse = SavingsPlanValidateResponse;

/** Optional parameters. */
export interface ReservationOrderAliasCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ReservationOrderAliasCreateResponse = ReservationOrderAliasResponse;

/** Optional parameters. */
export interface ReservationOrderAliasGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ReservationOrderAliasGetResponse = ReservationOrderAliasResponse;

/** Optional parameters. */
export interface DiscountsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type DiscountsCreateResponse = Discount;

/** Optional parameters. */
export interface DiscountsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type DiscountsDeleteResponse = DiscountsDeleteHeaders;

/** Optional parameters. */
export interface DiscountsResourceGroupListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the resourceGroupList operation. */
export type DiscountsResourceGroupListResponse = DiscountList;

/** Optional parameters. */
export interface DiscountsSubscriptionListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the subscriptionList operation. */
export type DiscountsSubscriptionListResponse = DiscountList;

/** Optional parameters. */
export interface DiscountsCancelOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the cancel operation. */
export type DiscountsCancelResponse = Discount;

/** Optional parameters. */
export interface DiscountsScopeListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the scopeList operation. */
export type DiscountsScopeListResponse = DiscountList;

/** Optional parameters. */
export interface DiscountsResourceGroupListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the resourceGroupListNext operation. */
export type DiscountsResourceGroupListNextResponse = DiscountList;

/** Optional parameters. */
export interface DiscountsSubscriptionListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the subscriptionListNext operation. */
export type DiscountsSubscriptionListNextResponse = DiscountList;

/** Optional parameters. */
export interface DiscountsScopeListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the scopeListNext operation. */
export type DiscountsScopeListNextResponse = DiscountList;

/** Optional parameters. */
export interface DiscountGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DiscountGetResponse = Discount;

/** Optional parameters. */
export interface DiscountUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type DiscountUpdateResponse = Discount;

/** Optional parameters. */
export interface BillingBenefitsRPOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
