/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Discount,
  DiscountsScopeListOptionalParams,
  DiscountsSubscriptionListOptionalParams,
  DiscountsResourceGroupListOptionalParams,
  DiscountsCreateOptionalParams,
  DiscountsCreateResponse,
  DiscountsDeleteOptionalParams,
  DiscountsDeleteResponse,
  DiscountsCancelOptionalParams,
  DiscountsCancelResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Discounts. */
export interface Discounts {
  /**
   * List discounts that are applicable for a given scope. Currently supported scopes: billing accounts
   * @param scope The scope at which the benefits are listed.
   * @param options The options parameters.
   */
  listScopeList(
    scope: string,
    options?: DiscountsScopeListOptionalParams,
  ): PagedAsyncIterableIterator<Discount>;
  /**
   * List discounts at subscription level
   * @param options The options parameters.
   */
  listSubscriptionList(
    options?: DiscountsSubscriptionListOptionalParams,
  ): PagedAsyncIterableIterator<Discount>;
  /**
   * List discounts at resource group level
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listResourceGroupList(
    resourceGroupName: string,
    options?: DiscountsResourceGroupListOptionalParams,
  ): PagedAsyncIterableIterator<Discount>;
  /**
   * Create discount.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param discountName Name of the discount
   * @param body Request body for creating a discount.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    discountName: string,
    body: Discount,
    options?: DiscountsCreateOptionalParams,
  ): Promise<SimplePollerLike<OperationState<DiscountsCreateResponse>, DiscountsCreateResponse>>;
  /**
   * Create discount.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param discountName Name of the discount
   * @param body Request body for creating a discount.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    discountName: string,
    body: Discount,
    options?: DiscountsCreateOptionalParams,
  ): Promise<DiscountsCreateResponse>;
  /**
   * Delete discount. Clears the metadata from the user's view.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param discountName Name of the discount
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    discountName: string,
    options?: DiscountsDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<DiscountsDeleteResponse>, DiscountsDeleteResponse>>;
  /**
   * Delete discount. Clears the metadata from the user's view.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param discountName Name of the discount
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    discountName: string,
    options?: DiscountsDeleteOptionalParams,
  ): Promise<DiscountsDeleteResponse>;
  /**
   * Cancel discount. Stops applying the benefit.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param discountName Name of the discount
   * @param options The options parameters.
   */
  beginCancel(
    resourceGroupName: string,
    discountName: string,
    options?: DiscountsCancelOptionalParams,
  ): Promise<SimplePollerLike<OperationState<DiscountsCancelResponse>, DiscountsCancelResponse>>;
  /**
   * Cancel discount. Stops applying the benefit.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param discountName Name of the discount
   * @param options The options parameters.
   */
  beginCancelAndWait(
    resourceGroupName: string,
    discountName: string,
    options?: DiscountsCancelOptionalParams,
  ): Promise<DiscountsCancelResponse>;
}
