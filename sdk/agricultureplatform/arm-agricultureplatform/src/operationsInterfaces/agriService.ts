/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  AgriServiceResource,
  AgriServiceListBySubscriptionOptionalParams,
  AgriServiceListByResourceGroupOptionalParams,
  AgriServiceGetOptionalParams,
  AgriServiceGetResponse,
  AgriServiceCreateOrUpdateOptionalParams,
  AgriServiceCreateOrUpdateResponse,
  AgriServiceResourceUpdate,
  AgriServiceUpdateOptionalParams,
  AgriServiceUpdateResponse,
  AgriServiceDeleteOptionalParams,
  AgriServiceDeleteResponse,
  AgriServiceListAvailableSolutionsOptionalParams,
  AgriServiceListAvailableSolutionsResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AgriService. */
export interface AgriService {
  /**
   * List AgriServiceResource resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: AgriServiceListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<AgriServiceResource>;
  /**
   * List AgriServiceResource resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: AgriServiceListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<AgriServiceResource>;
  /**
   * Get a AgriServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param agriServiceResourceName The name of the AgriService resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    agriServiceResourceName: string,
    options?: AgriServiceGetOptionalParams,
  ): Promise<AgriServiceGetResponse>;
  /**
   * Create a AgriServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param agriServiceResourceName The name of the AgriService resource.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    agriServiceResourceName: string,
    resource: AgriServiceResource,
    options?: AgriServiceCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<AgriServiceCreateOrUpdateResponse>,
      AgriServiceCreateOrUpdateResponse
    >
  >;
  /**
   * Create a AgriServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param agriServiceResourceName The name of the AgriService resource.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    agriServiceResourceName: string,
    resource: AgriServiceResource,
    options?: AgriServiceCreateOrUpdateOptionalParams,
  ): Promise<AgriServiceCreateOrUpdateResponse>;
  /**
   * Update a AgriServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param agriServiceResourceName The name of the AgriService resource.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    agriServiceResourceName: string,
    properties: AgriServiceResourceUpdate,
    options?: AgriServiceUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<AgriServiceUpdateResponse>, AgriServiceUpdateResponse>
  >;
  /**
   * Update a AgriServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param agriServiceResourceName The name of the AgriService resource.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    agriServiceResourceName: string,
    properties: AgriServiceResourceUpdate,
    options?: AgriServiceUpdateOptionalParams,
  ): Promise<AgriServiceUpdateResponse>;
  /**
   * Delete a AgriServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param agriServiceResourceName The name of the AgriService resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    agriServiceResourceName: string,
    options?: AgriServiceDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<AgriServiceDeleteResponse>, AgriServiceDeleteResponse>
  >;
  /**
   * Delete a AgriServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param agriServiceResourceName The name of the AgriService resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    agriServiceResourceName: string,
    options?: AgriServiceDeleteOptionalParams,
  ): Promise<AgriServiceDeleteResponse>;
  /**
   * Returns the list of available agri solutions.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param agriServiceResourceName The name of the AgriService resource.
   * @param options The options parameters.
   */
  listAvailableSolutions(
    resourceGroupName: string,
    agriServiceResourceName: string,
    options?: AgriServiceListAvailableSolutionsOptionalParams,
  ): Promise<AgriServiceListAvailableSolutionsResponse>;
}
