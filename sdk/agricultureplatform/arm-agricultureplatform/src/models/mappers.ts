/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const AgriServiceResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgriServiceResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AgriServiceResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AgriServiceResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgriServiceResourceProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      config: {
        serializedName: "config",
        type: {
          name: "Composite",
          className: "AgriServiceConfig",
        },
      },
      managedOnBehalfOfConfiguration: {
        serializedName: "managedOnBehalfOfConfiguration",
        type: {
          name: "Composite",
          className: "ManagedOnBehalfOfConfiguration",
        },
      },
      dataConnectorCredentials: {
        serializedName: "dataConnectorCredentials",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataConnectorCredentialMap",
            },
          },
        },
      },
      installedSolutions: {
        serializedName: "installedSolutions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstalledSolutionMap",
            },
          },
        },
      },
    },
  },
};

export const AgriServiceConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgriServiceConfig",
    modelProperties: {
      instanceUri: {
        constraints: {
          MaxLength: 256,
          MinLength: 2,
        },
        serializedName: "instanceUri",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      version: {
        constraints: {
          MaxLength: 256,
          MinLength: 2,
        },
        serializedName: "version",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      appServiceResourceId: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "appServiceResourceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      cosmosDbResourceId: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "cosmosDbResourceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      storageAccountResourceId: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "storageAccountResourceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      keyVaultResourceId: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "keyVaultResourceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      redisCacheResourceId: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "redisCacheResourceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ManagedOnBehalfOfConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedOnBehalfOfConfiguration",
    modelProperties: {
      moboBrokerResources: {
        serializedName: "moboBrokerResources",
        required: true,
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MoboBrokerResource",
            },
          },
        },
      },
    },
  },
};

export const MoboBrokerResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MoboBrokerResource",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DataConnectorCredentialMap: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataConnectorCredentialMap",
    modelProperties: {
      key: {
        serializedName: "key",
        required: true,
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "Composite",
          className: "DataConnectorCredentials",
        },
      },
    },
  },
};

export const DataConnectorCredentials: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataConnectorCredentials",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String",
        },
      },
      clientId: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "clientId",
        type: {
          name: "String",
        },
      },
      keyVaultUri: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "keyVaultUri",
        type: {
          name: "String",
        },
      },
      keyName: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "keyName",
        type: {
          name: "String",
        },
      },
      keyVersion: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "keyVersion",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const InstalledSolutionMap: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstalledSolutionMap",
    modelProperties: {
      key: {
        serializedName: "key",
        required: true,
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "Composite",
          className: "Solution",
        },
      },
    },
  },
};

export const Solution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Solution",
    modelProperties: {
      applicationName: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "applicationName",
        type: {
          name: "String",
        },
      },
      partnerId: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "partnerId",
        type: {
          name: "String",
        },
      },
      marketPlacePublisherId: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "marketPlacePublisherId",
        type: {
          name: "String",
        },
      },
      saasSubscriptionId: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "saasSubscriptionId",
        type: {
          name: "String",
        },
      },
      saasSubscriptionName: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "saasSubscriptionName",
        type: {
          name: "String",
        },
      },
      planId: {
        constraints: {
          MinLength: 2,
        },
        serializedName: "planId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ManagedServiceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedServiceIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" },
          },
        },
      },
    },
  },
};

export const UserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
    },
  },
};

export const Sku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "Enum",
          allowedValues: ["Free", "Basic", "Standard", "Premium"],
        },
      },
      size: {
        serializedName: "size",
        type: {
          name: "String",
        },
      },
      family: {
        serializedName: "family",
        type: {
          name: "String",
        },
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AgriServiceResourceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgriServiceResourceUpdate",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "AzureResourceManagerCommonTypesManagedServiceIdentityUpdate",
        },
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "AzureResourceManagerCommonTypesSkuUpdate",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AgriServiceResourceUpdateProperties",
        },
      },
    },
  },
};

export const AzureResourceManagerCommonTypesManagedServiceIdentityUpdate: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AzureResourceManagerCommonTypesManagedServiceIdentityUpdate",
      modelProperties: {
        type: {
          serializedName: "type",
          type: {
            name: "String",
          },
        },
        userAssignedIdentities: {
          serializedName: "userAssignedIdentities",
          type: {
            name: "Dictionary",
            value: {
              type: { name: "Composite", className: "UserAssignedIdentity" },
            },
          },
        },
      },
    },
  };

export const AzureResourceManagerCommonTypesSkuUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceManagerCommonTypesSkuUpdate",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "Enum",
          allowedValues: ["Free", "Basic", "Standard", "Premium"],
        },
      },
      size: {
        serializedName: "size",
        type: {
          name: "String",
        },
      },
      family: {
        serializedName: "family",
        type: {
          name: "String",
        },
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AgriServiceResourceUpdateProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgriServiceResourceUpdateProperties",
    modelProperties: {
      config: {
        serializedName: "config",
        type: {
          name: "Composite",
          className: "AgriServiceConfig",
        },
      },
      dataConnectorCredentials: {
        serializedName: "dataConnectorCredentials",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataConnectorCredentialMap",
            },
          },
        },
      },
      installedSolutions: {
        serializedName: "installedSolutions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstalledSolutionMap",
            },
          },
        },
      },
    },
  },
};

export const AvailableAgriSolutionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableAgriSolutionListResult",
    modelProperties: {
      solutions: {
        serializedName: "solutions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataManagerForAgricultureSolution",
            },
          },
        },
      },
    },
  },
};

export const DataManagerForAgricultureSolution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataManagerForAgricultureSolution",
    modelProperties: {
      partnerId: {
        serializedName: "partnerId",
        required: true,
        type: {
          name: "String",
        },
      },
      solutionId: {
        serializedName: "solutionId",
        required: true,
        type: {
          name: "String",
        },
      },
      partnerTenantId: {
        serializedName: "partnerTenantId",
        required: true,
        type: {
          name: "String",
        },
      },
      dataAccessScopes: {
        serializedName: "dataAccessScopes",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      marketPlaceOfferDetails: {
        serializedName: "marketPlaceOfferDetails",
        type: {
          name: "Composite",
          className: "MarketPlaceOfferDetails",
        },
      },
      saasApplicationId: {
        serializedName: "saasApplicationId",
        required: true,
        type: {
          name: "String",
        },
      },
      accessAzureDataManagerForAgricultureApplicationId: {
        serializedName: "accessAzureDataManagerForAgricultureApplicationId",
        required: true,
        type: {
          name: "String",
        },
      },
      accessAzureDataManagerForAgricultureApplicationName: {
        serializedName: "accessAzureDataManagerForAgricultureApplicationName",
        required: true,
        type: {
          name: "String",
        },
      },
      isValidateInput: {
        serializedName: "isValidateInput",
        required: true,
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const MarketPlaceOfferDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketPlaceOfferDetails",
    modelProperties: {
      saasOfferId: {
        serializedName: "saasOfferId",
        required: true,
        type: {
          name: "String",
        },
      },
      publisherId: {
        serializedName: "publisherId",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AgriServiceResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgriServiceResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AgriServiceResourceProperties",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku",
        },
      },
    },
  },
};

export const AgriServiceCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgriServiceCreateOrUpdateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AgriServiceUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgriServiceUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AgriServiceDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgriServiceDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};
