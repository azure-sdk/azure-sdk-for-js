/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { AzureDataTransfer } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { Azuredatatransferrp } from "../azuredatatransferrp";
import {
  ActionRequest,
  AzureDataTransferActionOptionalParams,
  AzureDataTransferActionResponse
} from "../models";

/** Class containing AzureDataTransfer operations. */
export class AzureDataTransferImpl implements AzureDataTransfer {
  private readonly client: Azuredatatransferrp;

  /**
   * Initialize a new instance of the class AzureDataTransfer class.
   * @param client Reference to the service client
   */
  constructor(client: Azuredatatransferrp) {
    this.client = client;
  }

  /**
   * Performs an action request on Azure Data Transfer.
   * @param parameters The action request parameters.
   * @param options The options parameters.
   */
  action(
    parameters: ActionRequest,
    options?: AzureDataTransferActionOptionalParams
  ): Promise<AzureDataTransferActionResponse> {
    return this.client.sendOperationRequest(
      { parameters, options },
      actionOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const actionOperationSpec: coreClient.OperationSpec = {
  path: "/providers/Microsoft.AzureDataTransfer/action",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.ActionResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  requestBody: Parameters.parameters,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
