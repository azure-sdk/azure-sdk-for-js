/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const ListApprovedSchemasRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ListApprovedSchemasRequest",
    modelProperties: {
      pipeline: {
        serializedName: "pipeline",
        type: {
          name: "String",
        },
      },
      direction: {
        serializedName: "direction",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SchemasListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SchemasListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Schema",
            },
          },
        },
      },
    },
  },
};

export const Schema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Schema",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      connectionId: {
        serializedName: "connectionId",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      content: {
        serializedName: "content",
        type: {
          name: "String",
        },
      },
      direction: {
        serializedName: "direction",
        type: {
          name: "String",
        },
      },
      schemaUri: {
        serializedName: "schemaUri",
        type: {
          name: "String",
        },
      },
      schemaType: {
        serializedName: "schemaType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ValidateSchemaResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidateSchemaResult",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ConnectionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Connection",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ConnectionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectionProperties",
    modelProperties: {
      pipeline: {
        serializedName: "pipeline",
        required: true,
        type: {
          name: "String",
        },
      },
      direction: {
        serializedName: "direction",
        type: {
          name: "String",
        },
      },
      justification: {
        serializedName: "justification",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      forceDisabledStatus: {
        serializedName: "forceDisabledStatus",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      statusReason: {
        serializedName: "statusReason",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      linkStatus: {
        serializedName: "linkStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      linkedConnectionId: {
        serializedName: "linkedConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      flowTypes: {
        serializedName: "flowTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      requirementId: {
        serializedName: "requirementId",
        type: {
          name: "String",
        },
      },
      remoteSubscriptionId: {
        serializedName: "remoteSubscriptionId",
        type: {
          name: "String",
        },
      },
      approver: {
        serializedName: "approver",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      pin: {
        serializedName: "pin",
        type: {
          name: "String",
        },
      },
      dateSubmitted: {
        serializedName: "dateSubmitted",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      primaryContact: {
        serializedName: "primaryContact",
        type: {
          name: "String",
        },
      },
      secondaryContacts: {
        serializedName: "secondaryContacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      policies: {
        serializedName: "policies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      schemas: {
        serializedName: "schemas",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Schema",
            },
          },
        },
      },
      schemaUris: {
        serializedName: "schemaUris",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const ManagedServiceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedServiceIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" },
          },
        },
      },
    },
  },
};

export const UserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const PipelineListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PipelineListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Pipeline",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PipelineProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PipelineProperties",
    modelProperties: {
      remoteCloud: {
        serializedName: "remoteCloud",
        required: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      connections: {
        serializedName: "connections",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PipelineConnection",
            },
          },
        },
      },
      subscribers: {
        serializedName: "subscribers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Subscriber",
            },
          },
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      policies: {
        serializedName: "policies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      flowTypes: {
        serializedName: "flowTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      disabledFlowTypes: {
        serializedName: "disabledFlowTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      quarantineDownloadStorageAccount: {
        serializedName: "quarantineDownloadStorageAccount",
        type: {
          name: "String",
        },
      },
      quarantineDownloadStorageContainer: {
        serializedName: "quarantineDownloadStorageContainer",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PipelineConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PipelineConnection",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      etag: {
        serializedName: "etag",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PipelineConnectionProperties",
        },
      },
    },
  },
};

export const PipelineConnectionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PipelineConnectionProperties",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      internalMetadata: {
        serializedName: "internalMetadata",
        type: {
          name: "Composite",
          className: "InternalMetadataProperties",
        },
      },
    },
  },
};

export const InternalMetadataProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InternalMetadataProperties",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      operationStatus: {
        serializedName: "operationStatus",
        type: {
          name: "Composite",
          className: "OperationStatusProperties",
        },
      },
      statusSetBy: {
        serializedName: "statusSetBy",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationStatusProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationStatusProperties",
    modelProperties: {
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Subscriber: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Subscriber",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String",
        },
      },
      notifications: {
        serializedName: "notifications",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ConnectionsPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectionsPatch",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const FlowListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Flow",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const FlowProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowProperties",
    modelProperties: {
      connection: {
        serializedName: "connection",
        type: {
          name: "Composite",
          className: "SelectedResource",
        },
      },
      flowId: {
        serializedName: "flowId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      keyVaultUri: {
        serializedName: "keyVaultUri",
        type: {
          name: "String",
        },
      },
      linkStatus: {
        serializedName: "linkStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      linkedFlowId: {
        serializedName: "linkedFlowId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      forceDisabledStatus: {
        serializedName: "forceDisabledStatus",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      storageAccountName: {
        serializedName: "storageAccountName",
        type: {
          name: "String",
        },
      },
      storageAccountId: {
        serializedName: "storageAccountId",
        type: {
          name: "String",
        },
      },
      storageContainerName: {
        serializedName: "storageContainerName",
        type: {
          name: "String",
        },
      },
      storageTableName: {
        serializedName: "storageTableName",
        type: {
          name: "String",
        },
      },
      serviceBusQueueId: {
        serializedName: "serviceBusQueueId",
        type: {
          name: "String",
        },
      },
      flowType: {
        serializedName: "flowType",
        type: {
          name: "String",
        },
      },
      dataType: {
        serializedName: "dataType",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      policies: {
        serializedName: "policies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      schema: {
        serializedName: "schema",
        type: {
          name: "Composite",
          className: "Schema",
        },
      },
      messagingOptions: {
        serializedName: "messagingOptions",
        type: {
          name: "Composite",
          className: "MessagingOptions",
        },
      },
      apiFlowOptions: {
        serializedName: "apiFlowOptions",
        type: {
          name: "Composite",
          className: "ApiFlowOptions",
        },
      },
      customerManagedKeyVaultUri: {
        serializedName: "customerManagedKeyVaultUri",
        type: {
          name: "String",
        },
      },
      streamId: {
        serializedName: "streamId",
        type: {
          name: "String",
        },
      },
      streamProtocol: {
        serializedName: "streamProtocol",
        type: {
          name: "String",
        },
      },
      streamLatency: {
        serializedName: "streamLatency",
        type: {
          name: "Number",
        },
      },
      passphrase: {
        serializedName: "passphrase",
        type: {
          name: "String",
        },
      },
      sourceAddresses: {
        serializedName: "sourceAddresses",
        type: {
          name: "Composite",
          className: "StreamSourceAddresses",
        },
      },
      destinationEndpoints: {
        serializedName: "destinationEndpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      destinationEndpointPorts: {
        serializedName: "destinationEndpointPorts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number",
            },
          },
        },
      },
      eventHubId: {
        serializedName: "eventHubId",
        type: {
          name: "String",
        },
      },
      consumerGroup: {
        serializedName: "consumerGroup",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SelectedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SelectedResource",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MessagingOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MessagingOptions",
    modelProperties: {
      billingTier: {
        serializedName: "billingTier",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApiFlowOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiFlowOptions",
    modelProperties: {
      remoteEndpoint: {
        serializedName: "remoteEndpoint",
        type: {
          name: "String",
        },
      },
      cname: {
        serializedName: "cname",
        type: {
          name: "String",
        },
      },
      apiMode: {
        serializedName: "apiMode",
        type: {
          name: "String",
        },
      },
      identityTranslation: {
        serializedName: "identityTranslation",
        type: {
          name: "String",
        },
      },
      senderClientId: {
        serializedName: "senderClientId",
        type: {
          name: "String",
        },
      },
      remoteCallingModeClientId: {
        serializedName: "remoteCallingModeClientId",
        type: {
          name: "String",
        },
      },
      audienceOverride: {
        serializedName: "audienceOverride",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StreamSourceAddresses: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StreamSourceAddresses",
    modelProperties: {
      sourceAddresses: {
        serializedName: "sourceAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const Plan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Plan",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      publisher: {
        serializedName: "publisher",
        required: true,
        type: {
          name: "String",
        },
      },
      product: {
        serializedName: "product",
        required: true,
        type: {
          name: "String",
        },
      },
      promotionCode: {
        serializedName: "promotionCode",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const FlowsPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowsPatch",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const GetDestinationEndpointPortsResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetDestinationEndpointPortsResult",
    modelProperties: {
      ports: {
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number",
            },
          },
        },
      },
    },
  },
};

export const GetDestinationEndpointsResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetDestinationEndpointsResult",
    modelProperties: {
      endpoints: {
        serializedName: "endpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const GetStreamConnectionStringResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetStreamConnectionStringResult",
    modelProperties: {
      connectionString: {
        serializedName: "connectionString",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceBody",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String",
        },
      },
      statusReason: {
        serializedName: "statusReason",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SetDestinationEndpointPorts: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SetDestinationEndpointPorts",
    modelProperties: {
      ports: {
        serializedName: "ports",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number",
            },
          },
        },
      },
    },
  },
};

export const SetDestinationEndpoints: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SetDestinationEndpoints",
    modelProperties: {
      endpoints: {
        serializedName: "endpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const SetStreamPassphrase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SetStreamPassphrase",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SetSourceAddresses: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SetSourceAddresses",
    modelProperties: {
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const PendingConnectionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PendingConnectionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PendingConnection",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PendingConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PendingConnection",
    modelProperties: {
      pipeline: {
        serializedName: "pipeline",
        required: true,
        type: {
          name: "String",
        },
      },
      direction: {
        serializedName: "direction",
        type: {
          name: "String",
        },
      },
      justification: {
        serializedName: "justification",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      forceDisabledStatus: {
        serializedName: "forceDisabledStatus",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      statusReason: {
        serializedName: "statusReason",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      linkStatus: {
        serializedName: "linkStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      linkedConnectionId: {
        serializedName: "linkedConnectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      flowTypes: {
        serializedName: "flowTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      requirementId: {
        serializedName: "requirementId",
        type: {
          name: "String",
        },
      },
      remoteSubscriptionId: {
        serializedName: "remoteSubscriptionId",
        type: {
          name: "String",
        },
      },
      approver: {
        serializedName: "approver",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      pin: {
        serializedName: "pin",
        type: {
          name: "String",
        },
      },
      dateSubmitted: {
        serializedName: "dateSubmitted",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      primaryContact: {
        serializedName: "primaryContact",
        type: {
          name: "String",
        },
      },
      secondaryContacts: {
        serializedName: "secondaryContacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      policies: {
        serializedName: "policies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      schemas: {
        serializedName: "schemas",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Schema",
            },
          },
        },
      },
      schemaUris: {
        serializedName: "schemaUris",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "Connection",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PendingFlowListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PendingFlowListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PendingFlow",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PendingFlow: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PendingFlow",
    modelProperties: {
      connection: {
        serializedName: "connection",
        type: {
          name: "Composite",
          className: "SelectedResource",
        },
      },
      flowId: {
        serializedName: "flowId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      keyVaultUri: {
        serializedName: "keyVaultUri",
        type: {
          name: "String",
        },
      },
      linkStatus: {
        serializedName: "linkStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      linkedFlowId: {
        serializedName: "linkedFlowId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      forceDisabledStatus: {
        serializedName: "forceDisabledStatus",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      storageAccountName: {
        serializedName: "storageAccountName",
        type: {
          name: "String",
        },
      },
      storageAccountId: {
        serializedName: "storageAccountId",
        type: {
          name: "String",
        },
      },
      storageContainerName: {
        serializedName: "storageContainerName",
        type: {
          name: "String",
        },
      },
      storageTableName: {
        serializedName: "storageTableName",
        type: {
          name: "String",
        },
      },
      serviceBusQueueId: {
        serializedName: "serviceBusQueueId",
        type: {
          name: "String",
        },
      },
      flowType: {
        serializedName: "flowType",
        type: {
          name: "String",
        },
      },
      dataType: {
        serializedName: "dataType",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      policies: {
        serializedName: "policies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      schema: {
        serializedName: "schema",
        type: {
          name: "Composite",
          className: "Schema",
        },
      },
      messagingOptions: {
        serializedName: "messagingOptions",
        type: {
          name: "Composite",
          className: "MessagingOptions",
        },
      },
      apiFlowOptions: {
        serializedName: "apiFlowOptions",
        type: {
          name: "Composite",
          className: "ApiFlowOptions",
        },
      },
      customerManagedKeyVaultUri: {
        serializedName: "customerManagedKeyVaultUri",
        type: {
          name: "String",
        },
      },
      streamId: {
        serializedName: "streamId",
        type: {
          name: "String",
        },
      },
      streamProtocol: {
        serializedName: "streamProtocol",
        type: {
          name: "String",
        },
      },
      streamLatency: {
        serializedName: "streamLatency",
        type: {
          name: "Number",
        },
      },
      passphrase: {
        serializedName: "passphrase",
        type: {
          name: "String",
        },
      },
      sourceAddresses: {
        serializedName: "sourceAddresses",
        type: {
          name: "Composite",
          className: "StreamSourceAddresses",
        },
      },
      destinationEndpoints: {
        serializedName: "destinationEndpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      destinationEndpointPorts: {
        serializedName: "destinationEndpointPorts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number",
            },
          },
        },
      },
      eventHubId: {
        serializedName: "eventHubId",
        type: {
          name: "String",
        },
      },
      consumerGroup: {
        serializedName: "consumerGroup",
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "Flow",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      connectionId: {
        serializedName: "connectionId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PipelinesPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PipelinesPatch",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PipelinesPatchProperties",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
    },
  },
};

export const PipelinesPatchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PipelinesPatchProperties",
    modelProperties: {
      connections: {
        serializedName: "connections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PipelineConnection",
            },
          },
        },
      },
      flowTypes: {
        serializedName: "flowTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const Action: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Action",
    modelProperties: {
      actionType: {
        serializedName: "actionType",
        required: true,
        type: {
          name: "String",
        },
      },
      targetType: {
        serializedName: "targetType",
        required: true,
        type: {
          name: "String",
        },
      },
      targets: {
        serializedName: "targets",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      justification: {
        serializedName: "justification",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ConnectionIdList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectionIdList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const ListFlowsByPipelineResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ListFlowsByPipelineResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ListFlowsByPipelineConnection",
            },
          },
        },
      },
    },
  },
};

export const ListFlowsByPipelineConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ListFlowsByPipelineConnection",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      flows: {
        serializedName: "flows",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Flow",
            },
          },
        },
      },
    },
  },
};

export const AzureResourceManagerArmResponseConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceManagerArmResponseConnection",
    modelProperties: {
      body: {
        serializedName: "body",
        type: {
          name: "Composite",
          className: "Connection",
        },
      },
    },
  },
};

export const AzureResourceManagerArmResponseFlow: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceManagerArmResponseFlow",
    modelProperties: {
      body: {
        serializedName: "body",
        type: {
          name: "Composite",
          className: "Flow",
        },
      },
    },
  },
};

export const AzureResourceManagerArmResponsePipeline: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceManagerArmResponsePipeline",
    modelProperties: {
      body: {
        serializedName: "body",
        type: {
          name: "Composite",
          className: "Pipeline",
        },
      },
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Connection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Connection",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ConnectionProperties",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
    },
  },
};

export const Pipeline: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Pipeline",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PipelineProperties",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
    },
  },
};

export const Flow: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Flow",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "FlowProperties",
        },
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "Plan",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
    },
  },
};

export const ConnectionsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectionsUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ConnectionsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectionsDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ConnectionsLinkHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectionsLinkHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const PipelinesCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PipelinesCreateOrUpdateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const PipelinesUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PipelinesUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const PipelinesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PipelinesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const PipelinesApproveConnectionHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PipelinesApproveConnectionHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const PipelinesExecuteActionHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PipelinesExecuteActionHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const PipelinesRejectConnectionHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PipelinesRejectConnectionHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const FlowsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowsUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const FlowsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowsDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const FlowsDisableHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowsDisableHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const FlowsEnableHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowsEnableHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const FlowsGeneratePassphraseHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowsGeneratePassphraseHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const FlowsLinkHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowsLinkHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const FlowsSetDestinationEndpointPortsHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowsSetDestinationEndpointPortsHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const FlowsSetDestinationEndpointsHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowsSetDestinationEndpointsHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const FlowsSetPassphraseHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowsSetPassphraseHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const FlowsSetSourceAddressesHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlowsSetSourceAddressesHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};
