/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ApiCollection,
  APICollectionsListOptionalParams,
  APICollectionsGetOptionalParams,
  APICollectionsGetResponse,
  APICollectionsCreateOptionalParams,
  APICollectionsCreateResponse,
  APICollectionsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a APICollections. */
export interface APICollections {
  /**
   * Gets a list of Azure API Management APIs that have been onboarded to Defender for APIs. If an Azure
   * API Management API is onboarded to Defender for APIs, the system will monitor the operations within
   * the Azure API Management API for intrusive behaviors and provide alerts for attacks that have been
   * detected.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param serviceName The name of the API Management service.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    serviceName: string,
    options?: APICollectionsListOptionalParams
  ): PagedAsyncIterableIterator<ApiCollection>;
  /**
   * Gets an Azure API Management API if it has been onboarded to Defender for APIs. If an Azure API
   * Management API is onboarded to Defender for APIs, the system will monitor the operations within the
   * Azure API Management API for intrusive behaviors and provide alerts for attacks that have been
   * detected.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param serviceName The name of the API Management service.
   * @param apiCollectionId A string representing the apiCollections resource within the
   *                        Microsoft.Security provider namespace. This string matches the Azure API Management API name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    apiCollectionId: string,
    options?: APICollectionsGetOptionalParams
  ): Promise<APICollectionsGetResponse>;
  /**
   * Onboard an Azure API Management API to Defender for APIs. The system will start monitoring the
   * operations within the Azure Management API for intrusive behaviors and provide alerts for attacks
   * that have been detected.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param serviceName The name of the API Management service.
   * @param apiCollectionId A string representing the apiCollections resource within the
   *                        Microsoft.Security provider namespace. This string matches the Azure API Management API name.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    serviceName: string,
    apiCollectionId: string,
    options?: APICollectionsCreateOptionalParams
  ): Promise<APICollectionsCreateResponse>;
  /**
   * Offboard an Azure API Management API from Defender for APIs. The system will stop monitoring the
   * operations within the Azure API Management API for intrusive behaviors.
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param serviceName The name of the API Management service.
   * @param apiCollectionId A string representing the apiCollections resource within the
   *                        Microsoft.Security provider namespace. This string matches the Azure API Management API name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    apiCollectionId: string,
    options?: APICollectionsDeleteOptionalParams
  ): Promise<void>;
}
