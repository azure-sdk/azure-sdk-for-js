/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ManagementGroupGovernanceRulesGetOptionalParams,
  ManagementGroupGovernanceRulesGetResponse,
  GovernanceRule,
  ManagementGroupGovernanceRulesCreateOrUpdateOptionalParams,
  ManagementGroupGovernanceRulesCreateOrUpdateResponse,
  ManagementGroupGovernanceRulesDeleteOptionalParams,
  ManagementGroupGovernanceRulesDeleteResponse
} from "../models";

/** Interface representing a ManagementGroupGovernanceRules. */
export interface ManagementGroupGovernanceRules {
  /**
   * Get a specific governance rule for the requested scope by ruleId
   * @param ruleId The governance rule key - unique key for the standard governance rule (GUID)
   * @param options The options parameters.
   */
  get(
    ruleId: string,
    options?: ManagementGroupGovernanceRulesGetOptionalParams
  ): Promise<ManagementGroupGovernanceRulesGetResponse>;
  /**
   * Creates or updates governance rule on the given management group
   * @param ruleId The governance rule key - unique key for the standard governance rule (GUID)
   * @param governanceRule Governance rule over a given scope
   * @param options The options parameters.
   */
  createOrUpdate(
    ruleId: string,
    governanceRule: GovernanceRule,
    options?: ManagementGroupGovernanceRulesCreateOrUpdateOptionalParams
  ): Promise<ManagementGroupGovernanceRulesCreateOrUpdateResponse>;
  /**
   * Delete a Governance rule over a given scope
   * @param ruleId The governance rule key - unique key for the standard governance rule (GUID)
   * @param options The options parameters.
   */
  beginDelete(
    ruleId: string,
    options?: ManagementGroupGovernanceRulesDeleteOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ManagementGroupGovernanceRulesDeleteResponse>,
      ManagementGroupGovernanceRulesDeleteResponse
    >
  >;
  /**
   * Delete a Governance rule over a given scope
   * @param ruleId The governance rule key - unique key for the standard governance rule (GUID)
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    ruleId: string,
    options?: ManagementGroupGovernanceRulesDeleteOptionalParams
  ): Promise<ManagementGroupGovernanceRulesDeleteResponse>;
}
