/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ManagementGroupGovernanceRulesExecuteStatusGetOptionalParams,
  ManagementGroupGovernanceRulesExecuteStatusGetResponse
} from "../models";

/** Interface representing a ManagementGroupGovernanceRulesExecuteStatus. */
export interface ManagementGroupGovernanceRulesExecuteStatus {
  /**
   * Get a specific governanceRule execution status for the requested scope by ruleId and operationId
   * @param ruleId The GovernanceRule key - unique key for the standard GovernanceRule
   * @param operationId The GovernanceRule execution key - unique key for the execution of GovernanceRule
   * @param options The options parameters.
   */
  beginGet(
    ruleId: string,
    operationId: string,
    options?: ManagementGroupGovernanceRulesExecuteStatusGetOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<
        ManagementGroupGovernanceRulesExecuteStatusGetResponse
      >,
      ManagementGroupGovernanceRulesExecuteStatusGetResponse
    >
  >;
  /**
   * Get a specific governanceRule execution status for the requested scope by ruleId and operationId
   * @param ruleId The GovernanceRule key - unique key for the standard GovernanceRule
   * @param operationId The GovernanceRule execution key - unique key for the execution of GovernanceRule
   * @param options The options parameters.
   */
  beginGetAndWait(
    ruleId: string,
    operationId: string,
    options?: ManagementGroupGovernanceRulesExecuteStatusGetOptionalParams
  ): Promise<ManagementGroupGovernanceRulesExecuteStatusGetResponse>;
}
