/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  StandardAssignment,
  StandardAssignmentsListOptionalParams,
  StandardAssignmentsGetOptionalParams,
  StandardAssignmentsGetResponse,
  StandardAssignmentsCreateOptionalParams,
  StandardAssignmentsCreateResponse,
  StandardAssignmentsDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a StandardAssignments. */
export interface StandardAssignments {
  /**
   * Get a list of all relevant standard assignments over a scope
   * @param scope The scope of the standard assignment. Valid scopes are: management group (format:
   *              'providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   *              'subscriptions/{subscriptionId}'), or security connector (format:
   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
   * @param options The options parameters.
   */
  list(
    scope: string,
    options?: StandardAssignmentsListOptionalParams,
  ): PagedAsyncIterableIterator<StandardAssignment>;
  /**
   * This operation retrieves a single standard assignment, given its name and the scope it was created
   * at.
   * @param resourceId The identifier of the resource.
   * @param standardAssignmentName The standard assignments assignment key - unique key for the standard
   *                               assignment
   * @param options The options parameters.
   */
  get(
    resourceId: string,
    standardAssignmentName: string,
    options?: StandardAssignmentsGetOptionalParams,
  ): Promise<StandardAssignmentsGetResponse>;
  /**
   *  This operation creates or updates a standard assignment with the given scope and name. standard
   * assignments apply to all resources contained within their scope. For example, when you assign a
   * policy at resource group scope, that policy applies to all resources in the group.
   * @param resourceId The identifier of the resource.
   * @param standardAssignmentName The standard assignments assignment key - unique key for the standard
   *                               assignment
   * @param standardAssignment Custom standard assignment over a pre-defined scope
   * @param options The options parameters.
   */
  create(
    resourceId: string,
    standardAssignmentName: string,
    standardAssignment: StandardAssignment,
    options?: StandardAssignmentsCreateOptionalParams,
  ): Promise<StandardAssignmentsCreateResponse>;
  /**
   * This operation deletes a standard assignment, given its name and the scope it was created in. The
   * scope of a standard assignment is the part of its ID preceding
   * '/providers/Microsoft.Security/standardAssignments/{standardAssignmentName}'.
   * @param resourceId The identifier of the resource.
   * @param standardAssignmentName The standard assignments assignment key - unique key for the standard
   *                               assignment
   * @param options The options parameters.
   */
  delete(
    resourceId: string,
    standardAssignmentName: string,
    options?: StandardAssignmentsDeleteOptionalParams,
  ): Promise<void>;
}
