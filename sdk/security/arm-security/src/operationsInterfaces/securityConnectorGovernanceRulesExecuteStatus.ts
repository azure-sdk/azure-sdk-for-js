/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  SecurityConnectorGovernanceRulesExecuteStatusGetOptionalParams,
  SecurityConnectorGovernanceRulesExecuteStatusGetResponse
} from "../models";

/** Interface representing a SecurityConnectorGovernanceRulesExecuteStatus. */
export interface SecurityConnectorGovernanceRulesExecuteStatus {
  /**
   * Get a specific governance rule execution status for the requested scope by ruleId and operationId
   * @param resourceGroupName The name of the resource group within the user's subscription. The name is
   *                          case insensitive.
   * @param securityConnectorName The security connector name.
   * @param ruleId The governance rule key - unique key for the standard governance rule (GUID)
   * @param operationId The governance rule execution key - unique key for the execution of governance
   *                    rule
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    securityConnectorName: string,
    ruleId: string,
    operationId: string,
    options?: SecurityConnectorGovernanceRulesExecuteStatusGetOptionalParams
  ): Promise<SecurityConnectorGovernanceRulesExecuteStatusGetResponse>;
}
