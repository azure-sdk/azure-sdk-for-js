/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ApplicationMappingRule,
  ApplicationMappingRulesListOptionalParams,
  ApplicationMappingRulesGetOptionalParams,
  ApplicationMappingRulesGetResponse,
  ApplicationMappingRulesCreateOrUpdateOptionalParams,
  ApplicationMappingRulesCreateOrUpdateResponse,
  ApplicationMappingRulesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ApplicationMappingRules. */
export interface ApplicationMappingRules {
  /**
   * Get a list of all relevant application mapping rules over a scope.
   * @param scope The scope of the application mapping rules rules. Valid scopes are: management group
   *              (format: 'providers/Microsoft.Management/managementGroups/{resourceName}'), subscription (format:
   *              'subscriptions/{subscriptionId}'), or security connector (format:
   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Security/securityConnectors/{resourceName})'
   * @param options The options parameters.
   */
  list(
    scope: string,
    options?: ApplicationMappingRulesListOptionalParams
  ): PagedAsyncIterableIterator<ApplicationMappingRule>;
  /**
   * Retrieves details of a specific application mapping rule for the requested scope by ruleId.
   * @param scope The scope of the application mapping rules rules. Valid scopes are: management group
   *              (format: 'providers/Microsoft.Management/managementGroups/{resourceName}'), subscription (format:
   *              'subscriptions/{subscriptionId}'), or security connector (format:
   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Security/securityConnectors/{resourceName})'
   * @param ruleId The rule key - unique key for the rule (GUID)
   * @param options The options parameters.
   */
  get(
    scope: string,
    ruleId: string,
    options?: ApplicationMappingRulesGetOptionalParams
  ): Promise<ApplicationMappingRulesGetResponse>;
  /**
   * Creates or updates a single application mapping rule over a given scope.
   * @param scope The scope of the application mapping rules rules. Valid scopes are: management group
   *              (format: 'providers/Microsoft.Management/managementGroups/{resourceName}'), subscription (format:
   *              'subscriptions/{subscriptionId}'), or security connector (format:
   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Security/securityConnectors/{resourceName})'
   * @param ruleId The rule key - unique key for the rule (GUID)
   * @param applicationMappingRule The application mapping rules resource
   * @param options The options parameters.
   */
  createOrUpdate(
    scope: string,
    ruleId: string,
    applicationMappingRule: ApplicationMappingRule,
    options?: ApplicationMappingRulesCreateOrUpdateOptionalParams
  ): Promise<ApplicationMappingRulesCreateOrUpdateResponse>;
  /**
   * Delete a single application mapping rule over a given scope.
   * @param scope The scope of the application mapping rules rules. Valid scopes are: management group
   *              (format: 'providers/Microsoft.Management/managementGroups/{resourceName}'), subscription (format:
   *              'subscriptions/{subscriptionId}'), or security connector (format:
   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Security/securityConnectors/{resourceName})'
   * @param ruleId The rule key - unique key for the rule (GUID)
   * @param options The options parameters.
   */
  delete(
    scope: string,
    ruleId: string,
    options?: ApplicationMappingRulesDeleteOptionalParams
  ): Promise<void>;
}
