/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  CustomRecommendation,
  CustomRecommendationsListOptionalParams,
  CustomRecommendationsGetOptionalParams,
  CustomRecommendationsGetResponse,
  CustomRecommendationsCreateOrUpdateOptionalParams,
  CustomRecommendationsCreateOrUpdateResponse,
  CustomRecommendationsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a CustomRecommendations. */
export interface CustomRecommendations {
  /**
   * Get a list of all relevant custom recommendations over a scope
   * @param scope The scope of the custom recommendation. Valid scopes are: management group (format:
   *              'providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   *              'subscriptions/{subscriptionId}'), or security connector (format:
   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
   * @param options The options parameters.
   */
  list(
    scope: string,
    options?: CustomRecommendationsListOptionalParams
  ): PagedAsyncIterableIterator<CustomRecommendation>;
  /**
   * Get a specific custom recommendation for the requested scope by customRecommendationName
   * @param scope The scope of the custom recommendation. Valid scopes are: management group (format:
   *              'providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   *              'subscriptions/{subscriptionId}'), or security connector (format:
   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
   * @param customRecommendationName Name of the Custom Recommendation.
   * @param options The options parameters.
   */
  get(
    scope: string,
    customRecommendationName: string,
    options?: CustomRecommendationsGetOptionalParams
  ): Promise<CustomRecommendationsGetResponse>;
  /**
   * Creates or updates a custom recommendation over a given scope
   * @param scope The scope of the custom recommendation. Valid scopes are: management group (format:
   *              'providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   *              'subscriptions/{subscriptionId}'), or security connector (format:
   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
   * @param customRecommendationName Name of the Custom Recommendation.
   * @param customRecommendationBody Custom Recommendation body
   * @param options The options parameters.
   */
  createOrUpdate(
    scope: string,
    customRecommendationName: string,
    customRecommendationBody: CustomRecommendation,
    options?: CustomRecommendationsCreateOrUpdateOptionalParams
  ): Promise<CustomRecommendationsCreateOrUpdateResponse>;
  /**
   * Delete a custom recommendation over a given scope
   * @param scope The scope of the custom recommendation. Valid scopes are: management group (format:
   *              'providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   *              'subscriptions/{subscriptionId}'), or security connector (format:
   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
   * @param customRecommendationName Name of the Custom Recommendation.
   * @param options The options parameters.
   */
  beginDelete(
    scope: string,
    customRecommendationName: string,
    options?: CustomRecommendationsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a custom recommendation over a given scope
   * @param scope The scope of the custom recommendation. Valid scopes are: management group (format:
   *              'providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   *              'subscriptions/{subscriptionId}'), or security connector (format:
   *              'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
   * @param customRecommendationName Name of the Custom Recommendation.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    scope: string,
    customRecommendationName: string,
    options?: CustomRecommendationsDeleteOptionalParams
  ): Promise<void>;
}
