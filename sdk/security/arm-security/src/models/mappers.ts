/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const ApplicationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Application"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationMappingRuleList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationMappingRuleList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationMappingRule"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationMappingRuleMetaData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationMappingRuleMetaData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdOn: {
        serializedName: "createdOn",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      updatedOn: {
        serializedName: "updatedOn",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Application: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Application",
    modelProperties: {
      ...Resource.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      kqlQuery: {
        serializedName: "properties.kqlQuery",
        type: {
          name: "String"
        }
      },
      applicationOwner: {
        serializedName: "properties.applicationOwner",
        type: {
          name: "String"
        }
      },
      businessCriticality: {
        serializedName: "properties.businessCriticality",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationMappingRule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationMappingRule",
    modelProperties: {
      ...Resource.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      mappingTagKeys: {
        serializedName: "properties.mappingTagKeys",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      includedMappingTagValues: {
        serializedName: "properties.includedMappingTagValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      deploymentEnvironment: {
        serializedName: "properties.deploymentEnvironment",
        type: {
          name: "String"
        }
      },
      excludedScopes: {
        serializedName: "properties.excludedScopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      includeMemberScopes: {
        serializedName: "properties.includeMemberScopes",
        type: {
          name: "Boolean"
        }
      },
      metadata: {
        serializedName: "properties.metadata",
        type: {
          name: "Composite",
          className: "ApplicationMappingRuleMetaData"
        }
      }
    }
  }
};
