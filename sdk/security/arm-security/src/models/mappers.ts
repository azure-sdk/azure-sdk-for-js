/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const RuleResultsInput: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RuleResultsInput",
    modelProperties: {
      latestScan: {
        serializedName: "latestScan",
        type: {
          name: "Boolean"
        }
      },
      results: {
        serializedName: "results",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const RuleResultsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RuleResultsProperties",
    modelProperties: {
      results: {
        serializedName: "results",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      code: {
        serializedName: "error.code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "error.message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "error.target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "error.details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "error.additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const RulesResults: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RulesResults",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RuleResults"
            }
          }
        }
      }
    }
  }
};

export const RulesResultsInput: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RulesResultsInput",
    modelProperties: {
      latestScan: {
        serializedName: "latestScan",
        type: {
          name: "Boolean"
        }
      },
      results: {
        serializedName: "results",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Sequence",
                  element: { type: { name: "String" } }
                }
              }
            }
          }
        }
      }
    }
  }
};

export const ScanProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScanProperties",
    modelProperties: {
      triggerType: {
        serializedName: "triggerType",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      server: {
        serializedName: "server",
        type: {
          name: "String"
        }
      },
      database: {
        serializedName: "database",
        type: {
          name: "String"
        }
      },
      sqlVersion: {
        serializedName: "sqlVersion",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      highSeverityFailedRulesCount: {
        serializedName: "highSeverityFailedRulesCount",
        type: {
          name: "Number"
        }
      },
      mediumSeverityFailedRulesCount: {
        serializedName: "mediumSeverityFailedRulesCount",
        type: {
          name: "Number"
        }
      },
      lowSeverityFailedRulesCount: {
        serializedName: "lowSeverityFailedRulesCount",
        type: {
          name: "Number"
        }
      },
      totalPassedRulesCount: {
        serializedName: "totalPassedRulesCount",
        type: {
          name: "Number"
        }
      },
      totalFailedRulesCount: {
        serializedName: "totalFailedRulesCount",
        type: {
          name: "Number"
        }
      },
      totalRulesCount: {
        serializedName: "totalRulesCount",
        type: {
          name: "Number"
        }
      },
      isBaselineApplied: {
        serializedName: "isBaselineApplied",
        type: {
          name: "Boolean"
        }
      },
      lastScanTime: {
        serializedName: "lastScanTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Scans: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Scans",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Scan"
            }
          }
        }
      }
    }
  }
};

export const ScanResultProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScanResultProperties",
    modelProperties: {
      ruleId: {
        serializedName: "ruleId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      isTrimmed: {
        serializedName: "isTrimmed",
        type: {
          name: "Boolean"
        }
      },
      queryResults: {
        serializedName: "queryResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      remediation: {
        serializedName: "remediation",
        type: {
          name: "Composite",
          className: "Remediation"
        }
      },
      baselineAdjustedResult: {
        serializedName: "baselineAdjustedResult",
        type: {
          name: "Composite",
          className: "BaselineAdjustedResult"
        }
      },
      ruleMetadata: {
        serializedName: "ruleMetadata",
        type: {
          name: "Composite",
          className: "VaRule"
        }
      }
    }
  }
};

export const Remediation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Remediation",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      scripts: {
        serializedName: "scripts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      automated: {
        serializedName: "automated",
        type: {
          name: "Boolean"
        }
      },
      portalLink: {
        serializedName: "portalLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BaselineAdjustedResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BaselineAdjustedResult",
    modelProperties: {
      baseline: {
        serializedName: "baseline",
        type: {
          name: "Composite",
          className: "Baseline"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      resultsNotInBaseline: {
        serializedName: "resultsNotInBaseline",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      resultsOnlyInBaseline: {
        serializedName: "resultsOnlyInBaseline",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const Baseline: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Baseline",
    modelProperties: {
      expectedResults: {
        serializedName: "expectedResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      updatedTime: {
        serializedName: "updatedTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const VaRule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VaRule",
    modelProperties: {
      ruleId: {
        serializedName: "ruleId",
        type: {
          name: "String"
        }
      },
      severity: {
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      ruleType: {
        serializedName: "ruleType",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      rationale: {
        serializedName: "rationale",
        type: {
          name: "String"
        }
      },
      queryCheck: {
        serializedName: "queryCheck",
        type: {
          name: "Composite",
          className: "QueryCheck"
        }
      },
      benchmarkReferences: {
        serializedName: "benchmarkReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BenchmarkReference"
            }
          }
        }
      }
    }
  }
};

export const QueryCheck: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QueryCheck",
    modelProperties: {
      query: {
        serializedName: "query",
        type: {
          name: "String"
        }
      },
      expectedResult: {
        serializedName: "expectedResult",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      columnNames: {
        serializedName: "columnNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const BenchmarkReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BenchmarkReference",
    modelProperties: {
      benchmark: {
        serializedName: "benchmark",
        type: {
          name: "String"
        }
      },
      reference: {
        serializedName: "reference",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScanResults: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScanResults",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScanResult"
            }
          }
        }
      }
    }
  }
};

export const RuleResults: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RuleResults",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RuleResultsProperties"
        }
      }
    }
  }
};

export const Scan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Scan",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ScanProperties"
        }
      }
    }
  }
};

export const ScanResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScanResult",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ScanResultProperties"
        }
      }
    }
  }
};
