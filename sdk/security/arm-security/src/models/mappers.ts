/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const SecurityConnectorsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityConnectorsList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityConnector",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const CloudOffering: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: {
      serializedName: "offeringType",
      clientName: "offeringType",
    },
    modelProperties: {
      offeringType: {
        serializedName: "offeringType",
        required: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EnvironmentData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnvironmentData",
    uberParent: "EnvironmentData",
    polymorphicDiscriminator: {
      serializedName: "environmentType",
      clientName: "environmentType",
    },
    modelProperties: {
      environmentType: {
        serializedName: "environmentType",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureTrackedResourceLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureTrackedResourceLocation",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Kind: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Kind",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ETag: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ETag",
    modelProperties: {
      etag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Tags: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Tags",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      code: {
        serializedName: "error.code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "error.message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "error.target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "error.details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "error.additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const AwsOrganizationalData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AwsOrganizationalData",
    uberParent: "AwsOrganizationalData",
    polymorphicDiscriminator: {
      serializedName: "organizationMembershipType",
      clientName: "organizationMembershipType",
    },
    modelProperties: {
      organizationMembershipType: {
        serializedName: "organizationMembershipType",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GcpOrganizationalData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GcpOrganizationalData",
    uberParent: "GcpOrganizationalData",
    polymorphicDiscriminator: {
      serializedName: "organizationMembershipType",
      clientName: "organizationMembershipType",
    },
    modelProperties: {
      organizationMembershipType: {
        serializedName: "organizationMembershipType",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GcpProjectDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GcpProjectDetails",
    modelProperties: {
      projectNumber: {
        serializedName: "projectNumber",
        type: {
          name: "String",
        },
      },
      projectId: {
        serializedName: "projectId",
        type: {
          name: "String",
        },
      },
      workloadIdentityPoolId: {
        serializedName: "workloadIdentityPoolId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      projectName: {
        serializedName: "projectName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CspmMonitorAwsOfferingNativeCloudConnection: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "CspmMonitorAwsOfferingNativeCloudConnection",
      modelProperties: {
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForContainersAwsOfferingKubernetesService: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForContainersAwsOfferingKubernetesService",
      modelProperties: {
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForContainersAwsOfferingKubernetesScubaReader: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForContainersAwsOfferingKubernetesScubaReader",
      modelProperties: {
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForContainersAwsOfferingCloudWatchToKinesis: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForContainersAwsOfferingCloudWatchToKinesis",
      modelProperties: {
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForContainersAwsOfferingKinesisToS3: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForContainersAwsOfferingKinesisToS3",
      modelProperties: {
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForContainersAwsOfferingContainerVulnerabilityAssessment: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "DefenderForContainersAwsOfferingContainerVulnerabilityAssessment",
      modelProperties: {
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForContainersAwsOfferingContainerVulnerabilityAssessmentTask: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "DefenderForContainersAwsOfferingContainerVulnerabilityAssessmentTask",
      modelProperties: {
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForContainersAwsOfferingMdcContainersImageAssessment: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForContainersAwsOfferingMdcContainersImageAssessment",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForContainersAwsOfferingMdcContainersAgentlessDiscoveryK8S: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "DefenderForContainersAwsOfferingMdcContainersAgentlessDiscoveryK8S",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForServersAwsOfferingDefenderForServers: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersAwsOfferingDefenderForServers",
      modelProperties: {
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForServersAwsOfferingArcAutoProvisioning: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersAwsOfferingArcAutoProvisioning",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
        configuration: {
          serializedName: "configuration",
          type: {
            name: "Composite",
            className:
              "DefenderForServersAwsOfferingArcAutoProvisioningConfiguration",
          },
        },
      },
    },
  };

export const DefenderForServersAwsOfferingArcAutoProvisioningConfiguration: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "DefenderForServersAwsOfferingArcAutoProvisioningConfiguration",
      modelProperties: {
        proxy: {
          serializedName: "proxy",
          type: {
            name: "String",
          },
        },
        privateLinkScope: {
          serializedName: "privateLinkScope",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForServersAwsOfferingVaAutoProvisioning: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersAwsOfferingVaAutoProvisioning",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        configuration: {
          serializedName: "configuration",
          type: {
            name: "Composite",
            className:
              "DefenderForServersAwsOfferingVaAutoProvisioningConfiguration",
          },
        },
      },
    },
  };

export const DefenderForServersAwsOfferingVaAutoProvisioningConfiguration: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersAwsOfferingVaAutoProvisioningConfiguration",
      modelProperties: {
        type: {
          serializedName: "type",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForServersAwsOfferingMdeAutoProvisioning: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersAwsOfferingMdeAutoProvisioning",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        configuration: {
          serializedName: "configuration",
          type: {
            name: "Dictionary",
            value: { type: { name: "any" } },
          },
        },
      },
    },
  };

export const DefenderForServersAwsOfferingSubPlan: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersAwsOfferingSubPlan",
      modelProperties: {
        type: {
          serializedName: "type",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForServersAwsOfferingVmScanners: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersAwsOfferingVmScanners",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        configuration: {
          serializedName: "configuration",
          type: {
            name: "Composite",
            className: "DefenderForServersAwsOfferingVmScannersConfiguration",
          },
        },
      },
    },
  };

export const DefenderForServersAwsOfferingVmScannersConfiguration: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersAwsOfferingVmScannersConfiguration",
      modelProperties: {
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
        scanningMode: {
          serializedName: "scanningMode",
          type: {
            name: "String",
          },
        },
        exclusionTags: {
          serializedName: "exclusionTags",
          type: {
            name: "Dictionary",
            value: { type: { name: "String" } },
          },
        },
      },
    },
  };

export const DefenderFoDatabasesAwsOfferingArcAutoProvisioning: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderFoDatabasesAwsOfferingArcAutoProvisioning",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
        configuration: {
          serializedName: "configuration",
          type: {
            name: "Composite",
            className:
              "DefenderFoDatabasesAwsOfferingArcAutoProvisioningConfiguration",
          },
        },
      },
    },
  };

export const DefenderFoDatabasesAwsOfferingArcAutoProvisioningConfiguration: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "DefenderFoDatabasesAwsOfferingArcAutoProvisioningConfiguration",
      modelProperties: {
        proxy: {
          serializedName: "proxy",
          type: {
            name: "String",
          },
        },
        privateLinkScope: {
          serializedName: "privateLinkScope",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderFoDatabasesAwsOfferingRds: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DefenderFoDatabasesAwsOfferingRds",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean",
        },
      },
      cloudRoleArn: {
        serializedName: "cloudRoleArn",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DefenderFoDatabasesAwsOfferingDatabasesDspm: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderFoDatabasesAwsOfferingDatabasesDspm",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const InformationProtectionAwsOfferingInformationProtection: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "InformationProtectionAwsOfferingInformationProtection",
      modelProperties: {
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const CspmMonitorGcpOfferingNativeCloudConnection: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "CspmMonitorGcpOfferingNativeCloudConnection",
      modelProperties: {
        workloadIdentityProviderId: {
          serializedName: "workloadIdentityProviderId",
          type: {
            name: "String",
          },
        },
        serviceAccountEmailAddress: {
          serializedName: "serviceAccountEmailAddress",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForServersGcpOfferingDefenderForServers: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersGcpOfferingDefenderForServers",
      modelProperties: {
        workloadIdentityProviderId: {
          serializedName: "workloadIdentityProviderId",
          type: {
            name: "String",
          },
        },
        serviceAccountEmailAddress: {
          serializedName: "serviceAccountEmailAddress",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForServersGcpOfferingArcAutoProvisioning: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersGcpOfferingArcAutoProvisioning",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        configuration: {
          serializedName: "configuration",
          type: {
            name: "Composite",
            className:
              "DefenderForServersGcpOfferingArcAutoProvisioningConfiguration",
          },
        },
      },
    },
  };

export const DefenderForServersGcpOfferingArcAutoProvisioningConfiguration: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "DefenderForServersGcpOfferingArcAutoProvisioningConfiguration",
      modelProperties: {
        proxy: {
          serializedName: "proxy",
          type: {
            name: "String",
          },
        },
        privateLinkScope: {
          serializedName: "privateLinkScope",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForServersGcpOfferingVaAutoProvisioning: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersGcpOfferingVaAutoProvisioning",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        configuration: {
          serializedName: "configuration",
          type: {
            name: "Composite",
            className:
              "DefenderForServersGcpOfferingVaAutoProvisioningConfiguration",
          },
        },
      },
    },
  };

export const DefenderForServersGcpOfferingVaAutoProvisioningConfiguration: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersGcpOfferingVaAutoProvisioningConfiguration",
      modelProperties: {
        type: {
          serializedName: "type",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForServersGcpOfferingMdeAutoProvisioning: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersGcpOfferingMdeAutoProvisioning",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        configuration: {
          serializedName: "configuration",
          type: {
            name: "Dictionary",
            value: { type: { name: "any" } },
          },
        },
      },
    },
  };

export const DefenderForServersGcpOfferingSubPlan: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersGcpOfferingSubPlan",
      modelProperties: {
        type: {
          serializedName: "type",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForServersGcpOfferingVmScanners: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersGcpOfferingVmScanners",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        configuration: {
          serializedName: "configuration",
          type: {
            name: "Composite",
            className: "DefenderForServersGcpOfferingVmScannersConfiguration",
          },
        },
      },
    },
  };

export const DefenderForServersGcpOfferingVmScannersConfiguration: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForServersGcpOfferingVmScannersConfiguration",
      modelProperties: {
        scanningMode: {
          serializedName: "scanningMode",
          type: {
            name: "String",
          },
        },
        exclusionTags: {
          serializedName: "exclusionTags",
          type: {
            name: "Dictionary",
            value: { type: { name: "String" } },
          },
        },
      },
    },
  };

export const DefenderForDatabasesGcpOfferingArcAutoProvisioning: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForDatabasesGcpOfferingArcAutoProvisioning",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        configuration: {
          serializedName: "configuration",
          type: {
            name: "Composite",
            className:
              "DefenderForDatabasesGcpOfferingArcAutoProvisioningConfiguration",
          },
        },
      },
    },
  };

export const DefenderForDatabasesGcpOfferingArcAutoProvisioningConfiguration: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "DefenderForDatabasesGcpOfferingArcAutoProvisioningConfiguration",
      modelProperties: {
        proxy: {
          serializedName: "proxy",
          type: {
            name: "String",
          },
        },
        privateLinkScope: {
          serializedName: "privateLinkScope",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForDatabasesGcpOfferingDefenderForDatabasesArcAutoProvisioning: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "DefenderForDatabasesGcpOfferingDefenderForDatabasesArcAutoProvisioning",
      modelProperties: {
        serviceAccountEmailAddress: {
          serializedName: "serviceAccountEmailAddress",
          type: {
            name: "String",
          },
        },
        workloadIdentityProviderId: {
          serializedName: "workloadIdentityProviderId",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForContainersGcpOfferingNativeCloudConnection: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForContainersGcpOfferingNativeCloudConnection",
      modelProperties: {
        serviceAccountEmailAddress: {
          serializedName: "serviceAccountEmailAddress",
          type: {
            name: "String",
          },
        },
        workloadIdentityProviderId: {
          serializedName: "workloadIdentityProviderId",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection",
      modelProperties: {
        serviceAccountEmailAddress: {
          serializedName: "serviceAccountEmailAddress",
          type: {
            name: "String",
          },
        },
        workloadIdentityProviderId: {
          serializedName: "workloadIdentityProviderId",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForContainersGcpOfferingMdcContainersImageAssessment: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderForContainersGcpOfferingMdcContainersImageAssessment",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        workloadIdentityProviderId: {
          serializedName: "workloadIdentityProviderId",
          type: {
            name: "String",
          },
        },
        serviceAccountEmailAddress: {
          serializedName: "serviceAccountEmailAddress",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderForContainersGcpOfferingMdcContainersAgentlessDiscoveryK8S: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "DefenderForContainersGcpOfferingMdcContainersAgentlessDiscoveryK8S",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        workloadIdentityProviderId: {
          serializedName: "workloadIdentityProviderId",
          type: {
            name: "String",
          },
        },
        serviceAccountEmailAddress: {
          serializedName: "serviceAccountEmailAddress",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderCspmAwsOfferingVmScanners: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DefenderCspmAwsOfferingVmScanners",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean",
        },
      },
      configuration: {
        serializedName: "configuration",
        type: {
          name: "Composite",
          className: "DefenderCspmAwsOfferingVmScannersConfiguration",
        },
      },
    },
  },
};

export const DefenderCspmAwsOfferingVmScannersConfiguration: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderCspmAwsOfferingVmScannersConfiguration",
      modelProperties: {
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
        scanningMode: {
          serializedName: "scanningMode",
          type: {
            name: "String",
          },
        },
        exclusionTags: {
          serializedName: "exclusionTags",
          type: {
            name: "Dictionary",
            value: { type: { name: "String" } },
          },
        },
      },
    },
  };

export const DefenderCspmAwsOfferingDataSensitivityDiscovery: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderCspmAwsOfferingDataSensitivityDiscovery",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderCspmAwsOfferingDatabasesDspm: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderCspmAwsOfferingDatabasesDspm",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderCspmAwsOfferingCiem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DefenderCspmAwsOfferingCiem",
    modelProperties: {
      ciemDiscovery: {
        serializedName: "ciemDiscovery",
        type: {
          name: "Composite",
          className: "DefenderCspmAwsOfferingCiemDiscovery",
        },
      },
      ciemOidc: {
        serializedName: "ciemOidc",
        type: {
          name: "Composite",
          className: "DefenderCspmAwsOfferingCiemOidc",
        },
      },
    },
  },
};

export const DefenderCspmAwsOfferingCiemDiscovery: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderCspmAwsOfferingCiemDiscovery",
      modelProperties: {
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderCspmAwsOfferingCiemOidc: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DefenderCspmAwsOfferingCiemOidc",
    modelProperties: {
      cloudRoleArn: {
        serializedName: "cloudRoleArn",
        type: {
          name: "String",
        },
      },
      azureActiveDirectoryAppName: {
        serializedName: "azureActiveDirectoryAppName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DefenderCspmAwsOfferingMdcContainersImageAssessment: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderCspmAwsOfferingMdcContainersImageAssessment",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderCspmAwsOfferingMdcContainersAgentlessDiscoveryK8S: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderCspmAwsOfferingMdcContainersAgentlessDiscoveryK8S",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        cloudRoleArn: {
          serializedName: "cloudRoleArn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderCspmGcpOfferingCiemDiscovery: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderCspmGcpOfferingCiemDiscovery",
      modelProperties: {
        workloadIdentityProviderId: {
          serializedName: "workloadIdentityProviderId",
          type: {
            name: "String",
          },
        },
        serviceAccountEmailAddress: {
          serializedName: "serviceAccountEmailAddress",
          type: {
            name: "String",
          },
        },
        azureActiveDirectoryAppName: {
          serializedName: "azureActiveDirectoryAppName",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderCspmGcpOfferingVmScanners: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DefenderCspmGcpOfferingVmScanners",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean",
        },
      },
      configuration: {
        serializedName: "configuration",
        type: {
          name: "Composite",
          className: "DefenderCspmGcpOfferingVmScannersConfiguration",
        },
      },
    },
  },
};

export const DefenderCspmGcpOfferingVmScannersConfiguration: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderCspmGcpOfferingVmScannersConfiguration",
      modelProperties: {
        scanningMode: {
          serializedName: "scanningMode",
          type: {
            name: "String",
          },
        },
        exclusionTags: {
          serializedName: "exclusionTags",
          type: {
            name: "Dictionary",
            value: { type: { name: "String" } },
          },
        },
      },
    },
  };

export const DefenderCspmGcpOfferingDataSensitivityDiscovery: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderCspmGcpOfferingDataSensitivityDiscovery",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        workloadIdentityProviderId: {
          serializedName: "workloadIdentityProviderId",
          type: {
            name: "String",
          },
        },
        serviceAccountEmailAddress: {
          serializedName: "serviceAccountEmailAddress",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderCspmGcpOfferingMdcContainersImageAssessment: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderCspmGcpOfferingMdcContainersImageAssessment",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        workloadIdentityProviderId: {
          serializedName: "workloadIdentityProviderId",
          type: {
            name: "String",
          },
        },
        serviceAccountEmailAddress: {
          serializedName: "serviceAccountEmailAddress",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DefenderCspmGcpOfferingMdcContainersAgentlessDiscoveryK8S: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DefenderCspmGcpOfferingMdcContainersAgentlessDiscoveryK8S",
      modelProperties: {
        enabled: {
          serializedName: "enabled",
          type: {
            name: "Boolean",
          },
        },
        workloadIdentityProviderId: {
          serializedName: "workloadIdentityProviderId",
          type: {
            name: "String",
          },
        },
        serviceAccountEmailAddress: {
          serializedName: "serviceAccountEmailAddress",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const CspmMonitorAwsOffering: coreClient.CompositeMapper = {
  serializedName: "CspmMonitorAws",
  type: {
    name: "Composite",
    className: "CspmMonitorAwsOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
      nativeCloudConnection: {
        serializedName: "nativeCloudConnection",
        type: {
          name: "Composite",
          className: "CspmMonitorAwsOfferingNativeCloudConnection",
        },
      },
    },
  },
};

export const DefenderForContainersAwsOffering: coreClient.CompositeMapper = {
  serializedName: "DefenderForContainersAws",
  type: {
    name: "Composite",
    className: "DefenderForContainersAwsOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
      kubernetesService: {
        serializedName: "kubernetesService",
        type: {
          name: "Composite",
          className: "DefenderForContainersAwsOfferingKubernetesService",
        },
      },
      kubernetesScubaReader: {
        serializedName: "kubernetesScubaReader",
        type: {
          name: "Composite",
          className: "DefenderForContainersAwsOfferingKubernetesScubaReader",
        },
      },
      cloudWatchToKinesis: {
        serializedName: "cloudWatchToKinesis",
        type: {
          name: "Composite",
          className: "DefenderForContainersAwsOfferingCloudWatchToKinesis",
        },
      },
      kinesisToS3: {
        serializedName: "kinesisToS3",
        type: {
          name: "Composite",
          className: "DefenderForContainersAwsOfferingKinesisToS3",
        },
      },
      containerVulnerabilityAssessment: {
        serializedName: "containerVulnerabilityAssessment",
        type: {
          name: "Composite",
          className:
            "DefenderForContainersAwsOfferingContainerVulnerabilityAssessment",
        },
      },
      containerVulnerabilityAssessmentTask: {
        serializedName: "containerVulnerabilityAssessmentTask",
        type: {
          name: "Composite",
          className:
            "DefenderForContainersAwsOfferingContainerVulnerabilityAssessmentTask",
        },
      },
      enableContainerVulnerabilityAssessment: {
        serializedName: "enableContainerVulnerabilityAssessment",
        type: {
          name: "Boolean",
        },
      },
      autoProvisioning: {
        serializedName: "autoProvisioning",
        type: {
          name: "Boolean",
        },
      },
      kubeAuditRetentionTime: {
        serializedName: "kubeAuditRetentionTime",
        type: {
          name: "Number",
        },
      },
      scubaExternalId: {
        serializedName: "scubaExternalId",
        type: {
          name: "String",
        },
      },
      mdcContainersImageAssessment: {
        serializedName: "mdcContainersImageAssessment",
        type: {
          name: "Composite",
          className:
            "DefenderForContainersAwsOfferingMdcContainersImageAssessment",
        },
      },
      mdcContainersAgentlessDiscoveryK8S: {
        serializedName: "mdcContainersAgentlessDiscoveryK8s",
        type: {
          name: "Composite",
          className:
            "DefenderForContainersAwsOfferingMdcContainersAgentlessDiscoveryK8S",
        },
      },
    },
  },
};

export const DefenderForServersAwsOffering: coreClient.CompositeMapper = {
  serializedName: "DefenderForServersAws",
  type: {
    name: "Composite",
    className: "DefenderForServersAwsOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
      defenderForServers: {
        serializedName: "defenderForServers",
        type: {
          name: "Composite",
          className: "DefenderForServersAwsOfferingDefenderForServers",
        },
      },
      arcAutoProvisioning: {
        serializedName: "arcAutoProvisioning",
        type: {
          name: "Composite",
          className: "DefenderForServersAwsOfferingArcAutoProvisioning",
        },
      },
      vaAutoProvisioning: {
        serializedName: "vaAutoProvisioning",
        type: {
          name: "Composite",
          className: "DefenderForServersAwsOfferingVaAutoProvisioning",
        },
      },
      mdeAutoProvisioning: {
        serializedName: "mdeAutoProvisioning",
        type: {
          name: "Composite",
          className: "DefenderForServersAwsOfferingMdeAutoProvisioning",
        },
      },
      subPlan: {
        serializedName: "subPlan",
        type: {
          name: "Composite",
          className: "DefenderForServersAwsOfferingSubPlan",
        },
      },
      vmScanners: {
        serializedName: "vmScanners",
        type: {
          name: "Composite",
          className: "DefenderForServersAwsOfferingVmScanners",
        },
      },
    },
  },
};

export const DefenderFoDatabasesAwsOffering: coreClient.CompositeMapper = {
  serializedName: "DefenderForDatabasesAws",
  type: {
    name: "Composite",
    className: "DefenderFoDatabasesAwsOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
      arcAutoProvisioning: {
        serializedName: "arcAutoProvisioning",
        type: {
          name: "Composite",
          className: "DefenderFoDatabasesAwsOfferingArcAutoProvisioning",
        },
      },
      rds: {
        serializedName: "rds",
        type: {
          name: "Composite",
          className: "DefenderFoDatabasesAwsOfferingRds",
        },
      },
      databasesDspm: {
        serializedName: "databasesDspm",
        type: {
          name: "Composite",
          className: "DefenderFoDatabasesAwsOfferingDatabasesDspm",
        },
      },
    },
  },
};

export const InformationProtectionAwsOffering: coreClient.CompositeMapper = {
  serializedName: "InformationProtectionAws",
  type: {
    name: "Composite",
    className: "InformationProtectionAwsOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
      informationProtection: {
        serializedName: "informationProtection",
        type: {
          name: "Composite",
          className: "InformationProtectionAwsOfferingInformationProtection",
        },
      },
    },
  },
};

export const CspmMonitorGcpOffering: coreClient.CompositeMapper = {
  serializedName: "CspmMonitorGcp",
  type: {
    name: "Composite",
    className: "CspmMonitorGcpOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
      nativeCloudConnection: {
        serializedName: "nativeCloudConnection",
        type: {
          name: "Composite",
          className: "CspmMonitorGcpOfferingNativeCloudConnection",
        },
      },
    },
  },
};

export const DefenderForServersGcpOffering: coreClient.CompositeMapper = {
  serializedName: "DefenderForServersGcp",
  type: {
    name: "Composite",
    className: "DefenderForServersGcpOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
      defenderForServers: {
        serializedName: "defenderForServers",
        type: {
          name: "Composite",
          className: "DefenderForServersGcpOfferingDefenderForServers",
        },
      },
      arcAutoProvisioning: {
        serializedName: "arcAutoProvisioning",
        type: {
          name: "Composite",
          className: "DefenderForServersGcpOfferingArcAutoProvisioning",
        },
      },
      vaAutoProvisioning: {
        serializedName: "vaAutoProvisioning",
        type: {
          name: "Composite",
          className: "DefenderForServersGcpOfferingVaAutoProvisioning",
        },
      },
      mdeAutoProvisioning: {
        serializedName: "mdeAutoProvisioning",
        type: {
          name: "Composite",
          className: "DefenderForServersGcpOfferingMdeAutoProvisioning",
        },
      },
      subPlan: {
        serializedName: "subPlan",
        type: {
          name: "Composite",
          className: "DefenderForServersGcpOfferingSubPlan",
        },
      },
      vmScanners: {
        serializedName: "vmScanners",
        type: {
          name: "Composite",
          className: "DefenderForServersGcpOfferingVmScanners",
        },
      },
    },
  },
};

export const DefenderForDatabasesGcpOffering: coreClient.CompositeMapper = {
  serializedName: "DefenderForDatabasesGcp",
  type: {
    name: "Composite",
    className: "DefenderForDatabasesGcpOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
      arcAutoProvisioning: {
        serializedName: "arcAutoProvisioning",
        type: {
          name: "Composite",
          className: "DefenderForDatabasesGcpOfferingArcAutoProvisioning",
        },
      },
      defenderForDatabasesArcAutoProvisioning: {
        serializedName: "defenderForDatabasesArcAutoProvisioning",
        type: {
          name: "Composite",
          className:
            "DefenderForDatabasesGcpOfferingDefenderForDatabasesArcAutoProvisioning",
        },
      },
    },
  },
};

export const DefenderForContainersGcpOffering: coreClient.CompositeMapper = {
  serializedName: "DefenderForContainersGcp",
  type: {
    name: "Composite",
    className: "DefenderForContainersGcpOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
      nativeCloudConnection: {
        serializedName: "nativeCloudConnection",
        type: {
          name: "Composite",
          className: "DefenderForContainersGcpOfferingNativeCloudConnection",
        },
      },
      dataPipelineNativeCloudConnection: {
        serializedName: "dataPipelineNativeCloudConnection",
        type: {
          name: "Composite",
          className:
            "DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection",
        },
      },
      auditLogsAutoProvisioningFlag: {
        serializedName: "auditLogsAutoProvisioningFlag",
        type: {
          name: "Boolean",
        },
      },
      defenderAgentAutoProvisioningFlag: {
        serializedName: "defenderAgentAutoProvisioningFlag",
        type: {
          name: "Boolean",
        },
      },
      policyAgentAutoProvisioningFlag: {
        serializedName: "policyAgentAutoProvisioningFlag",
        type: {
          name: "Boolean",
        },
      },
      mdcContainersImageAssessment: {
        serializedName: "mdcContainersImageAssessment",
        type: {
          name: "Composite",
          className:
            "DefenderForContainersGcpOfferingMdcContainersImageAssessment",
        },
      },
      mdcContainersAgentlessDiscoveryK8S: {
        serializedName: "mdcContainersAgentlessDiscoveryK8s",
        type: {
          name: "Composite",
          className:
            "DefenderForContainersGcpOfferingMdcContainersAgentlessDiscoveryK8S",
        },
      },
    },
  },
};

export const CspmMonitorGithubOffering: coreClient.CompositeMapper = {
  serializedName: "CspmMonitorGithub",
  type: {
    name: "Composite",
    className: "CspmMonitorGithubOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
    },
  },
};

export const CspmMonitorAzureDevOpsOffering: coreClient.CompositeMapper = {
  serializedName: "CspmMonitorAzureDevOps",
  type: {
    name: "Composite",
    className: "CspmMonitorAzureDevOpsOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
    },
  },
};

export const DefenderCspmAwsOffering: coreClient.CompositeMapper = {
  serializedName: "DefenderCspmAws",
  type: {
    name: "Composite",
    className: "DefenderCspmAwsOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
      vmScanners: {
        serializedName: "vmScanners",
        type: {
          name: "Composite",
          className: "DefenderCspmAwsOfferingVmScanners",
        },
      },
      dataSensitivityDiscovery: {
        serializedName: "dataSensitivityDiscovery",
        type: {
          name: "Composite",
          className: "DefenderCspmAwsOfferingDataSensitivityDiscovery",
        },
      },
      databasesDspm: {
        serializedName: "databasesDspm",
        type: {
          name: "Composite",
          className: "DefenderCspmAwsOfferingDatabasesDspm",
        },
      },
      ciem: {
        serializedName: "ciem",
        type: {
          name: "Composite",
          className: "DefenderCspmAwsOfferingCiem",
        },
      },
      mdcContainersImageAssessment: {
        serializedName: "mdcContainersImageAssessment",
        type: {
          name: "Composite",
          className: "DefenderCspmAwsOfferingMdcContainersImageAssessment",
        },
      },
      mdcContainersAgentlessDiscoveryK8S: {
        serializedName: "mdcContainersAgentlessDiscoveryK8s",
        type: {
          name: "Composite",
          className:
            "DefenderCspmAwsOfferingMdcContainersAgentlessDiscoveryK8S",
        },
      },
    },
  },
};

export const DefenderCspmGcpOffering: coreClient.CompositeMapper = {
  serializedName: "DefenderCspmGcp",
  type: {
    name: "Composite",
    className: "DefenderCspmGcpOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
      ciemDiscovery: {
        serializedName: "ciemDiscovery",
        type: {
          name: "Composite",
          className: "DefenderCspmGcpOfferingCiemDiscovery",
        },
      },
      vmScanners: {
        serializedName: "vmScanners",
        type: {
          name: "Composite",
          className: "DefenderCspmGcpOfferingVmScanners",
        },
      },
      dataSensitivityDiscovery: {
        serializedName: "dataSensitivityDiscovery",
        type: {
          name: "Composite",
          className: "DefenderCspmGcpOfferingDataSensitivityDiscovery",
        },
      },
      mdcContainersImageAssessment: {
        serializedName: "mdcContainersImageAssessment",
        type: {
          name: "Composite",
          className: "DefenderCspmGcpOfferingMdcContainersImageAssessment",
        },
      },
      mdcContainersAgentlessDiscoveryK8S: {
        serializedName: "mdcContainersAgentlessDiscoveryK8s",
        type: {
          name: "Composite",
          className:
            "DefenderCspmGcpOfferingMdcContainersAgentlessDiscoveryK8S",
        },
      },
    },
  },
};

export const DefenderForDevOpsGithubOffering: coreClient.CompositeMapper = {
  serializedName: "DefenderForDevOpsGithub",
  type: {
    name: "Composite",
    className: "DefenderForDevOpsGithubOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
    },
  },
};

export const DefenderForDevOpsAzureDevOpsOffering: coreClient.CompositeMapper =
  {
    serializedName: "DefenderForDevOpsAzureDevOps",
    type: {
      name: "Composite",
      className: "DefenderForDevOpsAzureDevOpsOffering",
      uberParent: "CloudOffering",
      polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
      modelProperties: {
        ...CloudOffering.type.modelProperties,
      },
    },
  };

export const CspmMonitorGitLabOffering: coreClient.CompositeMapper = {
  serializedName: "CspmMonitorGitLab",
  type: {
    name: "Composite",
    className: "CspmMonitorGitLabOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
    },
  },
};

export const DefenderForDevOpsGitLabOffering: coreClient.CompositeMapper = {
  serializedName: "DefenderForDevOpsGitLab",
  type: {
    name: "Composite",
    className: "DefenderForDevOpsGitLabOffering",
    uberParent: "CloudOffering",
    polymorphicDiscriminator: CloudOffering.type.polymorphicDiscriminator,
    modelProperties: {
      ...CloudOffering.type.modelProperties,
    },
  },
};

export const AwsEnvironmentData: coreClient.CompositeMapper = {
  serializedName: "AwsAccount",
  type: {
    name: "Composite",
    className: "AwsEnvironmentData",
    uberParent: "EnvironmentData",
    polymorphicDiscriminator: EnvironmentData.type.polymorphicDiscriminator,
    modelProperties: {
      ...EnvironmentData.type.modelProperties,
      organizationalData: {
        serializedName: "organizationalData",
        type: {
          name: "Composite",
          className: "AwsOrganizationalData",
        },
      },
      regions: {
        serializedName: "regions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      accountName: {
        serializedName: "accountName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      scanInterval: {
        serializedName: "scanInterval",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GcpProjectEnvironmentData: coreClient.CompositeMapper = {
  serializedName: "GcpProject",
  type: {
    name: "Composite",
    className: "GcpProjectEnvironmentData",
    uberParent: "EnvironmentData",
    polymorphicDiscriminator: EnvironmentData.type.polymorphicDiscriminator,
    modelProperties: {
      ...EnvironmentData.type.modelProperties,
      organizationalData: {
        serializedName: "organizationalData",
        type: {
          name: "Composite",
          className: "GcpOrganizationalData",
        },
      },
      projectDetails: {
        serializedName: "projectDetails",
        type: {
          name: "Composite",
          className: "GcpProjectDetails",
        },
      },
      scanInterval: {
        serializedName: "scanInterval",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GithubScopeEnvironmentData: coreClient.CompositeMapper = {
  serializedName: "GithubScope",
  type: {
    name: "Composite",
    className: "GithubScopeEnvironmentData",
    uberParent: "EnvironmentData",
    polymorphicDiscriminator: EnvironmentData.type.polymorphicDiscriminator,
    modelProperties: {
      ...EnvironmentData.type.modelProperties,
    },
  },
};

export const AzureDevOpsScopeEnvironmentData: coreClient.CompositeMapper = {
  serializedName: "AzureDevOpsScope",
  type: {
    name: "Composite",
    className: "AzureDevOpsScopeEnvironmentData",
    uberParent: "EnvironmentData",
    polymorphicDiscriminator: EnvironmentData.type.polymorphicDiscriminator,
    modelProperties: {
      ...EnvironmentData.type.modelProperties,
    },
  },
};

export const GitlabScopeEnvironmentData: coreClient.CompositeMapper = {
  serializedName: "GitlabScope",
  type: {
    name: "Composite",
    className: "GitlabScopeEnvironmentData",
    uberParent: "EnvironmentData",
    polymorphicDiscriminator: EnvironmentData.type.polymorphicDiscriminator,
    modelProperties: {
      ...EnvironmentData.type.modelProperties,
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      ...AzureTrackedResourceLocation.type.modelProperties,
      ...Kind.type.modelProperties,
      ...ETag.type.modelProperties,
      ...Tags.type.modelProperties,
    },
  },
};

export const AwsOrganizationalDataMaster: coreClient.CompositeMapper = {
  serializedName: "Organization",
  type: {
    name: "Composite",
    className: "AwsOrganizationalDataMaster",
    uberParent: "AwsOrganizationalData",
    polymorphicDiscriminator:
      AwsOrganizationalData.type.polymorphicDiscriminator,
    modelProperties: {
      ...AwsOrganizationalData.type.modelProperties,
      stacksetName: {
        serializedName: "stacksetName",
        type: {
          name: "String",
        },
      },
      excludedAccountIds: {
        serializedName: "excludedAccountIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AwsOrganizationalDataMember: coreClient.CompositeMapper = {
  serializedName: "Member",
  type: {
    name: "Composite",
    className: "AwsOrganizationalDataMember",
    uberParent: "AwsOrganizationalData",
    polymorphicDiscriminator:
      AwsOrganizationalData.type.polymorphicDiscriminator,
    modelProperties: {
      ...AwsOrganizationalData.type.modelProperties,
      parentHierarchyId: {
        serializedName: "parentHierarchyId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GcpOrganizationalDataOrganization: coreClient.CompositeMapper = {
  serializedName: "Organization",
  type: {
    name: "Composite",
    className: "GcpOrganizationalDataOrganization",
    uberParent: "GcpOrganizationalData",
    polymorphicDiscriminator:
      GcpOrganizationalData.type.polymorphicDiscriminator,
    modelProperties: {
      ...GcpOrganizationalData.type.modelProperties,
      excludedProjectNumbers: {
        serializedName: "excludedProjectNumbers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      serviceAccountEmailAddress: {
        serializedName: "serviceAccountEmailAddress",
        type: {
          name: "String",
        },
      },
      workloadIdentityProviderId: {
        serializedName: "workloadIdentityProviderId",
        type: {
          name: "String",
        },
      },
      organizationName: {
        serializedName: "organizationName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GcpOrganizationalDataMember: coreClient.CompositeMapper = {
  serializedName: "Member",
  type: {
    name: "Composite",
    className: "GcpOrganizationalDataMember",
    uberParent: "GcpOrganizationalData",
    polymorphicDiscriminator:
      GcpOrganizationalData.type.polymorphicDiscriminator,
    modelProperties: {
      ...GcpOrganizationalData.type.modelProperties,
      parentHierarchyId: {
        serializedName: "parentHierarchyId",
        type: {
          name: "String",
        },
      },
      managementProjectNumber: {
        serializedName: "managementProjectNumber",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SecurityConnector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityConnector",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      hierarchyIdentifier: {
        serializedName: "properties.hierarchyIdentifier",
        type: {
          name: "String",
        },
      },
      hierarchyIdentifierTrialEndDate: {
        serializedName: "properties.hierarchyIdentifierTrialEndDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      environmentName: {
        serializedName: "properties.environmentName",
        type: {
          name: "String",
        },
      },
      offerings: {
        serializedName: "properties.offerings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudOffering",
            },
          },
        },
      },
      environmentData: {
        serializedName: "properties.environmentData",
        type: {
          name: "Composite",
          className: "EnvironmentData",
        },
      },
    },
  },
};

export let discriminators = {
  CloudOffering: CloudOffering,
  EnvironmentData: EnvironmentData,
  AwsOrganizationalData: AwsOrganizationalData,
  GcpOrganizationalData: GcpOrganizationalData,
  "CloudOffering.CspmMonitorAws": CspmMonitorAwsOffering,
  "CloudOffering.DefenderForContainersAws": DefenderForContainersAwsOffering,
  "CloudOffering.DefenderForServersAws": DefenderForServersAwsOffering,
  "CloudOffering.DefenderForDatabasesAws": DefenderFoDatabasesAwsOffering,
  "CloudOffering.InformationProtectionAws": InformationProtectionAwsOffering,
  "CloudOffering.CspmMonitorGcp": CspmMonitorGcpOffering,
  "CloudOffering.DefenderForServersGcp": DefenderForServersGcpOffering,
  "CloudOffering.DefenderForDatabasesGcp": DefenderForDatabasesGcpOffering,
  "CloudOffering.DefenderForContainersGcp": DefenderForContainersGcpOffering,
  "CloudOffering.CspmMonitorGithub": CspmMonitorGithubOffering,
  "CloudOffering.CspmMonitorAzureDevOps": CspmMonitorAzureDevOpsOffering,
  "CloudOffering.DefenderCspmAws": DefenderCspmAwsOffering,
  "CloudOffering.DefenderCspmGcp": DefenderCspmGcpOffering,
  "CloudOffering.DefenderForDevOpsGithub": DefenderForDevOpsGithubOffering,
  "CloudOffering.DefenderForDevOpsAzureDevOps":
    DefenderForDevOpsAzureDevOpsOffering,
  "CloudOffering.CspmMonitorGitLab": CspmMonitorGitLabOffering,
  "CloudOffering.DefenderForDevOpsGitLab": DefenderForDevOpsGitLabOffering,
  "EnvironmentData.AwsAccount": AwsEnvironmentData,
  "EnvironmentData.GcpProject": GcpProjectEnvironmentData,
  "EnvironmentData.GithubScope": GithubScopeEnvironmentData,
  "EnvironmentData.AzureDevOpsScope": AzureDevOpsScopeEnvironmentData,
  "EnvironmentData.GitlabScope": GitlabScopeEnvironmentData,
  "AwsOrganizationalData.Organization": AwsOrganizationalDataMaster,
  "AwsOrganizationalData.Member": AwsOrganizationalDataMember,
  "GcpOrganizationalData.Organization": GcpOrganizationalDataOrganization,
  "GcpOrganizationalData.Member": GcpOrganizationalDataMember,
};
