/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const DefenderForStorageSettingProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DefenderForStorageSettingProperties",
    modelProperties: {
      isEnabled: {
        serializedName: "isEnabled",
        type: {
          name: "Boolean",
        },
      },
      malwareScanning: {
        serializedName: "malwareScanning",
        type: {
          name: "Composite",
          className: "MalwareScanningProperties",
        },
      },
      sensitiveDataDiscovery: {
        serializedName: "sensitiveDataDiscovery",
        type: {
          name: "Composite",
          className: "SensitiveDataDiscoveryProperties",
        },
      },
      overrideSubscriptionLevelSettings: {
        serializedName: "overrideSubscriptionLevelSettings",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const MalwareScanningProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MalwareScanningProperties",
    modelProperties: {
      onUpload: {
        serializedName: "onUpload",
        type: {
          name: "Composite",
          className: "OnUploadProperties",
        },
      },
      scanResultsEventGridTopicResourceId: {
        serializedName: "scanResultsEventGridTopicResourceId",
        type: {
          name: "String",
        },
      },
      operationStatus: {
        serializedName: "operationStatus",
        type: {
          name: "Composite",
          className: "OperationStatus",
        },
      },
    },
  },
};

export const OnUploadProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OnUploadProperties",
    modelProperties: {
      isEnabled: {
        serializedName: "isEnabled",
        type: {
          name: "Boolean",
        },
      },
      capGBPerMonth: {
        serializedName: "capGBPerMonth",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const OperationStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationStatus",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SensitiveDataDiscoveryProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SensitiveDataDiscoveryProperties",
    modelProperties: {
      isEnabled: {
        serializedName: "isEnabled",
        type: {
          name: "Boolean",
        },
      },
      operationStatus: {
        serializedName: "operationStatus",
        type: {
          name: "Composite",
          className: "OperationStatus",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      code: {
        serializedName: "error.code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "error.message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "error.target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "error.details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "error.additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const MalwareScan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MalwareScan",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MalwareScanProperties",
        },
      },
    },
  },
};

export const MalwareScanProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MalwareScanProperties",
    modelProperties: {
      scanId: {
        serializedName: "scanId",
        type: {
          name: "String",
        },
      },
      scanStatus: {
        serializedName: "scanStatus",
        type: {
          name: "String",
        },
      },
      scanStatusMessage: {
        serializedName: "scanStatusMessage",
        type: {
          name: "String",
        },
      },
      scanStartTime: {
        serializedName: "scanStartTime",
        type: {
          name: "String",
        },
      },
      scanEndTime: {
        serializedName: "scanEndTime",
        type: {
          name: "String",
        },
      },
      scanSummary: {
        serializedName: "scanSummary",
        type: {
          name: "Composite",
          className: "ScanSummary",
        },
      },
    },
  },
};

export const ScanSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScanSummary",
    modelProperties: {
      blobs: {
        serializedName: "blobs",
        type: {
          name: "Composite",
          className: "BlobsScanSummary",
        },
      },
      estimatedScanCostUSD: {
        serializedName: "estimatedScanCostUSD",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const BlobsScanSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BlobsScanSummary",
    modelProperties: {
      totalBlobsScanned: {
        serializedName: "totalBlobsScanned",
        type: {
          name: "Number",
        },
      },
      maliciousBlobsCount: {
        serializedName: "maliciousBlobsCount",
        type: {
          name: "Number",
        },
      },
      skippedBlobsCount: {
        serializedName: "skippedBlobsCount",
        type: {
          name: "Number",
        },
      },
      scannedBlobsInGB: {
        serializedName: "scannedBlobsInGB",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const DefenderForStorageSetting: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DefenderForStorageSetting",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DefenderForStorageSettingProperties",
        },
      },
    },
  },
};
