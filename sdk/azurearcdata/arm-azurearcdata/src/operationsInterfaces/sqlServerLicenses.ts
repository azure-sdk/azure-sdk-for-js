/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SqlServerLicense,
  SqlServerLicensesListOptionalParams,
  SqlServerLicensesListByResourceGroupOptionalParams,
  SqlServerLicensesGetOptionalParams,
  SqlServerLicensesGetResponse,
  SqlServerLicensesCreateOptionalParams,
  SqlServerLicensesCreateResponse,
  SqlServerLicensesDeleteOptionalParams,
  SqlServerLicenseUpdate,
  SqlServerLicensesUpdateOptionalParams,
  SqlServerLicensesUpdateResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlServerLicenses. */
export interface SqlServerLicenses {
  /**
   * List sqlServerLicense resources in the subscription
   * @param options The options parameters.
   */
  list(
    options?: SqlServerLicensesListOptionalParams,
  ): PagedAsyncIterableIterator<SqlServerLicense>;
  /**
   * Gets all sqlServerLicenses in a resource group.
   * @param resourceGroupName The name of the Azure resource group
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: SqlServerLicensesListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<SqlServerLicense>;
  /**
   * Retrieves a SQL Server license resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerLicenseName Name of SQL Server License
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    sqlServerLicenseName: string,
    options?: SqlServerLicensesGetOptionalParams,
  ): Promise<SqlServerLicensesGetResponse>;
  /**
   * Creates or replaces a SQL Server license resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerLicenseName Name of SQL Server License
   * @param sqlServerLicense The SQL Server license to be created or updated.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    sqlServerLicenseName: string,
    sqlServerLicense: SqlServerLicense,
    options?: SqlServerLicensesCreateOptionalParams,
  ): Promise<SqlServerLicensesCreateResponse>;
  /**
   * Deletes a SQL Server license resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerLicenseName Name of SQL Server License
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    sqlServerLicenseName: string,
    options?: SqlServerLicensesDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Updates a SQL Server license resource
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerLicenseName Name of SQL Server License
   * @param parameters The SQL Server license.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    sqlServerLicenseName: string,
    parameters: SqlServerLicenseUpdate,
    options?: SqlServerLicensesUpdateOptionalParams,
  ): Promise<SqlServerLicensesUpdateResponse>;
}
