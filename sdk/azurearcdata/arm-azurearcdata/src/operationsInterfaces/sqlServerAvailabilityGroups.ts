/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  SqlServerAvailabilityGroupResource,
  SqlServerAvailabilityGroupsListOptionalParams,
  SqlServerAvailabilityGroupsCreateOptionalParams,
  SqlServerAvailabilityGroupsCreateResponse,
  SqlServerAvailabilityGroupsDeleteOptionalParams,
  SqlServerAvailabilityGroupsDeleteResponse,
  SqlServerAvailabilityGroupsGetOptionalParams,
  SqlServerAvailabilityGroupsGetResponse,
  SqlServerAvailabilityGroupUpdate,
  SqlServerAvailabilityGroupsUpdateOptionalParams,
  SqlServerAvailabilityGroupsUpdateResponse,
  SqlServerAvailabilityGroupsDetailViewOptionalParams,
  SqlServerAvailabilityGroupsDetailViewResponse,
  SqlServerAvailabilityGroupsFailoverOptionalParams,
  SqlServerAvailabilityGroupsFailoverResponse,
  SqlServerAvailabilityGroupsForceFailoverAllowDataLossOptionalParams,
  SqlServerAvailabilityGroupsForceFailoverAllowDataLossResponse,
  AvailabilityGroupCreateUpdateConfiguration,
  SqlServerAvailabilityGroupsCreateAvailabilityGroupOptionalParams,
  SqlServerAvailabilityGroupsCreateAvailabilityGroupResponse,
  DistributedAvailabilityGroupCreateUpdateConfiguration,
  SqlServerAvailabilityGroupsCreateDistributedAvailabilityGroupOptionalParams,
  SqlServerAvailabilityGroupsCreateDistributedAvailabilityGroupResponse,
  Databases,
  SqlServerAvailabilityGroupsAddDatabasesOptionalParams,
  SqlServerAvailabilityGroupsAddDatabasesResponse,
  SqlServerAvailabilityGroupsRemoveDatabasesOptionalParams,
  SqlServerAvailabilityGroupsRemoveDatabasesResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlServerAvailabilityGroups. */
export interface SqlServerAvailabilityGroups {
  /**
   * List the availability group associated with the given Arc Sql Server.
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    options?: SqlServerAvailabilityGroupsListOptionalParams,
  ): PagedAsyncIterableIterator<SqlServerAvailabilityGroupResource>;
  /**
   * Creates or replaces an Arc Sql Server Availability Group.
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param availabilityGroupName Name of SQL Availability Group
   * @param sqlServerAvailabilityGroupResource The request body for availability group resource.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    availabilityGroupName: string,
    sqlServerAvailabilityGroupResource: SqlServerAvailabilityGroupResource,
    options?: SqlServerAvailabilityGroupsCreateOptionalParams,
  ): Promise<SqlServerAvailabilityGroupsCreateResponse>;
  /**
   * Deletes an Arc Sql Server availability group resource.
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param availabilityGroupName Name of SQL Availability Group
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    availabilityGroupName: string,
    options?: SqlServerAvailabilityGroupsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SqlServerAvailabilityGroupsDeleteResponse>,
      SqlServerAvailabilityGroupsDeleteResponse
    >
  >;
  /**
   * Deletes an Arc Sql Server availability group resource.
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param availabilityGroupName Name of SQL Availability Group
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    availabilityGroupName: string,
    options?: SqlServerAvailabilityGroupsDeleteOptionalParams,
  ): Promise<SqlServerAvailabilityGroupsDeleteResponse>;
  /**
   * Retrieves an Arc Sql Server availability group.
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param availabilityGroupName Name of SQL Availability Group
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    availabilityGroupName: string,
    options?: SqlServerAvailabilityGroupsGetOptionalParams,
  ): Promise<SqlServerAvailabilityGroupsGetResponse>;
  /**
   * Updates an existing Availability Group.
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param availabilityGroupName Name of SQL Availability Group
   * @param sqlServerAvailabilityGroupUpdate The requested server availability group resource state.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    availabilityGroupName: string,
    sqlServerAvailabilityGroupUpdate: SqlServerAvailabilityGroupUpdate,
    options?: SqlServerAvailabilityGroupsUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SqlServerAvailabilityGroupsUpdateResponse>,
      SqlServerAvailabilityGroupsUpdateResponse
    >
  >;
  /**
   * Updates an existing Availability Group.
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param availabilityGroupName Name of SQL Availability Group
   * @param sqlServerAvailabilityGroupUpdate The requested server availability group resource state.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    availabilityGroupName: string,
    sqlServerAvailabilityGroupUpdate: SqlServerAvailabilityGroupUpdate,
    options?: SqlServerAvailabilityGroupsUpdateOptionalParams,
  ): Promise<SqlServerAvailabilityGroupsUpdateResponse>;
  /**
   * Retrieves detailed properties of the Availability Group.
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param availabilityGroupName Name of SQL Availability Group
   * @param options The options parameters.
   */
  detailView(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    availabilityGroupName: string,
    options?: SqlServerAvailabilityGroupsDetailViewOptionalParams,
  ): Promise<SqlServerAvailabilityGroupsDetailViewResponse>;
  /**
   * Request manual failover of the availability group to this server.
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param availabilityGroupName Name of SQL Availability Group
   * @param options The options parameters.
   */
  failover(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    availabilityGroupName: string,
    options?: SqlServerAvailabilityGroupsFailoverOptionalParams,
  ): Promise<SqlServerAvailabilityGroupsFailoverResponse>;
  /**
   * Request forced failover of the availability group to this server.
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param availabilityGroupName Name of SQL Availability Group
   * @param options The options parameters.
   */
  forceFailoverAllowDataLoss(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    availabilityGroupName: string,
    options?: SqlServerAvailabilityGroupsForceFailoverAllowDataLossOptionalParams,
  ): Promise<SqlServerAvailabilityGroupsForceFailoverAllowDataLossResponse>;
  /**
   * Create a SQL Server availability group
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param createAgConfiguration The configuration for the new SQL Server availability group resource.
   * @param options The options parameters.
   */
  beginCreateAvailabilityGroup(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    createAgConfiguration: AvailabilityGroupCreateUpdateConfiguration,
    options?: SqlServerAvailabilityGroupsCreateAvailabilityGroupOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SqlServerAvailabilityGroupsCreateAvailabilityGroupResponse>,
      SqlServerAvailabilityGroupsCreateAvailabilityGroupResponse
    >
  >;
  /**
   * Create a SQL Server availability group
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param createAgConfiguration The configuration for the new SQL Server availability group resource.
   * @param options The options parameters.
   */
  beginCreateAvailabilityGroupAndWait(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    createAgConfiguration: AvailabilityGroupCreateUpdateConfiguration,
    options?: SqlServerAvailabilityGroupsCreateAvailabilityGroupOptionalParams,
  ): Promise<SqlServerAvailabilityGroupsCreateAvailabilityGroupResponse>;
  /**
   * Create a SQL Server distributed availability group
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param createDagConfiguration The configuration for the new SQL Server availability group resource.
   * @param options The options parameters.
   */
  beginCreateDistributedAvailabilityGroup(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    createDagConfiguration: DistributedAvailabilityGroupCreateUpdateConfiguration,
    options?: SqlServerAvailabilityGroupsCreateDistributedAvailabilityGroupOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SqlServerAvailabilityGroupsCreateDistributedAvailabilityGroupResponse>,
      SqlServerAvailabilityGroupsCreateDistributedAvailabilityGroupResponse
    >
  >;
  /**
   * Create a SQL Server distributed availability group
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param createDagConfiguration The configuration for the new SQL Server availability group resource.
   * @param options The options parameters.
   */
  beginCreateDistributedAvailabilityGroupAndWait(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    createDagConfiguration: DistributedAvailabilityGroupCreateUpdateConfiguration,
    options?: SqlServerAvailabilityGroupsCreateDistributedAvailabilityGroupOptionalParams,
  ): Promise<SqlServerAvailabilityGroupsCreateDistributedAvailabilityGroupResponse>;
  /**
   * Request adding database(s) to an existing availability group.
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param availabilityGroupName Name of SQL Availability Group
   * @param databases The database names to add to the SQL Server availability group resource.
   * @param options The options parameters.
   */
  addDatabases(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    availabilityGroupName: string,
    databases: Databases,
    options?: SqlServerAvailabilityGroupsAddDatabasesOptionalParams,
  ): Promise<SqlServerAvailabilityGroupsAddDatabasesResponse>;
  /**
   * Request removing database(s) from an existing availability group.
   * @param resourceGroupName The name of the Azure resource group
   * @param sqlServerInstanceName Name of SQL Server Instance
   * @param availabilityGroupName Name of SQL Availability Group
   * @param databases The database names to remove from the SQL Server availability group resource.
   * @param options The options parameters.
   */
  removeDatabases(
    resourceGroupName: string,
    sqlServerInstanceName: string,
    availabilityGroupName: string,
    databases: Databases,
    options?: SqlServerAvailabilityGroupsRemoveDatabasesOptionalParams,
  ): Promise<SqlServerAvailabilityGroupsRemoveDatabasesResponse>;
}
