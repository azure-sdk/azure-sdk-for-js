/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SqlServerEsuLicense,
  SqlServerEsuLicensesListOptionalParams,
  SqlServerEsuLicensesListByResourceGroupOptionalParams,
  SqlServerEsuLicensesGetOptionalParams,
  SqlServerEsuLicensesGetResponse,
  SqlServerEsuLicensesCreateOptionalParams,
  SqlServerEsuLicensesCreateResponse,
  SqlServerEsuLicensesDeleteOptionalParams,
  SqlServerEsuLicenseUpdate,
  SqlServerEsuLicensesUpdateOptionalParams,
  SqlServerEsuLicensesUpdateResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlServerEsuLicenses. */
export interface SqlServerEsuLicenses {
  /**
   * List sqlServerEsuLicense resources in the subscription
   * @param options The options parameters.
   */
  list(
    options?: SqlServerEsuLicensesListOptionalParams,
  ): PagedAsyncIterableIterator<SqlServerEsuLicense>;
  /**
   * Gets all sqlServerEsuLicenses in a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: SqlServerEsuLicensesListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<SqlServerEsuLicense>;
  /**
   * Retrieves a SQL Server ESU license resource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sqlServerEsuLicenseName Name of SQL Server ESU License
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    sqlServerEsuLicenseName: string,
    options?: SqlServerEsuLicensesGetOptionalParams,
  ): Promise<SqlServerEsuLicensesGetResponse>;
  /**
   * Creates or replaces a SQL Server ESU license resource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sqlServerEsuLicenseName Name of SQL Server ESU License
   * @param sqlServerEsuLicense The SQL Server ESU license to be created or updated.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    sqlServerEsuLicenseName: string,
    sqlServerEsuLicense: SqlServerEsuLicense,
    options?: SqlServerEsuLicensesCreateOptionalParams,
  ): Promise<SqlServerEsuLicensesCreateResponse>;
  /**
   * Deletes a SQL Server ESU license resource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sqlServerEsuLicenseName Name of SQL Server ESU License
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    sqlServerEsuLicenseName: string,
    options?: SqlServerEsuLicensesDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Updates a SQL Server ESU license resource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sqlServerEsuLicenseName Name of SQL Server ESU License
   * @param parameters The SQL Server ESU license.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    sqlServerEsuLicenseName: string,
    parameters: SqlServerEsuLicenseUpdate,
    options?: SqlServerEsuLicensesUpdateOptionalParams,
  ): Promise<SqlServerEsuLicensesUpdateResponse>;
}
