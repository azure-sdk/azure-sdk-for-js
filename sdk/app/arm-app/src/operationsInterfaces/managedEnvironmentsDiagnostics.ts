/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  DaprComponent,
  ManagedEnvironmentsDiagnosticsListDaprComponentsOptionalParams,
  Certificate,
  ManagedEnvironmentsDiagnosticsListCertificatesOptionalParams,
  ManagedEnvironmentsDiagnosticsGetRootOptionalParams,
  ManagedEnvironmentsDiagnosticsGetRootResponse,
  ManagedEnvironmentsDiagnosticsGetDaprComponentsOptionalParams,
  ManagedEnvironmentsDiagnosticsGetDaprComponentsResponse,
  ManagedEnvironmentsDiagnosticsGetCertificatesOptionalParams,
  ManagedEnvironmentsDiagnosticsGetCertificatesResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ManagedEnvironmentsDiagnostics. */
export interface ManagedEnvironmentsDiagnostics {
  /**
   * Get the Dapr components of a Managed Environment used to host container apps.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Environment.
   * @param options The options parameters.
   */
  listDaprComponents(
    resourceGroupName: string,
    environmentName: string,
    options?: ManagedEnvironmentsDiagnosticsListDaprComponentsOptionalParams
  ): PagedAsyncIterableIterator<DaprComponent>;
  /**
   * Get the Certificates of a Managed Environment used to host container apps.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Environment.
   * @param options The options parameters.
   */
  listCertificates(
    resourceGroupName: string,
    environmentName: string,
    options?: ManagedEnvironmentsDiagnosticsListCertificatesOptionalParams
  ): PagedAsyncIterableIterator<Certificate>;
  /**
   * Get the properties of a Managed Environment used to host container apps.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Environment.
   * @param options The options parameters.
   */
  getRoot(
    resourceGroupName: string,
    environmentName: string,
    options?: ManagedEnvironmentsDiagnosticsGetRootOptionalParams
  ): Promise<ManagedEnvironmentsDiagnosticsGetRootResponse>;
  /**
   * Get the Dapr component of a Managed Environment used to host container apps.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Environment.
   * @param componentName Name of the Dapr Component.
   * @param options The options parameters.
   */
  getDaprComponents(
    resourceGroupName: string,
    environmentName: string,
    componentName: string,
    options?: ManagedEnvironmentsDiagnosticsGetDaprComponentsOptionalParams
  ): Promise<ManagedEnvironmentsDiagnosticsGetDaprComponentsResponse>;
  /**
   * Get the specified Certificate of a Managed Environment used to host container apps.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Environment.
   * @param certificateName Name of the Certificate.
   * @param options The options parameters.
   */
  getCertificates(
    resourceGroupName: string,
    environmentName: string,
    certificateName: string,
    options?: ManagedEnvironmentsDiagnosticsGetCertificatesOptionalParams
  ): Promise<ManagedEnvironmentsDiagnosticsGetCertificatesResponse>;
}
