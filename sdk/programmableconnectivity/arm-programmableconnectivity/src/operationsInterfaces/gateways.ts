/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Gateway,
  GatewaysListBySubscriptionOptionalParams,
  GatewaysListByResourceGroupOptionalParams,
  GatewaysGetOptionalParams,
  GatewaysGetResponse,
  GatewaysCreateOrUpdateOptionalParams,
  GatewaysCreateOrUpdateResponse,
  GatewayUpdate,
  GatewaysUpdateOptionalParams,
  GatewaysUpdateResponse,
  GatewaysDeleteOptionalParams,
  GatewaysDeleteResponse,
  GatewayRegenerateKeyRequest,
  GatewaysListKeysOptionalParams,
  GatewaysListKeysResponse,
  GatewaysRegenerateKeyOptionalParams,
  GatewaysRegenerateKeyResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Gateways. */
export interface Gateways {
  /**
   * List Gateway resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: GatewaysListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<Gateway>;
  /**
   * List Gateway resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: GatewaysListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Gateway>;
  /**
   * Get a Gateway
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Azure Programmable Connectivity Gateway Name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    name: string,
    options?: GatewaysGetOptionalParams
  ): Promise<GatewaysGetResponse>;
  /**
   * Create a Gateway
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Azure Programmable Connectivity Gateway Name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    name: string,
    resource: Gateway,
    options?: GatewaysCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<GatewaysCreateOrUpdateResponse>,
      GatewaysCreateOrUpdateResponse
    >
  >;
  /**
   * Create a Gateway
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Azure Programmable Connectivity Gateway Name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    name: string,
    resource: Gateway,
    options?: GatewaysCreateOrUpdateOptionalParams
  ): Promise<GatewaysCreateOrUpdateResponse>;
  /**
   * Update a Gateway
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Azure Programmable Connectivity Gateway Name
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    name: string,
    properties: GatewayUpdate,
    options?: GatewaysUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<GatewaysUpdateResponse>,
      GatewaysUpdateResponse
    >
  >;
  /**
   * Update a Gateway
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Azure Programmable Connectivity Gateway Name
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    name: string,
    properties: GatewayUpdate,
    options?: GatewaysUpdateOptionalParams
  ): Promise<GatewaysUpdateResponse>;
  /**
   * Delete a Gateway
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Azure Programmable Connectivity Gateway Name
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    name: string,
    options?: GatewaysDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<GatewaysDeleteResponse>,
      GatewaysDeleteResponse
    >
  >;
  /**
   * Delete a Gateway
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Azure Programmable Connectivity Gateway Name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    name: string,
    options?: GatewaysDeleteOptionalParams
  ): Promise<GatewaysDeleteResponse>;
  /**
   * A synchronous resource action.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Azure Programmable Connectivity Gateway Name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  listKeys(
    resourceGroupName: string,
    name: string,
    body: GatewayRegenerateKeyRequest,
    options?: GatewaysListKeysOptionalParams
  ): Promise<GatewaysListKeysResponse>;
  /**
   * A long-running resource action that returns no content. DEPRECATED: Use
   * 'ArmResourceActionNoResponseContentAsync' instead
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Azure Programmable Connectivity Gateway Name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginRegenerateKey(
    resourceGroupName: string,
    name: string,
    body: GatewayRegenerateKeyRequest,
    options?: GatewaysRegenerateKeyOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<GatewaysRegenerateKeyResponse>,
      GatewaysRegenerateKeyResponse
    >
  >;
  /**
   * A long-running resource action that returns no content. DEPRECATED: Use
   * 'ArmResourceActionNoResponseContentAsync' instead
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param name Azure Programmable Connectivity Gateway Name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginRegenerateKeyAndWait(
    resourceGroupName: string,
    name: string,
    body: GatewayRegenerateKeyRequest,
    options?: GatewaysRegenerateKeyOptionalParams
  ): Promise<GatewaysRegenerateKeyResponse>;
}
