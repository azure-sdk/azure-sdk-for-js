/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  SubscriptionQuotaAllocations,
  GroupQuotaSubscriptionQuotaAllocationListOptionalParams,
  GroupQuotaSubscriptionQuotaAllocationCreateOrUpdateOptionalParams,
  GroupQuotaSubscriptionQuotaAllocationCreateOrUpdateResponse,
  GroupQuotaSubscriptionQuotaAllocationUpdateOptionalParams,
  GroupQuotaSubscriptionQuotaAllocationUpdateResponse,
  GroupQuotaSubscriptionQuotaAllocationGetOptionalParams,
  GroupQuotaSubscriptionQuotaAllocationGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GroupQuotaSubscriptionQuotaAllocation. */
export interface GroupQuotaSubscriptionQuotaAllocation {
  /**
   * Gets all the quota assigned to a subscription for the specific Resource Provider, Location. This
   * will include the GroupQuota and total quota assigned to the subscription. Only the Group quota
   * assigned to the subscription can be assigned back to the MG Group Quota.
   * @param mgId Management Group Id.
   * @param resourceProviderScope Scope for the resource. Some resources do not require location
   *                              parameter, such as CosmosDb, so can be skipped in scope. For most of the resources require -
   *                              providers/Microsoft.Compute/locations/{locationName}. Some Rps such as Batch requires
   *                              batchAccountName -
   *                              providers/Microsoft.Batch/locations/{locationName}/accountName/{batchAccountName}. This extension
   *                              enables to specify resources for any all the RPs.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param options The options parameters.
   */
  list(
    mgId: string,
    resourceProviderScope: string,
    groupQuotaName: string,
    options?: GroupQuotaSubscriptionQuotaAllocationListOptionalParams
  ): PagedAsyncIterableIterator<SubscriptionQuotaAllocations>;
  /**
   * Request to assign a specific resource quota from group quota to a specific Subscription. The
   * subscriptions can also reduce the quota assigned to subscription to give back the group back to MG.
   * The quota assignment back to MG groupQuota is limited by the GroupQuota assigned to subscription,
   * which means the maximum unused quota assigned back to MG groupQuota will be the groupQuota assigned
   * to the subscriptions. So, this API can used to assign Quota to subscriptions and assign back unused
   * quota, which was previously assigned from MG groupQuota to subscription.
   * @param mgId Management Group Id.
   * @param resourceProviderScope Scope for the resource. Some resources do not require location
   *                              parameter, such as CosmosDb, so can be skipped in scope. For most of the resources require -
   *                              providers/Microsoft.Compute/locations/{locationName}. Some Rps such as Batch requires
   *                              batchAccountName -
   *                              providers/Microsoft.Batch/locations/{locationName}/accountName/{batchAccountName}. This extension
   *                              enables to specify resources for any all the RPs.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param resourceName Resource name.
   * @param allocateQuotaRequest Quota requests payload.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    mgId: string,
    resourceProviderScope: string,
    groupQuotaName: string,
    resourceName: string,
    allocateQuotaRequest: SubscriptionQuotaAllocations,
    options?: GroupQuotaSubscriptionQuotaAllocationCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<
        GroupQuotaSubscriptionQuotaAllocationCreateOrUpdateResponse
      >,
      GroupQuotaSubscriptionQuotaAllocationCreateOrUpdateResponse
    >
  >;
  /**
   * Request to assign a specific resource quota from group quota to a specific Subscription. The
   * subscriptions can also reduce the quota assigned to subscription to give back the group back to MG.
   * The quota assignment back to MG groupQuota is limited by the GroupQuota assigned to subscription,
   * which means the maximum unused quota assigned back to MG groupQuota will be the groupQuota assigned
   * to the subscriptions. So, this API can used to assign Quota to subscriptions and assign back unused
   * quota, which was previously assigned from MG groupQuota to subscription.
   * @param mgId Management Group Id.
   * @param resourceProviderScope Scope for the resource. Some resources do not require location
   *                              parameter, such as CosmosDb, so can be skipped in scope. For most of the resources require -
   *                              providers/Microsoft.Compute/locations/{locationName}. Some Rps such as Batch requires
   *                              batchAccountName -
   *                              providers/Microsoft.Batch/locations/{locationName}/accountName/{batchAccountName}. This extension
   *                              enables to specify resources for any all the RPs.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param resourceName Resource name.
   * @param allocateQuotaRequest Quota requests payload.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    mgId: string,
    resourceProviderScope: string,
    groupQuotaName: string,
    resourceName: string,
    allocateQuotaRequest: SubscriptionQuotaAllocations,
    options?: GroupQuotaSubscriptionQuotaAllocationCreateOrUpdateOptionalParams
  ): Promise<GroupQuotaSubscriptionQuotaAllocationCreateOrUpdateResponse>;
  /**
   * Request to assign quota from group quota to a specific Subscription. The subscriptions and reduce
   * the quota assigned to subscription to give back the group back to MG. The quota assignment back to
   * MG groupQuota is limited by the GroupQuota assigned to subscription, using this API. So, this API
   * can used to assign Quota to subscriptions and assign back unused quota, which was previously
   * assigned from MG groupQuota to subscription(s).
   * @param mgId Management Group Id.
   * @param resourceProviderScope Scope for the resource. Some resources do not require location
   *                              parameter, such as CosmosDb, so can be skipped in scope. For most of the resources require -
   *                              providers/Microsoft.Compute/locations/{locationName}. Some Rps such as Batch requires
   *                              batchAccountName -
   *                              providers/Microsoft.Batch/locations/{locationName}/accountName/{batchAccountName}. This extension
   *                              enables to specify resources for any all the RPs.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param resourceName Resource name.
   * @param allocateQuotaRequest Quota requests payload.
   * @param options The options parameters.
   */
  beginUpdate(
    mgId: string,
    resourceProviderScope: string,
    groupQuotaName: string,
    resourceName: string,
    allocateQuotaRequest: SubscriptionQuotaAllocations,
    options?: GroupQuotaSubscriptionQuotaAllocationUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<GroupQuotaSubscriptionQuotaAllocationUpdateResponse>,
      GroupQuotaSubscriptionQuotaAllocationUpdateResponse
    >
  >;
  /**
   * Request to assign quota from group quota to a specific Subscription. The subscriptions and reduce
   * the quota assigned to subscription to give back the group back to MG. The quota assignment back to
   * MG groupQuota is limited by the GroupQuota assigned to subscription, using this API. So, this API
   * can used to assign Quota to subscriptions and assign back unused quota, which was previously
   * assigned from MG groupQuota to subscription(s).
   * @param mgId Management Group Id.
   * @param resourceProviderScope Scope for the resource. Some resources do not require location
   *                              parameter, such as CosmosDb, so can be skipped in scope. For most of the resources require -
   *                              providers/Microsoft.Compute/locations/{locationName}. Some Rps such as Batch requires
   *                              batchAccountName -
   *                              providers/Microsoft.Batch/locations/{locationName}/accountName/{batchAccountName}. This extension
   *                              enables to specify resources for any all the RPs.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param resourceName Resource name.
   * @param allocateQuotaRequest Quota requests payload.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    mgId: string,
    resourceProviderScope: string,
    groupQuotaName: string,
    resourceName: string,
    allocateQuotaRequest: SubscriptionQuotaAllocations,
    options?: GroupQuotaSubscriptionQuotaAllocationUpdateOptionalParams
  ): Promise<GroupQuotaSubscriptionQuotaAllocationUpdateResponse>;
  /**
   * Gets Quota assigned to a subscription for the specific Resource Provider, Location, ResourceName.
   * This will include the GroupQuota and total quota assigned to the subscription. Only the Group quota
   * assigned to the subscription can be assigned back to the MG Group Quota.
   * @param mgId Management Group Id.
   * @param resourceProviderScope Scope for the resource. Some resources do not require location
   *                              parameter, such as CosmosDb, so can be skipped in scope. For most of the resources require -
   *                              providers/Microsoft.Compute/locations/{locationName}. Some Rps such as Batch requires
   *                              batchAccountName -
   *                              providers/Microsoft.Batch/locations/{locationName}/accountName/{batchAccountName}. This extension
   *                              enables to specify resources for any all the RPs.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param resourceName Resource name.
   * @param options The options parameters.
   */
  get(
    mgId: string,
    resourceProviderScope: string,
    groupQuotaName: string,
    resourceName: string,
    options?: GroupQuotaSubscriptionQuotaAllocationGetOptionalParams
  ): Promise<GroupQuotaSubscriptionQuotaAllocationGetResponse>;
}
