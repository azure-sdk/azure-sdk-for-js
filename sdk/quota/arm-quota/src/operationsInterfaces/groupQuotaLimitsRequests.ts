/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SubmittedResourceRequestStatus,
  GroupQuotaLimitsRequestsListOptionalParams,
  GroupQuotaLimitsRequestsGetOptionalParams,
  GroupQuotaLimitsRequestsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GroupQuotaLimitsRequests. */
export interface GroupQuotaLimitsRequests {
  /**
   * List API to check the status of a GroupQuota requests by requestId. The groupQuotaRequest history is
   * maintained for 1 year.
   * @param mgId Management Group Id.
   * @param resourceProviderScope Scope for the resource. Some resources do not require location
   *                              parameter, such as CosmosDb, so can be skipped in scope. For most of the resources require -
   *                              providers/Microsoft.Compute/locations/{locationName}. Some Rps such as Batch requires
   *                              batchAccountName -
   *                              providers/Microsoft.Batch/locations/{locationName}/accountName/{batchAccountName}. This extension
   *                              enables to specify resources for any all the RPs.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param options The options parameters.
   */
  list(
    mgId: string,
    resourceProviderScope: string,
    groupQuotaName: string,
    options?: GroupQuotaLimitsRequestsListOptionalParams
  ): PagedAsyncIterableIterator<SubmittedResourceRequestStatus>;
  /**
   * Get API to check the status of a GroupQuota request by requestId.  Use the polling API -
   * OperationsStatus URI specified in Azure-AsyncOperation header field, with retry-after duration in
   * seconds to check the intermediate status. This API provides the finals status with the request
   * details and status.
   * @param mgId Management Group Id.
   * @param resourceProviderScope Scope for the resource. Some resources do not require location
   *                              parameter, such as CosmosDb, so can be skipped in scope. For most of the resources require -
   *                              providers/Microsoft.Compute/locations/{locationName}. Some Rps such as Batch requires
   *                              batchAccountName -
   *                              providers/Microsoft.Batch/locations/{locationName}/accountName/{batchAccountName}. This extension
   *                              enables to specify resources for any all the RPs.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param requestId Request Id.
   * @param options The options parameters.
   */
  get(
    mgId: string,
    resourceProviderScope: string,
    groupQuotaName: string,
    requestId: string,
    options?: GroupQuotaLimitsRequestsGetOptionalParams
  ): Promise<GroupQuotaLimitsRequestsGetResponse>;
}
