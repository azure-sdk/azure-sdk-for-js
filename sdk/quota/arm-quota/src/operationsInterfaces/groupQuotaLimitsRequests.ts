/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SubmittedResourceRequestStatus,
  GroupQuotaLimitsRequestsListOptionalParams,
  GroupQuotaLimitsRequestsGetOptionalParams,
  GroupQuotaLimitsRequestsGetResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GroupQuotaLimitsRequests. */
export interface GroupQuotaLimitsRequests {
  /**
   * List API to check the status of a GroupQuota requests by requestId. The groupQuotaRequest history is
   * maintained for 1 year. Use the $filter parameter to filter out the specific resource based on the
   * ResourceProvider/Location.
   * @param managementGroupId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param filter | Field                    | Supported operators
   *               |---------------------|------------------------
   *
   *               |provider  eq {resourceProvider}  and location eq {location}
   *                Example: $filter= provider eq Microsoft.Compute and location eq eastus
   * @param options The options parameters.
   */
  list(
    managementGroupId: string,
    groupQuotaName: string,
    filter: string,
    options?: GroupQuotaLimitsRequestsListOptionalParams,
  ): PagedAsyncIterableIterator<SubmittedResourceRequestStatus>;
  /**
   * Get API to check the status of a GroupQuota request by requestId.  Use the polling API -
   * OperationsStatus URI specified in Azure-AsyncOperation header field, with retry-after duration in
   * seconds to check the intermediate status. This API provides the finals status with the request
   * details and status.
   * @param managementGroupId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param requestId Request Id.
   * @param filter | Field                    | Supported operators
   *               |---------------------|------------------------
   *
   *               |provider  eq {resourceProvider}  and location eq {location}
   *                Example: $filter= provider eq Microsoft.Compute and location eq eastus
   * @param options The options parameters.
   */
  get(
    managementGroupId: string,
    groupQuotaName: string,
    requestId: string,
    filter: string,
    options?: GroupQuotaLimitsRequestsGetOptionalParams,
  ): Promise<GroupQuotaLimitsRequestsGetResponse>;
}
