/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SubscriptionQuotaAllocationRequest,
  GroupQuotaSubscriptionQuotaAllocationRequestsListOptionalParams,
  GroupQuotaSubscriptionQuotaAllocationRequestsGetOptionalParams,
  GroupQuotaSubscriptionQuotaAllocationRequestsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GroupQuotaSubscriptionQuotaAllocationRequests. */
export interface GroupQuotaSubscriptionQuotaAllocationRequests {
  /**
   * Lists all the allocation requests.
   * @param mgId Management Group Id.
   * @param resourceProviderScope Scope for the resource. Some resources do not require location
   *                              parameter, such as CosmosDb, so can be skipped in scope. For most of the resources require -
   *                              providers/Microsoft.Compute/locations/{locationName}. Some Rps such as Batch requires
   *                              batchAccountName -
   *                              providers/Microsoft.Batch/locations/{locationName}/accountName/{batchAccountName}. This extension
   *                              enables to specify resources for any all the RPs.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param options The options parameters.
   */
  list(
    mgId: string,
    resourceProviderScope: string,
    groupQuotaName: string,
    options?: GroupQuotaSubscriptionQuotaAllocationRequestsListOptionalParams
  ): PagedAsyncIterableIterator<SubscriptionQuotaAllocationRequest>;
  /**
   * Get the quota allocation request status for the subscriptionId by allocationId.
   * @param mgId Management Group Id.
   * @param resourceProviderScope Scope for the resource. Some resources do not require location
   *                              parameter, such as CosmosDb, so can be skipped in scope. For most of the resources require -
   *                              providers/Microsoft.Compute/locations/{locationName}. Some Rps such as Batch requires
   *                              batchAccountName -
   *                              providers/Microsoft.Batch/locations/{locationName}/accountName/{batchAccountName}. This extension
   *                              enables to specify resources for any all the RPs.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param allocationId Resource allocation Id.
   * @param options The options parameters.
   */
  get(
    mgId: string,
    resourceProviderScope: string,
    groupQuotaName: string,
    allocationId: string,
    options?: GroupQuotaSubscriptionQuotaAllocationRequestsGetOptionalParams
  ): Promise<GroupQuotaSubscriptionQuotaAllocationRequestsGetResponse>;
}
