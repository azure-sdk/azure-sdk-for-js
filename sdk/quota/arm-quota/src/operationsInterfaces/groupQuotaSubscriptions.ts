/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  GroupQuotaSubscriptionId,
  GroupQuotaSubscriptionsListOptionalParams,
  GroupQuotaSubscriptionsCreateOrUpdateOptionalParams,
  GroupQuotaSubscriptionsCreateOrUpdateResponse,
  GroupQuotaSubscriptionsUpdateOptionalParams,
  GroupQuotaSubscriptionsUpdateResponse,
  GroupQuotaSubscriptionsDeleteOptionalParams,
  GroupQuotaSubscriptionsGetOptionalParams,
  GroupQuotaSubscriptionsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GroupQuotaSubscriptions. */
export interface GroupQuotaSubscriptions {
  /**
   * Returns a list of the subscriptionIds associated with the GroupQuotasEntity.
   * @param mgId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param options The options parameters.
   */
  list(
    mgId: string,
    groupQuotaName: string,
    options?: GroupQuotaSubscriptionsListOptionalParams
  ): PagedAsyncIterableIterator<GroupQuotaSubscriptionId>;
  /**
   * Adds a subscription to GroupQuotas.
   * @param mgId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    mgId: string,
    groupQuotaName: string,
    options?: GroupQuotaSubscriptionsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<GroupQuotaSubscriptionsCreateOrUpdateResponse>,
      GroupQuotaSubscriptionsCreateOrUpdateResponse
    >
  >;
  /**
   * Adds a subscription to GroupQuotas.
   * @param mgId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    mgId: string,
    groupQuotaName: string,
    options?: GroupQuotaSubscriptionsCreateOrUpdateOptionalParams
  ): Promise<GroupQuotaSubscriptionsCreateOrUpdateResponse>;
  /**
   * Updates the GroupQuotas with the subscription to add to the subscriptions list.
   * @param mgId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param options The options parameters.
   */
  beginUpdate(
    mgId: string,
    groupQuotaName: string,
    options?: GroupQuotaSubscriptionsUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<GroupQuotaSubscriptionsUpdateResponse>,
      GroupQuotaSubscriptionsUpdateResponse
    >
  >;
  /**
   * Updates the GroupQuotas with the subscription to add to the subscriptions list.
   * @param mgId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    mgId: string,
    groupQuotaName: string,
    options?: GroupQuotaSubscriptionsUpdateOptionalParams
  ): Promise<GroupQuotaSubscriptionsUpdateResponse>;
  /**
   * Removes the subscription from GroupQuotas.
   * @param mgId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param options The options parameters.
   */
  delete(
    mgId: string,
    groupQuotaName: string,
    options?: GroupQuotaSubscriptionsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Returns the subscriptionId along with its provisioning state for being associated with the
   * GroupQuotasEntity.
   * @param mgId Management Group Id.
   * @param groupQuotaName The GroupQuota name. The name should be unique for the provided context
   *                       tenantId/MgId.
   * @param options The options parameters.
   */
  get(
    mgId: string,
    groupQuotaName: string,
    options?: GroupQuotaSubscriptionsGetOptionalParams
  ): Promise<GroupQuotaSubscriptionsGetResponse>;
}
