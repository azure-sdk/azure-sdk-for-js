/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { MembershipBySubscription } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { McppClient } from "../mcppClient";
import {
  MembershipBySubscriptionListOptionalParams,
  MembershipBySubscriptionListResponse
} from "../models";

/** Class containing MembershipBySubscription operations. */
export class MembershipBySubscriptionImpl implements MembershipBySubscription {
  private readonly client: McppClient;

  /**
   * Initialize a new instance of the class MembershipBySubscription class.
   * @param client Reference to the service client
   */
  constructor(client: McppClient) {
    this.client = client;
  }

  /**
   * Fetch list of CloudPartnerProgramMembership purchase details for a given subscription
   * @param subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g.
   *                       00000000-0000-0000-0000-000000000000)
   * @param options The options parameters.
   */
  list(
    subscriptionId: string,
    options?: MembershipBySubscriptionListOptionalParams
  ): Promise<MembershipBySubscriptionListResponse> {
    return this.client.sendOperationRequest(
      { subscriptionId, options },
      listOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/Microsoft.CloudPartnerProgram/membership",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.MembershipDetailsListResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept],
  serializer
};
