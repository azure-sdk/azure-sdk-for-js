/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  WorkflowRun,
  WorkflowRunsListOptionalParams,
  WorkflowRunsGetOptionalParams,
  WorkflowRunsGetResponse,
  WorkflowRunsCancelOptionalParams,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WorkflowRuns. */
export interface WorkflowRuns {
  /**
   * Gets a list of workflow runs.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workflowName The name of the Workflow
   * @param runName The name of the WorkflowRun
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workflowName: string,
    runName: string,
    options?: WorkflowRunsListOptionalParams,
  ): PagedAsyncIterableIterator<WorkflowRun>;
  /**
   * Gets a workflow run.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workflowName The name of the Workflow
   * @param runName The name of the WorkflowRun
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workflowName: string,
    runName: string,
    options?: WorkflowRunsGetOptionalParams,
  ): Promise<WorkflowRunsGetResponse>;
  /**
   * Cancels a workflow run.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workflowName The name of the Workflow
   * @param runName The name of the WorkflowRun
   * @param options The options parameters.
   */
  cancel(
    resourceGroupName: string,
    workflowName: string,
    runName: string,
    options?: WorkflowRunsCancelOptionalParams,
  ): Promise<void>;
}
