/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  IpamPool,
  IpamPoolListOptionalParams,
  PoolAssociation,
  IpamPoolListAssociationOptionalParams,
  IpamPoolCreateOptionalParams,
  IpamPoolCreateResponse,
  IpamPoolUpdateOptionalParams,
  IpamPoolUpdateResponse,
  IpamPoolGetOptionalParams,
  IpamPoolGetResponse,
  IpamPoolDeleteOptionalParams,
  IpamPoolDeleteResponse,
  IpamPoolAssociateResourcesOptionalParams,
  IpamPoolAssociateResourcesResponse,
  IpamPoolDisassociateResourcesOptionalParams,
  IpamPoolAllocateAzureResourceOptionalParams,
  IpamPoolAllocateAzureResourceResponse,
  IpamPoolAllocateNonAzureResourceOptionalParams,
  IpamPoolAllocateNonAzureResourceResponse,
  IpamPoolUsageOptionalParams,
  IpamPoolUsageResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a IpamPoolOperations. */
export interface IpamPoolOperations {
  /**
   * Gets list of Pool resources at Network Manager level.
   * @param resourceGroupName Resource group name.
   * @param networkManagerName Network Manager resource name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    networkManagerName: string,
    options?: IpamPoolListOptionalParams
  ): PagedAsyncIterableIterator<IpamPool>;
  /**
   * List Associated Resource in the Pool.
   * @param resourceGroupName Resource group name.
   * @param networkManagerName Network Manager resource name.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  listAssociation(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolListAssociationOptionalParams
  ): PagedAsyncIterableIterator<PoolAssociation>;
  /**
   * Creates/Updates the Pool resource.
   * @param resourceGroupName Resource group name.
   * @param networkManagerName Network Manager resource name.
   * @param poolName IP Address Manager Pool resource name.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolCreateOptionalParams
  ): Promise<IpamPoolCreateResponse>;
  /**
   * Updates the specific Pool resource.
   * @param resourceGroupName Resource group name.
   * @param networkManagerName Network Manager resource name.
   * @param poolName IP Address Manager Pool resource name.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolUpdateOptionalParams
  ): Promise<IpamPoolUpdateResponse>;
  /**
   * Gets the specific Pool resource.
   * @param resourceGroupName Resource group name.
   * @param networkManagerName Network Manager resource name.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolGetOptionalParams
  ): Promise<IpamPoolGetResponse>;
  /**
   * Delete the Pool resource.
   * @param resourceGroupName Resource group name.
   * @param networkManagerName Network Manager resource name.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<IpamPoolDeleteResponse>,
      IpamPoolDeleteResponse
    >
  >;
  /**
   * Delete the Pool resource.
   * @param resourceGroupName Resource group name.
   * @param networkManagerName Network Manager resource name.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolDeleteOptionalParams
  ): Promise<IpamPoolDeleteResponse>;
  /**
   * Associate a Resource to the Pool.
   * @param resourceGroupName Resource group name.
   * @param networkManagerName Network Manager resource name.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  associateResources(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolAssociateResourcesOptionalParams
  ): Promise<IpamPoolAssociateResourcesResponse>;
  /**
   * Disassociate a Resource from the Pool.
   * @param resourceGroupName Resource group name.
   * @param networkManagerName Network Manager resource name.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  disassociateResources(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolDisassociateResourcesOptionalParams
  ): Promise<void>;
  /**
   * Allocate Azure Resource.
   * @param resourceGroupName Resource group name.
   * @param networkManagerName Network Manager resource name.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  allocateAzureResource(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolAllocateAzureResourceOptionalParams
  ): Promise<IpamPoolAllocateAzureResourceResponse>;
  /**
   * Allocate Non-Azure Resource.
   * @param resourceGroupName Resource group name.
   * @param networkManagerName Network Manager resource name.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  allocateNonAzureResource(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolAllocateNonAzureResourceOptionalParams
  ): Promise<IpamPoolAllocateNonAzureResourceResponse>;
  /**
   * Get the Pool Usage.
   * @param resourceGroupName Resource group name.
   * @param networkManagerName Network Manager resource name.
   * @param poolName Pool resource name.
   * @param options The options parameters.
   */
  usage(
    resourceGroupName: string,
    networkManagerName: string,
    poolName: string,
    options?: IpamPoolUsageOptionalParams
  ): Promise<IpamPoolUsageResponse>;
}
