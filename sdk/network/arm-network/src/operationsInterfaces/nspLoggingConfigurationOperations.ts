/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  NspLoggingConfigurationGetOptionalParams,
  NspLoggingConfigurationGetResponse,
  NspLoggingConfiguration,
  NspLoggingConfigurationCreateOrUpdateOptionalParams,
  NspLoggingConfigurationCreateOrUpdateResponse,
  NspLoggingConfigurationDeleteOptionalParams,
} from "../models/index.js";

/** Interface representing a NspLoggingConfigurationOperations. */
export interface NspLoggingConfigurationOperations {
  /**
   * Gets the NSP logging configuration.
   * @param resourceGroupName The name of the resource group.
   * @param networkSecurityPerimeterName The name of the network security perimeter.
   * @param loggingConfigurationName The name of the NSP logging configuration. Accepts 'instance' as
   *                                 name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkSecurityPerimeterName: string,
    loggingConfigurationName: string,
    options?: NspLoggingConfigurationGetOptionalParams,
  ): Promise<NspLoggingConfigurationGetResponse>;
  /**
   * Creates or updates NSP logging configuration.
   * @param resourceGroupName The name of the resource group.
   * @param networkSecurityPerimeterName The name of the network security perimeter.
   * @param loggingConfigurationName The name of the NSP logging configuration. Accepts 'instance' as
   *                                 name.
   * @param parameters Parameters that hold the NspLoggingConfiguration to be created/updated.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    networkSecurityPerimeterName: string,
    loggingConfigurationName: string,
    parameters: NspLoggingConfiguration,
    options?: NspLoggingConfigurationCreateOrUpdateOptionalParams,
  ): Promise<NspLoggingConfigurationCreateOrUpdateResponse>;
  /**
   * Deletes an NSP Logging configuration.
   * @param resourceGroupName The name of the resource group.
   * @param networkSecurityPerimeterName The name of the network security perimeter.
   * @param loggingConfigurationName The name of the NSP logging configuration. Accepts 'instance' as
   *                                 name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    networkSecurityPerimeterName: string,
    loggingConfigurationName: string,
    options?: NspLoggingConfigurationDeleteOptionalParams,
  ): Promise<void>;
}
