/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { NspOperationStatusOperations } from "../operationsInterfaces/index.js";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
import { NetworkManagementClient } from "../networkManagementClient.js";
import {
  NspOperationStatusGetOptionalParams,
  NspOperationStatusGetResponse,
} from "../models/index.js";

/** Class containing NspOperationStatusOperations operations. */
export class NspOperationStatusOperationsImpl
  implements NspOperationStatusOperations
{
  private readonly client: NetworkManagementClient;

  /**
   * Initialize a new instance of the class NspOperationStatusOperations class.
   * @param client Reference to the service client
   */
  constructor(client: NetworkManagementClient) {
    this.client = client;
  }

  /**
   * Gets the operation status for the given operation id.
   * @param location The location of network security perimeter.
   * @param operationId The operation id of the async operation.
   * @param options The options parameters.
   */
  get(
    location: string,
    operationId: string,
    options?: NspOperationStatusGetOptionalParams,
  ): Promise<NspOperationStatusGetResponse> {
    return this.client.sendOperationRequest(
      { location, operationId, options },
      getOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/networkSecurityPerimeterOperationStatuses/{operationId}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.NspOperationStatus,
    },
    default: {
      bodyMapper: Mappers.CloudErrorAutoGenerated,
    },
  },
  queryParameters: [Parameters.apiVersion2],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.location,
    Parameters.operationId,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
