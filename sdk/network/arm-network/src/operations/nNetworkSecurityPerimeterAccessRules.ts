/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { NNetworkSecurityPerimeterAccessRules } from "../operationsInterfaces/index.js";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
import { NetworkManagementClient } from "../networkManagementClient.js";
import { NNetworkSecurityPerimeterAccessRulesDeleteOptionalParams } from "../models/index.js";

/** Class containing NNetworkSecurityPerimeterAccessRules operations. */
export class NNetworkSecurityPerimeterAccessRulesImpl
  implements NNetworkSecurityPerimeterAccessRules
{
  private readonly client: NetworkManagementClient;

  /**
   * Initialize a new instance of the class NNetworkSecurityPerimeterAccessRules class.
   * @param client Reference to the service client
   */
  constructor(client: NetworkManagementClient) {
    this.client = client;
  }

  /**
   * Deletes an NSP access rule.
   * @param resourceGroupName The name of the resource group.
   * @param networkSecurityPerimeterName The name of the network security perimeter.
   * @param profileName The name of the NSP profile.
   * @param accessRuleName The name of the NSP access rule.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    networkSecurityPerimeterName: string,
    profileName: string,
    accessRuleName: string,
    options?: NNetworkSecurityPerimeterAccessRulesDeleteOptionalParams,
  ): Promise<void> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        networkSecurityPerimeterName,
        profileName,
        accessRuleName,
        options,
      },
      deleteOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const deleteOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/profiles/{profileName}/accessRules/{accessRuleName}",
  httpMethod: "DELETE",
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.networkSecurityPerimeterName,
    Parameters.profileName,
    Parameters.accessRuleName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
