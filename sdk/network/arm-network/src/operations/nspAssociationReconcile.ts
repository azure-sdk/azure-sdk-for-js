/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { NspAssociationReconcile } from "../operationsInterfaces/index.js";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
import { NetworkManagementClient } from "../networkManagementClient.js";
import {
  NspAssociationReconcilePostOptionalParams,
  NspAssociationReconcilePostResponse,
} from "../models/index.js";

/** Class containing NspAssociationReconcile operations. */
export class NspAssociationReconcileImpl implements NspAssociationReconcile {
  private readonly client: NetworkManagementClient;

  /**
   * Initialize a new instance of the class NspAssociationReconcile class.
   * @param client Reference to the service client
   */
  constructor(client: NetworkManagementClient) {
    this.client = client;
  }

  /**
   * Reconcile NSP association
   * @param resourceGroupName The name of the resource group.
   * @param networkSecurityPerimeterName The name of the network security perimeter.
   * @param associationName The name of the NSP association.
   * @param parameters Parameters for NSP association reconcile
   * @param options The options parameters.
   */
  post(
    resourceGroupName: string,
    networkSecurityPerimeterName: string,
    associationName: string,
    parameters: Record<string, unknown>,
    options?: NspAssociationReconcilePostOptionalParams,
  ): Promise<NspAssociationReconcilePostResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        networkSecurityPerimeterName,
        associationName,
        parameters,
        options,
      },
      postOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const postOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityPerimeters/{networkSecurityPerimeterName}/resourceAssociations/{associationName}/reconcile",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: {
        type: { name: "Dictionary", value: { type: { name: "any" } } },
      },
    },
    default: {
      bodyMapper: Mappers.CloudErrorAutoGenerated,
    },
  },
  requestBody: Parameters.parameters98,
  queryParameters: [Parameters.apiVersion2],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.networkSecurityPerimeterName,
    Parameters.associationName,
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer,
};
