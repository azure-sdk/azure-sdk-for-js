/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type AnalysisSettingsUnion =
  | AnalysisSettings
  | MetagenomicsAnalysisSettings;
export type AnalysisResultUnion = AnalysisResult | MetagenomicsAnalysisResult;

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response of a Library list operation. */
export interface LibraryListResult {
  /** The Library items on this page */
  value: Library[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The properties of Library */
export interface LibraryProperties {
  /** The blob container URL where data files are stored */
  container: string;
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The properties of Library */
export interface LibraryPropertiesUpdate {
  /** The blob container URL where data files are stored */
  container?: string;
}

/** The response of a Analysis list operation. */
export interface AnalysisListResult {
  /** The Analysis items on this page */
  value: Analysis[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The properties of Analysis */
export interface AnalysisProperties {
  /** The sample names being analyzed */
  samples: string[];
  /** The settings for the analysis */
  settings: AnalysisSettingsUnion;
  /**
   * The time this analysis started
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startedAt?: Date;
  /**
   * The time this analysis finished
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly finishedAt?: Date;
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AnalysisState;
  /**
   * The result if the analysis succeeded
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly result?: AnalysisResultUnion;
  /**
   * The error if the analysis failed
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly error?: AnalysisPropertiesError;
}

/** Base settings for analysis */
export interface AnalysisSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Metagenomics";
}

/** Base result of an analysis */
export interface AnalysisResult {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Metagenomics";
  /** The path to the output files */
  files?: string[];
}

/** The error if the analysis failed */
export interface AnalysisPropertiesError {
  code: string;
  message: string;
}

/** The response of a Sample list operation. */
export interface SampleListResult {
  /** The Sample items on this page */
  value: Sample[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The properties of Sample */
export interface SampleProperties {
  /** Description of this sample, such as source, collection method, etc. */
  description?: string;
  /** Location of the fastq files */
  paths: string[];
  /**
   * Provisioning state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
}

/** The properties of Sample */
export interface SamplePropertiesUpdate {
  /** Description of this sample, such as source, collection method, etc. */
  description?: string;
  /** Location of the fastq files */
  paths?: string[];
}

/** Request to identify the sources of genetic material in a sample */
export interface IdentifyRequest {
  /** The name for the new analysis */
  name: string;
  /** The settings for Metagenomics analysis */
  settings: MetagenomicsAnalysisSettings;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface AzureResourceManagerCommonTypesTrackedResourceUpdate
  extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Settings for a Metagenomics analysis */
export interface MetagenomicsAnalysisSettings extends AnalysisSettings {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Metagenomics";
  /** The version of taxonomy database to use. Default is the latest version. */
  taxonomyVersion?: TaxonomyVersion;
}

/** Result for a Metagenomics analysis */
export interface MetagenomicsAnalysisResult extends AnalysisResult {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Metagenomics";
  /** The version of taxonomy database used */
  taxonomyVersion: TaxonomyVersion;
  /** The number of base pairs read */
  totalReads: number;
}

/** A collection of genomics samples and analyses */
export interface Library extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: LibraryProperties;
}

/** Analysis of one or more samples */
export interface Analysis extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: AnalysisProperties;
}

/** Genetic sequence data from a biological sample */
export interface Sample extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: SampleProperties;
}

/** A collection of genomics samples and analyses */
export interface LibraryUpdate
  extends AzureResourceManagerCommonTypesTrackedResourceUpdate {
  /** The resource-specific properties for this resource. */
  properties?: LibraryPropertiesUpdate;
}

/** Analysis of one or more samples */
export interface AnalysisUpdate
  extends AzureResourceManagerCommonTypesTrackedResourceUpdate {
  /** The resource-specific properties for this resource. */
  properties?: Record<string, unknown>;
}

/** Genetic sequence data from a biological sample */
export interface SampleUpdate
  extends AzureResourceManagerCommonTypesTrackedResourceUpdate {
  /** The resource-specific properties for this resource. */
  properties?: SamplePropertiesUpdate;
}

/** Defines headers for AnalysisOperations_create operation. */
export interface AnalysisOperationsCreateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for AnalysisOperations_delete operation. */
export interface AnalysisOperationsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for SampleOperations_identify operation. */
export interface SampleOperationsIdentifyHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ResourceProvisioningState} that the service accepts. */
export enum KnownResourceProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
}

/**
 * Defines values for ResourceProvisioningState. \
 * {@link KnownResourceProvisioningState} can be used interchangeably with ResourceProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled.
 */
export type ResourceProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link AnalysisKind} that the service accepts. */
export enum KnownAnalysisKind {
  /** Metagenomics analysis: identify the sources of genetic material in a sample */
  Metagenomics = "Metagenomics",
}

/**
 * Defines values for AnalysisKind. \
 * {@link KnownAnalysisKind} can be used interchangeably with AnalysisKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Metagenomics**: Metagenomics analysis: identify the sources of genetic material in a sample
 */
export type AnalysisKind = string;

/** Known values of {@link AnalysisState} that the service accepts. */
export enum KnownAnalysisState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** Submitted for processing */
  Queued = "Queued",
  /** In progress */
  Started = "Started",
}

/**
 * Defines values for AnalysisState. \
 * {@link KnownAnalysisState} can be used interchangeably with AnalysisState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Queued**: Submitted for processing \
 * **Started**: In progress
 */
export type AnalysisState = string;

/** Known values of {@link TaxonomyVersion} that the service accepts. */
export enum KnownTaxonomyVersion {
  /** Taxonomy database derived from NCBI and COL as of 2020-07-06 */
  V20200706 = "v2020_07_06",
  /** The latest version of the taxonomy database */
  Latest = "Latest",
}

/**
 * Defines values for TaxonomyVersion. \
 * {@link KnownTaxonomyVersion} can be used interchangeably with TaxonomyVersion,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **v2020_07_06**: Taxonomy database derived from NCBI and COL as of 2020-07-06 \
 * **Latest**: The latest version of the taxonomy database
 */
export type TaxonomyVersion = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface LibraryOperationsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type LibraryOperationsListBySubscriptionResponse = LibraryListResult;

/** Optional parameters. */
export interface LibraryOperationsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type LibraryOperationsListByResourceGroupResponse = LibraryListResult;

/** Optional parameters. */
export interface LibraryOperationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type LibraryOperationsGetResponse = Library;

/** Optional parameters. */
export interface LibraryOperationsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type LibraryOperationsCreateResponse = Library;

/** Optional parameters. */
export interface LibraryOperationsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type LibraryOperationsUpdateResponse = Library;

/** Optional parameters. */
export interface LibraryOperationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface LibraryOperationsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type LibraryOperationsListBySubscriptionNextResponse = LibraryListResult;

/** Optional parameters. */
export interface LibraryOperationsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type LibraryOperationsListByResourceGroupNextResponse =
  LibraryListResult;

/** Optional parameters. */
export interface AnalysisOperationsListByParentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByParent operation. */
export type AnalysisOperationsListByParentResponse = AnalysisListResult;

/** Optional parameters. */
export interface AnalysisOperationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AnalysisOperationsGetResponse = Analysis;

/** Optional parameters. */
export interface AnalysisOperationsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type AnalysisOperationsCreateResponse = Analysis;

/** Optional parameters. */
export interface AnalysisOperationsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type AnalysisOperationsUpdateResponse = Analysis;

/** Optional parameters. */
export interface AnalysisOperationsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type AnalysisOperationsDeleteResponse = AnalysisOperationsDeleteHeaders;

/** Optional parameters. */
export interface AnalysisOperationsListByParentNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByParentNext operation. */
export type AnalysisOperationsListByParentNextResponse = AnalysisListResult;

/** Optional parameters. */
export interface SampleOperationsListByParentOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByParent operation. */
export type SampleOperationsListByParentResponse = SampleListResult;

/** Optional parameters. */
export interface SampleOperationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SampleOperationsGetResponse = Sample;

/** Optional parameters. */
export interface SampleOperationsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type SampleOperationsCreateResponse = Sample;

/** Optional parameters. */
export interface SampleOperationsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type SampleOperationsUpdateResponse = Sample;

/** Optional parameters. */
export interface SampleOperationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface SampleOperationsIdentifyOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the identify operation. */
export type SampleOperationsIdentifyResponse = Analysis;

/** Optional parameters. */
export interface SampleOperationsListByParentNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByParentNext operation. */
export type SampleOperationsListByParentNextResponse = SampleListResult;

/** Optional parameters. */
export interface MicrosoftPremonitionInsightsOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
