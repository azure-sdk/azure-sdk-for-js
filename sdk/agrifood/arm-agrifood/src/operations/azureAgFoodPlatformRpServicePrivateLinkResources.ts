/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator, PageSettings } from "@azure/core-paging";
import { setContinuationToken } from "../pagingHelper";
import { AzureAgFoodPlatformRpServicePrivateLinkResources } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AgriFoodMgmtClient } from "../agriFoodMgmtClient";
import {
  AzureAgFoodPlatformRPServicePrivateLinkResource,
  AzureAgFoodPlatformRpServicePrivateLinkResourcesListByDataManagerForAgricultureNextOptionalParams,
  AzureAgFoodPlatformRpServicePrivateLinkResourcesListByDataManagerForAgricultureOptionalParams,
  AzureAgFoodPlatformRpServicePrivateLinkResourcesListByDataManagerForAgricultureResponse,
  AzureAgFoodPlatformRpServicePrivateLinkResourcesGetOptionalParams,
  AzureAgFoodPlatformRpServicePrivateLinkResourcesGetResponse,
  AzureAgFoodPlatformRpServicePrivateLinkResourcesListByDataManagerForAgricultureNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing AzureAgFoodPlatformRpServicePrivateLinkResources operations. */
export class AzureAgFoodPlatformRpServicePrivateLinkResourcesImpl
  implements AzureAgFoodPlatformRpServicePrivateLinkResources {
  private readonly client: AgriFoodMgmtClient;

  /**
   * Initialize a new instance of the class AzureAgFoodPlatformRpServicePrivateLinkResources class.
   * @param client Reference to the service client
   */
  constructor(client: AgriFoodMgmtClient) {
    this.client = client;
  }

  /**
   * Get list of Private link resources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataManagerForAgricultureResourceName DataManagerForAgriculture resource name.
   * @param options The options parameters.
   */
  public listByDataManagerForAgriculture(
    resourceGroupName: string,
    dataManagerForAgricultureResourceName: string,
    options?: AzureAgFoodPlatformRpServicePrivateLinkResourcesListByDataManagerForAgricultureOptionalParams
  ): PagedAsyncIterableIterator<
    AzureAgFoodPlatformRPServicePrivateLinkResource
  > {
    const iter = this.listByDataManagerForAgriculturePagingAll(
      resourceGroupName,
      dataManagerForAgricultureResourceName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.listByDataManagerForAgriculturePagingPage(
          resourceGroupName,
          dataManagerForAgricultureResourceName,
          options,
          settings
        );
      }
    };
  }

  private async *listByDataManagerForAgriculturePagingPage(
    resourceGroupName: string,
    dataManagerForAgricultureResourceName: string,
    options?: AzureAgFoodPlatformRpServicePrivateLinkResourcesListByDataManagerForAgricultureOptionalParams,
    settings?: PageSettings
  ): AsyncIterableIterator<AzureAgFoodPlatformRPServicePrivateLinkResource[]> {
    let result: AzureAgFoodPlatformRpServicePrivateLinkResourcesListByDataManagerForAgricultureResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._listByDataManagerForAgriculture(
        resourceGroupName,
        dataManagerForAgricultureResourceName,
        options
      );
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._listByDataManagerForAgricultureNext(
        resourceGroupName,
        dataManagerForAgricultureResourceName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *listByDataManagerForAgriculturePagingAll(
    resourceGroupName: string,
    dataManagerForAgricultureResourceName: string,
    options?: AzureAgFoodPlatformRpServicePrivateLinkResourcesListByDataManagerForAgricultureOptionalParams
  ): AsyncIterableIterator<AzureAgFoodPlatformRPServicePrivateLinkResource> {
    for await (const page of this.listByDataManagerForAgriculturePagingPage(
      resourceGroupName,
      dataManagerForAgricultureResourceName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * Get list of Private link resources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataManagerForAgricultureResourceName DataManagerForAgriculture resource name.
   * @param options The options parameters.
   */
  private _listByDataManagerForAgriculture(
    resourceGroupName: string,
    dataManagerForAgricultureResourceName: string,
    options?: AzureAgFoodPlatformRpServicePrivateLinkResourcesListByDataManagerForAgricultureOptionalParams
  ): Promise<
    AzureAgFoodPlatformRpServicePrivateLinkResourcesListByDataManagerForAgricultureResponse
  > {
    return this.client.sendOperationRequest(
      { resourceGroupName, dataManagerForAgricultureResourceName, options },
      listByDataManagerForAgricultureOperationSpec
    );
  }

  /**
   * Get Private link resource object.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataManagerForAgricultureResourceName DataManagerForAgriculture resource name.
   * @param subResourceName Sub resource name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    dataManagerForAgricultureResourceName: string,
    subResourceName: string,
    options?: AzureAgFoodPlatformRpServicePrivateLinkResourcesGetOptionalParams
  ): Promise<AzureAgFoodPlatformRpServicePrivateLinkResourcesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        dataManagerForAgricultureResourceName,
        subResourceName,
        options
      },
      getOperationSpec
    );
  }

  /**
   * ListByDataManagerForAgricultureNext
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dataManagerForAgricultureResourceName DataManagerForAgriculture resource name.
   * @param nextLink The nextLink from the previous successful call to the
   *                 ListByDataManagerForAgriculture method.
   * @param options The options parameters.
   */
  private _listByDataManagerForAgricultureNext(
    resourceGroupName: string,
    dataManagerForAgricultureResourceName: string,
    nextLink: string,
    options?: AzureAgFoodPlatformRpServicePrivateLinkResourcesListByDataManagerForAgricultureNextOptionalParams
  ): Promise<
    AzureAgFoodPlatformRpServicePrivateLinkResourcesListByDataManagerForAgricultureNextResponse
  > {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        dataManagerForAgricultureResourceName,
        nextLink,
        options
      },
      listByDataManagerForAgricultureNextOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listByDataManagerForAgricultureOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/privateLinkResources",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper:
        Mappers.AzureAgFoodPlatformRPServicePrivateLinkResourceListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId1,
    Parameters.resourceGroupName,
    Parameters.dataManagerForAgricultureResourceName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/privateLinkResources/{subResourceName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.AzureAgFoodPlatformRPServicePrivateLinkResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId1,
    Parameters.resourceGroupName,
    Parameters.dataManagerForAgricultureResourceName,
    Parameters.subResourceName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const listByDataManagerForAgricultureNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper:
        Mappers.AzureAgFoodPlatformRPServicePrivateLinkResourceListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  urlParameters: [
    Parameters.$host,
    Parameters.nextLink,
    Parameters.subscriptionId1,
    Parameters.resourceGroupName,
    Parameters.dataManagerForAgricultureResourceName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
