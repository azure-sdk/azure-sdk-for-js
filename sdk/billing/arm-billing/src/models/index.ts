/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Result of listing agreements. */
export interface AgreementListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of agreements.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Agreement[];
}

/** Details about billing profile associated with agreement and available only for specific agreements. */
export interface BillingProfileInfo {
  /** The unique identifier for the billing profile. */
  billingProfileId?: string;
  /** The name of the billing profile */
  billingProfileDisplayName?: string;
  /** Billing account name. This property is available for a specific type of agreement. */
  indirectRelationshipOrganizationName?: string;
}

/** The details about a participant. */
export interface Participants {
  /**
   * The acceptance status of the participant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * The date when the status got changed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusDate?: Date;
  /**
   * The email address of the participant.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly email?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources. */
export interface ArmResource {
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The error detail. */
export interface ArmError {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ArmError[];
  /**
   * The resource management error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ArmErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ArmErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: any;
}

/** The amount. */
export interface Amount {
  /**
   * The currency for the amount value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currency?: string;
  /** Amount value. */
  value?: number;
}

/** The list of billing accounts. */
export interface BillingAccountListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingAccount[];
}

/** The billing profiles associated with the billing account. By default this is not populated, unless it's specified in $expand. */
export interface BillingProfilesOnExpand {
  /**
   * Indicates whether there are more billing profiles than the ones listed in this collection. The collection lists a maximum of 50 billing profiles. To get all billing profiles, use the list billing profiles API.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hasMoreResults?: boolean;
  /** The billing profiles associated with the billing account. */
  value?: BillingProfile[];
}

/** Address details. */
export interface AddressDetails {
  /** Address line 1. */
  addressLine1: string;
  /** Address line 2. */
  addressLine2?: string;
  /** Address line 3. */
  addressLine3?: string;
  /** Address city. */
  city?: string;
  /** Company name. */
  companyName?: string;
  /** Country code uses IS02, 2-digit format. */
  country: string;
  /** Address district. */
  district?: string;
  /** Email address. */
  email?: string;
  /** First name. */
  firstName?: string;
  /** Last name. */
  lastName?: string;
  /** Middle name. */
  middleName?: string;
  /** Phone number. */
  phoneNumber?: string;
  /** Postal code. */
  postalCode?: string;
  /** Address region. */
  region?: string;
  /** Indicates if the address is incomplete. */
  isValidAddress?: boolean;
}

/** Details of the Azure plan. */
export interface AzurePlan {
  /**
   * The ID that uniquely identifies a sku.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuId?: string;
  /** The sku description. */
  skuDescription?: string;
}

/** The billing profile details of the partner of the customer for an indirect motion. */
export interface IndirectRelationshipInfo {
  /** The billing account name of the partner or the customer for an indirect motion. */
  billingAccountName?: string;
  /** The billing profile name of the partner or the customer for an indirect motion. */
  billingProfileName?: string;
  /** The display name of the partner or customer for an indirect motion. */
  displayName?: string;
}

/** The invoice sections associated to the billing profile. By default this is not populated, unless it's specified in $expand. */
export interface InvoiceSectionsOnExpand {
  /**
   * Indicates whether there are more invoice sections than the ones listed in this collection. The collection lists a maximum of 50 invoice sections. To get all invoice sections, use the list invoice sections API.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hasMoreResults?: boolean;
  /** The invoice sections associated to the billing profile. */
  value?: InvoiceSection[];
}

/** The properties of an enrollment. */
export interface Enrollment {
  /**
   * The billing cycle for the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingCycle?: string;
  /**
   * The channel type of the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly channel?: string;
  /**
   * The country code of the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countryCode?: string;
  /**
   * The billing currency for the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currency?: string;
  /** The end date of the enrollment. */
  endDate?: Date;
  /**
   * The language for the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly language?: string;
  /**
   * The policies for Enterprise Agreement enrollments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly policies?: EnrollmentPolicies;
  /** The start date of the enrollment. */
  startDate?: Date;
  /**
   * The current status of the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
}

/** The policies for Enterprise Agreement enrollments. */
export interface EnrollmentPolicies {
  /**
   * The policy that controls whether Account Owners can view charges.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountOwnerViewCharges?: boolean;
  /**
   * The policy that controls whether Department Administrators can view charges.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly departmentAdminViewCharges?: boolean;
  /**
   * The policy that controls whether Azure marketplace purchases are allowed in the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly marketplaceEnabled?: boolean;
  /**
   * The policy that controls whether Azure reservation purchases are allowed in the enrollment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reservedInstancesEnabled?: boolean;
}

/** The request properties of the billing account that can be updated. */
export interface BillingAccountUpdateRequest {
  /**
   * The current status of the billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountStatus?: AccountStatus;
  /**
   * The type of customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountType?: AccountType;
  /**
   * The type of agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agreementType?: AgreementType;
  /** The billing profiles associated with the billing account. By default this is not populated, unless it's specified in $expand. */
  billingProfiles?: BillingProfilesOnExpand;
  /** The departments associated to the enrollment. */
  departments?: Department[];
  /** The billing account name. */
  displayName?: string;
  /** The accounts associated to the enrollment. */
  enrollmentAccounts?: EnrollmentAccount[];
  /**
   * The details about the associated legacy enrollment. By default this is not populated, unless it's specified in $expand.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentDetails?: Enrollment;
  /**
   * Indicates whether user has read access to the billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hasReadAccess?: boolean;
  /** Notification email address, only for legacy accounts */
  notificationEmailAddress?: string;
  /** The address of the individual or organization that is responsible for the billing account. */
  soldTo?: AddressDetails;
}

/** The list of invoice section properties with create subscription permission. */
export interface InvoiceSectionListWithCreateSubPermissionResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** The list of invoice section properties with create subscription permission. */
  value?: InvoiceSectionWithCreateSubPermission[];
}

/** Invoice section properties with create subscription permission. */
export interface InvoiceSectionWithCreateSubPermission {
  /**
   * The name of the billing profile for the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID of the billing profile for the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * The billing profile spending limit.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileSpendingLimit?: SpendingLimitForBillingProfile;
  /**
   * The status of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileStatus?: BillingProfileStatus;
  /**
   * Reason for the specified billing profile status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileStatusReasonCode?: StatusReasonCodeForBillingProfile;
  /**
   * The system generated unique identifier for a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileSystemId?: string;
  /** Enabled azure plans for the associated billing profile. */
  enabledAzurePlans?: AzurePlan[];
  /**
   * The name of the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The ID of the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionId?: string;
  /**
   * The system generated unique identifier for an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionSystemId?: string;
}

/** Result of the address validation */
export interface ValidateAddressResponse {
  /** status of the address validation. */
  status?: AddressValidationStatus;
  /** The list of suggested addresses. */
  suggestedAddresses?: AddressDetails[];
  /** Validation error message. */
  validationMessage?: string;
}

/** Result of list billingPermissions a caller has on a billing account. */
export interface BillingPermissionsListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of billingPermissions a caller has on a billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingPermissionsProperties[];
}

/** The set of allowed action and not allowed actions a caller has on a billing account */
export interface BillingPermissionsProperties {
  /**
   * The set of actions that the caller is allowed to perform.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actions?: string[];
  /**
   * The set of actions that the caller is not allowed to perform.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly notActions?: string[];
}

/** The list of billing profiles. */
export interface BillingProfileListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * Total number of records.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalCount?: number;
  /**
   * The list of billing profiles.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingProfileAutoGenerated[];
}

/** The invoice sections associated to the billing profile. By default this is not populated, unless it's specified in $expand. */
export interface InvoiceSectionsOnExpandAutoGenerated {
  /**
   * Indicates whether there are more invoice sections than the ones listed in this collection. The collection lists a maximum of 50 invoice sections. To get all invoice sections, use the list invoice sections API.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hasMoreResults?: boolean;
  /** The invoice sections associated to the billing profile. */
  value?: InvoiceSection[];
}

/** The list of role assignments. */
export interface BillingRoleAssignmentListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of role assignments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingRoleAssignment[];
}

/** The list of role definitions. */
export interface BillingRoleDefinitionListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The role definitions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingRoleDefinition[];
}

/** The list of billing subscriptions. */
export interface BillingSubscriptionsListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * Total number of records.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalCount?: number;
  /**
   * The list of billing subscriptions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: BillingSubscription[];
}

/** Details of the reseller. */
export interface Reseller {
  /**
   * The name of the reseller.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * The MPN ID of the reseller.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resellerId?: string;
}

/** Request parameters to transfer billing subscription. */
export interface TransferBillingSubscriptionRequestProperties {
  /** The destination invoice section id. */
  destinationInvoiceSectionId: string;
}

/** Result of the transfer eligibility validation. */
export interface ValidateSubscriptionTransferEligibilityResult {
  /** Validation error details. */
  errorDetails?: ValidateSubscriptionTransferEligibilityError;
  /**
   * Specifies whether the subscription is eligible to be transferred.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isMoveEligible?: boolean;
}

/** Error details of the transfer eligibility validation */
export interface ValidateSubscriptionTransferEligibilityError {
  /** Error code for the product transfer validation. */
  code?: SubscriptionTransferValidationErrorCode;
  /** Detailed error message explaining the error. */
  details?: string;
  /** The error message. */
  message?: string;
}

/** The list of customers. */
export interface CustomerListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * Total number of records.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalCount?: number;
  /**
   * The list of customers.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Customer[];
}

/** The list of billing instructions used during invoice generation. */
export interface InstructionListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of billing instructions used during invoice generation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Instruction[];
}

/** A container for a list of resources */
export interface InvoiceListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Invoice[];
}

/** An invoice. */
export interface InvoicePropertiesAutoGenerated {
  /** The amount. */
  amountDue?: InvoicePropertiesAmountDue;
  /** The amount. */
  azurePrepaymentApplied?: InvoicePropertiesAzurePrepaymentApplied;
  /** The amount. */
  billedAmount?: InvoicePropertiesBilledAmount;
  /**
   * The Id of the active invoice which is originally billed after this invoice was voided. This field is applicable to the void invoices only.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billedDocumentId?: string;
  /**
   * The name of the billing profile for which the invoice is generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID of the billing profile for which the invoice is generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /** The amount. */
  creditAmount?: InvoicePropertiesCreditAmount;
  /**
   * The Id of the invoice which got voided and this credit note was issued as a result. This field is applicable to the credit notes only.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creditForDocumentId?: string;
  /**
   * List of documents available to download and view such as invoice, credit note, or tax receipt.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly documents?: InvoiceDocument[];
  /**
   * The type of the document.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly documentType?: InvoiceDocumentType;
  /**
   * Upcoming feature.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly chargeDate?: string;
  /**
   * The due date for the invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dueDate?: string;
  /**
   * List of failed payments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failedPayments?: FailedPayment[];
  /** The amount. */
  freeAzureCreditApplied?: InvoicePropertiesFreeAzureCreditApplied;
  /**
   * The date when the invoice was generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceDate?: string;
  /**
   * The end date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoicePeriodEndDate?: string;
  /**
   * The start date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoicePeriodStartDate?: string;
  /**
   * Invoice type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceType?: InvoiceType;
  /**
   * Specifies if the invoice is generated as part of monthly invoicing cycle or not. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isMonthlyInvoice?: boolean;
  /**
   * List of payments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly payments?: Payment[];
  /**
   * An optional purchase order number for the invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaseOrderNumber?: string;
  /** The rebill details of an invoice. */
  rebillDetails?: InvoicePropertiesRebillDetails;
  /**
   * The current status of the invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: InvoiceStatus;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly subscriptionDisplayName?: string;
  /**
   * The ID of the subscription for which the invoice is generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * Identifies the type of tax calculation used for the invoice. The field is applicable only to invoices with special tax calculation logic.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly specialTaxationType?: SpecialTaxationType;
  /** The amount. */
  subTotal?: InvoicePropertiesSubTotal;
  /** The amount. */
  taxAmount?: InvoicePropertiesTaxAmount;
  /** The amount. */
  totalAmount?: InvoicePropertiesTotalAmount;
  /** The details of refund request. */
  refundDetails?: InvoicePropertiesRefundDetails;
}

/** The properties of a document. */
export interface InvoiceDocument {
  /**
   * The document numbers for the invoice document.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly documentNumbers?: string[];
  /**
   * The URL to download the invoice document if the source is external to Microsoft.Billing.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly externalUrl?: string;
  /**
   * The type of the document.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kind?: InvoiceDocumentType;
  /**
   * The ID that uniquely identifies an invoice document. This ID may be an identifier for an invoice PDF, a credit note, or a tax receipt.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The URL to download the invoice document if the source is internal to Microsoft.Billing.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly url?: string;
}

/** A failed payment. */
export interface FailedPayment {
  /**
   * The date when the payment was attempted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly date?: string;
  /**
   * The reason that the payment failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failedPaymentReason?: FailedPaymentReason;
}

/** An invoice payment. */
export interface Payment {
  /** The amount. */
  amount?: PaymentAmount;
  /**
   * The date when the payment was made.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly date?: string;
  /**
   * The ID that uniquely identifies the payment method used for the invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentMethodId?: string;
  /**
   * The family of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentMethodFamily?: string;
  /**
   * The type of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentMethodType?: string;
  /**
   * The type of payment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentType?: string;
}

/** The rebill details of an invoice. */
export interface RebillDetails {
  /**
   * The ID of invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceDocumentId?: string;
  /**
   * The ID of credit note.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creditNoteDocumentId?: string;
  /**
   * The rebill details of an invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rebillDetails?: RebillDetails;
}

/** The details of refund request. */
export interface RefundDetailsSummary {
  /**
   * Date when the refund was requested.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requestedOn?: string;
  /**
   * Date when the refund was approved.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly approvedOn?: string;
  /**
   * Date when the refund was completed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly completedOn?: string;
  /** The amount. */
  amountRequested?: RefundDetailsSummaryAmountRequested;
  /** The amount. */
  amountRefunded?: RefundDetailsSummaryAmountRefunded;
  /**
   * The invoice ID of the rebill invoice for a refund.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rebillInvoiceId?: string;
  /**
   * The number of transactions refunded.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transactionCount?: number;
  /**
   * The status of refund request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly refundStatus?: RefundStatus;
  /**
   * The ID of refund operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly refundOperationId?: string;
  /**
   * The reason for refund.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly refundReason?: RefundReasonCode;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ArmErrorResponse {
  /** The error detail. */
  error?: ArmErrorResponseError;
}

/** A list of download details for individual documents. */
export interface DocumentDownloadRequest {
  /** The ID that uniquely identifies an invoice document. This ID may be an identifier for an invoice PDF, a credit note, or a tax receipt. If omitted, the most recent invoice PDF for the invoice will be returned. */
  documentName?: string;
  /** The ID that uniquely identifies an invoice. */
  invoiceName?: string;
}

/** A secure URL that can be used to download a an entity until the URL expires. */
export interface DocumentDownloadResult {
  /**
   * The time in UTC when the download URL will expire.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiryTime?: string;
  /**
   * The URL to the PDF file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly url?: string;
}

/** The list of invoice sections. */
export interface InvoiceSectionListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * Total number of records.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalCount?: number;
  /**
   * The list of invoice sections.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: InvoiceSection[];
}

/** The list of billing operations and a URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * URL to get the next set of operation list results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of billing operations supported by the Microsoft.Billing resource provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
}

/** A Billing REST API operation. */
export interface Operation {
  /** The object that represents the operation. */
  display?: OperationDisplay;
  /**
   * Identifies if the operation is a data operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /**
   * Operation name: {provider}/{resource}/{operation}.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
}

/** The object that represents the operation. */
export interface OperationDisplay {
  /**
   * Description of operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * Operation type such as read, write and delete.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * Service provider: Microsoft.Billing.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed such as invoice and billing subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
}

/** Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. */
export interface OperationsErrorResponse {
  /** The details of the error. */
  error?: OperationsErrorDetails;
}

/** The details of the error. */
export interface OperationsErrorDetails {
  /**
   * Error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The target of the particular error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
}

/** The list of payment method links. */
export interface PaymentMethodLinksListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of payment method links.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: PaymentMethodLink[];
}

/** Logo of payment method. */
export interface PaymentMethodLogo {
  /**
   * MIME type of the logo.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly mimeType?: string;
  /**
   * Public URL of image of the logo.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly url?: string;
}

/** The list of payment methods. */
export interface PaymentMethodsListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of payment methods.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: PaymentMethod[];
}

/** The list of products. It contains a list of available product summaries in reverse chronological order by purchase date. */
export interface ProductsListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * Total number of records.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalCount?: number;
  /**
   * The list of products.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Product[];
}

/** The properties of the product to initiate a transfer. */
export interface TransferProductRequestProperties {
  /** The destination invoice section id. */
  destinationInvoiceSectionId?: string;
}

/** Result of the product transfer eligibility validation. */
export interface ValidateProductTransferEligibilityResult {
  /** Validation error details. */
  errorDetails?: ValidateProductTransferEligibilityError;
  /**
   * Specifies whether the transfer is eligible or not.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isMoveEligible?: boolean;
}

/** Error details of the product transfer eligibility validation. */
export interface ValidateProductTransferEligibilityError {
  /** Error code for the product transfer validation. */
  code?: ProductTransferValidationErrorCode;
  /** Detailed error message explaining the error. */
  details?: string;
  /** The error message. */
  message?: string;
}

/** The list of reservations and summary of roll out count of reservations in each state. */
export interface ReservationsListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** The roll out count summary of the reservations */
  summary?: ReservationSummary;
  /**
   * The list of reservations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Reservation[];
}

/** The roll up count summary of reservations in each state */
export interface ReservationSummary {
  /**
   * The number of reservation in Cancelled state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cancelledCount?: number;
  /**
   * The number of reservation in Expired state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiredCount?: number;
  /**
   * The number of reservation in Expiring state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiringCount?: number;
  /**
   * The number of reservation in Failed state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failedCount?: number;
  /**
   * The number of reservation in Pending state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly pendingCount?: number;
  /**
   * The number of reservation in Succeeded state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly succeededCount?: number;
}

/** The definition of the reservation. */
export interface Reservation {
  /**
   * The id of the reservation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The location of the reservation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly location?: string;
  /**
   * The name of the reservation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** The sku information associated to this reservation */
  sku?: ReservationSkuProperty;
  /**
   * The type of the reservation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** The array of applied scopes of a reservation. Will be null if the reservation is in Shared scope */
  appliedScopes?: string[];
  /**
   * The applied scope type of the reservation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly appliedScopeType?: string;
  /**
   * The display name of the reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The provisioning state of the reservation for display, e.g. Succeeded
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayProvisioningState?: string;
  /**
   * The effective date time of the reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly effectiveDateTime?: string;
  /**
   * The expiry date of the reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiryDate?: string;
  /**
   * The provisioning state of the reservation, e.g. Succeeded
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * The provisioning state of the reservation, e.g. Succeeded
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningSubState?: string;
  /**
   * The number of the reservation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly quantity?: number;
  /**
   * The renew state of the reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly renew?: boolean;
  /**
   * The renew source of the reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly renewSource?: string;
  /**
   * The reserved source type of the reservation, e.g. virtual machine.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reservedResourceType?: string;
  /**
   * The sku description of the reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuDescription?: string;
  /**
   * The term of the reservation, e.g. P1Y
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly term?: string;
  /**
   * The applied scope type of the reservation for display, e.g. Shared
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly userFriendlyAppliedScopeType?: string;
  /**
   * The renew state of the reservation for display, e.g. On
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly userFriendlyRenewState?: string;
  /**
   * Reservation utilization
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly utilization?: ReservationPropertyUtilization;
}

/** Reservation utilization */
export interface ReservationPropertyUtilization {
  /** The array of aggregates of a reservation's utilization */
  aggregates?: ReservationUtilizationAggregates[];
  /**
   * The number of days trend for a reservation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly trend?: string;
}

/** The aggregate values of reservation utilization */
export interface ReservationUtilizationAggregates {
  /**
   * The grain of the aggregate
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly grain?: number;
  /**
   * The grain unit of the aggregate
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly grainUnit?: string;
  /**
   * The aggregate value
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: number;
  /**
   * The aggregate value unit
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly valueUnit?: string;
}

/** The property of reservation sku object. */
export interface ReservationSkuProperty {
  /**
   * The name of the reservation sku.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
}

/** A container for a list of resources */
export interface TransactionListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Transaction[];
}

/** A transaction. */
export interface TransactionPropertiesAutoGenerated {
  /** The amount. */
  azureCreditApplied?: TransactionPropertiesAzureCreditApplied;
  /** Details of the Azure plan. */
  azurePlan?: string;
  /** The ISO 4217 code for the currency in which this transaction is billed. */
  billingCurrency?: string;
  /** The name of the billing profile for the invoice section or customer. */
  billingProfileDisplayName?: any;
  /** The fully qualified ID that uniquely identifies a billing profile. */
  billingProfileId?: string;
  /** The amount. */
  consumptionCommitmentDecremented?: TransactionPropertiesConsumptionCommitmentDecremented;
  /** The name of the customer. */
  customerDisplayName?: string;
  /** The fully qualified ID that uniquely identifies a customer. */
  customerId?: string;
  /** The credit type of the transaction. Applies only to credited transactions. */
  creditType?: CreditType;
  /** The date of transaction. */
  date?: string;
  /** The percentage discount, if any, applied to this transaction. */
  discount?: number;
  /** The amount. */
  effectivePrice?: TransactionPropertiesEffectivePrice;
  /** The exchange rate used to convert charged amount to billing currency, if applicable. */
  exchangeRate?: number;
  /** Invoice on which the transaction was billed or 'pending' if the transaction is not billed. */
  invoice?: string;
  /** The ID of the invoice on which the transaction was billed. This field is only applicable for transactions which are billed. */
  invoiceId?: string;
  /** The name of the invoice section. */
  invoiceSectionDisplayName?: string;
  /** The fully qualified ID that uniquely identifies an invoice section. */
  invoiceSectionId?: string;
  /** Whether or not the transaction is third party. */
  isThirdParty?: boolean;
  /** Type of the transaction, billed or unbilled. */
  kind?: TransactionKind;
  /** The amount. */
  marketPrice?: TransactionPropertiesMarketPrice;
  /** The part number of the product for which the transaction took place. The field is only applicable for Enterprise Agreement invoices. */
  partNumber?: string;
  /** The ISO 4217 code for the currency in which the product is priced. */
  pricingCurrency?: string;
  /** The description of the product for which the transaction took place. */
  productDescription?: string;
  /** The family of the product for which the transaction took place. */
  productFamily?: string;
  /** The ID of the product type for which the transaction took place. */
  productTypeId?: string;
  /** The type of the product for which the transaction took place. */
  productType?: string;
  /** The quantity purchased in the transaction. */
  quantity?: number;
  /** There reason code for the transaction. */
  reasonCode?: string;
  /** The date of the purchase of the product, or the start date of the month in which usage started. */
  servicePeriodStartDate?: string;
  /** The end date of the product term, or the end date of the month in which usage ended. */
  servicePeriodEndDate?: string;
  /** The amount. */
  subTotal?: TransactionPropertiesSubTotal;
  /** The amount. */
  tax?: TransactionPropertiesTax;
  /** The amount. */
  transactionAmount?: TransactionPropertiesTransactionAmount;
  /** The type of transaction. */
  transactionType?: string;
  /** The number of units used for a given product. */
  units?: number;
  /** The unit of measure used to bill for the product. For example, compute services are billed per hour. */
  unitOfMeasure?: string;
  /** The description for the unit of measure for a given product. */
  unitType?: string;
  /** Identifies the type of tax calculation used for the invoice. The field is applicable only to invoices with special tax calculation logic. */
  specialTaxationType?: SpecialTaxationType;
  /** The refund details of a transaction. */
  refundTransactionDetails?: TransactionPropertiesRefundTransactionDetails;
}

/** The refund details of a transaction. */
export interface RefundTransactionDetails {
  /** The amount. */
  amountRequested?: RefundTransactionDetailsAmountRequested;
  /** The amount. */
  amountRefunded?: RefundTransactionDetailsAmountRefunded;
  /** The ID of refund operation. */
  refundOperationId?: string;
}

/** A transaction summary. */
export interface TransactionSummary {
  /**
   * The total amount of any Azure credits applied.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azureCreditApplied?: number;
  /**
   * The ISO 4217 code for the currency in which the transactions are billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingCurrency?: string;
  /**
   * The total Microsoft Azure Consumption Commitment (MACC) decrement through the invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly consumptionCommitmentDecremented?: number;
  /**
   * The total pre-tax charged amount.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subTotal?: number;
  /**
   * The total tax amount applied.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tax?: number;
  /**
   * The total charges.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly total?: number;
}

/** A container for a list of resources */
export interface EnrollmentAccountListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: EnrollmentAccountAutoGenerated[];
}

/** It is an organizational hierarchy within a billing account to administer and manage azure costs. */
export interface EnrollmentAccountPropertiesAutoGenerated {
  /** The cost center associated with the enrollment account. */
  costCenter?: string;
  /** The name of the enrollment account. */
  displayName?: string;
  /**
   * The name of the department under which the enrollment account exists.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly departmentDisplayName?: string;
  /**
   * The ID that uniquely identifies the department.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly departmentId?: string;
  /** Boolean flag which enables subscribers to run development and testing workloads on Azure at special Dev/Test rates. */
  isDevTestEnabled?: boolean;
  /**
   * The owner of the enrollment account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountOwner?: string;
  /**
   * The authorization type of the enrollment account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly authType?: string;
  /**
   * The status of the enrollment account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * The date from which the enrollment account became valid and functional.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startDate?: string;
  /**
   * The date of expiration of the enrollment account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endDate?: string;
}

/** Detailed transfer status. */
export interface DetailedTransferStatus {
  /**
   * Type of product that is transferred.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productType?: ProductType;
  /**
   * The ID of the product that is transferred.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productId?: string;
  /**
   * Transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transferStatus?: ProductTransferStatus;
  /** Error details for transfer execution. */
  errorDetails?: ErrorModel;
}

/** Error details for transfer execution. */
export interface ErrorModel {
  /**
   * Error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorCode?: string;
  /**
   * Error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessage?: string;
}

/** Request parameters to initiate transfer. */
export interface InitiateTransferRequest {
  /** The email ID of the recipient to whom the transfer request is sent. */
  recipientEmailId?: string;
}

/** The list of transfers initiated by caller. */
export interface TransferDetailsListResult {
  /**
   * The list of transfers initiated by caller.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: TransferDetails[];
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Request parameters to initiate partner transfer. */
export interface PartnerInitiateTransferRequest {
  /** The email ID of the recipient to whom the transfer request is sent. */
  recipientEmailId?: string;
  /** Optional MPN ID of the reseller for transfer requests that are sent from a Microsoft Partner Agreement billing account. */
  resellerId?: string;
}

/** The list of transfers initiated by partner. */
export interface PartnerTransferDetailsListResult {
  /**
   * The list of transfers initiated by partner.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: PartnerTransferDetails[];
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Request parameters to accept transfer. */
export interface AcceptTransferRequest {
  /** Request parameters to accept transfer. */
  productDetails?: ProductDetails[];
}

/** Details of the product that is transferred. */
export interface ProductDetails {
  /** Type of the product that is transferred. */
  productType?: ProductType;
  /** The ID of the product that is transferred. */
  productId?: string;
}

/** Result of transfer validation. */
export interface ValidateTransferListResponse {
  /**
   * The list of transfer validation results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ValidateTransferResponse[];
}

/** Transfer validation response. */
export interface ValidateTransferResponse {
  /**
   * The status of validation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * The product id for which this result applies.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productId?: string;
  /** The array of validation results. */
  results?: ValidationResultProperties[];
}

/** The properties of the validation result. */
export interface ValidationResultProperties {
  /**
   * Result Level.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly level?: string;
  /**
   * Result Code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The validation message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** The list of transfers received by caller. */
export interface RecipientTransferDetailsListResult {
  /**
   * The list of transfers received by caller.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: RecipientTransferDetails[];
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A container for a list of resources */
export interface DepartmentListResult {
  /**
   * The link (url) to the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /**
   * The list of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: DepartmentAutoGenerated[];
}

/** Optional grouping of enrollment accounts to segment costs into logical groupings and set budgets. */
export interface DepartmentPropertiesAutoGenerated {
  /** The cost center associated with the department. */
  costCenter?: string;
  /** The name of the department. */
  displayName?: string;
  /**
   * The ID that uniquely identifies the department.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The status of the department.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
}

/** The request parameters for creating a new billing profile. */
export interface BillingProfileCreationRequest {
  /** The address of the individual or organization that is responsible for the billing profile. */
  billTo?: AddressDetails;
  /** The name of the billing profile. */
  displayName?: string;
  /** Enabled azure plans for the billing profile. */
  enabledAzurePlans?: AzurePlan[];
  /** Flag controlling whether the invoices for the billing profile are sent through email. */
  invoiceEmailOptIn?: boolean;
  /** The purchase order name that will appear on the invoices generated for the billing profile. */
  poNumber?: string;
}

/** The properties of the invoice section. */
export interface InvoiceSectionCreationRequest {
  /** The name of the invoice section. */
  displayName?: string;
}

/** Query parameter to enumerate transfer requests. */
export interface TransferItemQueryParameter {
  /** State of the transfer request query filter. */
  state?: string;
}

/** Details of the reseller. */
export interface ResellerAutoGenerated {
  /**
   * The MPN ID of the reseller.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resellerId?: string;
  /**
   * The name of the reseller.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** An agreement. */
export interface Agreement extends ArmResource {
  /**
   * The mode of acceptance for an agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly acceptanceMode?: AcceptanceMode;
  /**
   * The URL to download the agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agreementLink?: string;
  /**
   * The list of billing profiles associated with agreement and present only for specific agreements.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileInfo?: BillingProfileInfo;
  /**
   * The category of the agreement signed by a customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly category?: Category;
  /**
   * The date from which the agreement is effective.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly effectiveDate?: Date;
  /**
   * The date when the agreement expires.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationDate?: Date;
  /** The list of participants that participates in acceptance of an agreement. */
  participants?: Participants[];
  /**
   * The current status of the agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
}

/** The latest Azure credit balance. This is the balance available for pay now. */
export interface AvailableBalance extends ArmResource {
  /**
   * Balance amount.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly amount?: Amount;
}

/** An invoice section. */
export interface InvoiceSection extends ArmResource {
  /** The name of the invoice section. */
  displayName?: string;
  /** Dictionary of metadata associated with the invoice section. */
  labels?: { [propertyName: string]: string };
  /**
   * Identifies the state of an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: InvoiceSectionState;
  /**
   * The system generated unique identifier for an invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemId?: string;
  /** Dictionary of metadata associated with the invoice section. Maximum key/value length supported of 256 characters. Keys/value should not empty value nor null. Keys can not contain < > % & \ ? / */
  tags?: { [propertyName: string]: string };
  /**
   * Identifies the cloud environments that are associated with an invoice section. This is a system managed optional field and gets updated as the invoice section gets associated with accounts in various clouds.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetCloud?: TargetCloud;
}

/** A billing profile. */
export interface BillingProfile extends ArmResource {
  /**
   * Identifies which services and purchases are paid by a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingRelationshipType?: BillingRelationshipType;
  /** Billing address. */
  billTo?: AddressDetails;
  /**
   * The currency in which the charges for the billing profile are billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currency?: string;
  /** The name of the billing profile. */
  displayName?: string;
  /** Information about the enabled azure plans. */
  enabledAzurePlans?: AzurePlan[];
  /**
   * Indicates whether user has read access to the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hasReadAccess?: boolean;
  /**
   * Identifies the billing profile that is linked to another billing profile in indirect purchase motion.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly indirectRelationshipInfo?: IndirectRelationshipInfo;
  /**
   * The day of the month when the invoice for the billing profile is generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceDay?: number;
  /** Flag controlling whether the invoices for the billing profile are sent through email. */
  invoiceEmailOptIn?: boolean;
  /** The invoice sections associated to the billing profile. By default this is not populated, unless it's specified in $expand. */
  invoiceSections?: InvoiceSectionsOnExpand;
  /** The purchase order name that will appear on the invoices generated for the billing profile. */
  poNumber?: string;
  /**
   * The billing profile spending limit.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly spendingLimit?: SpendingLimit;
  /**
   * The status of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: BillingProfileStatus;
  /**
   * Reason for the specified billing profile status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusReasonCode?: StatusReasonCode;
  /**
   * The system generated unique identifier for a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemId?: string;
  /** Tags of billing profiles. */
  tags?: { [propertyName: string]: string };
  /**
   * Identifies the cloud environments that are associated with a billing profile. This is a system managed optional field and gets updated as the billing profile gets associated with accounts in various clouds.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetClouds?: TargetCloud[];
}

/** An enrollment account. */
export interface EnrollmentAccount extends ArmResource {
  /** The name of the enrollment account. */
  accountName?: string;
  /** The owner of the enrollment account. */
  accountOwner?: string;
  /** The enrollment account owner email address. */
  accountOwnerEmail?: string;
  /** The cost center associated with the enrollment account. */
  costCenter?: string;
  /** Associated department. By default this is not populated, unless it's specified in $expand. */
  department?: Department;
  /** The end date of the enrollment account. */
  endDate?: Date;
  /** The start date of the enrollment account. */
  startDate?: Date;
  /** The status of the enrollment account. */
  status?: string;
}

/** A department. */
export interface Department extends ArmResource {
  /** The cost center associated with the department. */
  costCenter?: string;
  /** The name of the department. */
  departmentName?: string;
  /** Associated enrollment accounts. By default this is not populated, unless it's specified in $expand. */
  enrollmentAccounts?: EnrollmentAccount[];
  /** The status of the department. */
  status?: string;
}

/** A billing account. */
export interface BillingAccount extends ArmResource {
  /**
   * The current status of the billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountStatus?: AccountStatus;
  /**
   * The type of customer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountType?: AccountType;
  /**
   * The type of agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agreementType?: AgreementType;
  /** The billing profiles associated with the billing account. By default this is not populated, unless it's specified in $expand. */
  billingProfiles?: BillingProfilesOnExpand;
  /** The departments associated to the enrollment. */
  departments?: Department[];
  /** The billing account name. */
  displayName?: string;
  /** The accounts associated to the enrollment. */
  enrollmentAccounts?: EnrollmentAccount[];
  /**
   * The details about the associated legacy enrollment. By default this is not populated, unless it's specified in $expand.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enrollmentDetails?: Enrollment;
  /**
   * Indicates whether user has read access to the billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hasReadAccess?: boolean;
  /** Notification email address, only for legacy accounts */
  notificationEmailAddress?: string;
  /** The address of the individual or organization that is responsible for the billing account. */
  soldTo?: AddressDetails;
}

/** A billing profile. */
export interface BillingProfileAutoGenerated extends ArmResource {
  /**
   * Identifies which services and purchases are paid by a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingRelationshipType?: BillingRelationshipType;
  /** Billing address. */
  billTo?: AddressDetails;
  /**
   * The currency in which the charges for the billing profile are billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currency?: string;
  /** The name of the billing profile. */
  displayName?: string;
  /** Information about the enabled azure plans. */
  enabledAzurePlans?: AzurePlan[];
  /**
   * Indicates whether user has read access to the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hasReadAccess?: boolean;
  /**
   * Identifies the billing profile that is linked to another billing profile in indirect purchase motion.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly indirectRelationshipInfo?: IndirectRelationshipInfo;
  /**
   * The day of the month when the invoice for the billing profile is generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceDay?: number;
  /** Flag controlling whether the invoices for the billing profile are sent through email. */
  invoiceEmailOptIn?: boolean;
  /** The invoice sections associated to the billing profile. By default this is not populated, unless it's specified in $expand. */
  invoiceSections?: InvoiceSectionsOnExpandAutoGenerated;
  /** The purchase order name that will appear on the invoices generated for the billing profile. */
  poNumber?: string;
  /**
   * The billing profile spending limit.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly spendingLimit?: SpendingLimit;
  /**
   * The status of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: BillingProfileStatus;
  /**
   * Reason for the specified billing profile status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusReasonCode?: StatusReasonCode;
  /**
   * The system generated unique identifier for a billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemId?: string;
  /** Tags of billing profiles. */
  tags?: { [propertyName: string]: string };
  /**
   * Identifies the cloud environments that are associated with a billing profile. This is a system managed optional field and gets updated as the billing profile gets associated with accounts in various clouds.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetClouds?: TargetCloud[];
}

/** A billing property. */
export interface BillingProperty extends ArmResource {
  /**
   * The email address on which the account admin gets all Azure notifications.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountAdminNotificationEmailAddress?: string;
  /**
   * The name of the billing account to which the subscription is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountDisplayName?: string;
  /**
   * The ID of the billing account to which the subscription is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingAccountId?: string;
  /**
   * The name of the billing profile to which the subscription is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID of the billing profile to which the subscription is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * The billing profile spending limit.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileSpendingLimit?: BillingProfileSpendingLimit;
  /**
   * The status of the billing profile.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileStatus?: BillingProfileStatus;
  /**
   * Reason for the specified billing profile status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileStatusReasonCode?: BillingProfileStatusReasonCode;
  /**
   * The Azure AD tenant ID of the billing account for the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingTenantId?: string;
  /** The cost center applied to the subscription. */
  costCenter?: string;
  /**
   * The name of the invoice section to which the subscription is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The ID of the invoice section to which the subscription is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionId?: string;
  /**
   * Indicates whether user is the account admin.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isAccountAdmin?: boolean;
  /**
   * The product ID of the Azure plan.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productId?: string;
  /**
   * The product name of the Azure plan.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productName?: string;
  /**
   * The sku description of the Azure plan for the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuDescription?: string;
  /**
   * The sku ID of the Azure plan for the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuId?: string;
}

/** The role assignment */
export interface BillingRoleAssignment extends ArmResource {
  /**
   * The principal Id of the user who created the role assignment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdByPrincipalId?: string;
  /**
   * The tenant Id of the user who created the role assignment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdByPrincipalTenantId?: string;
  /**
   * The email address of the user who created the role assignment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdByUserEmailAddress?: string;
  /**
   * The date the role assignment was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdOn?: string;
  /** The principal id of the user to whom the role was assigned. */
  principalId?: string;
  /** The principal tenant id of the user to whom the role was assigned. */
  principalTenantId?: string;
  /** The ID of the role definition. */
  roleDefinitionId?: string;
  /**
   * The scope at which the role was assigned.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scope?: string;
  /** The authentication type. */
  userAuthenticationType?: string;
  /** The email address of the user. */
  userEmailAddress?: string;
}

/** The properties of a role definition. */
export interface BillingRoleDefinition extends ArmResource {
  /**
   * The role description
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /** The billingPermissions the role has */
  permissions?: BillingPermissionsProperties[];
  /**
   * The name of the role
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly roleName?: string;
}

/** A billing subscription. */
export interface BillingSubscription extends ArmResource {
  /**
   * The name of the billing profile to which the subscription is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID of the billing profile to which the subscription is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /** The cost center applied to the subscription. */
  costCenter?: string;
  /**
   * The name of the customer for whom the subscription was created. The field is applicable only for Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerDisplayName?: string;
  /**
   * The ID of the customer for whom the subscription was created. The field is applicable only for Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerId?: string;
  /**
   * The name of the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The name of the invoice section to which the subscription is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The ID of the invoice section to which the subscription is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionId?: string;
  /**
   * The last month charges.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastMonthCharges?: Amount;
  /**
   * The current month to date charges.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly monthToDateCharges?: Amount;
  /**
   * Reseller for this subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reseller?: Reseller;
  /**
   * The sku description of the Azure plan for the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuDescription?: string;
  /** The sku ID of the Azure plan for the subscription. */
  skuId?: string;
  /** The current billing status of the subscription. */
  subscriptionBillingStatus?: BillingSubscriptionStatusType;
  /**
   * The ID of the subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * The suspension reason for a subscription. Applies only to subscriptions in Microsoft Online Services Program billing accounts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly suspensionReasons?: string[];
}

/** A partner's customer. */
export interface Customer extends ArmResource {
  /**
   * The name of the billing profile for the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID of the billing profile for the invoice section.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /** The name of the customer. */
  displayName?: string;
  /** Azure plans enabled for the customer. */
  enabledAzurePlans?: AzurePlan[];
  /** The list of resellers for which an Azure plan is enabled for the customer. */
  resellers?: Reseller[];
}

/** An instruction. */
export interface Instruction extends ArmResource {
  /** The amount budgeted for this billing instruction. */
  amount?: number;
  /** The date this billing instruction was created. */
  creationDate?: Date;
  /** The date this billing instruction is no longer in effect. */
  endDate?: Date;
  /** The date this billing instruction goes into effect. */
  startDate?: Date;
}

/** An invoice. */
export interface Invoice extends ArmResource {
  /** The amount. */
  amountDue?: InvoicePropertiesAmountDue;
  /** The amount. */
  azurePrepaymentApplied?: InvoicePropertiesAzurePrepaymentApplied;
  /** The amount. */
  billedAmount?: InvoicePropertiesBilledAmount;
  /**
   * The Id of the active invoice which is originally billed after this invoice was voided. This field is applicable to the void invoices only.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billedDocumentId?: string;
  /**
   * The name of the billing profile for which the invoice is generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID of the billing profile for which the invoice is generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /** The amount. */
  creditAmount?: InvoicePropertiesCreditAmount;
  /**
   * The Id of the invoice which got voided and this credit note was issued as a result. This field is applicable to the credit notes only.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creditForDocumentId?: string;
  /**
   * List of documents available to download and view such as invoice, credit note, or tax receipt.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly documents?: InvoiceDocument[];
  /**
   * The type of the document.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly documentType?: InvoiceDocumentType;
  /**
   * Upcoming feature.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly chargeDate?: string;
  /**
   * The due date for the invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dueDate?: string;
  /**
   * List of failed payments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failedPayments?: FailedPayment[];
  /** The amount. */
  freeAzureCreditApplied?: InvoicePropertiesFreeAzureCreditApplied;
  /**
   * The date when the invoice was generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceDate?: string;
  /**
   * The end date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoicePeriodEndDate?: string;
  /**
   * The start date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoicePeriodStartDate?: string;
  /**
   * Invoice type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceType?: InvoiceType;
  /**
   * Specifies if the invoice is generated as part of monthly invoicing cycle or not. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isMonthlyInvoice?: boolean;
  /**
   * List of payments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly payments?: Payment[];
  /**
   * An optional purchase order number for the invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaseOrderNumber?: string;
  /** The rebill details of an invoice. */
  rebillDetails?: InvoicePropertiesRebillDetails;
  /**
   * The current status of the invoice.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: InvoiceStatus;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly subscriptionDisplayName?: string;
  /**
   * The ID of the subscription for which the invoice is generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
  /**
   * Identifies the type of tax calculation used for the invoice. The field is applicable only to invoices with special tax calculation logic.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly specialTaxationType?: SpecialTaxationType;
  /** The amount. */
  subTotal?: InvoicePropertiesSubTotal;
  /** The amount. */
  taxAmount?: InvoicePropertiesTaxAmount;
  /** The amount. */
  totalAmount?: InvoicePropertiesTotalAmount;
  /** The details of refund request. */
  refundDetails?: InvoicePropertiesRefundDetails;
}

/** A payment method link. */
export interface PaymentMethodLink extends ArmResource {
  /**
   * The account holder name for the payment method. This is only supported for payment methods with family CreditCard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountHolderName?: string;
  /**
   * The display name of the payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The expiration month and year of the payment method. This is only supported for payment methods with family CreditCard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiration?: string;
  /**
   * The family of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly family?: PaymentMethodFamily;
  /**
   * Last four digits of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastFourDigits?: string;
  /**
   * The list of logos for the payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly logos?: PaymentMethodLogo[];
  /** Id of payment method. Example: /providers/Microsoft.Billing/paymentMethods/ABCDABCDABC0 */
  paymentMethodId?: string;
  /**
   * The type of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentMethodType?: string;
  /**
   * Status of the payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: PaymentMethodStatus;
}

/** A payment method. */
export interface PaymentMethod extends ArmResource {
  /**
   * The account holder name for the payment method. This is only supported for payment methods with family CreditCard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountHolderName?: string;
  /**
   * The display name of the payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The expiration month and year of the payment method. This is only supported for payment methods with family CreditCard.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiration?: string;
  /** The family of payment method. */
  family?: PaymentMethodFamily;
  /**
   * Last four digits of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastFourDigits?: string;
  /** The list of logos for the payment method. */
  logos?: PaymentMethodLogo[];
  /**
   * The type of payment method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly paymentMethodType?: string;
  /** Status of the payment method. */
  status?: PaymentMethodStatus;
}

/** A policy. */
export interface Policy extends ArmResource {
  /** The policy that controls whether Azure marketplace purchases are allowed for a billing profile. */
  marketplacePurchases?: MarketplacePurchasesPolicy;
  /** The policy that controls whether Azure reservation purchases are allowed for a billing profile. */
  reservationPurchases?: ReservationPurchasesPolicy;
  /** The policy that controls whether users with Azure RBAC access to a subscription can view its charges. */
  viewCharges?: ViewChargesPolicy;
}

/** The customer's Policy. */
export interface CustomerPolicy extends ArmResource {
  /** The policy that controls whether the users in customer's organization can view charges at pay-as-you-go prices. */
  viewCharges?: ViewCharges;
}

/** A product. */
export interface Product extends ArmResource {
  /** Indicates whether auto renewal is turned on or off for a product. */
  autoRenew?: AutoRenew;
  /**
   * The availability of the product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availabilityId?: string;
  /** The frequency at which the product will be billed. */
  billingFrequency?: BillingFrequency;
  /**
   * The name of the billing profile to which the product is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID of the billing profile to which the product is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly billingProfileId?: string;
  /**
   * The name of the customer for whom the product was purchased. The field is applicable only for Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerDisplayName?: string;
  /**
   * The ID of the customer for whom the product was purchased. The field is applicable only for Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerId?: string;
  /**
   * The display name of the product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The date when the product will be renewed or canceled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endDate?: Date;
  /**
   * The name of the invoice section to which the product is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The ID of the invoice section to which the product is billed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly invoiceSectionId?: string;
  /**
   * The last month charges.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastCharge?: Amount;
  /**
   * The date of the last charge.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastChargeDate?: Date;
  /**
   * The description of the type of product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productType?: string;
  /**
   * The ID of the type of product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productTypeId?: string;
  /**
   * The date when the product was purchased.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaseDate?: Date;
  /**
   * The quantity purchased for the product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly quantity?: number;
  /**
   * Reseller for this product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reseller?: Reseller;
  /**
   * The sku description of the product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuDescription?: string;
  /**
   * The sku ID of the product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuId?: string;
  /** The current status of the product. */
  status?: ProductStatusType;
  /**
   * The id of the tenant in which the product is used.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
}

/** A transaction. */
export interface Transaction extends ArmResource {
  /** The amount. */
  azureCreditApplied?: TransactionPropertiesAzureCreditApplied;
  /** Details of the Azure plan. */
  azurePlan?: string;
  /** The ISO 4217 code for the currency in which this transaction is billed. */
  billingCurrency?: string;
  /** The name of the billing profile for the invoice section or customer. */
  billingProfileDisplayName?: any;
  /** The fully qualified ID that uniquely identifies a billing profile. */
  billingProfileId?: string;
  /** The amount. */
  consumptionCommitmentDecremented?: TransactionPropertiesConsumptionCommitmentDecremented;
  /** The name of the customer. */
  customerDisplayName?: string;
  /** The fully qualified ID that uniquely identifies a customer. */
  customerId?: string;
  /** The credit type of the transaction. Applies only to credited transactions. */
  creditType?: CreditType;
  /** The date of transaction. */
  date?: string;
  /** The percentage discount, if any, applied to this transaction. */
  discount?: number;
  /** The amount. */
  effectivePrice?: TransactionPropertiesEffectivePrice;
  /** The exchange rate used to convert charged amount to billing currency, if applicable. */
  exchangeRate?: number;
  /** Invoice on which the transaction was billed or 'pending' if the transaction is not billed. */
  invoice?: string;
  /** The ID of the invoice on which the transaction was billed. This field is only applicable for transactions which are billed. */
  invoiceId?: string;
  /** The name of the invoice section. */
  invoiceSectionDisplayName?: string;
  /** The fully qualified ID that uniquely identifies an invoice section. */
  invoiceSectionId?: string;
  /** Whether or not the transaction is third party. */
  isThirdParty?: boolean;
  /** Type of the transaction, billed or unbilled. */
  kind?: TransactionKind;
  /** The amount. */
  marketPrice?: TransactionPropertiesMarketPrice;
  /** The part number of the product for which the transaction took place. The field is only applicable for Enterprise Agreement invoices. */
  partNumber?: string;
  /** The ISO 4217 code for the currency in which the product is priced. */
  pricingCurrency?: string;
  /** The description of the product for which the transaction took place. */
  productDescription?: string;
  /** The family of the product for which the transaction took place. */
  productFamily?: string;
  /** The ID of the product type for which the transaction took place. */
  productTypeId?: string;
  /** The type of the product for which the transaction took place. */
  productType?: string;
  /** The quantity purchased in the transaction. */
  quantity?: number;
  /** There reason code for the transaction. */
  reasonCode?: string;
  /** The date of the purchase of the product, or the start date of the month in which usage started. */
  servicePeriodStartDate?: string;
  /** The end date of the product term, or the end date of the month in which usage ended. */
  servicePeriodEndDate?: string;
  /** The amount. */
  subTotal?: TransactionPropertiesSubTotal;
  /** The amount. */
  tax?: TransactionPropertiesTax;
  /** The amount. */
  transactionAmount?: TransactionPropertiesTransactionAmount;
  /** The type of transaction. */
  transactionType?: string;
  /** The number of units used for a given product. */
  units?: number;
  /** The unit of measure used to bill for the product. For example, compute services are billed per hour. */
  unitOfMeasure?: string;
  /** The description for the unit of measure for a given product. */
  unitType?: string;
  /** Identifies the type of tax calculation used for the invoice. The field is applicable only to invoices with special tax calculation logic. */
  specialTaxationType?: SpecialTaxationType;
  /** The refund details of a transaction. */
  refundTransactionDetails?: TransactionPropertiesRefundTransactionDetails;
}

/** It is an organizational hierarchy within a billing account to administer and manage azure costs. */
export interface EnrollmentAccountAutoGenerated extends ArmResource {
  /** The cost center associated with the enrollment account. */
  costCenter?: string;
  /** The name of the enrollment account. */
  displayName?: string;
  /**
   * The name of the department under which the enrollment account exists.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly departmentDisplayName?: string;
  /**
   * The ID that uniquely identifies the department.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly departmentId?: string;
  /** Boolean flag which enables subscribers to run development and testing workloads on Azure at special Dev/Test rates. */
  isDevTestEnabled?: boolean;
  /**
   * The owner of the enrollment account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountOwner?: string;
  /**
   * The authorization type of the enrollment account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly authType?: string;
  /**
   * The status of the enrollment account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * The date from which the enrollment account became valid and functional.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startDate?: string;
  /**
   * The date of expiration of the enrollment account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endDate?: string;
}

/** Details of the transfer. */
export interface TransferDetails extends ArmResource {
  /**
   * The time at which the transfer request expires.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationTime?: Date;
  /**
   * Overall transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transferStatus?: TransferStatus;
  /**
   * The email ID of the user to whom the transfer request was sent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recipientEmailId?: string;
  /**
   * The email ID of the user who sent the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initiatorEmailId?: string;
  /**
   * The email ID of the user who canceled the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly canceledBy?: string;
  /**
   * Detailed transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly detailedTransferStatus?: DetailedTransferStatus[];
}

/** Details of the transfer. */
export interface PartnerTransferDetails extends ArmResource {
  /**
   * The time at which the transfer request expires.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationTime?: Date;
  /**
   * Overall transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transferStatus?: TransferStatus;
  /**
   * The email ID of the user to whom the transfer request was sent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recipientEmailId?: string;
  /**
   * The email ID of the user who sent the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initiatorEmailId?: string;
  /**
   * Optional MPN ID of the reseller for transfer requests that are sent from a Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resellerId?: string;
  /**
   * Optional name of the reseller for transfer requests that are sent from Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resellerName?: string;
  /**
   * The email ID of the user who canceled the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly canceledBy?: string;
  /**
   * Detailed transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly detailedTransferStatus?: DetailedTransferStatus[];
}

/** Details of the transfer. */
export interface RecipientTransferDetails extends ArmResource {
  /**
   * The time at which the transfer request expires.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expirationTime?: Date;
  /**
   * Type of subscriptions that can be transferred.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allowedProductType?: EligibleProductType[];
  /**
   * Overall transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly transferStatus?: TransferStatus;
  /**
   * The email ID of the user to whom the transfer request was sent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recipientEmailId?: string;
  /**
   * The email ID of the user who sent the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initiatorEmailId?: string;
  /**
   * Optional MPN ID of the reseller for transfer requests that are sent from a Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resellerId?: string;
  /**
   * Optional name of the reseller for transfer requests that are sent from Microsoft Partner Agreement billing account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resellerName?: string;
  /**
   * The type of customer who sent the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly initiatorCustomerType?: string;
  /**
   * The email ID of the user who canceled the transfer request.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly canceledBy?: string;
  /**
   * Detailed transfer status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly detailedTransferStatus?: DetailedTransferStatus[];
  /**
   * The customer tenant id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customerTenantId?: string;
  /**
   * List of supported account types.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly supportedAccounts?: SupportedAccountType[];
}

/** Optional grouping of enrollment accounts to segment costs into logical groupings and set budgets. */
export interface DepartmentAutoGenerated extends ArmResource {
  /** The cost center associated with the department. */
  costCenter?: string;
  /** The name of the department. */
  displayName?: string;
  /**
   * The ID that uniquely identifies the department.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly idPropertiesId?: string;
  /**
   * The status of the department.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
}

/** The error detail. */
export interface ArmErrorResponseError extends ArmError {}

/** The amount. */
export interface InvoicePropertiesAmountDue extends Amount {}

/** The amount. */
export interface InvoicePropertiesAzurePrepaymentApplied extends Amount {}

/** The amount. */
export interface InvoicePropertiesBilledAmount extends Amount {}

/** The amount. */
export interface InvoicePropertiesCreditAmount extends Amount {}

/** The amount. */
export interface InvoicePropertiesFreeAzureCreditApplied extends Amount {}

/** The amount. */
export interface PaymentAmount extends Amount {}

/** The amount. */
export interface InvoicePropertiesSubTotal extends Amount {}

/** The amount. */
export interface InvoicePropertiesTaxAmount extends Amount {}

/** The amount. */
export interface InvoicePropertiesTotalAmount extends Amount {}

/** The amount. */
export interface RefundDetailsSummaryAmountRequested extends Amount {}

/** The amount. */
export interface RefundDetailsSummaryAmountRefunded extends Amount {}

/** The amount. */
export interface TransactionPropertiesAzureCreditApplied extends Amount {}

/** The amount. */
export interface TransactionPropertiesConsumptionCommitmentDecremented
  extends Amount {}

/** The amount. */
export interface TransactionPropertiesEffectivePrice extends Amount {}

/** The amount. */
export interface TransactionPropertiesMarketPrice extends Amount {}

/** The amount. */
export interface TransactionPropertiesSubTotal extends Amount {}

/** The amount. */
export interface TransactionPropertiesTax extends Amount {}

/** The amount. */
export interface TransactionPropertiesTransactionAmount extends Amount {}

/** The amount. */
export interface RefundTransactionDetailsAmountRequested extends Amount {}

/** The amount. */
export interface RefundTransactionDetailsAmountRefunded extends Amount {}

/** The properties of a(n) Invoice */
export interface InvoiceProperties extends InvoicePropertiesAutoGenerated {}

/** The rebill details of an invoice. */
export interface InvoicePropertiesRebillDetails extends RebillDetails {}

/** The details of refund request. */
export interface InvoicePropertiesRefundDetails extends RefundDetailsSummary {}

/** The properties of a(n) Transaction */
export interface TransactionProperties
  extends TransactionPropertiesAutoGenerated {}

/** The refund details of a transaction. */
export interface TransactionPropertiesRefundTransactionDetails
  extends RefundTransactionDetails {}

/** The properties of a(n) EnrollmentAccount */
export interface EnrollmentAccountProperties
  extends EnrollmentAccountPropertiesAutoGenerated {}

/** The properties of a(n) Department */
export interface DepartmentProperties
  extends DepartmentPropertiesAutoGenerated {}

/** Defines headers for BillingAccounts_update operation. */
export interface BillingAccountsUpdateHeaders {
  location?: string;
}

/** Defines headers for BillingProfiles_createOrUpdate operation. */
export interface BillingProfilesCreateOrUpdateHeaders {
  /** Location URI to poll for result */
  location?: string;
  /** Recommended time to wait before making another request to check the status of the operation. The time is specified in seconds. */
  retryAfter?: number;
}

/** Defines headers for BillingSubscriptions_move operation. */
export interface BillingSubscriptionsMoveHeaders {
  /** Location URI to poll for result. */
  location?: string;
  /** Recommended time to wait before making another request to check the status of the operation. The time is specified in seconds. */
  retryAfter?: number;
}

/** Defines headers for Invoices_downloadMultipleByBillingAccount operation. */
export interface InvoicesDownloadMultipleByBillingAccountHeaders {
  location?: string;
}

/** Defines headers for Invoices_amend operation. */
export interface InvoicesAmendHeaders {
  location?: string;
}

/** Defines headers for Invoices_downloadByBillingAccount operation. */
export interface InvoicesDownloadByBillingAccountHeaders {
  location?: string;
}

/** Defines headers for Invoices_downloadSummaryByBillingAccount operation. */
export interface InvoicesDownloadSummaryByBillingAccountHeaders {
  location?: string;
}

/** Defines headers for Invoices_downloadMultipleByBillingSubscription operation. */
export interface InvoicesDownloadMultipleByBillingSubscriptionHeaders {
  location?: string;
}

/** Defines headers for Invoices_downloadByBillingSubscription operation. */
export interface InvoicesDownloadByBillingSubscriptionHeaders {
  location?: string;
}

/** Defines headers for InvoiceSections_createOrUpdate operation. */
export interface InvoiceSectionsCreateOrUpdateHeaders {
  /** Location URI to poll for result */
  location?: string;
  /** Recommended time to wait before making another request to check the status of the operation. The time is specified in seconds. */
  retryAfter?: number;
}

/** Defines headers for Products_move operation. */
export interface ProductsMoveHeaders {
  /** Location URI to poll for result */
  location?: string;
  /** Recommended time to wait before making another request to check the status of the operation. The time is specified in seconds. */
  retryAfter?: number;
}

/** Defines headers for Transactions_downloadByInvoice operation. */
export interface TransactionsDownloadByInvoiceHeaders {
  location?: string;
}

/** Known values of {@link AcceptanceMode} that the service accepts. */
export enum KnownAcceptanceMode {
  /** ClickToAccept */
  ClickToAccept = "ClickToAccept",
  /** ESignEmbedded */
  ESignEmbedded = "ESignEmbedded",
  /** ESignOffline */
  ESignOffline = "ESignOffline"
}

/**
 * Defines values for AcceptanceMode. \
 * {@link KnownAcceptanceMode} can be used interchangeably with AcceptanceMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ClickToAccept** \
 * **ESignEmbedded** \
 * **ESignOffline**
 */
export type AcceptanceMode = string;

/** Known values of {@link Category} that the service accepts. */
export enum KnownCategory {
  /** MicrosoftCustomerAgreement */
  MicrosoftCustomerAgreement = "MicrosoftCustomerAgreement",
  /** AffiliatePurchaseTerms */
  AffiliatePurchaseTerms = "AffiliatePurchaseTerms",
  /** Other */
  Other = "Other"
}

/**
 * Defines values for Category. \
 * {@link KnownCategory} can be used interchangeably with Category,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MicrosoftCustomerAgreement** \
 * **AffiliatePurchaseTerms** \
 * **Other**
 */
export type Category = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link AccountStatus} that the service accepts. */
export enum KnownAccountStatus {
  /** Active */
  Active = "Active",
  /** Deleted */
  Deleted = "Deleted",
  /** Disabled */
  Disabled = "Disabled",
  /** Expired */
  Expired = "Expired",
  /** Transferred */
  Transferred = "Transferred",
  /** Extended */
  Extended = "Extended",
  /** Terminated */
  Terminated = "Terminated"
}

/**
 * Defines values for AccountStatus. \
 * {@link KnownAccountStatus} can be used interchangeably with AccountStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active** \
 * **Deleted** \
 * **Disabled** \
 * **Expired** \
 * **Transferred** \
 * **Extended** \
 * **Terminated**
 */
export type AccountStatus = string;

/** Known values of {@link AccountType} that the service accepts. */
export enum KnownAccountType {
  /** Enterprise */
  Enterprise = "Enterprise",
  /** Individual */
  Individual = "Individual",
  /** Partner */
  Partner = "Partner"
}

/**
 * Defines values for AccountType. \
 * {@link KnownAccountType} can be used interchangeably with AccountType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enterprise** \
 * **Individual** \
 * **Partner**
 */
export type AccountType = string;

/** Known values of {@link AgreementType} that the service accepts. */
export enum KnownAgreementType {
  /** MicrosoftCustomerAgreement */
  MicrosoftCustomerAgreement = "MicrosoftCustomerAgreement",
  /** EnterpriseAgreement */
  EnterpriseAgreement = "EnterpriseAgreement",
  /** MicrosoftOnlineServicesProgram */
  MicrosoftOnlineServicesProgram = "MicrosoftOnlineServicesProgram",
  /** MicrosoftPartnerAgreement */
  MicrosoftPartnerAgreement = "MicrosoftPartnerAgreement"
}

/**
 * Defines values for AgreementType. \
 * {@link KnownAgreementType} can be used interchangeably with AgreementType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MicrosoftCustomerAgreement** \
 * **EnterpriseAgreement** \
 * **MicrosoftOnlineServicesProgram** \
 * **MicrosoftPartnerAgreement**
 */
export type AgreementType = string;

/** Known values of {@link BillingRelationshipType} that the service accepts. */
export enum KnownBillingRelationshipType {
  /** Direct */
  Direct = "Direct",
  /** IndirectCustomer */
  IndirectCustomer = "IndirectCustomer",
  /** IndirectPartner */
  IndirectPartner = "IndirectPartner",
  /** CSPPartner */
  CSPPartner = "CSPPartner"
}

/**
 * Defines values for BillingRelationshipType. \
 * {@link KnownBillingRelationshipType} can be used interchangeably with BillingRelationshipType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Direct** \
 * **IndirectCustomer** \
 * **IndirectPartner** \
 * **CSPPartner**
 */
export type BillingRelationshipType = string;

/** Known values of {@link InvoiceSectionState} that the service accepts. */
export enum KnownInvoiceSectionState {
  /** Active */
  Active = "Active",
  /** Restricted */
  Restricted = "Restricted"
}

/**
 * Defines values for InvoiceSectionState. \
 * {@link KnownInvoiceSectionState} can be used interchangeably with InvoiceSectionState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active** \
 * **Restricted**
 */
export type InvoiceSectionState = string;

/** Known values of {@link TargetCloud} that the service accepts. */
export enum KnownTargetCloud {
  /** USGov */
  USGov = "USGov",
  /** USNat */
  USNat = "USNat",
  /** USSec */
  USSec = "USSec"
}

/**
 * Defines values for TargetCloud. \
 * {@link KnownTargetCloud} can be used interchangeably with TargetCloud,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **USGov** \
 * **USNat** \
 * **USSec**
 */
export type TargetCloud = string;

/** Known values of {@link SpendingLimit} that the service accepts. */
export enum KnownSpendingLimit {
  /** Off */
  Off = "Off",
  /** On */
  On = "On"
}

/**
 * Defines values for SpendingLimit. \
 * {@link KnownSpendingLimit} can be used interchangeably with SpendingLimit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Off** \
 * **On**
 */
export type SpendingLimit = string;

/** Known values of {@link BillingProfileStatus} that the service accepts. */
export enum KnownBillingProfileStatus {
  /** Active */
  Active = "Active",
  /** Disabled */
  Disabled = "Disabled",
  /** Warned */
  Warned = "Warned"
}

/**
 * Defines values for BillingProfileStatus. \
 * {@link KnownBillingProfileStatus} can be used interchangeably with BillingProfileStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active** \
 * **Disabled** \
 * **Warned**
 */
export type BillingProfileStatus = string;

/** Known values of {@link StatusReasonCode} that the service accepts. */
export enum KnownStatusReasonCode {
  /** PastDue */
  PastDue = "PastDue",
  /** SpendingLimitReached */
  SpendingLimitReached = "SpendingLimitReached",
  /** SpendingLimitExpired */
  SpendingLimitExpired = "SpendingLimitExpired"
}

/**
 * Defines values for StatusReasonCode. \
 * {@link KnownStatusReasonCode} can be used interchangeably with StatusReasonCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PastDue** \
 * **SpendingLimitReached** \
 * **SpendingLimitExpired**
 */
export type StatusReasonCode = string;

/** Known values of {@link SpendingLimitForBillingProfile} that the service accepts. */
export enum KnownSpendingLimitForBillingProfile {
  /** Off */
  Off = "Off",
  /** On */
  On = "On"
}

/**
 * Defines values for SpendingLimitForBillingProfile. \
 * {@link KnownSpendingLimitForBillingProfile} can be used interchangeably with SpendingLimitForBillingProfile,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Off** \
 * **On**
 */
export type SpendingLimitForBillingProfile = string;

/** Known values of {@link StatusReasonCodeForBillingProfile} that the service accepts. */
export enum KnownStatusReasonCodeForBillingProfile {
  /** PastDue */
  PastDue = "PastDue",
  /** SpendingLimitReached */
  SpendingLimitReached = "SpendingLimitReached",
  /** SpendingLimitExpired */
  SpendingLimitExpired = "SpendingLimitExpired"
}

/**
 * Defines values for StatusReasonCodeForBillingProfile. \
 * {@link KnownStatusReasonCodeForBillingProfile} can be used interchangeably with StatusReasonCodeForBillingProfile,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PastDue** \
 * **SpendingLimitReached** \
 * **SpendingLimitExpired**
 */
export type StatusReasonCodeForBillingProfile = string;

/** Known values of {@link AddressValidationStatus} that the service accepts. */
export enum KnownAddressValidationStatus {
  /** Valid */
  Valid = "Valid",
  /** Invalid */
  Invalid = "Invalid"
}

/**
 * Defines values for AddressValidationStatus. \
 * {@link KnownAddressValidationStatus} can be used interchangeably with AddressValidationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Valid** \
 * **Invalid**
 */
export type AddressValidationStatus = string;

/** Known values of {@link BillingProfileSpendingLimit} that the service accepts. */
export enum KnownBillingProfileSpendingLimit {
  /** Off */
  Off = "Off",
  /** On */
  On = "On"
}

/**
 * Defines values for BillingProfileSpendingLimit. \
 * {@link KnownBillingProfileSpendingLimit} can be used interchangeably with BillingProfileSpendingLimit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Off** \
 * **On**
 */
export type BillingProfileSpendingLimit = string;

/** Known values of {@link BillingProfileStatusReasonCode} that the service accepts. */
export enum KnownBillingProfileStatusReasonCode {
  /** PastDue */
  PastDue = "PastDue",
  /** SpendingLimitReached */
  SpendingLimitReached = "SpendingLimitReached",
  /** SpendingLimitExpired */
  SpendingLimitExpired = "SpendingLimitExpired"
}

/**
 * Defines values for BillingProfileStatusReasonCode. \
 * {@link KnownBillingProfileStatusReasonCode} can be used interchangeably with BillingProfileStatusReasonCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PastDue** \
 * **SpendingLimitReached** \
 * **SpendingLimitExpired**
 */
export type BillingProfileStatusReasonCode = string;

/** Known values of {@link BillingSubscriptionStatusType} that the service accepts. */
export enum KnownBillingSubscriptionStatusType {
  /** Active */
  Active = "Active",
  /** Inactive */
  Inactive = "Inactive",
  /** Abandoned */
  Abandoned = "Abandoned",
  /** Deleted */
  Deleted = "Deleted",
  /** Warning */
  Warning = "Warning"
}

/**
 * Defines values for BillingSubscriptionStatusType. \
 * {@link KnownBillingSubscriptionStatusType} can be used interchangeably with BillingSubscriptionStatusType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active** \
 * **Inactive** \
 * **Abandoned** \
 * **Deleted** \
 * **Warning**
 */
export type BillingSubscriptionStatusType = string;

/** Known values of {@link SubscriptionTransferValidationErrorCode} that the service accepts. */
export enum KnownSubscriptionTransferValidationErrorCode {
  /** BillingAccountInactive */
  BillingAccountInactive = "BillingAccountInactive",
  /** CrossBillingAccountNotAllowed */
  CrossBillingAccountNotAllowed = "CrossBillingAccountNotAllowed",
  /** DestinationBillingProfileInactive */
  DestinationBillingProfileInactive = "DestinationBillingProfileInactive",
  /** DestinationBillingProfileNotFound */
  DestinationBillingProfileNotFound = "DestinationBillingProfileNotFound",
  /** DestinationBillingProfilePastDue */
  DestinationBillingProfilePastDue = "DestinationBillingProfilePastDue",
  /** DestinationInvoiceSectionInactive */
  DestinationInvoiceSectionInactive = "DestinationInvoiceSectionInactive",
  /** DestinationInvoiceSectionNotFound */
  DestinationInvoiceSectionNotFound = "DestinationInvoiceSectionNotFound",
  /** InsufficientPermissionOnDestination */
  InsufficientPermissionOnDestination = "InsufficientPermissionOnDestination",
  /** InsufficientPermissionOnSource */
  InsufficientPermissionOnSource = "InsufficientPermissionOnSource",
  /** InvalidDestination */
  InvalidDestination = "InvalidDestination",
  /** InvalidSource */
  InvalidSource = "InvalidSource",
  /** MarketplaceNotEnabledOnDestination */
  MarketplaceNotEnabledOnDestination = "MarketplaceNotEnabledOnDestination",
  /** NotAvailableForDestinationMarket */
  NotAvailableForDestinationMarket = "NotAvailableForDestinationMarket",
  /** ProductInactive */
  ProductInactive = "ProductInactive",
  /** ProductNotFound */
  ProductNotFound = "ProductNotFound",
  /** ProductTypeNotSupported */
  ProductTypeNotSupported = "ProductTypeNotSupported",
  /** SourceBillingProfilePastDue */
  SourceBillingProfilePastDue = "SourceBillingProfilePastDue",
  /** SourceInvoiceSectionInactive */
  SourceInvoiceSectionInactive = "SourceInvoiceSectionInactive",
  /** SubscriptionNotActive */
  SubscriptionNotActive = "SubscriptionNotActive",
  /** SubscriptionTypeNotSupported */
  SubscriptionTypeNotSupported = "SubscriptionTypeNotSupported"
}

/**
 * Defines values for SubscriptionTransferValidationErrorCode. \
 * {@link KnownSubscriptionTransferValidationErrorCode} can be used interchangeably with SubscriptionTransferValidationErrorCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BillingAccountInactive** \
 * **CrossBillingAccountNotAllowed** \
 * **DestinationBillingProfileInactive** \
 * **DestinationBillingProfileNotFound** \
 * **DestinationBillingProfilePastDue** \
 * **DestinationInvoiceSectionInactive** \
 * **DestinationInvoiceSectionNotFound** \
 * **InsufficientPermissionOnDestination** \
 * **InsufficientPermissionOnSource** \
 * **InvalidDestination** \
 * **InvalidSource** \
 * **MarketplaceNotEnabledOnDestination** \
 * **NotAvailableForDestinationMarket** \
 * **ProductInactive** \
 * **ProductNotFound** \
 * **ProductTypeNotSupported** \
 * **SourceBillingProfilePastDue** \
 * **SourceInvoiceSectionInactive** \
 * **SubscriptionNotActive** \
 * **SubscriptionTypeNotSupported**
 */
export type SubscriptionTransferValidationErrorCode = string;

/** Known values of {@link InvoiceDocumentType} that the service accepts. */
export enum KnownInvoiceDocumentType {
  /** Unknown */
  Unknown = "Unknown",
  /** Invoice */
  Invoice = "Invoice",
  /** VoidNote */
  VoidNote = "VoidNote",
  /** TaxReceipt */
  TaxReceipt = "TaxReceipt",
  /** CreditNote */
  CreditNote = "CreditNote",
  /** Summary */
  Summary = "Summary",
  /** Transactions */
  Transactions = "Transactions"
}

/**
 * Defines values for InvoiceDocumentType. \
 * {@link KnownInvoiceDocumentType} can be used interchangeably with InvoiceDocumentType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Invoice** \
 * **VoidNote** \
 * **TaxReceipt** \
 * **CreditNote** \
 * **Summary** \
 * **Transactions**
 */
export type InvoiceDocumentType = string;

/** Known values of {@link FailedPaymentReason} that the service accepts. */
export enum KnownFailedPaymentReason {
  /** Other */
  Other = "Other",
  /** BankDeclined */
  BankDeclined = "BankDeclined",
  /** CardExpired */
  CardExpired = "CardExpired",
  /** IncorrectCardDetails */
  IncorrectCardDetails = "IncorrectCardDetails"
}

/**
 * Defines values for FailedPaymentReason. \
 * {@link KnownFailedPaymentReason} can be used interchangeably with FailedPaymentReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **BankDeclined** \
 * **CardExpired** \
 * **IncorrectCardDetails**
 */
export type FailedPaymentReason = string;

/** Known values of {@link InvoiceType} that the service accepts. */
export enum KnownInvoiceType {
  /** Unknown */
  Unknown = "Unknown",
  /** AzureServices */
  AzureServices = "AzureServices",
  /** AzureMarketplace */
  AzureMarketplace = "AzureMarketplace",
  /** AzureSupport */
  AzureSupport = "AzureSupport"
}

/**
 * Defines values for InvoiceType. \
 * {@link KnownInvoiceType} can be used interchangeably with InvoiceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **AzureServices** \
 * **AzureMarketplace** \
 * **AzureSupport**
 */
export type InvoiceType = string;

/** Known values of {@link InvoiceStatus} that the service accepts. */
export enum KnownInvoiceStatus {
  /** Unknown */
  Unknown = "Unknown",
  /** Due */
  Due = "Due",
  /** OverDue */
  OverDue = "OverDue",
  /** Paid */
  Paid = "Paid",
  /** Void */
  Void = "Void",
  /** Locked */
  Locked = "Locked"
}

/**
 * Defines values for InvoiceStatus. \
 * {@link KnownInvoiceStatus} can be used interchangeably with InvoiceStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Due** \
 * **OverDue** \
 * **Paid** \
 * **Void** \
 * **Locked**
 */
export type InvoiceStatus = string;

/** Known values of {@link SpecialTaxationType} that the service accepts. */
export enum KnownSpecialTaxationType {
  /** SubtotalLevel */
  SubtotalLevel = "SubtotalLevel",
  /** InvoiceLevel */
  InvoiceLevel = "InvoiceLevel"
}

/**
 * Defines values for SpecialTaxationType. \
 * {@link KnownSpecialTaxationType} can be used interchangeably with SpecialTaxationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SubtotalLevel** \
 * **InvoiceLevel**
 */
export type SpecialTaxationType = string;

/** Known values of {@link RefundStatus} that the service accepts. */
export enum KnownRefundStatus {
  /** Unknown */
  Unknown = "Unknown",
  /** Pending */
  Pending = "Pending",
  /** Approved */
  Approved = "Approved",
  /** Declined */
  Declined = "Declined",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** Completed */
  Completed = "Completed",
  /** Expired */
  Expired = "Expired"
}

/**
 * Defines values for RefundStatus. \
 * {@link KnownRefundStatus} can be used interchangeably with RefundStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Pending** \
 * **Approved** \
 * **Declined** \
 * **Cancelled** \
 * **Completed** \
 * **Expired**
 */
export type RefundStatus = string;

/** Known values of {@link RefundReasonCode} that the service accepts. */
export enum KnownRefundReasonCode {
  /** Unknown */
  Unknown = "Unknown",
  /** Other */
  Other = "Other",
  /** AccidentalConversion */
  AccidentalConversion = "AccidentalConversion",
  /** UnclearPricing */
  UnclearPricing = "UnclearPricing",
  /** AccidentalPurchase */
  AccidentalPurchase = "AccidentalPurchase",
  /** ForgotToCancel */
  ForgotToCancel = "ForgotToCancel",
  /** UnclearDocumentation */
  UnclearDocumentation = "UnclearDocumentation"
}

/**
 * Defines values for RefundReasonCode. \
 * {@link KnownRefundReasonCode} can be used interchangeably with RefundReasonCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Other** \
 * **AccidentalConversion** \
 * **UnclearPricing** \
 * **AccidentalPurchase** \
 * **ForgotToCancel** \
 * **UnclearDocumentation**
 */
export type RefundReasonCode = string;

/** Known values of {@link PaymentMethodFamily} that the service accepts. */
export enum KnownPaymentMethodFamily {
  /** CreditCard */
  CreditCard = "CreditCard",
  /** CheckWire */
  CheckWire = "CheckWire"
}

/**
 * Defines values for PaymentMethodFamily. \
 * {@link KnownPaymentMethodFamily} can be used interchangeably with PaymentMethodFamily,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **CreditCard** \
 * **CheckWire**
 */
export type PaymentMethodFamily = string;

/** Known values of {@link PaymentMethodStatus} that the service accepts. */
export enum KnownPaymentMethodStatus {
  /** Active */
  Active = "Active",
  /** Inactive */
  Inactive = "Inactive"
}

/**
 * Defines values for PaymentMethodStatus. \
 * {@link KnownPaymentMethodStatus} can be used interchangeably with PaymentMethodStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active** \
 * **Inactive**
 */
export type PaymentMethodStatus = string;

/** Known values of {@link MarketplacePurchasesPolicy} that the service accepts. */
export enum KnownMarketplacePurchasesPolicy {
  /** AllAllowed */
  AllAllowed = "AllAllowed",
  /** OnlyFreeAllowed */
  OnlyFreeAllowed = "OnlyFreeAllowed",
  /** NotAllowed */
  NotAllowed = "NotAllowed"
}

/**
 * Defines values for MarketplacePurchasesPolicy. \
 * {@link KnownMarketplacePurchasesPolicy} can be used interchangeably with MarketplacePurchasesPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AllAllowed** \
 * **OnlyFreeAllowed** \
 * **NotAllowed**
 */
export type MarketplacePurchasesPolicy = string;

/** Known values of {@link ReservationPurchasesPolicy} that the service accepts. */
export enum KnownReservationPurchasesPolicy {
  /** Allowed */
  Allowed = "Allowed",
  /** NotAllowed */
  NotAllowed = "NotAllowed"
}

/**
 * Defines values for ReservationPurchasesPolicy. \
 * {@link KnownReservationPurchasesPolicy} can be used interchangeably with ReservationPurchasesPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allowed** \
 * **NotAllowed**
 */
export type ReservationPurchasesPolicy = string;

/** Known values of {@link ViewChargesPolicy} that the service accepts. */
export enum KnownViewChargesPolicy {
  /** Allowed */
  Allowed = "Allowed",
  /** NotAllowed */
  NotAllowed = "NotAllowed"
}

/**
 * Defines values for ViewChargesPolicy. \
 * {@link KnownViewChargesPolicy} can be used interchangeably with ViewChargesPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allowed** \
 * **NotAllowed**
 */
export type ViewChargesPolicy = string;

/** Known values of {@link ViewCharges} that the service accepts. */
export enum KnownViewCharges {
  /** Allowed */
  Allowed = "Allowed",
  /** NotAllowed */
  NotAllowed = "NotAllowed"
}

/**
 * Defines values for ViewCharges. \
 * {@link KnownViewCharges} can be used interchangeably with ViewCharges,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allowed** \
 * **NotAllowed**
 */
export type ViewCharges = string;

/** Known values of {@link AutoRenew} that the service accepts. */
export enum KnownAutoRenew {
  /** Off */
  Off = "Off",
  /** On */
  On = "On"
}

/**
 * Defines values for AutoRenew. \
 * {@link KnownAutoRenew} can be used interchangeably with AutoRenew,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Off** \
 * **On**
 */
export type AutoRenew = string;

/** Known values of {@link BillingFrequency} that the service accepts. */
export enum KnownBillingFrequency {
  /** OneTime */
  OneTime = "OneTime",
  /** Monthly */
  Monthly = "Monthly",
  /** UsageBased */
  UsageBased = "UsageBased"
}

/**
 * Defines values for BillingFrequency. \
 * {@link KnownBillingFrequency} can be used interchangeably with BillingFrequency,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OneTime** \
 * **Monthly** \
 * **UsageBased**
 */
export type BillingFrequency = string;

/** Known values of {@link ProductStatusType} that the service accepts. */
export enum KnownProductStatusType {
  /** Active */
  Active = "Active",
  /** Inactive */
  Inactive = "Inactive",
  /** PastDue */
  PastDue = "PastDue",
  /** Expiring */
  Expiring = "Expiring",
  /** Expired */
  Expired = "Expired",
  /** Disabled */
  Disabled = "Disabled",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** AutoRenew */
  AutoRenew = "AutoRenew"
}

/**
 * Defines values for ProductStatusType. \
 * {@link KnownProductStatusType} can be used interchangeably with ProductStatusType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active** \
 * **Inactive** \
 * **PastDue** \
 * **Expiring** \
 * **Expired** \
 * **Disabled** \
 * **Cancelled** \
 * **AutoRenew**
 */
export type ProductStatusType = string;

/** Known values of {@link ProductTransferValidationErrorCode} that the service accepts. */
export enum KnownProductTransferValidationErrorCode {
  /** InvalidSource */
  InvalidSource = "InvalidSource",
  /** ProductNotActive */
  ProductNotActive = "ProductNotActive",
  /** InsufficientPermissionOnSource */
  InsufficientPermissionOnSource = "InsufficientPermissionOnSource",
  /** InsufficientPermissionOnDestination */
  InsufficientPermissionOnDestination = "InsufficientPermissionOnDestination",
  /** DestinationBillingProfilePastDue */
  DestinationBillingProfilePastDue = "DestinationBillingProfilePastDue",
  /** ProductTypeNotSupported */
  ProductTypeNotSupported = "ProductTypeNotSupported",
  /** CrossBillingAccountNotAllowed */
  CrossBillingAccountNotAllowed = "CrossBillingAccountNotAllowed",
  /** NotAvailableForDestinationMarket */
  NotAvailableForDestinationMarket = "NotAvailableForDestinationMarket",
  /** OneTimePurchaseProductTransferNotAllowed */
  OneTimePurchaseProductTransferNotAllowed = "OneTimePurchaseProductTransferNotAllowed"
}

/**
 * Defines values for ProductTransferValidationErrorCode. \
 * {@link KnownProductTransferValidationErrorCode} can be used interchangeably with ProductTransferValidationErrorCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **InvalidSource** \
 * **ProductNotActive** \
 * **InsufficientPermissionOnSource** \
 * **InsufficientPermissionOnDestination** \
 * **DestinationBillingProfilePastDue** \
 * **ProductTypeNotSupported** \
 * **CrossBillingAccountNotAllowed** \
 * **NotAvailableForDestinationMarket** \
 * **OneTimePurchaseProductTransferNotAllowed**
 */
export type ProductTransferValidationErrorCode = string;

/** Known values of {@link TransactionType} that the service accepts. */
export enum KnownTransactionType {
  /** Unknown */
  Unknown = "Unknown",
  /** Billed */
  Billed = "Billed",
  /** Unbilled */
  Unbilled = "Unbilled"
}

/**
 * Defines values for TransactionType. \
 * {@link KnownTransactionType} can be used interchangeably with TransactionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Billed** \
 * **Unbilled**
 */
export type TransactionType = string;

/** Known values of {@link CreditType} that the service accepts. */
export enum KnownCreditType {
  /** Other */
  Other = "Other",
  /** AzureFreeCredit */
  AzureFreeCredit = "AzureFreeCredit",
  /** AzureCreditOffer */
  AzureCreditOffer = "AzureCreditOffer",
  /** ServiceInterruption */
  ServiceInterruption = "ServiceInterruption",
  /** Refund */
  Refund = "Refund"
}

/**
 * Defines values for CreditType. \
 * {@link KnownCreditType} can be used interchangeably with CreditType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **AzureFreeCredit** \
 * **AzureCreditOffer** \
 * **ServiceInterruption** \
 * **Refund**
 */
export type CreditType = string;

/** Known values of {@link TransactionKind} that the service accepts. */
export enum KnownTransactionKind {
  /** Other */
  Other = "Other",
  /** All */
  All = "All",
  /** Reservation */
  Reservation = "Reservation"
}

/**
 * Defines values for TransactionKind. \
 * {@link KnownTransactionKind} can be used interchangeably with TransactionKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Other** \
 * **All** \
 * **Reservation**
 */
export type TransactionKind = string;

/** Known values of {@link TransferStatus} that the service accepts. */
export enum KnownTransferStatus {
  /** Unknown */
  Unknown = "Unknown",
  /** Pending */
  Pending = "Pending",
  /** InProgress */
  InProgress = "InProgress",
  /** Completed */
  Completed = "Completed",
  /** CompletedWithErrors */
  CompletedWithErrors = "CompletedWithErrors",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Declined */
  Declined = "Declined"
}

/**
 * Defines values for TransferStatus. \
 * {@link KnownTransferStatus} can be used interchangeably with TransferStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Pending** \
 * **InProgress** \
 * **Completed** \
 * **CompletedWithErrors** \
 * **Failed** \
 * **Canceled** \
 * **Declined**
 */
export type TransferStatus = string;

/** Known values of {@link ProductType} that the service accepts. */
export enum KnownProductType {
  /** Unknown */
  Unknown = "Unknown",
  /** AzureSubscription */
  AzureSubscription = "AzureSubscription",
  /** AzureReservation */
  AzureReservation = "AzureReservation",
  /** SavingsPlan */
  SavingsPlan = "SavingsPlan"
}

/**
 * Defines values for ProductType. \
 * {@link KnownProductType} can be used interchangeably with ProductType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **AzureSubscription** \
 * **AzureReservation** \
 * **SavingsPlan**
 */
export type ProductType = string;

/** Known values of {@link ProductTransferStatus} that the service accepts. */
export enum KnownProductTransferStatus {
  /** Unknown */
  Unknown = "Unknown",
  /** NotStarted */
  NotStarted = "NotStarted",
  /** InProgress */
  InProgress = "InProgress",
  /** Completed */
  Completed = "Completed",
  /** Failed */
  Failed = "Failed"
}

/**
 * Defines values for ProductTransferStatus. \
 * {@link KnownProductTransferStatus} can be used interchangeably with ProductTransferStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **NotStarted** \
 * **InProgress** \
 * **Completed** \
 * **Failed**
 */
export type ProductTransferStatus = string;

/** Known values of {@link EligibleProductType} that the service accepts. */
export enum KnownEligibleProductType {
  /** Unknown */
  Unknown = "Unknown",
  /** DevTestAzureSubscription */
  DevTestAzureSubscription = "DevTestAzureSubscription",
  /** StandardAzureSubscription */
  StandardAzureSubscription = "StandardAzureSubscription",
  /** AzureReservation */
  AzureReservation = "AzureReservation",
  /** SavingsPlan */
  SavingsPlan = "SavingsPlan"
}

/**
 * Defines values for EligibleProductType. \
 * {@link KnownEligibleProductType} can be used interchangeably with EligibleProductType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **DevTestAzureSubscription** \
 * **StandardAzureSubscription** \
 * **AzureReservation** \
 * **SavingsPlan**
 */
export type EligibleProductType = string;

/** Known values of {@link SupportedAccountType} that the service accepts. */
export enum KnownSupportedAccountType {
  /** Unknown */
  Unknown = "Unknown",
  /** Partner */
  Partner = "Partner",
  /** Individual */
  Individual = "Individual",
  /** Enterprise */
  Enterprise = "Enterprise"
}

/**
 * Defines values for SupportedAccountType. \
 * {@link KnownSupportedAccountType} can be used interchangeably with SupportedAccountType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Partner** \
 * **Individual** \
 * **Enterprise**
 */
export type SupportedAccountType = string;

/** Optional parameters. */
export interface AgreementsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the participants. */
  expand?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type AgreementsListByBillingAccountResponse = AgreementListResult;

/** Optional parameters. */
export interface AgreementsGetOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the participants. */
  expand?: string;
}

/** Contains response data for the get operation. */
export type AgreementsGetResponse = Agreement;

/** Optional parameters. */
export interface AgreementsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type AgreementsListByBillingAccountNextResponse = AgreementListResult;

/** Optional parameters. */
export interface AvailableBalancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AvailableBalancesGetResponse = AvailableBalance;

/** Optional parameters. */
export interface BillingAccountsListOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the soldTo, invoice sections and billing profiles. */
  expand?: string;
}

/** Contains response data for the list operation. */
export type BillingAccountsListResponse = BillingAccountListResult;

/** Optional parameters. */
export interface BillingAccountsGetOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the soldTo, invoice sections and billing profiles. */
  expand?: string;
}

/** Contains response data for the get operation. */
export type BillingAccountsGetResponse = BillingAccount;

/** Optional parameters. */
export interface BillingAccountsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type BillingAccountsUpdateResponse = BillingAccount;

/** Optional parameters. */
export interface BillingAccountsListInvoiceSectionsByCreateSubscriptionPermissionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listInvoiceSectionsByCreateSubscriptionPermission operation. */
export type BillingAccountsListInvoiceSectionsByCreateSubscriptionPermissionResponse = InvoiceSectionListWithCreateSubPermissionResult;

/** Optional parameters. */
export interface BillingAccountsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type BillingAccountsListNextResponse = BillingAccountListResult;

/** Optional parameters. */
export interface BillingAccountsListInvoiceSectionsByCreateSubscriptionPermissionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listInvoiceSectionsByCreateSubscriptionPermissionNext operation. */
export type BillingAccountsListInvoiceSectionsByCreateSubscriptionPermissionNextResponse = InvoiceSectionListWithCreateSubPermissionResult;

/** Optional parameters. */
export interface AddressValidateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validate operation. */
export type AddressValidateResponse = ValidateAddressResponse;

/** Optional parameters. */
export interface BillingPermissionsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccount operation. */
export type BillingPermissionsListByBillingAccountResponse = BillingPermissionsListResult;

/** Optional parameters. */
export interface BillingPermissionsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfile operation. */
export type BillingPermissionsListByBillingProfileResponse = BillingPermissionsListResult;

/** Optional parameters. */
export interface BillingPermissionsListByInvoiceSectionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSections operation. */
export type BillingPermissionsListByInvoiceSectionsResponse = BillingPermissionsListResult;

/** Optional parameters. */
export interface BillingPermissionsListByCustomerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomer operation. */
export type BillingPermissionsListByCustomerResponse = BillingPermissionsListResult;

/** Optional parameters. */
export interface BillingPermissionsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type BillingPermissionsListByBillingAccountNextResponse = BillingPermissionsListResult;

/** Optional parameters. */
export interface BillingPermissionsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type BillingPermissionsListByBillingProfileNextResponse = BillingPermissionsListResult;

/** Optional parameters. */
export interface BillingPermissionsListByInvoiceSectionsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSectionsNext operation. */
export type BillingPermissionsListByInvoiceSectionsNextResponse = BillingPermissionsListResult;

/** Optional parameters. */
export interface BillingPermissionsListByCustomerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerNext operation. */
export type BillingPermissionsListByCustomerNextResponse = BillingPermissionsListResult;

/** Optional parameters. */
export interface BillingProfilesListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the invoice sections. */
  expand?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type BillingProfilesListByBillingAccountResponse = BillingProfileListResult;

/** Optional parameters. */
export interface BillingProfilesGetOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand the invoice sections. */
  expand?: string;
}

/** Contains response data for the get operation. */
export type BillingProfilesGetResponse = BillingProfileAutoGenerated;

/** Optional parameters. */
export interface BillingProfilesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type BillingProfilesCreateOrUpdateResponse = BillingProfileAutoGenerated;

/** Optional parameters. */
export interface BillingProfilesListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type BillingProfilesListByBillingAccountNextResponse = BillingProfileListResult;

/** Optional parameters. */
export interface BillingPropertyGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BillingPropertyGetResponse = BillingProperty;

/** Optional parameters. */
export interface BillingPropertyUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type BillingPropertyUpdateResponse = BillingProperty;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfile operation. */
export type BillingRoleAssignmentsListByBillingProfileResponse = BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsDeleteByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteByBillingProfile operation. */
export type BillingRoleAssignmentsDeleteByBillingProfileResponse = BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsGetByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingProfile operation. */
export type BillingRoleAssignmentsGetByBillingProfileResponse = BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSection operation. */
export type BillingRoleAssignmentsListByInvoiceSectionResponse = BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsDeleteByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteByInvoiceSection operation. */
export type BillingRoleAssignmentsDeleteByInvoiceSectionResponse = BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsGetByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByInvoiceSection operation. */
export type BillingRoleAssignmentsGetByInvoiceSectionResponse = BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccount operation. */
export type BillingRoleAssignmentsListByBillingAccountResponse = BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsDeleteByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteByBillingAccount operation. */
export type BillingRoleAssignmentsDeleteByBillingAccountResponse = BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingAccount operation. */
export type BillingRoleAssignmentsGetByBillingAccountResponse = BillingRoleAssignment;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type BillingRoleAssignmentsListByBillingProfileNextResponse = BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByInvoiceSectionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSectionNext operation. */
export type BillingRoleAssignmentsListByInvoiceSectionNextResponse = BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleAssignmentsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type BillingRoleAssignmentsListByBillingAccountNextResponse = BillingRoleAssignmentListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfile operation. */
export type BillingRoleDefinitionsListByBillingProfileResponse = BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionsGetByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingProfile operation. */
export type BillingRoleDefinitionsGetByBillingProfileResponse = BillingRoleDefinition;

/** Optional parameters. */
export interface BillingRoleDefinitionsListByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSection operation. */
export type BillingRoleDefinitionsListByInvoiceSectionResponse = BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionsGetByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByInvoiceSection operation. */
export type BillingRoleDefinitionsGetByInvoiceSectionResponse = BillingRoleDefinition;

/** Optional parameters. */
export interface BillingRoleDefinitionsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccount operation. */
export type BillingRoleDefinitionsListByBillingAccountResponse = BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionsGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingAccount operation. */
export type BillingRoleDefinitionsGetByBillingAccountResponse = BillingRoleDefinition;

/** Optional parameters. */
export interface BillingRoleDefinitionsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type BillingRoleDefinitionsListByBillingProfileNextResponse = BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionsListByInvoiceSectionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSectionNext operation. */
export type BillingRoleDefinitionsListByInvoiceSectionNextResponse = BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingRoleDefinitionsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type BillingRoleDefinitionsListByBillingAccountNextResponse = BillingRoleDefinitionListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfile operation. */
export type BillingSubscriptionsListByBillingProfileResponse = BillingSubscriptionsListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSection operation. */
export type BillingSubscriptionsListByInvoiceSectionResponse = BillingSubscriptionsListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccount operation. */
export type BillingSubscriptionsListByBillingAccountResponse = BillingSubscriptionsListResult;

/** Optional parameters. */
export interface BillingSubscriptionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BillingSubscriptionsGetResponse = BillingSubscription;

/** Optional parameters. */
export interface BillingSubscriptionsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type BillingSubscriptionsUpdateResponse = BillingSubscription;

/** Optional parameters. */
export interface BillingSubscriptionsMoveOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the move operation. */
export type BillingSubscriptionsMoveResponse = BillingSubscription;

/** Optional parameters. */
export interface BillingSubscriptionsValidateMoveOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateMove operation. */
export type BillingSubscriptionsValidateMoveResponse = ValidateSubscriptionTransferEligibilityResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByCustomerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomer operation. */
export type BillingSubscriptionsListByCustomerResponse = BillingSubscriptionsListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type BillingSubscriptionsListByBillingProfileNextResponse = BillingSubscriptionsListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByInvoiceSectionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSectionNext operation. */
export type BillingSubscriptionsListByInvoiceSectionNextResponse = BillingSubscriptionsListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type BillingSubscriptionsListByBillingAccountNextResponse = BillingSubscriptionsListResult;

/** Optional parameters. */
export interface BillingSubscriptionsListByCustomerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerNext operation. */
export type BillingSubscriptionsListByCustomerNextResponse = BillingSubscriptionsListResult;

/** Optional parameters. */
export interface CustomersListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** Used for searching customers by their name. Any customer with name containing the search text will be included in the response */
  search?: string;
  /** May be used to filter the list of customers. */
  filter?: string;
}

/** Contains response data for the listByBillingProfile operation. */
export type CustomersListByBillingProfileResponse = CustomerListResult;

/** Optional parameters. */
export interface CustomersListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Used for searching customers by their name. Any customer with name containing the search text will be included in the response */
  search?: string;
  /** May be used to filter the list of customers. */
  filter?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type CustomersListByBillingAccountResponse = CustomerListResult;

/** Optional parameters. */
export interface CustomersGetOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to expand enabledAzurePlans and resellers */
  expand?: string;
}

/** Contains response data for the get operation. */
export type CustomersGetResponse = Customer;

/** Optional parameters. */
export interface CustomersListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type CustomersListByBillingProfileNextResponse = CustomerListResult;

/** Optional parameters. */
export interface CustomersListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type CustomersListByBillingAccountNextResponse = CustomerListResult;

/** Optional parameters. */
export interface InstructionsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfile operation. */
export type InstructionsListByBillingProfileResponse = InstructionListResult;

/** Optional parameters. */
export interface InstructionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type InstructionsGetResponse = Instruction;

/** Optional parameters. */
export interface InstructionsPutOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the put operation. */
export type InstructionsPutResponse = Instruction;

/** Optional parameters. */
export interface InstructionsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type InstructionsListByBillingProfileNextResponse = InstructionListResult;

/** Optional parameters. */
export interface InvoicesListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** The start date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format. */
  periodStartDate?: Date;
  /** The end date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format. */
  periodEndDate?: Date;
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingProfile operation. */
export type InvoicesListByBillingProfileResponse = InvoiceListResult;

/** Optional parameters. */
export interface InvoicesDownloadMultipleByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** A list of download details for individual documents. */
  body?: DocumentDownloadRequest[];
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the downloadMultipleByBillingAccount operation. */
export type InvoicesDownloadMultipleByBillingAccountResponse = DocumentDownloadResult;

/** Optional parameters. */
export interface InvoicesAmendOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the amend operation. */
export type InvoicesAmendResponse = InvoicesAmendHeaders;

/** Optional parameters. */
export interface InvoicesDownloadByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The ID that uniquely identifies an invoice document. This ID may be an identifier for an invoice PDF, a credit note, or a tax receipt. */
  documentName?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the downloadByBillingAccount operation. */
export type InvoicesDownloadByBillingAccountResponse = DocumentDownloadResult;

/** Optional parameters. */
export interface InvoicesDownloadSummaryByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the downloadSummaryByBillingAccount operation. */
export type InvoicesDownloadSummaryByBillingAccountResponse = DocumentDownloadResult;

/** Optional parameters. */
export interface InvoicesGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingAccount operation. */
export type InvoicesGetByBillingAccountResponse = Invoice;

/** Optional parameters. */
export interface InvoicesListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The start date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format. */
  periodStartDate?: Date;
  /** The end date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format. */
  periodEndDate?: Date;
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type InvoicesListByBillingAccountResponse = InvoiceListResult;

/** Optional parameters. */
export interface InvoicesDownloadMultipleByBillingSubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** A list of download details for individual documents. */
  body?: DocumentDownloadRequest[];
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the downloadMultipleByBillingSubscription operation. */
export type InvoicesDownloadMultipleByBillingSubscriptionResponse = DocumentDownloadResult;

/** Optional parameters. */
export interface InvoicesDownloadByBillingSubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** The ID that uniquely identifies an invoice document. This ID may be an identifier for an invoice PDF, a credit note, or a tax receipt. */
  documentName?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the downloadByBillingSubscription operation. */
export type InvoicesDownloadByBillingSubscriptionResponse = DocumentDownloadResult;

/** Optional parameters. */
export interface InvoicesGetByBillingSubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingSubscription operation. */
export type InvoicesGetByBillingSubscriptionResponse = Invoice;

/** Optional parameters. */
export interface InvoicesListByBillingSubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** The start date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format. */
  periodStartDate?: Date;
  /** The end date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format. */
  periodEndDate?: Date;
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingSubscription operation. */
export type InvoicesListByBillingSubscriptionResponse = InvoiceListResult;

/** Optional parameters. */
export interface InvoicesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type InvoicesGetResponse = Invoice;

/** Optional parameters. */
export interface InvoicesListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type InvoicesListByBillingProfileNextResponse = InvoiceListResult;

/** Optional parameters. */
export interface InvoicesListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type InvoicesListByBillingAccountNextResponse = InvoiceListResult;

/** Optional parameters. */
export interface InvoicesListByBillingSubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingSubscriptionNext operation. */
export type InvoicesListByBillingSubscriptionNextResponse = InvoiceListResult;

/** Optional parameters. */
export interface InvoiceSectionsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfile operation. */
export type InvoiceSectionsListByBillingProfileResponse = InvoiceSectionListResult;

/** Optional parameters. */
export interface InvoiceSectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type InvoiceSectionsGetResponse = InvoiceSection;

/** Optional parameters. */
export interface InvoiceSectionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type InvoiceSectionsCreateOrUpdateResponse = InvoiceSection;

/** Optional parameters. */
export interface InvoiceSectionsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type InvoiceSectionsListByBillingProfileNextResponse = InvoiceSectionListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface PaymentMethodsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfile operation. */
export type PaymentMethodsListByBillingProfileResponse = PaymentMethodLinksListResult;

/** Optional parameters. */
export interface PaymentMethodsGetByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingProfile operation. */
export type PaymentMethodsGetByBillingProfileResponse = PaymentMethodLink;

/** Optional parameters. */
export interface PaymentMethodsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccount operation. */
export type PaymentMethodsListByBillingAccountResponse = PaymentMethodsListResult;

/** Optional parameters. */
export interface PaymentMethodsGetByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingAccount operation. */
export type PaymentMethodsGetByBillingAccountResponse = PaymentMethod;

/** Optional parameters. */
export interface PaymentMethodsListByUserOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByUser operation. */
export type PaymentMethodsListByUserResponse = PaymentMethodsListResult;

/** Optional parameters. */
export interface PaymentMethodsDeleteByUserOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface PaymentMethodsGetByUserOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByUser operation. */
export type PaymentMethodsGetByUserResponse = PaymentMethod;

/** Optional parameters. */
export interface PaymentMethodsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type PaymentMethodsListByBillingProfileNextResponse = PaymentMethodLinksListResult;

/** Optional parameters. */
export interface PaymentMethodsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type PaymentMethodsListByBillingAccountNextResponse = PaymentMethodsListResult;

/** Optional parameters. */
export interface PaymentMethodsListByUserNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByUserNext operation. */
export type PaymentMethodsListByUserNextResponse = PaymentMethodsListResult;

/** Optional parameters. */
export interface PoliciesGetByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByBillingProfile operation. */
export type PoliciesGetByBillingProfileResponse = Policy;

/** Optional parameters. */
export interface PoliciesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type PoliciesUpdateResponse = Policy;

/** Optional parameters. */
export interface PoliciesGetByCustomerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByCustomer operation. */
export type PoliciesGetByCustomerResponse = CustomerPolicy;

/** Optional parameters. */
export interface PoliciesUpdateCustomerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateCustomer operation. */
export type PoliciesUpdateCustomerResponse = CustomerPolicy;

/** Optional parameters. */
export interface ProductsListByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:). */
  filter?: string;
}

/** Contains response data for the listByInvoiceSection operation. */
export type ProductsListByInvoiceSectionResponse = ProductsListResult;

/** Optional parameters. */
export interface ProductsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:). */
  filter?: string;
}

/** Contains response data for the listByBillingProfile operation. */
export type ProductsListByBillingProfileResponse = ProductsListResult;

/** Optional parameters. */
export interface ProductsListByCustomerOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomer operation. */
export type ProductsListByCustomerResponse = ProductsListResult;

/** Optional parameters. */
export interface ProductsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:). */
  filter?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type ProductsListByBillingAccountResponse = ProductsListResult;

/** Optional parameters. */
export interface ProductsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProductsGetResponse = Product;

/** Optional parameters. */
export interface ProductsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ProductsUpdateResponse = Product;

/** Optional parameters. */
export interface ProductsMoveOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the move operation. */
export type ProductsMoveResponse = Product;

/** Optional parameters. */
export interface ProductsValidateMoveOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validateMove operation. */
export type ProductsValidateMoveResponse = ValidateProductTransferEligibilityResult;

/** Optional parameters. */
export interface ProductsListByInvoiceSectionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSectionNext operation. */
export type ProductsListByInvoiceSectionNextResponse = ProductsListResult;

/** Optional parameters. */
export interface ProductsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type ProductsListByBillingProfileNextResponse = ProductsListResult;

/** Optional parameters. */
export interface ProductsListByCustomerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerNext operation. */
export type ProductsListByCustomerNextResponse = ProductsListResult;

/** Optional parameters. */
export interface ProductsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type ProductsListByBillingAccountNextResponse = ProductsListResult;

/** Optional parameters. */
export interface ReservationsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'. */
  filter?: string;
  /** May be used to sort order by reservation properties. */
  orderby?: string;
  /** To indicate whether to refresh the roll up counts of the reservations group by provisioning state */
  refreshSummary?: string;
  /** The selected provisioning state */
  selectedState?: string;
}

/** Contains response data for the listByBillingProfile operation. */
export type ReservationsListByBillingProfileResponse = ReservationsListResult;

/** Optional parameters. */
export interface ReservationsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'. */
  filter?: string;
  /** May be used to sort order by reservation properties. */
  orderby?: string;
  /** To indicate whether to refresh the roll up counts of the reservations group by provisioning states */
  refreshSummary?: string;
  /** The selected provisioning state */
  selectedState?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type ReservationsListByBillingAccountResponse = ReservationsListResult;

/** Optional parameters. */
export interface ReservationsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type ReservationsListByBillingProfileNextResponse = ReservationsListResult;

/** Optional parameters. */
export interface ReservationsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type ReservationsListByBillingAccountNextResponse = ReservationsListResult;

/** Optional parameters. */
export interface TransactionsListByCustomerOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByCustomer operation. */
export type TransactionsListByCustomerResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByInvoiceSectionOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByInvoiceSection operation. */
export type TransactionsListByInvoiceSectionResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByBillingProfileOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfile operation. */
export type TransactionsListByBillingProfileResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsDownloadByInvoiceOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the downloadByInvoice operation. */
export type TransactionsDownloadByInvoiceResponse = DocumentDownloadResult;

/** Optional parameters. */
export interface TransactionsListByInvoiceOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByInvoice operation. */
export type TransactionsListByInvoiceResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccount operation. */
export type TransactionsListByBillingAccountResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByCustomerNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCustomerNext operation. */
export type TransactionsListByCustomerNextResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByInvoiceSectionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceSectionNext operation. */
export type TransactionsListByInvoiceSectionNextResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByBillingProfileNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingProfileNext operation. */
export type TransactionsListByBillingProfileNextResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByInvoiceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByInvoiceNext operation. */
export type TransactionsListByInvoiceNextResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type TransactionsListByBillingAccountNextResponse = TransactionListResult;

/** Optional parameters. */
export interface TransactionSummaryGetByInvoiceOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the getByInvoice operation. */
export type TransactionSummaryGetByInvoiceResponse = TransactionSummary;

/** Optional parameters. */
export interface EnrollmentAccountsListByDepartmentNameOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByDepartmentName operation. */
export type EnrollmentAccountsListByDepartmentNameResponse = EnrollmentAccountListResult;

/** Optional parameters. */
export interface EnrollmentAccountsGetByAccountIdByDepartmentIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getByAccountIdByDepartmentId operation. */
export type EnrollmentAccountsGetByAccountIdByDepartmentIdResponse = EnrollmentAccountAutoGenerated;

/** Optional parameters. */
export interface EnrollmentAccountsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The count query option allows clients to request a count of the matching resources included with the resources in the response. */
  count?: boolean;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type EnrollmentAccountsListByBillingAccountResponse = EnrollmentAccountListResult;

/** Optional parameters. */
export interface EnrollmentAccountsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EnrollmentAccountsGetResponse = EnrollmentAccountAutoGenerated;

/** Optional parameters. */
export interface EnrollmentAccountsListByDepartmentNameNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByDepartmentNameNext operation. */
export type EnrollmentAccountsListByDepartmentNameNextResponse = EnrollmentAccountListResult;

/** Optional parameters. */
export interface EnrollmentAccountsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type EnrollmentAccountsListByBillingAccountNextResponse = EnrollmentAccountListResult;

/** Optional parameters. */
export interface TransfersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TransfersGetResponse = TransferDetails;

/** Optional parameters. */
export interface TransfersInitiateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the initiate operation. */
export type TransfersInitiateResponse = TransferDetails;

/** Optional parameters. */
export interface TransfersCancelOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancel operation. */
export type TransfersCancelResponse = TransferDetails;

/** Optional parameters. */
export interface TransfersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type TransfersListResponse = TransferDetailsListResult;

/** Optional parameters. */
export interface TransfersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type TransfersListNextResponse = TransferDetailsListResult;

/** Optional parameters. */
export interface PartnerTransfersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PartnerTransfersGetResponse = PartnerTransferDetails;

/** Optional parameters. */
export interface PartnerTransfersInitiateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the initiate operation. */
export type PartnerTransfersInitiateResponse = PartnerTransferDetails;

/** Optional parameters. */
export interface PartnerTransfersCancelOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancel operation. */
export type PartnerTransfersCancelResponse = PartnerTransferDetails;

/** Optional parameters. */
export interface PartnerTransfersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PartnerTransfersListResponse = PartnerTransferDetailsListResult;

/** Optional parameters. */
export interface PartnerTransfersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PartnerTransfersListNextResponse = PartnerTransferDetailsListResult;

/** Optional parameters. */
export interface RecipientTransfersAcceptOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the accept operation. */
export type RecipientTransfersAcceptResponse = RecipientTransferDetails;

/** Optional parameters. */
export interface RecipientTransfersValidateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the validate operation. */
export type RecipientTransfersValidateResponse = ValidateTransferListResponse;

/** Optional parameters. */
export interface RecipientTransfersDeclineOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the decline operation. */
export type RecipientTransfersDeclineResponse = RecipientTransferDetails;

/** Optional parameters. */
export interface RecipientTransfersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type RecipientTransfersGetResponse = RecipientTransferDetails;

/** Optional parameters. */
export interface RecipientTransfersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type RecipientTransfersListResponse = RecipientTransferDetailsListResult;

/** Optional parameters. */
export interface RecipientTransfersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type RecipientTransfersListNextResponse = RecipientTransferDetailsListResult;

/** Optional parameters. */
export interface DepartmentsListByBillingAccountOptionalParams
  extends coreClient.OperationOptions {
  /** The filter query option allows clients to filter a collection of resources that are addressed by a request URL. */
  filter?: string;
  /** The orderby query option allows clients to request resources in a particular order. */
  orderBy?: string;
  /** The top query option requests the number of items in the queried collection to be included in the result. The maximum supported value for top is 50. */
  top?: number;
  /** The skip query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
  skip?: number;
  /** The search query option allows clients to request items within a collection matching a free-text search expression. search is only supported for string fields. */
  search?: string;
}

/** Contains response data for the listByBillingAccount operation. */
export type DepartmentsListByBillingAccountResponse = DepartmentListResult;

/** Optional parameters. */
export interface DepartmentsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DepartmentsGetResponse = DepartmentAutoGenerated;

/** Optional parameters. */
export interface DepartmentsListByBillingAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByBillingAccountNext operation. */
export type DepartmentsListByBillingAccountNextResponse = DepartmentListResult;

/** Optional parameters. */
export interface BillingManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
