/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Address } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClient } from "../billingManagementClient";
import {
  AddressValidateOptionalParams,
  AddressValidateResponse
} from "../models";

/** Class containing Address operations. */
export class AddressImpl implements Address {
  private readonly client: BillingManagementClient;

  /**
   * Initialize a new instance of the class Address class.
   * @param client Reference to the service client
   */
  constructor(client: BillingManagementClient) {
    this.client = client;
  }

  /**
   * Validates an address. Use the operation to validate an address before using it as soldTo or a billTo
   * address.
   * @param options The options parameters.
   */
  validate(
    options?: AddressValidateOptionalParams
  ): Promise<AddressValidateResponse> {
    return this.client.sendOperationRequest({ options }, validateOperationSpec);
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const validateOperationSpec: coreClient.OperationSpec = {
  path: "/providers/Microsoft.Billing/validateAddress",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.AddressValidationResult
    },
    default: {
      bodyMapper: Mappers.ArmErrorResponse
    }
  },
  requestBody: Parameters.body1,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
