/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { TransactionSummaryOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClient } from "../billingManagementClient";
import {
  TransactionSummaryGetByInvoiceOptionalParams,
  TransactionSummaryGetByInvoiceResponse
} from "../models";

/** Class containing TransactionSummaryOperations operations. */
export class TransactionSummaryOperationsImpl
  implements TransactionSummaryOperations {
  private readonly client: BillingManagementClient;

  /**
   * Initialize a new instance of the class TransactionSummaryOperations class.
   * @param client Reference to the service client
   */
  constructor(client: BillingManagementClient) {
    this.client = client;
  }

  /**
   * Gets the transaction summary for an invoice. Transactions include purchases, refunds and Azure usage
   * charges.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param invoiceName The ID that uniquely identifies an invoice.
   * @param options The options parameters.
   */
  getByInvoice(
    billingAccountName: string,
    invoiceName: string,
    options?: TransactionSummaryGetByInvoiceOptionalParams
  ): Promise<TransactionSummaryGetByInvoiceResponse> {
    return this.client.sendOperationRequest(
      { billingAccountName, invoiceName, options },
      getByInvoiceOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getByInvoiceOperationSpec: coreClient.OperationSpec = {
  path:
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/invoices/{invoiceName}/transactionSummary",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.TransactionSummary
    },
    default: {
      bodyMapper: Mappers.ArmErrorResponse
    }
  },
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter1,
    Parameters.orderBy,
    Parameters.top,
    Parameters.skip,
    Parameters.count,
    Parameters.search1
  ],
  urlParameters: [
    Parameters.$host,
    Parameters.billingAccountName,
    Parameters.invoiceName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
