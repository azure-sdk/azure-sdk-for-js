/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ReservationOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClient } from "../billingManagementClient";
import {
  ReservationGetByBillingAccountOptionalParams,
  ReservationGetByBillingAccountResponse
} from "../models";

/** Class containing ReservationOperations operations. */
export class ReservationOperationsImpl implements ReservationOperations {
  private readonly client: BillingManagementClient;

  /**
   * Initialize a new instance of the class ReservationOperations class.
   * @param client Reference to the service client
   */
  constructor(client: BillingManagementClient) {
    this.client = client;
  }

  /**
   * Get specific Reservation details in the billing account.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param reservationOrderId Order Id of the reservation
   * @param reservationId Id of the reservation item
   * @param options The options parameters.
   */
  getByBillingAccount(
    billingAccountName: string,
    reservationOrderId: string,
    reservationId: string,
    options?: ReservationGetByBillingAccountOptionalParams
  ): Promise<ReservationGetByBillingAccountResponse> {
    return this.client.sendOperationRequest(
      { billingAccountName, reservationOrderId, reservationId, options },
      getByBillingAccountOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getByBillingAccountOperationSpec: coreClient.OperationSpec = {
  path:
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.Reservation
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion, Parameters.expand1],
  urlParameters: [
    Parameters.$host,
    Parameters.billingAccountName,
    Parameters.reservationOrderId,
    Parameters.reservationId
  ],
  headerParameters: [Parameters.accept],
  serializer
};
