/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Module,
  PowerShell72ModuleListByAutomationAccountOptionalParams,
  PowerShell72ModuleDeleteOptionalParams,
  PowerShell72ModuleGetOptionalParams,
  PowerShell72ModuleGetResponse,
  ModuleCreateOrUpdateParameters,
  PowerShell72ModuleCreateOrUpdateOptionalParams,
  PowerShell72ModuleCreateOrUpdateResponse,
  ModuleUpdateParameters,
  PowerShell72ModuleUpdateOptionalParams,
  PowerShell72ModuleUpdateResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PowerShell72Module. */
export interface PowerShell72Module {
  /**
   * Retrieve a list of PowerShell72 modules.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param automationAccountName The name of the automation account.
   * @param options The options parameters.
   */
  listByAutomationAccount(
    resourceGroupName: string,
    automationAccountName: string,
    options?: PowerShell72ModuleListByAutomationAccountOptionalParams,
  ): PagedAsyncIterableIterator<Module>;
  /**
   * Delete the module by name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param automationAccountName The name of the automation account.
   * @param moduleName The name of module.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    automationAccountName: string,
    moduleName: string,
    options?: PowerShell72ModuleDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Retrieve the module identified by module name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param automationAccountName The name of the automation account.
   * @param moduleName The name of module.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    automationAccountName: string,
    moduleName: string,
    options?: PowerShell72ModuleGetOptionalParams,
  ): Promise<PowerShell72ModuleGetResponse>;
  /**
   * Create or Update the module identified by module name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param automationAccountName The name of the automation account.
   * @param moduleName The name of module.
   * @param parameters The create or update parameters for module.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    automationAccountName: string,
    moduleName: string,
    parameters: ModuleCreateOrUpdateParameters,
    options?: PowerShell72ModuleCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<PowerShell72ModuleCreateOrUpdateResponse>,
      PowerShell72ModuleCreateOrUpdateResponse
    >
  >;
  /**
   * Create or Update the module identified by module name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param automationAccountName The name of the automation account.
   * @param moduleName The name of module.
   * @param parameters The create or update parameters for module.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    automationAccountName: string,
    moduleName: string,
    parameters: ModuleCreateOrUpdateParameters,
    options?: PowerShell72ModuleCreateOrUpdateOptionalParams,
  ): Promise<PowerShell72ModuleCreateOrUpdateResponse>;
  /**
   * Update the module identified by module name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param automationAccountName The name of the automation account.
   * @param moduleName The name of module.
   * @param parameters The update parameters for module.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    automationAccountName: string,
    moduleName: string,
    parameters: ModuleUpdateParameters,
    options?: PowerShell72ModuleUpdateOptionalParams,
  ): Promise<PowerShell72ModuleUpdateResponse>;
}
