/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response of a CommunicationsGateway list operation. */
export interface CommunicationsGatewayListResult {
  /** The CommunicationsGateway items on this page */
  value: CommunicationsGateway[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The service region configuration needed for Teams Callings. */
export interface ServiceRegionProperties {
  /** The name of the region in which the resources needed for Teams Calling will be deployed. */
  name: string;
  /** The configuration used in this region as primary, and other regions as backup. */
  primaryRegionProperties: PrimaryRegionProperties;
}

/** The configuration used in this region as primary, and other regions as backup. */
export interface PrimaryRegionProperties {
  /** IP address to use to contact the operator network from this region */
  operatorAddresses: string[];
  /** IP address to use to contact the ESRP from this region */
  esrpAddresses?: string[];
  /** The allowed source IP addresses or CIDR ranges for signaling */
  allowedSignalingSourceAddressPrefixes?: string[];
  /** The allowed source IP addresses or CIDR ranges for media */
  allowedMediaSourceAddressPrefixes?: string[];
}

/** Configuration of the API Bridge. */
export interface ApiBridgeProperties {
  /** The activation state of the API Bridge for this Communications Gateway */
  configureApiBridge?: ApiBridgeActivationState;
  /**
   * FQDNs for sending requests to the API Bridge endpoint
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpointFqdns?: string[];
  /** The allowed source IP addresses or CIDR ranges for accessing the API Bridge */
  allowedAddressPrefixes?: string[];
}

/** Details of DNS Domains delegated to the Communications Gateway. */
export interface DnsDelegationsProperties {
  /** DNS Domains to delegate for the creation of DNS Zones by the Azure Communications Gateway */
  delegations?: DnsDelegationProperties[];
}

/** Details of a DNS Domain delegated to the Communications Gateway. */
export interface DnsDelegationProperties {
  /** Domain name to delegate */
  domain?: string;
  /**
   * The Azure-hosted DNS Name Servers for the delegated DNS Zones
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nameServers?: string[];
}

/** Properties of Custom SIP Headers. */
export interface CustomSipHeadersProperties {
  /** The Custom SIP Headers to apply to the calls which traverse the Communications Gateway */
  headers?: CustomSipHeader[];
}

/** Details of a Custom SIP Header. */
export interface CustomSipHeader {
  /** The name of the Custom SIP Header */
  name?: string;
}

/** Managed service identity (system assigned and/or user assigned identities) */
export interface ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */
  type: ManagedServiceIdentityType;
  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** The resource model definition representing SKU */
export interface Sku {
  /** The name of the SKU. Ex - P3. It is typically a letter+number code */
  name: string;
  /** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */
  tier?: SkuTier;
  /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */
  size?: string;
  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */
  family?: string;
  /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */
  capacity?: number;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The check availability request body. */
export interface CheckNameAvailabilityRequest {
  /** The name of the resource for which availability needs to be checked. */
  name?: string;
  /** The resource type. */
  type?: string;
}

/** The check availability result. */
export interface CheckNameAvailabilityResponse {
  /** Indicates if the resource name is available. */
  nameAvailable?: boolean;
  /** The reason why the given name is not available. */
  reason?: CheckNameAvailabilityReason;
  /** Detailed reason why the given name is not available. */
  message?: string;
}

/** The type used for update operations of the CommunicationsGateway. */
export interface CommunicationsGatewayUpdate {
  /** The managed service identities assigned to this resource. */
  identity?: ManagedServiceIdentity;
  /** The SKU (Stock Keeping Unit) assigned to this resource. */
  sku?: Sku;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** The response of a TestLine list operation. */
export interface TestLineListResult {
  /** The TestLine items on this page */
  value: TestLine[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The type used for update operations of the TestLine. */
export interface TestLineUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** A CommunicationsGateway resource */
export interface CommunicationsGateway extends TrackedResource {
  /** The managed service identities assigned to this resource. */
  identity?: ManagedServiceIdentity;
  /** The SKU (Stock Keeping Unit) assigned to this resource. */
  sku?: Sku;
  /**
   * Resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The current status of the deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: Status;
  /** The regions in which to deploy the resources needed for Teams Calling */
  serviceLocations?: ServiceRegionProperties[];
  /** How to connect back to the operator network, e.g. MAPS */
  connectivity?: Connectivity;
  /** Voice codecs to support */
  codecs?: TeamsCodecs[];
  /** How to handle 911 calls */
  e911Type?: E911Type;
  /** What platforms to support */
  platforms?: CommunicationsPlatform[];
  /** Details of API bridge functionality, if required */
  apiBridge?: ApiBridgeProperties;
  /** The scope at which the auto-generated domain name can be re-used */
  autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;
  /**
   * The autogenerated label used as part of the FQDNs for accessing the Communications Gateway
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly autoGeneratedDomainNameLabel?: string;
  /** This number is used in Teams Phone Mobile scenarios for access to the voicemail IVR from the native dialer. */
  teamsVoicemailPilotNumber?: string;
  /** Whether an on-premises Mobile Control Point is in use. */
  onPremMcpEnabled?: boolean;
  /** Whether an integrated Mobile Control Point is in use. */
  integratedMcpEnabled?: boolean;
  /** A list of dial strings used for emergency calling. */
  emergencyDialStrings?: string[];
  /** Details of DNS Domains to delegate to the Communications Gateway. */
  dnsDelegations?: DnsDelegationsProperties;
  /** Custom SIP Header to add to any subscriber with a custom_header value, if required. */
  customSipHeaders?: CustomSipHeadersProperties;
  /**
   * A list of IP allocated prefixes which may be used to receive signaling data from this Communications Gateway.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allocatedSignalingAddressPrefixes?: string[];
  /**
   * A list of allocated IP prefixes which may be used to receive media data from this Communications Gateway.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allocatedMediaAddressPrefixes?: string[];
}

/** A TestLine resource */
export interface TestLine extends TrackedResource {
  /**
   * Resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The phone number */
  phoneNumber?: string;
  /** Purpose of this test line, e.g. automated or manual testing */
  purpose?: TestLinePurpose;
}

/** Defines headers for CommunicationsGateways_createOrUpdate operation. */
export interface CommunicationsGatewaysCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CommunicationsGateways_delete operation. */
export interface CommunicationsGatewaysDeleteHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for TestLines_createOrUpdate operation. */
export interface TestLinesCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for TestLines_delete operation. */
export interface TestLinesDeleteHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled.
 */
export type ProvisioningState = string;

/** Known values of {@link Status} that the service accepts. */
export enum KnownStatus {
  /** The resource has been created or updated, but the CommunicationsGateway service has not yet been updated to reflect the changes. */
  ChangePending = "ChangePending",
  /** The CommunicationsGateway service is up and running with the parameters specified in the resource. */
  Complete = "Complete"
}

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ChangePending**: The resource has been created or updated, but the CommunicationsGateway service has not yet been updated to reflect the changes. \
 * **Complete**: The CommunicationsGateway service is up and running with the parameters specified in the resource.
 */
export type Status = string;

/** Known values of {@link Connectivity} that the service accepts. */
export enum KnownConnectivity {
  /** This deployment connects to the operator network using a Public IP address, e.g. when using MAPS */
  PublicAddress = "PublicAddress"
}

/**
 * Defines values for Connectivity. \
 * {@link KnownConnectivity} can be used interchangeably with Connectivity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PublicAddress**: This deployment connects to the operator network using a Public IP address, e.g. when using MAPS
 */
export type Connectivity = string;

/** Known values of {@link TeamsCodecs} that the service accepts. */
export enum KnownTeamsCodecs {
  /** Pulse code modulation(PCM) U-law narrowband audio codec(G.711u) */
  Pcma = "PCMA",
  /** Pulse code modulation(PCM) U-law narrowband audio codec(G.711u) */
  Pcmu = "PCMU",
  /** G.722 wideband audio codec */
  G722 = "G722",
  /** G.722.2 wideband audio codec */
  G7222 = "G722_2",
  /** SILK\/8000 narrowband audio codec */
  Silk8 = "SILK_8",
  /** SILK\/16000 wideband audio codec */
  Silk16 = "SILK_16"
}

/**
 * Defines values for TeamsCodecs. \
 * {@link KnownTeamsCodecs} can be used interchangeably with TeamsCodecs,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PCMA**: Pulse code modulation(PCM) U-law narrowband audio codec(G.711u) \
 * **PCMU**: Pulse code modulation(PCM) U-law narrowband audio codec(G.711u) \
 * **G722**: G.722 wideband audio codec \
 * **G722_2**: G.722.2 wideband audio codec \
 * **SILK_8**: SILK\/8000 narrowband audio codec \
 * **SILK_16**: SILK\/16000 wideband audio codec
 */
export type TeamsCodecs = string;

/** Known values of {@link E911Type} that the service accepts. */
export enum KnownE911Type {
  /** Emergency calls are not handled different from other calls */
  Standard = "Standard",
  /** Emergency calls are routed directly to the ESRP */
  DirectToEsrp = "DirectToEsrp"
}

/**
 * Defines values for E911Type. \
 * {@link KnownE911Type} can be used interchangeably with E911Type,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard**: Emergency calls are not handled different from other calls \
 * **DirectToEsrp**: Emergency calls are routed directly to the ESRP
 */
export type E911Type = string;

/** Known values of {@link CommunicationsPlatform} that the service accepts. */
export enum KnownCommunicationsPlatform {
  /** Operator Connect */
  OperatorConnect = "OperatorConnect",
  /** Teams Phone Mobile */
  TeamsPhoneMobile = "TeamsPhoneMobile",
  /** Teams Direct Routing */
  TeamsDirectRouting = "TeamsDirectRouting"
}

/**
 * Defines values for CommunicationsPlatform. \
 * {@link KnownCommunicationsPlatform} can be used interchangeably with CommunicationsPlatform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **OperatorConnect**: Operator Connect \
 * **TeamsPhoneMobile**: Teams Phone Mobile \
 * **TeamsDirectRouting**: Teams Direct Routing
 */
export type CommunicationsPlatform = string;

/** Known values of {@link ApiBridgeActivationState} that the service accepts. */
export enum KnownApiBridgeActivationState {
  /** API Bridge is enabled */
  Enabled = "enabled",
  /** API Bridge is disabled */
  Disabled = "disabled"
}

/**
 * Defines values for ApiBridgeActivationState. \
 * {@link KnownApiBridgeActivationState} can be used interchangeably with ApiBridgeActivationState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **enabled**: API Bridge is enabled \
 * **disabled**: API Bridge is disabled
 */
export type ApiBridgeActivationState = string;

/** Known values of {@link AutoGeneratedDomainNameLabelScope} that the service accepts. */
export enum KnownAutoGeneratedDomainNameLabelScope {
  /** Generated domain name label depends on resource name and tenant ID. */
  TenantReuse = "TenantReuse",
  /** Generated domain name label depends on resource name, tenant ID and subscription ID. */
  SubscriptionReuse = "SubscriptionReuse",
  /** Generated domain name label depends on resource name, tenant ID, subscription ID and resource group name. */
  ResourceGroupReuse = "ResourceGroupReuse",
  /** Generated domain name label is always unique. */
  NoReuse = "NoReuse"
}

/**
 * Defines values for AutoGeneratedDomainNameLabelScope. \
 * {@link KnownAutoGeneratedDomainNameLabelScope} can be used interchangeably with AutoGeneratedDomainNameLabelScope,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TenantReuse**: Generated domain name label depends on resource name and tenant ID. \
 * **SubscriptionReuse**: Generated domain name label depends on resource name, tenant ID and subscription ID. \
 * **ResourceGroupReuse**: Generated domain name label depends on resource name, tenant ID, subscription ID and resource group name. \
 * **NoReuse**: Generated domain name label is always unique.
 */
export type AutoGeneratedDomainNameLabelScope = string;

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned, UserAssigned"
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned, UserAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */
export enum KnownCheckNameAvailabilityReason {
  /** Invalid */
  Invalid = "Invalid",
  /** AlreadyExists */
  AlreadyExists = "AlreadyExists"
}

/**
 * Defines values for CheckNameAvailabilityReason. \
 * {@link KnownCheckNameAvailabilityReason} can be used interchangeably with CheckNameAvailabilityReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export type CheckNameAvailabilityReason = string;

/** Known values of {@link TestLinePurpose} that the service accepts. */
export enum KnownTestLinePurpose {
  /** The test line is used for manual testing */
  Manual = "Manual",
  /** The test line is used for automated testing */
  Automated = "Automated"
}

/**
 * Defines values for TestLinePurpose. \
 * {@link KnownTestLinePurpose} can be used interchangeably with TestLinePurpose,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Manual**: The test line is used for manual testing \
 * **Automated**: The test line is used for automated testing
 */
export type TestLinePurpose = string;
/** Defines values for SkuTier. */
export type SkuTier = "Free" | "Basic" | "Standard" | "Premium";

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface CommunicationsGatewaysListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type CommunicationsGatewaysListBySubscriptionResponse = CommunicationsGatewayListResult;

/** Optional parameters. */
export interface CommunicationsGatewaysListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type CommunicationsGatewaysListByResourceGroupResponse = CommunicationsGatewayListResult;

/** Optional parameters. */
export interface CommunicationsGatewaysGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CommunicationsGatewaysGetResponse = CommunicationsGateway;

/** Optional parameters. */
export interface CommunicationsGatewaysCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type CommunicationsGatewaysCreateOrUpdateResponse = CommunicationsGateway;

/** Optional parameters. */
export interface CommunicationsGatewaysUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type CommunicationsGatewaysUpdateResponse = CommunicationsGateway;

/** Optional parameters. */
export interface CommunicationsGatewaysDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CommunicationsGatewaysListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type CommunicationsGatewaysListBySubscriptionNextResponse = CommunicationsGatewayListResult;

/** Optional parameters. */
export interface CommunicationsGatewaysListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type CommunicationsGatewaysListByResourceGroupNextResponse = CommunicationsGatewayListResult;

/** Optional parameters. */
export interface NameAvailabilityCheckLocalOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkLocal operation. */
export type NameAvailabilityCheckLocalResponse = CheckNameAvailabilityResponse;

/** Optional parameters. */
export interface TestLinesListByCommunicationsGatewayOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCommunicationsGateway operation. */
export type TestLinesListByCommunicationsGatewayResponse = TestLineListResult;

/** Optional parameters. */
export interface TestLinesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TestLinesGetResponse = TestLine;

/** Optional parameters. */
export interface TestLinesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type TestLinesCreateOrUpdateResponse = TestLine;

/** Optional parameters. */
export interface TestLinesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type TestLinesUpdateResponse = TestLine;

/** Optional parameters. */
export interface TestLinesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface TestLinesListByCommunicationsGatewayNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCommunicationsGatewayNext operation. */
export type TestLinesListByCommunicationsGatewayNextResponse = TestLineListResult;

/** Optional parameters. */
export interface MicrosoftVoiceServicesOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
