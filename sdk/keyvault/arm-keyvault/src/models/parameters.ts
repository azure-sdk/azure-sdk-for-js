/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  CheckMhsmNameAvailabilityParameters as CheckMhsmNameAvailabilityParametersMapper,
  ManagedHsm as ManagedHsmMapper,
  VaultCheckNameAvailabilityParameters as VaultCheckNameAvailabilityParametersMapper,
  Vault as VaultMapper,
  VaultPatchParameters as VaultPatchParametersMapper,
  VaultAccessPolicyParameters as VaultAccessPolicyParametersMapper,
  MhsmPrivateEndpointConnection as MhsmPrivateEndpointConnectionMapper,
  PrivateEndpointConnection as PrivateEndpointConnectionMapper,
  Secret as SecretMapper,
  SecretPatchParameters as SecretPatchParametersMapper,
} from "../models/mappers.js";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2024-11-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const body: OperationParameter = {
  parameterPath: "body",
  mapper: CheckMhsmNameAvailabilityParametersMapper,
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "Uuid",
    },
  },
};

export const location: OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "location",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const name: OperationURLParameter = {
  parameterPath: "name",
  mapper: {
    serializedName: "name",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const top: OperationQueryParameter = {
  parameterPath: ["options", "top"],
  mapper: {
    serializedName: "$top",
    type: {
      name: "Number",
    },
  },
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource: OperationParameter = {
  parameterPath: "resource",
  mapper: ManagedHsmMapper,
};

export const properties: OperationParameter = {
  parameterPath: "properties",
  mapper: ManagedHsmMapper,
};

export const body1: OperationParameter = {
  parameterPath: "body",
  mapper: VaultCheckNameAvailabilityParametersMapper,
};

export const vaultName: OperationURLParameter = {
  parameterPath: "vaultName",
  mapper: {
    serializedName: "vaultName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource1: OperationParameter = {
  parameterPath: "resource",
  mapper: VaultMapper,
};

export const properties1: OperationParameter = {
  parameterPath: "properties",
  mapper: VaultPatchParametersMapper,
};

export const body2: OperationParameter = {
  parameterPath: "body",
  mapper: VaultAccessPolicyParametersMapper,
};

export const operationKind: OperationURLParameter = {
  parameterPath: "operationKind",
  mapper: {
    serializedName: "operationKind",
    required: true,
    type: {
      name: "Enum",
      allowedValues: ["add", "replace", "remove"],
    },
  },
};

export const privateEndpointConnectionName: OperationURLParameter = {
  parameterPath: "privateEndpointConnectionName",
  mapper: {
    serializedName: "privateEndpointConnectionName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource2: OperationParameter = {
  parameterPath: "resource",
  mapper: MhsmPrivateEndpointConnectionMapper,
};

export const resource3: OperationParameter = {
  parameterPath: "resource",
  mapper: PrivateEndpointConnectionMapper,
};

export const secretName: OperationURLParameter = {
  parameterPath: "secretName",
  mapper: {
    serializedName: "secretName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource4: OperationParameter = {
  parameterPath: "resource",
  mapper: SecretMapper,
};

export const properties2: OperationParameter = {
  parameterPath: "properties",
  mapper: SecretPatchParametersMapper,
};
