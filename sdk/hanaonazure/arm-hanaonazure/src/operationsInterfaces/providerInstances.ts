/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ProviderInstance,
  ProviderInstancesListOptionalParams,
  ProviderInstancesGetOptionalParams,
  ProviderInstancesGetResponse,
  ProviderInstancesCreateOptionalParams,
  ProviderInstancesCreateResponse,
  ProviderInstancesDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ProviderInstances. */
export interface ProviderInstances {
  /**
   * The product Microsoft.Workloads/sapMonitors (AMS Classic) is officially retired as of May 31, 2023.
   * @param resourceGroupName Name of the resource group.
   * @param sapMonitorName Name of the SAP monitor resource.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    sapMonitorName: string,
    options?: ProviderInstancesListOptionalParams,
  ): PagedAsyncIterableIterator<ProviderInstance>;
  /**
   * The product Microsoft.Workloads/sapMonitors (AMS Classic) is officially retired as of May 31, 2023.
   * @param resourceGroupName Name of the resource group.
   * @param sapMonitorName Name of the SAP monitor resource.
   * @param providerInstanceName Name of the provider instance.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    sapMonitorName: string,
    providerInstanceName: string,
    options?: ProviderInstancesGetOptionalParams,
  ): Promise<ProviderInstancesGetResponse>;
  /**
   * The product Microsoft.Workloads/sapMonitors (AMS Classic) is officially retired as of May 31, 2023.
   * @param resourceGroupName Name of the resource group.
   * @param sapMonitorName Name of the SAP monitor resource.
   * @param providerInstanceName Name of the provider instance.
   * @param providerInstanceParameter Request body representing a provider instance
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    sapMonitorName: string,
    providerInstanceName: string,
    providerInstanceParameter: ProviderInstance,
    options?: ProviderInstancesCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProviderInstancesCreateResponse>,
      ProviderInstancesCreateResponse
    >
  >;
  /**
   * The product Microsoft.Workloads/sapMonitors (AMS Classic) is officially retired as of May 31, 2023.
   * @param resourceGroupName Name of the resource group.
   * @param sapMonitorName Name of the SAP monitor resource.
   * @param providerInstanceName Name of the provider instance.
   * @param providerInstanceParameter Request body representing a provider instance
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    sapMonitorName: string,
    providerInstanceName: string,
    providerInstanceParameter: ProviderInstance,
    options?: ProviderInstancesCreateOptionalParams,
  ): Promise<ProviderInstancesCreateResponse>;
  /**
   * The product Microsoft.Workloads/sapMonitors (AMS Classic) is officially retired as of May 31, 2023.
   * @param resourceGroupName Name of the resource group.
   * @param sapMonitorName Name of the SAP monitor resource.
   * @param providerInstanceName Name of the provider instance.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    sapMonitorName: string,
    providerInstanceName: string,
    options?: ProviderInstancesDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * The product Microsoft.Workloads/sapMonitors (AMS Classic) is officially retired as of May 31, 2023.
   * @param resourceGroupName Name of the resource group.
   * @param sapMonitorName Name of the SAP monitor resource.
   * @param providerInstanceName Name of the provider instance.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    sapMonitorName: string,
    providerInstanceName: string,
    options?: ProviderInstancesDeleteOptionalParams,
  ): Promise<void>;
}
