/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response of a FabricCapacity list operation. */
export interface FabricCapacityListResult {
  /** The FabricCapacity items on this page */
  value: FabricCapacity[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The Microsoft Fabric capacity properties. */
export interface FabricCapacityProperties {
  /**
   * The current deployment state of Microsoft Fabric resource. The provisioningState is to indicate states for resource provisioning.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The current state of Microsoft Fabric resource. The state is to indicate more states outside of resource provisioning.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: ResourceState;
  /** The capacity administration */
  administration: CapacityAdministration;
}

/** The administration properties of the Fabric capacity resource */
export interface CapacityAdministration {
  /** An array of administrator user identities. */
  members: string[];
}

/** Represents the SKU name and Azure pricing tier for Microsoft Fabric capacity resource. */
export interface RpSku {
  /** The name of the SKU level. */
  name: string;
  /** The name of the Azure pricing tier to which the SKU applies. */
  tier: RpSkuTier;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The check availability request body. */
export interface CheckNameAvailabilityRequest {
  /** The name of the resource for which availability needs to be checked. */
  name?: string;
  /** The resource type. */
  type?: string;
}

/** The check availability result. */
export interface CheckNameAvailabilityResponse {
  /** Indicates if the resource name is available. */
  nameAvailable?: boolean;
  /** The reason why the given name is not available. */
  reason?: CheckNameAvailabilityReason;
  /** Detailed reason why the given name is available. */
  message?: string;
}

/** An object that represents enumerating SKUs for new resources. */
export interface RpSkuEnumerationForNewResourceResult {
  /** The collection of available SKUs for new resources */
  value: RpSkuDetailsForNewResource[];
  /** Url for the next page.  Null if no more pages available */
  nextLink?: string;
}

/** The SKU details */
export interface RpSkuDetailsForNewResource {
  /** The resource type */
  resourceType: string;
  /** The SKU's name */
  name: string;
  /** The list of available locations for the SKU */
  locations: string[];
}

/** The type used for update operations of the FabricCapacity. */
export interface FabricCapacityUpdate {
  /** The SKU details */
  sku?: RpSku;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The resource-specific properties for this resource. */
  properties?: FabricCapacityUpdateProperties;
}

/** The updatabasadsle properties of the FabricCapacity. */
export interface FabricCapacityUpdateProperties {
  /** The capacity administration */
  administration?: CapacityAdministration;
}

/** An object that represents enumerating SKUs for existing resources */
export interface RpSkuEnumerationForExistingResourceResult {
  /** The SKU details */
  value: RpSkuDetailsForExistingResource[];
  /** Url for the next page.  Null if no more pages available */
  nextLink?: string;
}

/** An object that represents SKU details for existing resources */
export interface RpSkuDetailsForExistingResource {
  /** The resource type */
  resourceType: string;
  /** The SKU details */
  sku: RpSku;
}

/** The SKU properties */
export interface RpSkuProperties {
  /** The SKU's name */
  name: string;
  /** The list of available locations for the SKU */
  locations: string[];
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** Fabric Capacity resource */
export interface FabricCapacity extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: FabricCapacityProperties;
  /** The SKU details */
  sku: RpSku;
}

/** Defines headers for FabricCapacities_createOrUpdate operation. */
export interface FabricCapacitiesCreateOrUpdateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for FabricCapacities_update operation. */
export interface FabricCapacitiesUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for FabricCapacities_delete operation. */
export interface FabricCapacitiesDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for FabricCapacities_resume operation. */
export interface FabricCapacitiesResumeHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for FabricCapacities_suspend operation. */
export interface FabricCapacitiesSuspendHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** Resource is deleting */
  Deleting = "Deleting",
  /** Resource is provisioning */
  Provisioning = "Provisioning",
  /** Resource is updating */
  Updating = "Updating",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Deleting**: Resource is deleting \
 * **Provisioning**: Resource is provisioning \
 * **Updating**: Resource is updating
 */
export type ProvisioningState = string;

/** Known values of {@link ResourceState} that the service accepts. */
export enum KnownResourceState {
  /** Resource is active */
  Active = "Active",
  /** Resource is provisioning */
  Provisioning = "Provisioning",
  /** Resource is failed */
  Failed = "Failed",
  /** Resource is updating */
  Updating = "Updating",
  /** Resource is deleting */
  Deleting = "Deleting",
  /** Resource is suspending */
  Suspending = "Suspending",
  /** Resource is suspended */
  Suspended = "Suspended",
  /** Resource is pausing */
  Pausing = "Pausing",
  /** Resource is paused */
  Paused = "Paused",
  /** Resource is resuming */
  Resuming = "Resuming",
  /** Resource is scaling */
  Scaling = "Scaling",
  /** Resource is preparing */
  Preparing = "Preparing",
}

/**
 * Defines values for ResourceState. \
 * {@link KnownResourceState} can be used interchangeably with ResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active**: Resource is active \
 * **Provisioning**: Resource is provisioning \
 * **Failed**: Resource is failed \
 * **Updating**: Resource is updating \
 * **Deleting**: Resource is deleting \
 * **Suspending**: Resource is suspending \
 * **Suspended**: Resource is suspended \
 * **Pausing**: Resource is pausing \
 * **Paused**: Resource is paused \
 * **Resuming**: Resource is resuming \
 * **Scaling**: Resource is scaling \
 * **Preparing**: Resource is preparing
 */
export type ResourceState = string;

/** Known values of {@link RpSkuTier} that the service accepts. */
export enum KnownRpSkuTier {
  /** Fabric tier */
  Fabric = "Fabric",
}

/**
 * Defines values for RpSkuTier. \
 * {@link KnownRpSkuTier} can be used interchangeably with RpSkuTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Fabric**: Fabric tier
 */
export type RpSkuTier = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */
export enum KnownCheckNameAvailabilityReason {
  /** Invalid */
  Invalid = "Invalid",
  /** AlreadyExists */
  AlreadyExists = "AlreadyExists",
}

/**
 * Defines values for CheckNameAvailabilityReason. \
 * {@link KnownCheckNameAvailabilityReason} can be used interchangeably with CheckNameAvailabilityReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export type CheckNameAvailabilityReason = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface FabricCapacitiesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type FabricCapacitiesListBySubscriptionResponse =
  FabricCapacityListResult;

/** Optional parameters. */
export interface FabricCapacitiesCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type FabricCapacitiesCheckNameAvailabilityResponse =
  CheckNameAvailabilityResponse;

/** Optional parameters. */
export interface FabricCapacitiesListSkusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSkus operation. */
export type FabricCapacitiesListSkusResponse =
  RpSkuEnumerationForNewResourceResult;

/** Optional parameters. */
export interface FabricCapacitiesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type FabricCapacitiesListByResourceGroupResponse =
  FabricCapacityListResult;

/** Optional parameters. */
export interface FabricCapacitiesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FabricCapacitiesGetResponse = FabricCapacity;

/** Optional parameters. */
export interface FabricCapacitiesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type FabricCapacitiesCreateOrUpdateResponse = FabricCapacity;

/** Optional parameters. */
export interface FabricCapacitiesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type FabricCapacitiesUpdateResponse = FabricCapacity;

/** Optional parameters. */
export interface FabricCapacitiesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type FabricCapacitiesDeleteResponse = FabricCapacitiesDeleteHeaders;

/** Optional parameters. */
export interface FabricCapacitiesResumeOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the resume operation. */
export type FabricCapacitiesResumeResponse = FabricCapacitiesResumeHeaders;

/** Optional parameters. */
export interface FabricCapacitiesListSkusForCapacityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSkusForCapacity operation. */
export type FabricCapacitiesListSkusForCapacityResponse =
  RpSkuEnumerationForExistingResourceResult;

/** Optional parameters. */
export interface FabricCapacitiesSuspendOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the suspend operation. */
export type FabricCapacitiesSuspendResponse = FabricCapacitiesSuspendHeaders;

/** Optional parameters. */
export interface FabricCapacitiesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type FabricCapacitiesListBySubscriptionNextResponse =
  FabricCapacityListResult;

/** Optional parameters. */
export interface FabricCapacitiesListSkusNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSkusNext operation. */
export type FabricCapacitiesListSkusNextResponse =
  RpSkuEnumerationForNewResourceResult;

/** Optional parameters. */
export interface FabricCapacitiesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type FabricCapacitiesListByResourceGroupNextResponse =
  FabricCapacityListResult;

/** Optional parameters. */
export interface FabricCapacitiesListSkusForCapacityNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSkusForCapacityNext operation. */
export type FabricCapacitiesListSkusForCapacityNextResponse =
  RpSkuEnumerationForExistingResourceResult;

/** Optional parameters. */
export interface MicrosoftFabricManagementServiceOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
