/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DataBoxEdgeDevice,
  DevicesListByResourceGroupOptionalParams,
  DevicesListBySubscriptionOptionalParams,
  DevicesCreateOrUpdateOptionalParams,
  DevicesCreateOrUpdateResponse,
  DevicesGetOptionalParams,
  DevicesGetResponse,
  DevicesDeleteOptionalParams,
  DevicesUpdateOptionalParams,
  DevicesUpdateResponse,
  DevicesGetExtendedInformationOptionalParams,
  DevicesGetExtendedInformationResponse,
  DevicesUpdateExtendedInformationOptionalParams,
  DevicesUpdateExtendedInformationResponse,
  DevicesGetNetworkSettingsOptionalParams,
  DevicesGetNetworkSettingsResponse,
  DevicesCreateOrUpdateSecuritySettingsOptionalParams,
  DevicesGetUpdateSummaryOptionalParams,
  DevicesGetUpdateSummaryResponse,
  DevicesScanForUpdatesOptionalParams,
  DevicesDownloadUpdatesOptionalParams,
  DevicesInstallUpdatesOptionalParams,
  DevicesUploadCertificateOptionalParams,
  DevicesUploadCertificateResponse,
  DevicesGenerateCertificateOptionalParams,
  DevicesGenerateCertificateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Devices. */
export interface Devices {
  /**
   * Gets all the Data Box Edge/Data Box Gateway devices in a resource group.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: DevicesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<DataBoxEdgeDevice>;
  /**
   * Gets all the Data Box Edge/Data Box Gateway devices in a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: DevicesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<DataBoxEdgeDevice>;
  /**
   * Creates or updates a Data Box Edge/Data Box Gateway resource.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  createOrUpdate(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesCreateOrUpdateOptionalParams
  ): Promise<DevicesCreateOrUpdateResponse>;
  /**
   * Gets the properties of the Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  get(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesGetOptionalParams
  ): Promise<DevicesGetResponse>;
  /**
   * Deletes the Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  delete(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Modifies a Data Box Edge/Data Box Gateway resource.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  update(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesUpdateOptionalParams
  ): Promise<DevicesUpdateResponse>;
  /**
   * Gets additional information for the specified Azure Stack Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  getExtendedInformation(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesGetExtendedInformationOptionalParams
  ): Promise<DevicesGetExtendedInformationResponse>;
  /**
   * Gets additional information for the specified Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  updateExtendedInformation(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesUpdateExtendedInformationOptionalParams
  ): Promise<DevicesUpdateExtendedInformationResponse>;
  /**
   * Gets the network settings of the specified Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  getNetworkSettings(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesGetNetworkSettingsOptionalParams
  ): Promise<DevicesGetNetworkSettingsResponse>;
  /**
   * Updates the security settings on a Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginCreateOrUpdateSecuritySettings(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesCreateOrUpdateSecuritySettingsOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Updates the security settings on a Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginCreateOrUpdateSecuritySettingsAndWait(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesCreateOrUpdateSecuritySettingsOptionalParams
  ): Promise<void>;
  /**
   * Gets information about the availability of updates based on the last scan of the device. It also
   * gets information about any ongoing download or install jobs on the device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  getUpdateSummary(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesGetUpdateSummaryOptionalParams
  ): Promise<DevicesGetUpdateSummaryResponse>;
  /**
   * Scans for updates on a Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginScanForUpdates(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesScanForUpdatesOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Scans for updates on a Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginScanForUpdatesAndWait(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesScanForUpdatesOptionalParams
  ): Promise<void>;
  /**
   * Downloads the updates on a Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginDownloadUpdates(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesDownloadUpdatesOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Downloads the updates on a Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginDownloadUpdatesAndWait(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesDownloadUpdatesOptionalParams
  ): Promise<void>;
  /**
   * Installs the updates on the Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginInstallUpdates(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesInstallUpdatesOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Installs the updates on the Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginInstallUpdatesAndWait(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesInstallUpdatesOptionalParams
  ): Promise<void>;
  /**
   * Uploads registration certificate for the device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  uploadCertificate(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesUploadCertificateOptionalParams
  ): Promise<DevicesUploadCertificateResponse>;
  /**
   * Generates certificate for activation key.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  generateCertificate(
    deviceName: string,
    resourceGroupName: string,
    options?: DevicesGenerateCertificateOptionalParams
  ): Promise<DevicesGenerateCertificateResponse>;
}
