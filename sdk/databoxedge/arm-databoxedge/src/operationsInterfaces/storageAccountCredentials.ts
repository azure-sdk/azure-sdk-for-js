/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  StorageAccountCredential,
  StorageAccountCredentialsListByDataBoxEdgeDeviceOptionalParams,
  StorageAccountCredentialsCreateOrUpdateOptionalParams,
  StorageAccountCredentialsCreateOrUpdateResponse,
  StorageAccountCredentialsGetOptionalParams,
  StorageAccountCredentialsGetResponse,
  StorageAccountCredentialsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a StorageAccountCredentials. */
export interface StorageAccountCredentials {
  /**
   * Gets all the storage account credentials in a Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  listByDataBoxEdgeDevice(
    deviceName: string,
    resourceGroupName: string,
    options?: StorageAccountCredentialsListByDataBoxEdgeDeviceOptionalParams
  ): PagedAsyncIterableIterator<StorageAccountCredential>;
  /**
   * Creates or updates the storage account credential.
   * @param deviceName The device name.
   * @param name The storage account credential name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    options?: StorageAccountCredentialsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<StorageAccountCredentialsCreateOrUpdateResponse>,
      StorageAccountCredentialsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates the storage account credential.
   * @param deviceName The device name.
   * @param name The storage account credential name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    options?: StorageAccountCredentialsCreateOrUpdateOptionalParams
  ): Promise<StorageAccountCredentialsCreateOrUpdateResponse>;
  /**
   * Gets the properties of the specified storage account credential.
   * @param deviceName The device name.
   * @param name The storage account credential name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  get(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    options?: StorageAccountCredentialsGetOptionalParams
  ): Promise<StorageAccountCredentialsGetResponse>;
  /**
   * Deletes the storage account credential.
   * @param deviceName The device name.
   * @param name The storage account credential name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginDelete(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    options?: StorageAccountCredentialsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes the storage account credential.
   * @param deviceName The device name.
   * @param name The storage account credential name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    options?: StorageAccountCredentialsDeleteOptionalParams
  ): Promise<void>;
}
