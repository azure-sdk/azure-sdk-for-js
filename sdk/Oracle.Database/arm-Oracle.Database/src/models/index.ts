/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response of a CloudExadataInfrastructure list operation. */
export interface CloudExadataInfrastructureListResult {
  /** The CloudExadataInfrastructure items on this page */
  value: CloudExadataInfrastructure[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** MaintenanceWindow resource properties */
export interface MaintenanceWindow {
  /** The maintenance window scheduling preference. */
  preference?: Preference;
  /** Months during the year when maintenance should be performed. */
  months?: Month[];
  /** Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. */
  weeksOfMonth?: number[];
  /** Days during the week when maintenance should be performed. */
  daysOfWeek?: DayOfWeek[];
  /** The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC */
  hoursOfDay?: number[];
  /** Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4. */
  leadTimeInWeeks?: number;
  /** Cloud Exadata infrastructure node patching method. */
  patchingMode?: PatchingMode;
  /** Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive). */
  customActionTimeoutInMins?: number;
  /** If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations. */
  isCustomActionTimeoutEnabled?: boolean;
  /** is Monthly Patching Enabled */
  isMonthlyPatchingEnabled?: boolean;
}

/** Month resource properties */
export interface Month {
  /** Name of the month of the year. */
  name: MonthName;
}

/** DayOfWeek resource properties */
export interface DayOfWeek {
  /** Name of the day of the week. */
  name: DayOfWeekName;
}

/** The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching). */
export interface EstimatedPatchingTime {
  /**
   * The estimated time required in minutes for database server patching.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly estimatedDbServerPatchingTime?: number;
  /**
   * The estimated time required in minutes for network switch patching.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly estimatedNetworkSwitchesPatchingTime?: number;
  /**
   * The estimated time required in minutes for storage server patching.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly estimatedStorageServerPatchingTime?: number;
  /**
   * The estimated total time required in minutes for all patching operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalEstimatedPatchingTime?: number;
}

/** CustomerContact resource properties */
export interface CustomerContact {
  /** The email address used by Oracle to send notifications regarding databases and infrastructure. */
  email: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The response of a CloudVmCluster list operation. */
export interface CloudVmClusterListResult {
  /** The CloudVmCluster items on this page */
  value: CloudVmCluster[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** DataCollectionOptions resource properties */
export interface DataCollectionOptions {
  /** Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS. */
  isDiagnosticsEventsEnabled?: boolean;
  /** Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. */
  isHealthMonitoringEnabled?: boolean;
  /** Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. */
  isIncidentLogsEnabled?: boolean;
}

/** ExadataIormConfig for cloud vm cluster */
export interface ExadataIormConfig {
  /** An array of IORM settings for all the database in the Exadata DB system. */
  dbPlans?: DbIormConfig[];
  /** Additional information about the current lifecycleState. */
  lifecycleDetails?: string;
  /** The current state of IORM configuration for the Exadata DB system. */
  provisioningState?: IormLifecycleState;
  /** The current value for the IORM objective. The default is AUTO. */
  objective?: Objective;
}

/** DbIormConfig for cloud vm cluster */
export interface DbIormConfig {
  /** The database name. For the default DbPlan, the dbName is default. */
  dbName?: string;
  /** The flash cache limit for this database. This value is internally configured based on the share value assigned to the database. */
  flashCacheLimit?: string;
  /** The relative priority of this database. */
  share?: number;
}

/** The response of a DbSystemShape list operation. */
export interface DbSystemShapeListResult {
  /** The DbSystemShape items on this page */
  value: DbSystemShape[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The response of a DnsPrivateView list operation. */
export interface DnsPrivateViewListResult {
  /** The DnsPrivateView items on this page */
  value: DnsPrivateView[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The response of a DnsPrivateZone list operation. */
export interface DnsPrivateZoneListResult {
  /** The DnsPrivateZone items on this page */
  value: DnsPrivateZone[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The response of a GiVersion list operation. */
export interface GiVersionListResult {
  /** The GiVersion items on this page */
  value: GiVersion[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The response of a OracleSubscription list operation. */
export interface OracleSubscriptionListResult {
  /** The OracleSubscription items on this page */
  value: OracleSubscription[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Plan for the resource. */
export interface Plan {
  /** A user defined name of the 3rd Party Artifact that is being procured. */
  name: string;
  /** The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic */
  publisher: string;
  /** The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. */
  product: string;
  /** A publisher provided promotion code as provisioned in Data Market for the said product/artifact. */
  promotionCode?: string;
  /** The version of the desired product/artifact. */
  version?: string;
}

/** The type used for update operations of the OracleSubscription. */
export interface OracleSubscriptionUpdate {
  /** Details of the resource plan. */
  plan?: Plan;
  /** Term Unit. P1Y, P3Y, etc, see Durations https://en.wikipedia.org/wiki/ISO_8601 */
  termUnit?: string;
}

/** Cloud Account Details model */
export interface CloudAccountDetails {
  /**
   * Cloud Account name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cloudAccountName?: string;
  /**
   * Cloud Account Home region
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cloudAccountHomeRegion?: string;
}

/** SaaS Subscription Details model */
export interface SaasSubscriptionDetails {
  /**
   * Purchased SaaS subscription ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * SaaS subscription name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionName?: string;
  /**
   * Creation Date and Time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: Date;
  /**
   * Purchased offer ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly offerId?: string;
  /**
   * Purchased offer's plan ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly planId?: string;
  /**
   * Indicates the status of the Subscription.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly saasSubscriptionStatus?: string;
  /**
   * Publisher ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publisherId?: string;
  /**
   * Purchaser Email ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaserEmailId?: string;
  /**
   * Purchaser Tenant ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly purchaserTenantId?: string;
  /**
   * Purchase Term Unit
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly termUnit?: string;
  /**
   * AutoRenew flag
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isAutoRenew?: boolean;
  /**
   * FreeTrial flag
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isFreeTrial?: boolean;
}

/** The type used for update operations of the CloudExadataInfrastructure. */
export interface CloudExadataInfrastructureUpdate {
  /** CloudExadataInfrastructure zones */
  zones?: string[];
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** The response of a DbServer list operation. */
export interface DbServerListResult {
  /** The DbServer items on this page */
  value: DbServer[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** DbServer Patching Properties */
export interface DbServerPatchingDetails {
  /**
   * Estimated Patch Duration
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly estimatedPatchDuration?: number;
  /**
   * Patching Status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly patchingStatus?: DbServerPatchingStatus;
  /**
   * Time Patching Ended
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timePatchingEnded?: Date;
  /**
   * Time Patching Started
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timePatchingStarted?: Date;
}

/** The type used for update operations of the CloudVmCluster. */
export interface CloudVmClusterUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The data disk group size to be allocated in GBs per VM. */
  storageSizeInGbs?: number;
  /** The data disk group size to be allocated in TBs. */
  dataStorageSizeInTbs?: number;
  /** The local node storage to be allocated in GBs. */
  dbNodeStorageSizeInGbs?: number;
  /** The memory to be allocated in GBs. */
  memorySizeInGbs?: number;
  /** The number of CPU cores enabled on the cloud VM cluster. */
  cpuCoreCount?: number;
  /** The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part. */
  ocpuCount?: number;
  /** The public key portion of one or more key pairs used for SSH access to the cloud VM cluster. */
  sshPublicKeys?: string[];
  /** The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. */
  licenseModel?: LicenseModel;
  /** Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS. */
  dataCollectionOptions?: DataCollectionOptions;
  /** Display Name */
  displayName?: string;
  /** The list of compute servers to be added to the cloud VM cluster. */
  computeNodes?: string[];
}

/** Add/Remove (Virtual Machine) DbNode model */
export interface AddRemoveDbNode {
  /** Db servers ocids */
  dbServers: string[];
}

/** The response of a DbNode list operation. */
export interface DbNodeListResult {
  /** The DbNode items on this page */
  value: DbNode[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Private Ip Addresses filter */
export interface PrivateIpAddressesFilter {
  /** The [OCID](/Content/General/Concepts/identifiers.htm) of the resource. */
  subnetId: string;
  /** The [OCID](/Content/General/Concepts/identifiers.htm) of the resource. */
  vnicId: string;
}

/** PrivateIpAddress resource properties */
export interface PrivateIpAddressProperties {
  /** PrivateIpAddresses displayName */
  displayName: string;
  /** PrivateIpAddresses hostnameLabel */
  hostnameLabel: string;
  /** PrivateIpAddresses Id */
  ocid: string;
  /** PrivateIpAddresses ipAddress */
  ipAddress: string;
  /** PrivateIpAddresses subnetId */
  subnetId: string;
}

/** The response of a VirtualNetworkAddress list operation. */
export interface VirtualNetworkAddressListResult {
  /** The VirtualNetworkAddress items on this page */
  value: VirtualNetworkAddress[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** validation error */
export interface ValidationError {
  /** error code */
  code: string;
  /** error message */
  message: string;
}

/** validation result */
export interface ValidationResult {
  /** validation status */
  status: ValidationStatus;
  /** validation error */
  error: ValidationError;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** CloudExadataInfrastructure resource definition */
export interface CloudExadataInfrastructure extends TrackedResource {
  /** CloudExadataInfrastructure zones */
  zones: string[];
  /**
   * Exadata infra ocid
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid?: string;
  /** The number of compute servers for the cloud Exadata infrastructure. */
  computeCount?: number;
  /** The number of storage servers for the cloud Exadata infrastructure. */
  storageCount?: number;
  /**
   * The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalStorageSizeInGbs?: number;
  /**
   * The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableStorageSizeInGbs?: number;
  /**
   * The date and time the cloud Exadata infrastructure resource was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: string;
  /**
   * Additional information about the current lifecycle state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleDetails?: string;
  /** maintenanceWindow property */
  maintenanceWindow?: MaintenanceWindow;
  /**
   * The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly estimatedPatchingTime?: EstimatedPatchingTime;
  /** The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. */
  customerContacts?: CustomerContact[];
  /**
   * CloudExadataInfrastructure provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: CloudExadataInfrastructureProvisioningState;
  /** The model name of the cloud Exadata infrastructure resource. */
  shape?: string;
  /**
   * HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ociUrl?: string;
  /**
   * The total number of CPU cores allocated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cpuCount?: number;
  /**
   * The total number of CPU cores available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxCpuCount?: number;
  /**
   * The memory allocated in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memorySizeInGbs?: number;
  /**
   * The total memory available in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxMemoryInGbs?: number;
  /**
   * The local node storage to be allocated in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbNodeStorageSizeInGbs?: number;
  /**
   * The total local node storage available in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxDbNodeStorageSizeInGbs?: number;
  /**
   * The quantity of data in the database, in terabytes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataStorageSizeInTbs?: number;
  /**
   * The total available DATA disk group size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxDataStorageInTbs?: number;
  /**
   * The software version of the database servers (dom0) in the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbServerVersion?: string;
  /**
   * The software version of the storage servers (cells) in the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageServerVersion?: string;
  /**
   * The requested number of additional storage servers activated for the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activatedStorageCount?: number;
  /**
   * The requested number of additional storage servers for the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalStorageCount?: number;
  /** The name for the Exadata infrastructure. */
  displayName?: string;
  /**
   * The OCID of the last maintenance run.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastMaintenanceRunId?: string;
  /**
   * The OCID of the next maintenance run.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextMaintenanceRunId?: string;
  /**
   * Monthly Db Server version
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly monthlyDbServerVersion?: string;
  /**
   * Monthly Storage Server version
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly monthlyStorageServerVersion?: string;
}

/** CloudVmCluster resource definition */
export interface CloudVmCluster extends TrackedResource {
  /**
   * Cloud VM Cluster ocid
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid?: string;
  /**
   * The port number configured for the listener on the cloud VM cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly listenerPort?: number;
  /**
   * The number of nodes in the cloud VM cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nodeCount?: number;
  /** The data disk group size to be allocated in GBs per VM. */
  storageSizeInGbs?: number;
  /** The data disk group size to be allocated in TBs. */
  dataStorageSizeInTbs?: number;
  /** The local node storage to be allocated in GBs. */
  dbNodeStorageSizeInGbs?: number;
  /** The memory to be allocated in GBs. */
  memorySizeInGbs?: number;
  /**
   * The date and time that the cloud VM cluster was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: Date;
  /**
   * Additional information about the current lifecycle state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleDetails?: string;
  /** The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm). */
  timeZone?: string;
  /** The OCID of the zone the cloud VM cluster is associated with. */
  zoneId?: string;
  /** The hostname for the cloud VM cluster. */
  hostname?: string;
  /** The domain name for the cloud VM cluster. */
  domain?: string;
  /** The number of CPU cores enabled on the cloud VM cluster. */
  cpuCoreCount?: number;
  /** The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part. */
  ocpuCount?: number;
  /** The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive. */
  clusterName?: string;
  /** The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage Configuration](/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage. */
  dataStoragePercentage?: number;
  /** If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster. */
  isLocalBackupEnabled?: boolean;
  /** Cloud Exadata Infrastructure ID */
  cloudExadataInfrastructureId?: string;
  /** If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created. */
  isSparseDiskgroupEnabled?: boolean;
  /**
   * Operating system version of the image.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemVersion?: string;
  /** The public key portion of one or more key pairs used for SSH access to the cloud VM cluster. */
  sshPublicKeys?: string[];
  /** The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. */
  licenseModel?: LicenseModel;
  /**
   * The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly diskRedundancy?: DiskRedundancy;
  /**
   * The Single Client Access Name (SCAN) IP addresses associated with the cloud VM cluster. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.  **Note:** For a single-node DB system, this list is empty.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scanIpIds?: string[];
  /**
   * The virtual IP (VIP) addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.  **Note:** For a single-node DB system, this list is empty.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vipIds?: string[];
  /**
   * The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scanDnsName?: string;
  /** The TCP Single Client Access Name (SCAN) port. The default port is 1521. */
  scanListenerPortTcp?: number;
  /** The TCPS Single Client Access Name (SCAN) port. The default port is 2484. */
  scanListenerPortTcpSsl?: number;
  /**
   * The OCID of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scanDnsRecordId?: string;
  /**
   * The model name of the Exadata hardware running the cloud VM cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly shape?: string;
  /**
   * CloudVmCluster provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: CloudVmClusterProvisioningState;
  /** VNET for network connectivity */
  vnetId?: string;
  /** Oracle Grid Infrastructure (GI) software version */
  giVersion?: string;
  /**
   * HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ociUrl?: string;
  /** Client subnet */
  subnetId?: string;
  /** Client OCI backup subnet CIDR, default is 192.168.252.0/22 */
  backupSubnetCidr?: string;
  /** Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS. */
  dataCollectionOptions?: DataCollectionOptions;
  /** Display Name */
  displayName?: string;
  /** The list of compute servers to be added to the cloud VM cluster. */
  computeNodes?: string[];
  /**
   * iormConfigCache details for cloud VM cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly iormConfigCache?: ExadataIormConfig;
  /**
   * The OCID of the last maintenance update history entry.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdateHistoryEntryId?: string;
  /** The list of DB servers. */
  dbServers?: string[];
  /**
   * Cluster compartmentId
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly compartmentId?: string;
  /**
   * Cluster subnet ocid
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subnetOcid?: string;
}

/** DbSystemShape resource definition */
export interface DbSystemShape extends ProxyResource {
  /**
   * The family of the shape used for the DB system.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly shapeFamily?: string;
  /**
   * The maximum number of CPU cores that can be enabled on the DB system for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableCoreCount?: number;
  /**
   * The minimum number of CPU cores that can be enabled on the DB system for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minimumCoreCount?: number;
  /**
   * The runtime minimum number of CPU cores that can be enabled on the DB system for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly runtimeMinimumCoreCount?: number;
  /**
   * The discrete number by which the CPU core count for this shape can be increased or decreased.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly coreCountIncrement?: number;
  /**
   * The minimum number of Exadata storage servers available for the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minStorageCount?: number;
  /**
   * The maximum number of Exadata storage servers available for the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxStorageCount?: number;
  /**
   * The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableDataStoragePerServerInTbs?: number;
  /**
   * The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableMemoryPerNodeInGbs?: number;
  /**
   * The maximum Db Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableDbNodePerNodeInGbs?: number;
  /**
   * The minimum number of CPU cores that can be enabled per node for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minCoreCountPerNode?: number;
  /**
   * The maximum memory that can be enabled for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableMemoryInGbs?: number;
  /**
   * The minimum memory that need be allocated per node for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minMemoryPerNodeInGbs?: number;
  /**
   * The maximum Db Node storage that can be enabled for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableDbNodeStorageInGbs?: number;
  /**
   * The minimum Db Node storage that need be allocated per node for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minDbNodeStoragePerNodeInGbs?: number;
  /**
   * The maximum DATA storage that can be enabled for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableDataStorageInTbs?: number;
  /**
   * The minimum data storage that need be allocated for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minDataStorageInTbs?: number;
  /**
   * The minimum number of database nodes available for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minimumNodeCount?: number;
  /**
   * The maximum number of database nodes available for this shape.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maximumNodeCount?: number;
  /**
   * The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata shape and ExaCC Elastic shapes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly availableCoreCountPerNode?: number;
}

/** DnsPrivateView resource definition */
export interface DnsPrivateView extends ProxyResource {
  /**
   * The OCID of the view
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid?: string;
  /**
   * The display name of the view resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isProtected?: boolean;
  /**
   * Views lifecycleState
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: DnsPrivateViewsProvisioningState;
  /**
   * The canonical absolute URL of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly self?: string;
  /**
   * views timeCreated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: Date;
  /**
   * views timeCreated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeUpdated?: Date;
}

/** DnsPrivateZone resource definition */
export interface DnsPrivateZone extends ProxyResource {
  /**
   * The OCID of the Zone
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid?: string;
  /**
   * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isProtected?: boolean;
  /**
   * Zones lifecycleState
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: DnsPrivateZonesProvisioningState;
  /**
   * The canonical absolute URL of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly self?: string;
  /**
   * The current serial of the zone. As seen in the zone's SOA record.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serial?: number;
  /**
   * Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly viewId?: string;
  /**
   * The type of the zone. Must be either PRIMARY or SECONDARY. SECONDARY is only supported for GLOBAL zones.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly zoneType?: ZoneType;
  /**
   * Zones timeCreated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: Date;
}

/** GiVersion resource definition */
export interface GiVersion extends ProxyResource {
  /**
   * A valid Oracle Grid Infrastructure (GI) software version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
}

/** OracleSubscription resource definition */
export interface OracleSubscription extends ProxyResource {
  /** Details of the resource plan. */
  plan?: Plan;
  /**
   * OracleSubscriptionProvisioningState provisioning state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: OracleSubscriptionProvisioningState;
  /**
   * SAAS subscription ID generated by Marketplace
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly saasSubscriptionId?: string;
  /**
   * Cloud Account Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cloudAccountId?: string;
  /**
   * Cloud Account provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cloudAccountState?: CloudAccountProvisioningState;
  /** Term Unit. P1Y, P3Y, etc, see Durations https://en.wikipedia.org/wiki/ISO_8601 */
  termUnit?: string;
}

/** DbServer resource model */
export interface DbServer extends ProxyResource {
  /**
   * Db server name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid?: string;
  /**
   * The name for the Db Server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The OCID of the compartment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly compartmentId?: string;
  /**
   * The OCID of the Exadata infrastructure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly exadataInfrastructureId?: string;
  /**
   * Lifecycle details of dbServer.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleDetails?: string;
  /**
   * The number of CPU cores enabled on the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cpuCoreCount?: number;
  /**
   * dbServerPatching details of the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbServerPatchingDetails?: DbServerPatchingDetails;
  /**
   * The total memory available in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxMemoryInGbs?: number;
  /**
   * The allocated local node storage in GBs on the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbNodeStorageSizeInGbs?: number;
  /**
   * The OCID of the VM Clusters associated with the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmClusterIds?: string[];
  /**
   * The OCID of the Db nodes associated with the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbNodeIds?: string[];
  /**
   * DbServer provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: DbServerProvisioningState;
  /**
   * The total number of CPU cores available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxCpuCount?: number;
  /**
   * The list of OCIDs of the Autonomous VM Clusters associated with the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly autonomousVmClusterIds?: string[];
  /**
   * The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly autonomousVirtualMachineIds?: string[];
  /**
   * The total max dbNode storage in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxDbNodeStorageInGbs?: number;
  /**
   * The total memory size in GBs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memorySizeInGbs?: number;
  /**
   * The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly shape?: string;
  /**
   * The date and time that the Db Server was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: Date;
}

/** The DbNode resource belonging to vmCluster */
export interface DbNode extends ProxyResource {
  /**
   * DbNode OCID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid?: string;
  /**
   * Additional information about the planned maintenance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalDetails?: string;
  /**
   * The OCID of the backup IP address associated with the database node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly backupIpId?: string;
  /**
   * The OCID of the second backup VNIC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly backupVnic2Id?: string;
  /**
   * The OCID of the backup VNIC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly backupVnicId?: string;
  /**
   * The number of CPU cores enabled on the Db node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly cpuCoreCount?: number;
  /**
   * The allocated local node storage in GBs on the Db node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbNodeStorageSizeInGbs?: number;
  /**
   * The OCID of the Exacc Db server associated with the database node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbServerId?: string;
  /**
   * The OCID of the DB system.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dbSystemId?: string;
  /**
   * The name of the Fault Domain the instance is contained in.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly faultDomain?: string;
  /**
   * The OCID of the host IP address associated with the database node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostIpId?: string;
  /**
   * The host name for the database node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostname?: string;
  /**
   * The current state of the database node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: DbNodeProvisioningState;
  /**
   * Lifecycle details of Db Node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleDetails?: string;
  /**
   * The type of database node maintenance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maintenanceType?: DbNodeMaintenanceType;
  /**
   * The allocated memory in GBs on the Db node.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly memorySizeInGbs?: number;
  /**
   * The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly softwareStorageSizeInGb?: number;
  /**
   * The date and time that the database node was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeCreated?: Date;
  /**
   * End date and time of maintenance window.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeMaintenanceWindowEnd?: Date;
  /**
   * Start date and time of maintenance window.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeMaintenanceWindowStart?: Date;
  /**
   * The OCID of the second VNIC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vnic2Id?: string;
  /**
   * The OCID of the VNIC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vnicId?: string;
}

/** Virtual IP resource belonging to a vm cluster resource. */
export interface VirtualNetworkAddress extends ProxyResource {
  /** Virtual network Address address. */
  ipAddress?: string;
  /** Virtual Machine OCID. */
  vmOcid?: string;
  /**
   * Application VIP OCID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ocid?: string;
  /**
   * Virtual network address fully qualified domain name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly domain?: string;
  /**
   * Additional information about the current lifecycle state of the application virtual IP (VIP) address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lifecycleDetails?: string;
  /**
   * virtual network address provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: VirtualNetworkAddressProvisioningState;
  /**
   * The date and time when the create operation for the application virtual IP (VIP) address completed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeAssigned?: Date;
}

/** Do not use. Model to support location based path */
export interface Location extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: Record<string, unknown>;
}

/** MaintenanceRun resource model */
export interface MaintenanceRun extends ProxyResource {
  /**
   * The date and time the maintenance run is scheduled to occur.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeScheduled?: string;
  /**
   * The status of the patching operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly patchingStatus?: PatchingStatus;
  /**
   * Maintenance type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maintenanceType?: MaintenanceType;
  /**
   * The target software version for the database server patching operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetDbServerVersion?: string;
  /**
   * The target Cell version that is to be patched to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetStorageServerVersion?: string;
  /**
   * Cloud Exadata infrastructure node patching method.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly patchingMode?: PatchingMode;
  /**
   * The estimated total time required in minutes for all patching operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly estimatedPatchingTime?: EstimatedPatchingTime;
}

/** Defines headers for CloudExadataInfrastructures_createOrUpdate operation. */
export interface CloudExadataInfrastructuresCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CloudExadataInfrastructures_update operation. */
export interface CloudExadataInfrastructuresUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for CloudExadataInfrastructures_delete operation. */
export interface CloudExadataInfrastructuresDeleteHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for CloudVmClusters_createOrUpdate operation. */
export interface CloudVmClustersCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for CloudVmClusters_update operation. */
export interface CloudVmClustersUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for CloudVmClusters_delete operation. */
export interface CloudVmClustersDeleteHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for CloudVmClusters_addVms operation. */
export interface CloudVmClustersAddVmsHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for CloudVmClusters_removeVms operation. */
export interface CloudVmClustersRemoveVmsHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for OracleSubscriptions_createOrUpdate operation. */
export interface OracleSubscriptionsCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for OracleSubscriptions_update operation. */
export interface OracleSubscriptionsUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for OracleSubscriptions_delete operation. */
export interface OracleSubscriptionsDeleteHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for OracleSubscriptions_listCloudAccountDetails operation. */
export interface OracleSubscriptionsListCloudAccountDetailsHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for OracleSubscriptions_listSaasSubscriptionDetails operation. */
export interface OracleSubscriptionsListSaasSubscriptionDetailsHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for VirtualNetworkAddresses_createOrUpdate operation. */
export interface VirtualNetworkAddressesCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for VirtualNetworkAddresses_delete operation. */
export interface VirtualNetworkAddressesDeleteHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link Preference} that the service accepts. */
export enum KnownPreference {
  /** NoPreference value */
  NoPreference = "NoPreference",
  /** CustomPreference value */
  CustomPreference = "CustomPreference"
}

/**
 * Defines values for Preference. \
 * {@link KnownPreference} can be used interchangeably with Preference,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NoPreference**: NoPreference value \
 * **CustomPreference**: CustomPreference value
 */
export type Preference = string;

/** Known values of {@link MonthName} that the service accepts. */
export enum KnownMonthName {
  /** January value */
  January = "January",
  /** February value */
  February = "February",
  /** March value */
  March = "March",
  /** April value */
  April = "April",
  /** May value */
  May = "May",
  /** June value */
  June = "June",
  /** July value */
  July = "July",
  /** August value */
  August = "August",
  /** September value */
  September = "September",
  /** October value */
  October = "October",
  /** November value */
  November = "November",
  /** December value */
  December = "December"
}

/**
 * Defines values for MonthName. \
 * {@link KnownMonthName} can be used interchangeably with MonthName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **January**: January value \
 * **February**: February value \
 * **March**: March value \
 * **April**: April value \
 * **May**: May value \
 * **June**: June value \
 * **July**: July value \
 * **August**: August value \
 * **September**: September value \
 * **October**: October value \
 * **November**: November value \
 * **December**: December value
 */
export type MonthName = string;

/** Known values of {@link DayOfWeekName} that the service accepts. */
export enum KnownDayOfWeekName {
  /** Monday value */
  Monday = "Monday",
  /** Tuesday value */
  Tuesday = "Tuesday",
  /** Wednesday value */
  Wednesday = "Wednesday",
  /** Thursday value */
  Thursday = "Thursday",
  /** Friday value */
  Friday = "Friday",
  /** Saturday value */
  Saturday = "Saturday",
  /** Sunday value */
  Sunday = "Sunday"
}

/**
 * Defines values for DayOfWeekName. \
 * {@link KnownDayOfWeekName} can be used interchangeably with DayOfWeekName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Monday**: Monday value \
 * **Tuesday**: Tuesday value \
 * **Wednesday**: Wednesday value \
 * **Thursday**: Thursday value \
 * **Friday**: Friday value \
 * **Saturday**: Saturday value \
 * **Sunday**: Sunday value
 */
export type DayOfWeekName = string;

/** Known values of {@link PatchingMode} that the service accepts. */
export enum KnownPatchingMode {
  /** Rolling value */
  Rolling = "Rolling",
  /** Non Rolling value */
  NonRolling = "NonRolling"
}

/**
 * Defines values for PatchingMode. \
 * {@link KnownPatchingMode} can be used interchangeably with PatchingMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Rolling**: Rolling value \
 * **NonRolling**: Non Rolling value
 */
export type PatchingMode = string;

/** Known values of {@link CloudExadataInfrastructureProvisioningState} that the service accepts. */
export enum KnownCloudExadataInfrastructureProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** Provisioning value */
  Provisioning = "Provisioning",
  /** Available value */
  Available = "Available",
  /** Updating value */
  Updating = "Updating",
  /** Terminating value */
  Terminating = "Terminating",
  /** Terminated value */
  Terminated = "Terminated",
  /** MaintenanceInProgress value */
  MaintenanceInProgress = "MaintenanceInProgress"
}

/**
 * Defines values for CloudExadataInfrastructureProvisioningState. \
 * {@link KnownCloudExadataInfrastructureProvisioningState} can be used interchangeably with CloudExadataInfrastructureProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Provisioning**: Provisioning value \
 * **Available**: Available value \
 * **Updating**: Updating value \
 * **Terminating**: Terminating value \
 * **Terminated**: Terminated value \
 * **MaintenanceInProgress**: MaintenanceInProgress value
 */
export type CloudExadataInfrastructureProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link LicenseModel} that the service accepts. */
export enum KnownLicenseModel {
  /** LicenseIncluded value */
  LicenseIncluded = "LicenseIncluded",
  /** BringYourOwnLicense value */
  BringYourOwnLicense = "BringYourOwnLicense"
}

/**
 * Defines values for LicenseModel. \
 * {@link KnownLicenseModel} can be used interchangeably with LicenseModel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LicenseIncluded**: LicenseIncluded value \
 * **BringYourOwnLicense**: BringYourOwnLicense value
 */
export type LicenseModel = string;

/** Known values of {@link DiskRedundancy} that the service accepts. */
export enum KnownDiskRedundancy {
  /** High value */
  High = "High",
  /** Normal value */
  Normal = "Normal"
}

/**
 * Defines values for DiskRedundancy. \
 * {@link KnownDiskRedundancy} can be used interchangeably with DiskRedundancy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **High**: High value \
 * **Normal**: Normal value
 */
export type DiskRedundancy = string;

/** Known values of {@link CloudVmClusterProvisioningState} that the service accepts. */
export enum KnownCloudVmClusterProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** Provisioning value */
  Provisioning = "Provisioning",
  /** Available value */
  Available = "Available",
  /** Updating value */
  Updating = "Updating",
  /** Terminating value */
  Terminating = "Terminating",
  /** Terminated value */
  Terminated = "Terminated",
  /** MaintenanceInProgress value */
  MaintenanceInProgress = "MaintenanceInProgress"
}

/**
 * Defines values for CloudVmClusterProvisioningState. \
 * {@link KnownCloudVmClusterProvisioningState} can be used interchangeably with CloudVmClusterProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Provisioning**: Provisioning value \
 * **Available**: Available value \
 * **Updating**: Updating value \
 * **Terminating**: Terminating value \
 * **Terminated**: Terminated value \
 * **MaintenanceInProgress**: MaintenanceInProgress value
 */
export type CloudVmClusterProvisioningState = string;

/** Known values of {@link IormLifecycleState} that the service accepts. */
export enum KnownIormLifecycleState {
  /** BOOTSTRAPPING value */
  BootStrapping = "BootStrapping",
  /** ENABLED value */
  Enabled = "Enabled",
  /** DISABLED value */
  Disabled = "Disabled",
  /** UPDATING value */
  Updating = "Updating",
  /** FAILED value */
  Failed = "Failed"
}

/**
 * Defines values for IormLifecycleState. \
 * {@link KnownIormLifecycleState} can be used interchangeably with IormLifecycleState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BootStrapping**: BOOTSTRAPPING value \
 * **Enabled**: ENABLED value \
 * **Disabled**: DISABLED value \
 * **Updating**: UPDATING value \
 * **Failed**: FAILED value
 */
export type IormLifecycleState = string;

/** Known values of {@link Objective} that the service accepts. */
export enum KnownObjective {
  /** LOW_LATENCY value */
  LowLatency = "LowLatency",
  /** HIGH_THROUGHPUT value */
  HighThroughput = "HighThroughput",
  /** BALANCED value */
  Balanced = "Balanced",
  /** AUTO value */
  Auto = "Auto",
  /** BASIC value */
  Basic = "Basic"
}

/**
 * Defines values for Objective. \
 * {@link KnownObjective} can be used interchangeably with Objective,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LowLatency**: LOW_LATENCY value \
 * **HighThroughput**: HIGH_THROUGHPUT value \
 * **Balanced**: BALANCED value \
 * **Auto**: AUTO value \
 * **Basic**: BASIC value
 */
export type Objective = string;

/** Known values of {@link DnsPrivateViewsProvisioningState} that the service accepts. */
export enum KnownDnsPrivateViewsProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** Active value */
  Active = "Active",
  /** Deleted value */
  Deleted = "Deleted",
  /** Deleting value */
  Deleting = "Deleting",
  /** Updating value */
  Updating = "Updating"
}

/**
 * Defines values for DnsPrivateViewsProvisioningState. \
 * {@link KnownDnsPrivateViewsProvisioningState} can be used interchangeably with DnsPrivateViewsProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Active**: Active value \
 * **Deleted**: Deleted value \
 * **Deleting**: Deleting value \
 * **Updating**: Updating value
 */
export type DnsPrivateViewsProvisioningState = string;

/** Known values of {@link DnsPrivateZonesProvisioningState} that the service accepts. */
export enum KnownDnsPrivateZonesProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** Active value */
  Active = "Active",
  /** Creating value */
  Creating = "Creating",
  /** Deleted value */
  Deleted = "Deleted",
  /** Deleting value */
  Deleting = "Deleting",
  /** Updating value */
  Updating = "Updating"
}

/**
 * Defines values for DnsPrivateZonesProvisioningState. \
 * {@link KnownDnsPrivateZonesProvisioningState} can be used interchangeably with DnsPrivateZonesProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Active**: Active value \
 * **Creating**: Creating value \
 * **Deleted**: Deleted value \
 * **Deleting**: Deleting value \
 * **Updating**: Updating value
 */
export type DnsPrivateZonesProvisioningState = string;

/** Known values of {@link ZoneType} that the service accepts. */
export enum KnownZoneType {
  /** Primary value */
  Primary = "Primary",
  /** Secondary value */
  Secondary = "Secondary"
}

/**
 * Defines values for ZoneType. \
 * {@link KnownZoneType} can be used interchangeably with ZoneType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Primary**: Primary value \
 * **Secondary**: Secondary value
 */
export type ZoneType = string;

/** Known values of {@link OracleSubscriptionProvisioningState} that the service accepts. */
export enum KnownOracleSubscriptionProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled"
}

/**
 * Defines values for OracleSubscriptionProvisioningState. \
 * {@link KnownOracleSubscriptionProvisioningState} can be used interchangeably with OracleSubscriptionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled.
 */
export type OracleSubscriptionProvisioningState = string;

/** Known values of {@link CloudAccountProvisioningState} that the service accepts. */
export enum KnownCloudAccountProvisioningState {
  /** Pending value */
  Pending = "Pending",
  /** Provisioning value */
  Provisioning = "Provisioning",
  /** Available value */
  Available = "Available"
}

/**
 * Defines values for CloudAccountProvisioningState. \
 * {@link KnownCloudAccountProvisioningState} can be used interchangeably with CloudAccountProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending**: Pending value \
 * **Provisioning**: Provisioning value \
 * **Available**: Available value
 */
export type CloudAccountProvisioningState = string;

/** Known values of {@link DbServerPatchingStatus} that the service accepts. */
export enum KnownDbServerPatchingStatus {
  /** SCHEDULED value */
  Scheduled = "Scheduled",
  /** MAINTENANCE_IN_PROGRESS value */
  MaintenanceInProgress = "MaintenanceInProgress",
  /** FAILED value */
  Failed = "Failed",
  /** COMPLETE value */
  Complete = "Complete"
}

/**
 * Defines values for DbServerPatchingStatus. \
 * {@link KnownDbServerPatchingStatus} can be used interchangeably with DbServerPatchingStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Scheduled**: SCHEDULED value \
 * **MaintenanceInProgress**: MAINTENANCE_IN_PROGRESS value \
 * **Failed**: FAILED value \
 * **Complete**: COMPLETE value
 */
export type DbServerPatchingStatus = string;

/** Known values of {@link DbServerProvisioningState} that the service accepts. */
export enum KnownDbServerProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** Provisioning value */
  Provisioning = "Provisioning",
  /** Available value */
  Available = "Available",
  /** Updating value */
  Updating = "Updating",
  /** Terminating value */
  Terminating = "Terminating",
  /** Terminated value */
  Terminated = "Terminated",
  /** MaintenanceInProgress value */
  MaintenanceInProgress = "MaintenanceInProgress"
}

/**
 * Defines values for DbServerProvisioningState. \
 * {@link KnownDbServerProvisioningState} can be used interchangeably with DbServerProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Provisioning**: Provisioning value \
 * **Available**: Available value \
 * **Updating**: Updating value \
 * **Terminating**: Terminating value \
 * **Terminated**: Terminated value \
 * **MaintenanceInProgress**: MaintenanceInProgress value
 */
export type DbServerProvisioningState = string;

/** Known values of {@link DbNodeProvisioningState} that the service accepts. */
export enum KnownDbNodeProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** Provisioning value */
  Provisioning = "Provisioning",
  /** Available value */
  Available = "Available",
  /** Updating value */
  Updating = "Updating",
  /** Stopping value */
  Stopping = "Stopping",
  /** Stopped value */
  Stopped = "Stopped",
  /** Starting value */
  Starting = "Starting",
  /** Terminating value */
  Terminating = "Terminating",
  /** Terminated value */
  Terminated = "Terminated"
}

/**
 * Defines values for DbNodeProvisioningState. \
 * {@link KnownDbNodeProvisioningState} can be used interchangeably with DbNodeProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Provisioning**: Provisioning value \
 * **Available**: Available value \
 * **Updating**: Updating value \
 * **Stopping**: Stopping value \
 * **Stopped**: Stopped value \
 * **Starting**: Starting value \
 * **Terminating**: Terminating value \
 * **Terminated**: Terminated value
 */
export type DbNodeProvisioningState = string;

/** Known values of {@link DbNodeMaintenanceType} that the service accepts. */
export enum KnownDbNodeMaintenanceType {
  /** Provisioning value */
  VmdbRebootMigration = "VmdbRebootMigration"
}

/**
 * Defines values for DbNodeMaintenanceType. \
 * {@link KnownDbNodeMaintenanceType} can be used interchangeably with DbNodeMaintenanceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **VmdbRebootMigration**: Provisioning value
 */
export type DbNodeMaintenanceType = string;

/** Known values of {@link VirtualNetworkAddressProvisioningState} that the service accepts. */
export enum KnownVirtualNetworkAddressProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** Provisioning value */
  Provisioning = "Provisioning",
  /** Available value */
  Available = "Available",
  /** Terminating value */
  Terminating = "Terminating",
  /** Terminated value */
  Terminated = "Terminated"
}

/**
 * Defines values for VirtualNetworkAddressProvisioningState. \
 * {@link KnownVirtualNetworkAddressProvisioningState} can be used interchangeably with VirtualNetworkAddressProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Provisioning**: Provisioning value \
 * **Available**: Available value \
 * **Terminating**: Terminating value \
 * **Terminated**: Terminated value
 */
export type VirtualNetworkAddressProvisioningState = string;

/** Known values of {@link PatchingStatus} that the service accepts. */
export enum KnownPatchingStatus {
  /** Patching value */
  Patching = "Patching",
  /** Waiting value */
  Waiting = "Waiting",
  /** Scheduled value */
  Scheduled = "Scheduled"
}

/**
 * Defines values for PatchingStatus. \
 * {@link KnownPatchingStatus} can be used interchangeably with PatchingStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Patching**: Patching value \
 * **Waiting**: Waiting value \
 * **Scheduled**: Scheduled value
 */
export type PatchingStatus = string;

/** Known values of {@link MaintenanceType} that the service accepts. */
export enum KnownMaintenanceType {
  /** Planned value */
  Planned = "Planned",
  /** Unplanned value */
  Unplanned = "Unplanned"
}

/**
 * Defines values for MaintenanceType. \
 * {@link KnownMaintenanceType} can be used interchangeably with MaintenanceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Planned**: Planned value \
 * **Unplanned**: Unplanned value
 */
export type MaintenanceType = string;

/** Known values of {@link ValidationStatus} that the service accepts. */
export enum KnownValidationStatus {
  /** Succeeded value */
  Succeeded = "Succeeded",
  /** Failed value */
  Failed = "Failed"
}

/**
 * Defines values for ValidationStatus. \
 * {@link KnownValidationStatus} can be used interchangeably with ValidationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Succeeded value \
 * **Failed**: Failed value
 */
export type ValidationStatus = string;

/** Known values of {@link DbNodeActionEnum} that the service accepts. */
export enum KnownDbNodeActionEnum {
  /** Start DbNode */
  Start = "Start",
  /** Stop DbNode */
  Stop = "Stop",
  /** Soft reset DbNode */
  SoftReset = "SoftReset",
  /** Reset DbNode */
  Reset = "Reset"
}

/**
 * Defines values for DbNodeActionEnum. \
 * {@link KnownDbNodeActionEnum} can be used interchangeably with DbNodeActionEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Start**: Start DbNode \
 * **Stop**: Stop DbNode \
 * **SoftReset**: Soft reset DbNode \
 * **Reset**: Reset DbNode
 */
export type DbNodeActionEnum = string;

/** Known values of {@link UpdateAction} that the service accepts. */
export enum KnownUpdateAction {
  /** ROLLING_APPLY value */
  RollingApply = "RollingApply",
  /** NON_ROLLING_APPLY value */
  NonRollingApply = "NonRollingApply",
  /** PRECHECK value */
  PreCheck = "PreCheck",
  /** ROLLBACK value */
  RollBack = "RollBack"
}

/**
 * Defines values for UpdateAction. \
 * {@link KnownUpdateAction} can be used interchangeably with UpdateAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RollingApply**: ROLLING_APPLY value \
 * **NonRollingApply**: NON_ROLLING_APPLY value \
 * **PreCheck**: PRECHECK value \
 * **RollBack**: ROLLBACK value
 */
export type UpdateAction = string;

/** Known values of {@link Versions} that the service accepts. */
export enum KnownVersions {
  /** 2023-07-01-preview */
  V20230701 = "2023-07-01-preview",
  /** 2023-09-01-preview */
  V20230901 = "2023-09-01-preview",
  /** internal api - RPaaS to ORP */
  VInternalApi = "internal"
}

/**
 * Defines values for Versions. \
 * {@link KnownVersions} can be used interchangeably with Versions,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **2023-07-01-preview**: 2023-07-01-preview \
 * **2023-09-01-preview**: 2023-09-01-preview \
 * **internal**: internal api - RPaaS to ORP
 */
export type Versions = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface CloudExadataInfrastructuresListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type CloudExadataInfrastructuresListBySubscriptionResponse = CloudExadataInfrastructureListResult;

/** Optional parameters. */
export interface CloudExadataInfrastructuresListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type CloudExadataInfrastructuresListByResourceGroupResponse = CloudExadataInfrastructureListResult;

/** Optional parameters. */
export interface CloudExadataInfrastructuresGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CloudExadataInfrastructuresGetResponse = CloudExadataInfrastructure;

/** Optional parameters. */
export interface CloudExadataInfrastructuresCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type CloudExadataInfrastructuresCreateOrUpdateResponse = CloudExadataInfrastructure;

/** Optional parameters. */
export interface CloudExadataInfrastructuresUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type CloudExadataInfrastructuresUpdateResponse = CloudExadataInfrastructure;

/** Optional parameters. */
export interface CloudExadataInfrastructuresDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type CloudExadataInfrastructuresDeleteResponse = CloudExadataInfrastructuresDeleteHeaders;

/** Optional parameters. */
export interface CloudExadataInfrastructuresListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type CloudExadataInfrastructuresListBySubscriptionNextResponse = CloudExadataInfrastructureListResult;

/** Optional parameters. */
export interface CloudExadataInfrastructuresListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type CloudExadataInfrastructuresListByResourceGroupNextResponse = CloudExadataInfrastructureListResult;

/** Optional parameters. */
export interface CloudVmClustersListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type CloudVmClustersListBySubscriptionResponse = CloudVmClusterListResult;

/** Optional parameters. */
export interface CloudVmClustersListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type CloudVmClustersListByResourceGroupResponse = CloudVmClusterListResult;

/** Optional parameters. */
export interface CloudVmClustersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CloudVmClustersGetResponse = CloudVmCluster;

/** Optional parameters. */
export interface CloudVmClustersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type CloudVmClustersCreateOrUpdateResponse = CloudVmCluster;

/** Optional parameters. */
export interface CloudVmClustersUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type CloudVmClustersUpdateResponse = CloudVmCluster;

/** Optional parameters. */
export interface CloudVmClustersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type CloudVmClustersDeleteResponse = CloudVmClustersDeleteHeaders;

/** Optional parameters. */
export interface CloudVmClustersAddVmsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the addVms operation. */
export type CloudVmClustersAddVmsResponse = CloudVmCluster;

/** Optional parameters. */
export interface CloudVmClustersListPrivateIpAddressesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listPrivateIpAddresses operation. */
export type CloudVmClustersListPrivateIpAddressesResponse = PrivateIpAddressProperties[];

/** Optional parameters. */
export interface CloudVmClustersRemoveVmsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the removeVms operation. */
export type CloudVmClustersRemoveVmsResponse = CloudVmCluster;

/** Optional parameters. */
export interface CloudVmClustersListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type CloudVmClustersListBySubscriptionNextResponse = CloudVmClusterListResult;

/** Optional parameters. */
export interface CloudVmClustersListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type CloudVmClustersListByResourceGroupNextResponse = CloudVmClusterListResult;

/** Optional parameters. */
export interface DbSystemShapesListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type DbSystemShapesListByLocationResponse = DbSystemShapeListResult;

/** Optional parameters. */
export interface DbSystemShapesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DbSystemShapesGetResponse = DbSystemShape;

/** Optional parameters. */
export interface DbSystemShapesListByLocationNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocationNext operation. */
export type DbSystemShapesListByLocationNextResponse = DbSystemShapeListResult;

/** Optional parameters. */
export interface DnsPrivateViewsListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type DnsPrivateViewsListByLocationResponse = DnsPrivateViewListResult;

/** Optional parameters. */
export interface DnsPrivateViewsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DnsPrivateViewsGetResponse = DnsPrivateView;

/** Optional parameters. */
export interface DnsPrivateViewsListByLocationNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocationNext operation. */
export type DnsPrivateViewsListByLocationNextResponse = DnsPrivateViewListResult;

/** Optional parameters. */
export interface DnsPrivateZonesListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type DnsPrivateZonesListByLocationResponse = DnsPrivateZoneListResult;

/** Optional parameters. */
export interface DnsPrivateZonesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DnsPrivateZonesGetResponse = DnsPrivateZone;

/** Optional parameters. */
export interface DnsPrivateZonesListByLocationNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocationNext operation. */
export type DnsPrivateZonesListByLocationNextResponse = DnsPrivateZoneListResult;

/** Optional parameters. */
export interface GiVersionsListByLocationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocation operation. */
export type GiVersionsListByLocationResponse = GiVersionListResult;

/** Optional parameters. */
export interface GiVersionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type GiVersionsGetResponse = GiVersion;

/** Optional parameters. */
export interface GiVersionsListByLocationNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByLocationNext operation. */
export type GiVersionsListByLocationNextResponse = GiVersionListResult;

/** Optional parameters. */
export interface OracleSubscriptionsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type OracleSubscriptionsListBySubscriptionResponse = OracleSubscriptionListResult;

/** Optional parameters. */
export interface OracleSubscriptionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OracleSubscriptionsGetResponse = OracleSubscription;

/** Optional parameters. */
export interface OracleSubscriptionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type OracleSubscriptionsCreateOrUpdateResponse = OracleSubscription;

/** Optional parameters. */
export interface OracleSubscriptionsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type OracleSubscriptionsUpdateResponse = OracleSubscription;

/** Optional parameters. */
export interface OracleSubscriptionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type OracleSubscriptionsDeleteResponse = OracleSubscriptionsDeleteHeaders;

/** Optional parameters. */
export interface OracleSubscriptionsListCloudAccountDetailsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the listCloudAccountDetails operation. */
export type OracleSubscriptionsListCloudAccountDetailsResponse = CloudAccountDetails;

/** Optional parameters. */
export interface OracleSubscriptionsListSaasSubscriptionDetailsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the listSaasSubscriptionDetails operation. */
export type OracleSubscriptionsListSaasSubscriptionDetailsResponse = SaasSubscriptionDetails;

/** Optional parameters. */
export interface OracleSubscriptionsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type OracleSubscriptionsListBySubscriptionNextResponse = OracleSubscriptionListResult;

/** Optional parameters. */
export interface DbServersListByCloudExadataInfrastructureOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCloudExadataInfrastructure operation. */
export type DbServersListByCloudExadataInfrastructureResponse = DbServerListResult;

/** Optional parameters. */
export interface DbServersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DbServersGetResponse = DbServer;

/** Optional parameters. */
export interface DbServersListByCloudExadataInfrastructureNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCloudExadataInfrastructureNext operation. */
export type DbServersListByCloudExadataInfrastructureNextResponse = DbServerListResult;

/** Optional parameters. */
export interface DbNodesListByCloudVmClusterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCloudVmCluster operation. */
export type DbNodesListByCloudVmClusterResponse = DbNodeListResult;

/** Optional parameters. */
export interface DbNodesGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DbNodesGetResponse = DbNode;

/** Optional parameters. */
export interface DbNodesListByCloudVmClusterNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCloudVmClusterNext operation. */
export type DbNodesListByCloudVmClusterNextResponse = DbNodeListResult;

/** Optional parameters. */
export interface VirtualNetworkAddressesListByCloudVmClusterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCloudVmCluster operation. */
export type VirtualNetworkAddressesListByCloudVmClusterResponse = VirtualNetworkAddressListResult;

/** Optional parameters. */
export interface VirtualNetworkAddressesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type VirtualNetworkAddressesGetResponse = VirtualNetworkAddress;

/** Optional parameters. */
export interface VirtualNetworkAddressesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type VirtualNetworkAddressesCreateOrUpdateResponse = VirtualNetworkAddress;

/** Optional parameters. */
export interface VirtualNetworkAddressesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type VirtualNetworkAddressesDeleteResponse = VirtualNetworkAddressesDeleteHeaders;

/** Optional parameters. */
export interface VirtualNetworkAddressesListByCloudVmClusterNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCloudVmClusterNext operation. */
export type VirtualNetworkAddressesListByCloudVmClusterNextResponse = VirtualNetworkAddressListResult;

/** Optional parameters. */
export interface OracleDatabaseResourceManagerOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
