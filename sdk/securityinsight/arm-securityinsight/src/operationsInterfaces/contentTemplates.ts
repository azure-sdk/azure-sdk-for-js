/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Template,
  ContentTemplatesListOptionalParams,
  ContentTemplatesGetOptionalParams,
  ContentTemplatesGetResponse,
  ContentTemplatesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ContentTemplates. */
export interface ContentTemplates {
  /**
   * Gets all installed templates.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sentinelWorkspaceName The name of the workspace.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    sentinelWorkspaceName: string,
    options?: ContentTemplatesListOptionalParams
  ): PagedAsyncIterableIterator<Template>;
  /**
   * Gets a template byt its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sentinelWorkspaceName The name of the workspace.
   * @param templateId template Id
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    sentinelWorkspaceName: string,
    templateId: string,
    options?: ContentTemplatesGetOptionalParams
  ): Promise<ContentTemplatesGetResponse>;
  /**
   * Delete an installed template.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sentinelWorkspaceName The name of the workspace.
   * @param templateId template Id
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    sentinelWorkspaceName: string,
    templateId: string,
    options?: ContentTemplatesDeleteOptionalParams
  ): Promise<void>;
}
