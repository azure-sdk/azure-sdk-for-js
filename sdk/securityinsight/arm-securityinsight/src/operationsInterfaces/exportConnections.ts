/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ExportConnection,
  ExportConnectionsListOptionalParams,
  ExportConnectionsGetOptionalParams,
  ExportConnectionsGetResponse,
  ExportConnectionsDeleteOptionalParams,
  ExportConnectionsCreateOptionalParams,
  ExportConnectionsCreateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ExportConnections. */
export interface ExportConnections {
  /**
   * Gets all export connections, without export connection items.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    options?: ExportConnectionsListOptionalParams
  ): PagedAsyncIterableIterator<ExportConnection>;
  /**
   * Gets an export connection by its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param exportConnectionId Export connection Id
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    exportConnectionId: string,
    options?: ExportConnectionsGetOptionalParams
  ): Promise<ExportConnectionsGetResponse>;
  /**
   * Delete an export connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param exportConnectionId Export connection Id
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    exportConnectionId: string,
    options?: ExportConnectionsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Creates an export connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param exportConnectionId Export connection Id
   * @param exportConnection The ExportConnection
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    workspaceName: string,
    exportConnectionId: string,
    exportConnection: ExportConnection,
    options?: ExportConnectionsCreateOptionalParams
  ): Promise<ExportConnectionsCreateResponse>;
}
