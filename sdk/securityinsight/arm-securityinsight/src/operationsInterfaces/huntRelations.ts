/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  HuntRelation,
  HuntRelationsListOptionalParams,
  HuntRelationsGetOptionalParams,
  HuntRelationsGetResponse,
  HuntRelationsDeleteOptionalParams,
  HuntRelationsCreateOrUpdateOptionalParams,
  HuntRelationsCreateOrUpdateResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a HuntRelations. */
export interface HuntRelations {
  /**
   * Gets all hunt relations
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param huntId The hunt id (GUID)
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    huntId: string,
    options?: HuntRelationsListOptionalParams,
  ): PagedAsyncIterableIterator<HuntRelation>;
  /**
   * Gets a hunt relation
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param huntId The hunt id (GUID)
   * @param huntRelationId The hunt relation id (GUID)
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    huntId: string,
    huntRelationId: string,
    options?: HuntRelationsGetOptionalParams,
  ): Promise<HuntRelationsGetResponse>;
  /**
   * Delete a hunt relation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param huntId The hunt id (GUID)
   * @param huntRelationId The hunt relation id (GUID)
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    huntId: string,
    huntRelationId: string,
    options?: HuntRelationsDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Creates or updates a hunt relation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param huntId The hunt id (GUID)
   * @param huntRelationId The hunt relation id (GUID)
   * @param huntRelation The hunt relation
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    huntId: string,
    huntRelationId: string,
    huntRelation: HuntRelation,
    options?: HuntRelationsCreateOrUpdateOptionalParams,
  ): Promise<HuntRelationsCreateOrUpdateResponse>;
}
