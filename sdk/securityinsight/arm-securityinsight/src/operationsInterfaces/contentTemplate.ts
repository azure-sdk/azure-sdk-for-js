/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  ContentTemplateGetOptionalParams,
  ContentTemplateGetResponse,
  ContentTemplateDeleteOptionalParams
} from "../models";

/** Interface representing a ContentTemplate. */
export interface ContentTemplate {
  /**
   * Gets a template byt its identifier.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param operationalInsightsResourceProvider The namespace of workspaces resource provider-
   *                                            Microsoft.OperationalInsights.
   * @param workspaceName The name of the workspace.
   * @param templateId template Id
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    operationalInsightsResourceProvider: string,
    workspaceName: string,
    templateId: string,
    options?: ContentTemplateGetOptionalParams
  ): Promise<ContentTemplateGetResponse>;
  /**
   * Delete an installed template.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param operationalInsightsResourceProvider The namespace of workspaces resource provider-
   *                                            Microsoft.OperationalInsights.
   * @param workspaceName The name of the workspace.
   * @param templateId template Id
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    operationalInsightsResourceProvider: string,
    workspaceName: string,
    templateId: string,
    options?: ContentTemplateDeleteOptionalParams
  ): Promise<void>;
}
