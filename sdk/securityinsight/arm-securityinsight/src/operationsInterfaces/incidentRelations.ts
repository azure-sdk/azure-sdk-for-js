/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Relation,
  IncidentRelationsListOptionalParams,
  IncidentRelationsGetOptionalParams,
  IncidentRelationsGetResponse,
  IncidentRelationsCreateOrUpdateOptionalParams,
  IncidentRelationsCreateOrUpdateResponse,
  IncidentRelationsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a IncidentRelations. */
export interface IncidentRelations {
  /**
   * Gets all relations for a given incident.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param incidentId Incident ID
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    incidentId: string,
    options?: IncidentRelationsListOptionalParams
  ): PagedAsyncIterableIterator<Relation>;
  /**
   * Gets a relation for a given incident.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param incidentId Incident ID
   * @param relationName Relation Name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    incidentId: string,
    relationName: string,
    options?: IncidentRelationsGetOptionalParams
  ): Promise<IncidentRelationsGetResponse>;
  /**
   * Creates or updates a relation for a given incident.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param incidentId Incident ID
   * @param relationName Relation Name
   * @param relation The relation model
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    incidentId: string,
    relationName: string,
    relation: Relation,
    options?: IncidentRelationsCreateOrUpdateOptionalParams
  ): Promise<IncidentRelationsCreateOrUpdateResponse>;
  /**
   * Deletes a relation for a given incident.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param incidentId Incident ID
   * @param relationName Relation Name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    incidentId: string,
    relationName: string,
    options?: IncidentRelationsDeleteOptionalParams
  ): Promise<void>;
}
