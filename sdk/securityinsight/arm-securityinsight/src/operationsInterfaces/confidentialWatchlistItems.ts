/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  WatchlistItem,
  ConfidentialWatchlistItemsListOptionalParams,
  ConfidentialWatchlistItemsGetOptionalParams,
  ConfidentialWatchlistItemsGetResponse,
  ConfidentialWatchlistItemsDeleteOptionalParams,
  ConfidentialWatchlistItemsCreateOrUpdateOptionalParams,
  ConfidentialWatchlistItemsCreateOrUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ConfidentialWatchlistItems. */
export interface ConfidentialWatchlistItems {
  /**
   * Gets all confidential watchlist Items.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param watchlistAlias Watchlist Alias
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    watchlistAlias: string,
    options?: ConfidentialWatchlistItemsListOptionalParams
  ): PagedAsyncIterableIterator<WatchlistItem>;
  /**
   * Gets a confidential watchlist item.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param watchlistAlias Watchlist Alias
   * @param watchlistItemId Watchlist Item Id (GUID)
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    watchlistAlias: string,
    watchlistItemId: string,
    options?: ConfidentialWatchlistItemsGetOptionalParams
  ): Promise<ConfidentialWatchlistItemsGetResponse>;
  /**
   * Delete a confidential watchlist item.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param watchlistAlias Watchlist Alias
   * @param watchlistItemId Watchlist Item Id (GUID)
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    watchlistAlias: string,
    watchlistItemId: string,
    options?: ConfidentialWatchlistItemsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Creates or updates a watchlist item.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param watchlistAlias Watchlist Alias
   * @param watchlistItemId Watchlist Item Id (GUID)
   * @param watchlistItem The watchlist item
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    watchlistAlias: string,
    watchlistItemId: string,
    watchlistItem: WatchlistItem,
    options?: ConfidentialWatchlistItemsCreateOrUpdateOptionalParams
  ): Promise<ConfidentialWatchlistItemsCreateOrUpdateResponse>;
}
