/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Hunt,
  HuntsListOptionalParams,
  HuntsGetOptionalParams,
  HuntsGetResponse,
  HuntsDeleteOptionalParams,
  HuntsCreateOrUpdateOptionalParams,
  HuntsCreateOrUpdateResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Hunts. */
export interface Hunts {
  /**
   * Gets all hunts, without relations and comments.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    options?: HuntsListOptionalParams,
  ): PagedAsyncIterableIterator<Hunt>;
  /**
   * Gets a hunt, without relations and comments.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param huntId The hunt id (GUID)
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    huntId: string,
    options?: HuntsGetOptionalParams,
  ): Promise<HuntsGetResponse>;
  /**
   * Delete a hunt.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param huntId The hunt id (GUID)
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    huntId: string,
    options?: HuntsDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Create or update a hunt
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param huntId The hunt id (GUID)
   * @param hunt The hunt
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    huntId: string,
    hunt: Hunt,
    options?: HuntsCreateOrUpdateOptionalParams,
  ): Promise<HuntsCreateOrUpdateResponse>;
}
