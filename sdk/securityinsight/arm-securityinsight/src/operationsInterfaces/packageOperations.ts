/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  PackageInstallationProperties,
  PackageInstallOptionalParams,
  PackageInstallResponse,
  PackageUninstallOptionalParams
} from "../models";

/** Interface representing a PackageOperations. */
export interface PackageOperations {
  /**
   * Install a package to the workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param operationalInsightsResourceProvider The namespace of workspaces resource provider-
   *                                            Microsoft.OperationalInsights.
   * @param workspaceName The name of the workspace.
   * @param packageId package Id
   * @param packageInstallationProperties Package installation properties
   * @param options The options parameters.
   */
  install(
    resourceGroupName: string,
    operationalInsightsResourceProvider: string,
    workspaceName: string,
    packageId: string,
    packageInstallationProperties: PackageInstallationProperties,
    options?: PackageInstallOptionalParams
  ): Promise<PackageInstallResponse>;
  /**
   * Uninstall a package from the workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param operationalInsightsResourceProvider The namespace of workspaces resource provider-
   *                                            Microsoft.OperationalInsights.
   * @param workspaceName The name of the workspace.
   * @param packageId package Id
   * @param options The options parameters.
   */
  uninstall(
    resourceGroupName: string,
    operationalInsightsResourceProvider: string,
    workspaceName: string,
    packageId: string,
    options?: PackageUninstallOptionalParams
  ): Promise<void>;
}
