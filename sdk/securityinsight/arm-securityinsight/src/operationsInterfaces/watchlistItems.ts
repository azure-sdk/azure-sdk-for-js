/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  WatchlistItem,
  WatchlistItemsListOptionalParams,
  WatchlistItemsGetOptionalParams,
  WatchlistItemsGetResponse,
  WatchlistItemsDeleteOptionalParams,
  WatchlistItemsCreateOrUpdateOptionalParams,
  WatchlistItemsCreateOrUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WatchlistItems. */
export interface WatchlistItems {
  /**
   * Get all watchlist Items.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param watchlistAlias The watchlist alias
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    watchlistAlias: string,
    options?: WatchlistItemsListOptionalParams
  ): PagedAsyncIterableIterator<WatchlistItem>;
  /**
   * Get a watchlist item.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param watchlistAlias The watchlist alias
   * @param watchlistItemId The watchlist item id (GUID)
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    watchlistAlias: string,
    watchlistItemId: string,
    options?: WatchlistItemsGetOptionalParams
  ): Promise<WatchlistItemsGetResponse>;
  /**
   * Delete a watchlist item.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param watchlistAlias The watchlist alias
   * @param watchlistItemId The watchlist item id (GUID)
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    watchlistAlias: string,
    watchlistItemId: string,
    options?: WatchlistItemsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Create or update a watchlist item.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param watchlistAlias The watchlist alias
   * @param watchlistItemId The watchlist item id (GUID)
   * @param watchlistItem The watchlist item
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    watchlistAlias: string,
    watchlistItemId: string,
    watchlistItem: WatchlistItem,
    options?: WatchlistItemsCreateOrUpdateOptionalParams
  ): Promise<WatchlistItemsCreateOrUpdateResponse>;
}
