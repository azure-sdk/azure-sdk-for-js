/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  HuntComment,
  HuntCommentsListOptionalParams,
  HuntCommentsGetOptionalParams,
  HuntCommentsGetResponse,
  HuntCommentsDeleteOptionalParams,
  HuntCommentsCreateOrUpdateOptionalParams,
  HuntCommentsCreateOrUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a HuntComments. */
export interface HuntComments {
  /**
   * Gets all hunt comments
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param huntId The hunt id (GUID)
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    huntId: string,
    options?: HuntCommentsListOptionalParams
  ): PagedAsyncIterableIterator<HuntComment>;
  /**
   * Gets a hunt comment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param huntId The hunt id (GUID)
   * @param huntCommentId The hunt comment id (GUID)
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    huntId: string,
    huntCommentId: string,
    options?: HuntCommentsGetOptionalParams
  ): Promise<HuntCommentsGetResponse>;
  /**
   * Delete a hunt comment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param huntId The hunt id (GUID)
   * @param huntCommentId The hunt comment id (GUID)
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    huntId: string,
    huntCommentId: string,
    options?: HuntCommentsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Creates or updates a hunt relation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param huntId The hunt id (GUID)
   * @param huntCommentId The hunt comment id (GUID)
   * @param huntComment The hunt  comment
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    huntId: string,
    huntCommentId: string,
    huntComment: HuntComment,
    options?: HuntCommentsCreateOrUpdateOptionalParams
  ): Promise<HuntCommentsCreateOrUpdateResponse>;
}
