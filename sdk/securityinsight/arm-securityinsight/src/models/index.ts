/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type AutomationRuleConditionUnion =
  | AutomationRuleCondition
  | PropertyArrayChangedConditionProperties
  | PropertyChangedConditionProperties
  | PropertyConditionProperties;
export type AutomationRuleActionUnion =
  | AutomationRuleAction
  | AutomationRuleModifyPropertiesAction
  | AutomationRuleRunPlaybookAction;
export type AlertRuleTemplateUnion =
  | AlertRuleTemplate
  | FusionAlertRuleTemplate
  | MicrosoftSecurityIncidentCreationAlertRuleTemplate
  | ScheduledAlertRuleTemplate;
export type EntityUnion =
  | Entity
  | SecurityAlert
  | HuntingBookmark
  | AccountEntity
  | AzureResourceEntity
  | CloudApplicationEntity
  | DnsEntity
  | FileEntity
  | FileHashEntity
  | HostEntity
  | IoTDeviceEntity
  | IpEntity
  | MailboxEntity
  | MailClusterEntity
  | MailMessageEntity
  | MalwareEntity
  | ProcessEntity
  | RegistryKeyEntity
  | RegistryValueEntity
  | SecurityGroupEntity
  | SubmissionMailEntity
  | UrlEntity;
export type AlertRuleUnion =
  | AlertRule
  | FusionAlertRule
  | MicrosoftSecurityIncidentCreationAlertRule
  | ScheduledAlertRule;
export type DataConnectorUnion =
  | DataConnector
  | AADDataConnector
  | AatpDataConnector
  | ASCDataConnector
  | AwsCloudTrailDataConnector
  | McasDataConnector
  | MdatpDataConnector
  | TIDataConnector
  | OfficeDataConnector;
export type SecurityMLAnalyticsSettingUnion =
  | SecurityMLAnalyticsSetting
  | AnomalySecurityMLAnalyticsSettings;
export type ThreatIntelligenceInformationUnion =
  | ThreatIntelligenceInformation
  | ThreatIntelligenceIndicatorModel;

/** List all the alert rules. */
export interface AlertRulesList {
  /**
   * URL to fetch the next set of alert rules.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of alert rules. */
  value: AlertRuleUnion[];
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Error response structure. */
export interface CloudError {
  /** Error data */
  error?: CloudErrorBody;
}

/** Error details. */
export interface CloudErrorBody {
  /**
   * An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * A message describing the error, intended to be suitable for display in a user interface.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** List all the actions. */
export interface ActionsList {
  /**
   * URL to fetch the next set of actions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of actions. */
  value: ActionResponse[];
}

/** Action property bag base. */
export interface ActionPropertiesBase {
  /** Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}. */
  logicAppResourceId: string;
}

/** List all the alert rule templates. */
export interface AlertRuleTemplatesList {
  /**
   * URL to fetch the next set of alert rule templates.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of alert rule templates. */
  value: AlertRuleTemplateUnion[];
}

/** Describes automation rule triggering logic. */
export interface AutomationRuleTriggeringLogic {
  /** Determines whether the automation rule is enabled or disabled. */
  isEnabled: boolean;
  /** Determines when the automation rule should automatically expire and be disabled. */
  expirationTimeUtc?: Date;
  triggersOn: TriggersOn;
  triggersWhen: TriggersWhen;
  /** The conditions to evaluate to determine if the automation rule should be triggered on a given object. */
  conditions?: AutomationRuleConditionUnion[];
}

/** Describes an automation rule condition. */
export interface AutomationRuleCondition {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  conditionType: "PropertyArrayChanged" | "PropertyChanged" | "Property";
}

/** Describes an automation rule action. */
export interface AutomationRuleAction {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  actionType: "ModifyProperties" | "RunPlaybook";
  order: number;
}

/** Information on the client (user or application) that made some action */
export interface ClientInfo {
  /** The email of the client. */
  email?: string;
  /** The name of the client. */
  name?: string;
  /** The object id of the client. */
  objectId?: string;
  /** The user principal name of the client. */
  userPrincipalName?: string;
}

export interface AutomationRulesList {
  value?: AutomationRule[];
  nextLink?: string;
}

/** List all the bookmarks. */
export interface BookmarkList {
  /**
   * URL to fetch the next set of cases.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of bookmarks. */
  value: Bookmark[];
}

/** User information that made some action */
export interface UserInfo {
  /**
   * The email of the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly email?: string;
  /**
   * The name of the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** The object id of the user. */
  objectId?: string;
}

/** Describes related incident information for the bookmark */
export interface IncidentInfo {
  /** Incident Id */
  incidentId?: string;
  /** The severity of the incident */
  severity?: IncidentSeverity;
  /** The title of the incident */
  title?: string;
  /** Relation Name */
  relationName?: string;
}

/** List all the data connectors. */
export interface DataConnectorList {
  /**
   * URL to fetch the next set of data connectors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of data connectors. */
  value: DataConnectorUnion[];
}

/** List all the incidents. */
export interface IncidentList {
  /**
   * URL to fetch the next set of incidents.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of incidents. */
  value: Incident[];
}

/** Incident additional data property bag. */
export interface IncidentAdditionalData {
  /**
   * The number of alerts in the incident
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly alertsCount?: number;
  /**
   * The number of bookmarks in the incident
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly bookmarksCount?: number;
  /**
   * The number of comments in the incident
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly commentsCount?: number;
  /**
   * List of product names of alerts in the incident
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly alertProductNames?: string[];
  /**
   * The tactics associated with incident
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tactics?: AttackTactic[];
}

/** Represents an incident label */
export interface IncidentLabel {
  /** The name of the label */
  labelName: string;
  /**
   * The type of the label
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly labelType?: IncidentLabelType;
}

/** Information on the user an incident is assigned to */
export interface IncidentOwnerInfo {
  /** The email of the user the incident is assigned to. */
  email?: string;
  /** The name of the user the incident is assigned to. */
  assignedTo?: string;
  /** The object id of the user the incident is assigned to. */
  objectId?: string;
  /** The user principal name of the user the incident is assigned to. */
  userPrincipalName?: string;
  /** The type of the owner the incident is assigned to. */
  ownerType?: OwnerType;
}

/** List of incident alerts. */
export interface IncidentAlertList {
  /** Array of incident alerts. */
  value: SecurityAlert[];
}

/** confidence reason item */
export interface SecurityAlertPropertiesConfidenceReasonsItem {
  /**
   * The reason's description
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reason?: string;
  /**
   * The type (category) of the reason
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reasonType?: string;
}

/** Entity common property bag. */
export interface EntityCommonProperties {
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
}

/** List of incident bookmarks. */
export interface IncidentBookmarkList {
  /** Array of incident bookmarks. */
  value: HuntingBookmark[];
}

/** List of incident comments. */
export interface IncidentCommentList {
  /**
   * URL to fetch the next set of comments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of comments. */
  value: IncidentComment[];
}

/** The incident related entities response. */
export interface IncidentEntitiesResponse {
  /** Array of the incident related entities. */
  entities?: EntityUnion[];
  /** The metadata from the incident related entities results. */
  metaData?: IncidentEntitiesResultsMetadata[];
}

/** Information of a specific aggregation in the incident related entities result. */
export interface IncidentEntitiesResultsMetadata {
  /** Total number of aggregations of the given kind in the incident related entities result. */
  count: number;
  /** The kind of the aggregated entity. */
  entityKind: EntityKindEnum;
}

/** List of relations. */
export interface RelationList {
  /**
   * URL to fetch the next set of relations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of relations. */
  value: Relation[];
}

/** List of the Sentinel onboarding states */
export interface SentinelOnboardingStatesList {
  /** Array of Sentinel onboarding states */
  value: SentinelOnboardingState[];
}

/** List all the SecurityMLAnalyticsSettings */
export interface SecurityMLAnalyticsSettingsList {
  /**
   * URL to fetch the next set of SecurityMLAnalyticsSettings.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of SecurityMLAnalyticsSettings */
  value: SecurityMLAnalyticsSettingUnion[];
}

/** Describes threat kill chain phase entity */
export interface ThreatIntelligenceKillChainPhase {
  /** Kill chainName name */
  killChainName?: string;
  /** Phase name */
  phaseName?: string;
}

/** Describes parsed pattern entity */
export interface ThreatIntelligenceParsedPattern {
  /** Pattern type key */
  patternTypeKey?: string;
  /** Pattern type keys */
  patternTypeValues?: ThreatIntelligenceParsedPatternTypeValue[];
}

/** Describes threat kill chain phase entity */
export interface ThreatIntelligenceParsedPatternTypeValue {
  /** Type of the value */
  valueType?: string;
  /** Value of parsed pattern */
  value?: string;
}

/** Describes external reference */
export interface ThreatIntelligenceExternalReference {
  /** External reference description */
  description?: string;
  /** External reference ID */
  externalId?: string;
  /** External reference source name */
  sourceName?: string;
  /** External reference URL */
  url?: string;
  /** External reference hashes */
  hashes?: { [propertyName: string]: string };
}

/** Describes threat granular marking model entity */
export interface ThreatIntelligenceGranularMarkingModel {
  /** Language granular marking model */
  language?: string;
  /** marking reference granular marking model */
  markingRef?: number;
  /** granular marking model selectors */
  selectors?: string[];
}

/** List of all the threat intelligence information objects. */
export interface ThreatIntelligenceInformationList {
  /**
   * URL to fetch the next set of information objects.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of threat intelligence information objects. */
  value: ThreatIntelligenceInformationUnion[];
}

/** Filtering criteria for querying threat intelligence indicators. */
export interface ThreatIntelligenceFilteringCriteria {
  /** Page size */
  pageSize?: number;
  /** Minimum confidence. */
  minConfidence?: number;
  /** Maximum confidence. */
  maxConfidence?: number;
  /** Start time for ValidUntil filter. */
  minValidUntil?: string;
  /** End time for ValidUntil filter. */
  maxValidUntil?: string;
  /** Parameter to include/exclude disabled indicators. */
  includeDisabled?: boolean;
  /** Columns to sort by and sorting order */
  sortBy?: ThreatIntelligenceSortingCriteria[];
  /** Sources of threat intelligence indicators */
  sources?: string[];
  /** Pattern types */
  patternTypes?: string[];
  /** Threat types of threat intelligence indicators */
  threatTypes?: string[];
  /** Ids of threat intelligence indicators */
  ids?: string[];
  /** Keywords for searching threat intelligence indicators */
  keywords?: string[];
  /** Skip token. */
  skipToken?: string;
}

/** List of available columns for sorting */
export interface ThreatIntelligenceSortingCriteria {
  /** Column name */
  itemKey?: string;
  /** Sorting order (ascending/descending/unsorted). */
  sortOrder?: ThreatIntelligenceSortingOrder;
}

/** List of all the threat intelligence metric fields (type/threat type/source). */
export interface ThreatIntelligenceMetricsList {
  /** Array of threat intelligence metric fields (type/threat type/source). */
  value: ThreatIntelligenceMetrics[];
}

/** Threat intelligence metrics. */
export interface ThreatIntelligenceMetrics {
  /** Threat intelligence metrics. */
  properties?: ThreatIntelligenceMetric;
}

/** Describes threat intelligence metric */
export interface ThreatIntelligenceMetric {
  /** Last updated indicator metric */
  lastUpdatedTimeUtc?: string;
  /** Threat type metrics */
  threatTypeMetrics?: ThreatIntelligenceMetricEntity[];
  /** Pattern type metrics */
  patternTypeMetrics?: ThreatIntelligenceMetricEntity[];
  /** Source metrics */
  sourceMetrics?: ThreatIntelligenceMetricEntity[];
}

/** Describes threat intelligence metric entity */
export interface ThreatIntelligenceMetricEntity {
  /** Metric name */
  metricName?: string;
  /** Metric value */
  metricValue?: number;
}

/** Array of tags to be appended to the threat intelligence indicator. */
export interface ThreatIntelligenceAppendTags {
  /** List of tags to be appended. */
  threatIntelligenceTags?: string[];
}

/** List all the watchlists. */
export interface WatchlistList {
  /**
   * URL to fetch the next set of watchlists.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of watchlist. */
  value: Watchlist[];
}

/** List all the watchlist items. */
export interface WatchlistItemList {
  /**
   * URL to fetch the next set of watchlist items.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of watchlist items. */
  value: WatchlistItem[];
}

/** Lists the operations available in the SecurityInsights RP. */
export interface OperationsList {
  /**
   * URL to fetch the next set of operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of operations */
  value: Operation[];
}

/** Operation provided by provider */
export interface Operation {
  /** Properties of the operation */
  display?: OperationDisplay;
  /** Name of the operation */
  name?: string;
  /** The origin of the operation */
  origin?: string;
  /** Indicates whether the operation is a data action */
  isDataAction?: boolean;
}

/** Properties of the operation */
export interface OperationDisplay {
  /** Description of the operation */
  description?: string;
  /** Operation name */
  operation?: string;
  /** Provider name */
  provider?: string;
  /** Resource name */
  resource?: string;
}

/** alert rule template data sources */
export interface AlertRuleTemplateDataSource {
  /** The connector id that provides the following data types */
  connectorId?: string;
  /** The data types used by the alert rule template */
  dataTypes?: string[];
}

/** MicrosoftSecurityIncidentCreation rule common property bag. */
export interface MicrosoftSecurityIncidentCreationAlertRuleCommonProperties {
  /** the alerts' displayNames on which the cases will be generated */
  displayNamesFilter?: string[];
  /** the alerts' displayNames on which the cases will not be generated */
  displayNamesExcludeFilter?: string[];
  /** The alerts' productName on which the cases will be generated */
  productFilter: MicrosoftSecurityProductName;
  /** the alerts' severities on which the cases will be generated */
  severitiesFilter?: AlertSeverity[];
}

/** Incident Configuration property bag. */
export interface IncidentConfiguration {
  /** Create incidents from alerts triggered by this analytics rule */
  createIncident: boolean;
  /** Set how the alerts that are triggered by this analytics rule, are grouped into incidents */
  groupingConfiguration?: GroupingConfiguration;
}

/** Grouping configuration property bag. */
export interface GroupingConfiguration {
  /** Grouping enabled */
  enabled: boolean;
  /** Re-open closed matching incidents */
  reopenClosedIncident: boolean;
  /** Limit the group to alerts created within the lookback duration (in ISO 8601 duration format) */
  lookbackDuration: string;
  /** Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty. */
  matchingMethod: MatchingMethod;
  /** A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used. */
  groupByEntities?: EntityMappingType[];
  /** A list of alert details to group by (when matchingMethod is Selected) */
  groupByAlertDetails?: AlertDetail[];
  /** A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used. */
  groupByCustomDetails?: string[];
}

/** Scheduled alert rule template property bag. */
export interface ScheduledAlertRuleCommonProperties {
  /** The query that creates alerts for this rule. */
  query?: string;
  /** The frequency (in ISO 8601 duration format) for this alert rule to run. */
  queryFrequency?: string;
  /** The period (in ISO 8601 duration format) that this alert rule looks at. */
  queryPeriod?: string;
  /** The severity for alerts created by this alert rule. */
  severity?: AlertSeverity;
  /** The operation against the threshold that triggers alert rule. */
  triggerOperator?: TriggerOperator;
  /** The threshold triggers this alert rule. */
  triggerThreshold?: number;
  /** The event grouping settings. */
  eventGroupingSettings?: EventGroupingSettings;
  /** Dictionary of string key-value pairs of columns to be attached to the alert */
  customDetails?: { [propertyName: string]: string };
  /** Array of the entity mappings of the alert rule */
  entityMappings?: EntityMapping[];
  /** The alert details override settings */
  alertDetailsOverride?: AlertDetailsOverride;
}

/** Event grouping settings property bag. */
export interface EventGroupingSettings {
  /** The event grouping aggregation kinds */
  aggregationKind?: EventGroupingAggregationKind;
}

/** Single entity mapping for the alert rule */
export interface EntityMapping {
  /** The V3 type of the mapped entity */
  entityType?: EntityMappingType;
  /** array of field mappings for the given entity mapping */
  fieldMappings?: FieldMapping[];
}

/** A single field mapping of the mapped entity */
export interface FieldMapping {
  /** the V3 identifier of the entity */
  identifier?: string;
  /** the column name to be mapped to the identifier */
  columnName?: string;
}

/** Settings for how to dynamically override alert static details */
export interface AlertDetailsOverride {
  /** the format containing columns name(s) to override the alert name */
  alertDisplayNameFormat?: string;
  /** the format containing columns name(s) to override the alert description */
  alertDescriptionFormat?: string;
  /** the column name to take the alert tactics from */
  alertTacticsColumnName?: string;
  /** the column name to take the alert severity from */
  alertSeverityColumnName?: string;
  /** List of additional dynamic properties to override */
  alertDynamicProperties?: AlertPropertyMapping[];
}

/** A single alert property mapping to override */
export interface AlertPropertyMapping {
  /** The V3 alert property */
  alertProperty?: AlertProperty;
  /** the column name to use to override this property */
  value?: string;
}

export interface IncidentPropertiesAction {
  /** The severity of the incident */
  severity?: IncidentSeverity;
  /** The status of the incident */
  status?: IncidentStatus;
  /** The reason the incident was closed */
  classification?: IncidentClassification;
  /** The classification reason the incident was closed with */
  classificationReason?: IncidentClassificationReason;
  /** Describes the reason the incident was closed. */
  classificationComment?: string;
  /** Information on the user an incident is assigned to */
  owner?: IncidentOwnerInfo;
  /** List of labels to add to the incident. */
  labels?: IncidentLabel[];
}

export interface AutomationRulePropertyArrayChangedValuesCondition {
  arrayType?: AutomationRulePropertyArrayChangedConditionSupportedArrayType;
  changeType?: AutomationRulePropertyArrayChangedConditionSupportedChangeType;
}

export interface AutomationRulePropertyValuesChangedCondition {
  propertyName?: AutomationRulePropertyChangedConditionSupportedPropertyType;
  changeType?: AutomationRulePropertyChangedConditionSupportedChangedType;
  operator?: AutomationRulePropertyConditionSupportedOperator;
  propertyValues?: string[];
}

export interface AutomationRulePropertyValuesCondition {
  /** The property to evaluate in an automation rule property condition. */
  propertyName?: AutomationRulePropertyConditionSupportedProperty;
  operator?: AutomationRulePropertyConditionSupportedOperator;
  propertyValues?: string[];
}

export interface PlaybookActionProperties {
  /** The resource id of the playbook resource. */
  logicAppResourceId: string;
  /** The tenant id of the playbook resource. */
  tenantId?: string;
}

/** Alerts data type for data connectors. */
export interface AlertsDataTypeOfDataConnector {
  /** Alerts data type connection. */
  alerts?: DataConnectorDataTypeCommon;
}

/** Common field for data type in data connectors. */
export interface DataConnectorDataTypeCommon {
  /** Describe whether this data type connection is enabled or not. */
  state?: DataTypeState;
}

/** Data connector properties. */
export interface DataConnectorWithAlertsProperties {
  /** The available data types for the connector. */
  dataTypes?: AlertsDataTypeOfDataConnector;
}

/** The available data types for Amazon Web Services CloudTrail data connector. */
export interface AwsCloudTrailDataConnectorDataTypes {
  /** Logs data type. */
  logs?: AwsCloudTrailDataConnectorDataTypesLogs;
}

/** Properties data connector on tenant level. */
export interface DataConnectorTenantId {
  /** The tenant id to connect to, and get the data from. */
  tenantId?: string;
}

/** The available data types for TI (Threat Intelligence) data connector. */
export interface TIDataConnectorDataTypes {
  /** Data type for indicators connection. */
  indicators?: TIDataConnectorDataTypesIndicators;
}

/** The available data types for office data connector. */
export interface OfficeDataConnectorDataTypes {
  /** Exchange data type connection. */
  exchange?: OfficeDataConnectorDataTypesExchange;
  /** SharePoint data type connection. */
  sharePoint?: OfficeDataConnectorDataTypesSharePoint;
  /** Teams data type connection. */
  teams?: OfficeDataConnectorDataTypesTeams;
}

/** security ml analytics settings data sources */
export interface SecurityMLAnalyticsSettingsDataSource {
  /** The connector id that provides the following data types */
  connectorId?: string;
  /** The data types used by the security ml analytics settings */
  dataTypes?: string[];
}

/** The geo-location context attached to the ip entity */
export interface GeoLocation {
  /**
   * Autonomous System Number
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly asn?: number;
  /**
   * City name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly city?: string;
  /**
   * The country code according to ISO 3166 format
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countryCode?: string;
  /**
   * Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countryName?: string;
  /**
   * The longitude of the identified location, expressed as a floating point number with range of -180 to 180, with positive numbers representing East and negative numbers representing West. Latitude and longitude are derived from the city or postal code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly latitude?: number;
  /**
   * The latitude of the identified location, expressed as a floating point number with range of - 90 to 90, with positive numbers representing North and negative numbers representing South. Latitude and longitude are derived from the city or postal code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly longitude?: number;
  /**
   * State name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: string;
}

/** ThreatIntelligence property bag. */
export interface ThreatIntelligence {
  /**
   * Confidence (must be between 0 and 1)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly confidence?: number;
  /**
   * Name of the provider from whom this Threat Intelligence information was received
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly providerName?: string;
  /**
   * Report link
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reportLink?: string;
  /**
   * Threat description (free text)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly threatDescription?: string;
  /**
   * Threat name (e.g. "Jedobot malware")
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly threatName?: string;
  /**
   * Threat type (e.g. "Botnet")
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly threatType?: string;
}

/** An azure resource object with an Etag property */
export interface ResourceWithEtag extends Resource {
  /** Etag of the azure resource */
  etag?: string;
}

/** Action for alert rule. */
export interface ActionResponse extends Resource {
  /** Etag of the action. */
  etag?: string;
  /** Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}. */
  logicAppResourceId?: string;
  /** The name of the logic app's workflow. */
  workflowId?: string;
}

/** Alert rule template. */
export interface AlertRuleTemplate extends Resource {
  /** The alert rule kind */
  kind: AlertRuleKind;
}

/** Specific entity. */
export interface Entity extends Resource {
  /** The kind of the entity. */
  kind: EntityKindEnum;
}

/** Action property bag. */
export interface ActionResponseProperties extends ActionPropertiesBase {
  /** The name of the logic app's workflow. */
  workflowId?: string;
}

/** Action property bag. */
export interface ActionRequestProperties extends ActionPropertiesBase {
  /** Logic App Callback URL for this specific workflow. */
  triggerUri: string;
}

/** Describes an automation rule condition that evaluates an array property's value change */
export interface PropertyArrayChangedConditionProperties
  extends AutomationRuleCondition {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  conditionType: "PropertyArrayChanged";
  conditionProperties?: AutomationRulePropertyArrayChangedValuesCondition;
}

/** Describes an automation rule condition that evaluates a property's value change */
export interface PropertyChangedConditionProperties
  extends AutomationRuleCondition {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  conditionType: "PropertyChanged";
  conditionProperties?: AutomationRulePropertyValuesChangedCondition;
}

/** Describes an automation rule condition that evaluates a property's value */
export interface PropertyConditionProperties extends AutomationRuleCondition {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  conditionType: "Property";
  conditionProperties?: AutomationRulePropertyValuesCondition;
}

/** Describes an automation rule action to modify an object's properties */
export interface AutomationRuleModifyPropertiesAction
  extends AutomationRuleAction {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  actionType: "ModifyProperties";
  actionConfiguration?: IncidentPropertiesAction;
}

/** Describes an automation rule action to run a playbook */
export interface AutomationRuleRunPlaybookAction extends AutomationRuleAction {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  actionType: "RunPlaybook";
  actionConfiguration?: PlaybookActionProperties;
}

/** SecurityAlert entity property bag. */
export interface SecurityAlertProperties extends EntityCommonProperties {
  /**
   * The display name of the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly alertDisplayName?: string;
  /**
   * The type name of the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly alertType?: string;
  /**
   * Display name of the main entity being reported on.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly compromisedEntity?: string;
  /**
   * The confidence level of this alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly confidenceLevel?: ConfidenceLevel;
  /**
   * The confidence reasons
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly confidenceReasons?: SecurityAlertPropertiesConfidenceReasonsItem[];
  /**
   * The confidence score of the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly confidenceScore?: number;
  /**
   * The confidence score calculation status, i.e. indicating if score calculation is pending for this alert, not applicable or final.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly confidenceScoreStatus?: ConfidenceScoreStatus;
  /**
   * Alert description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * The impact end time of the alert (the time of the last event contributing to the alert).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTimeUtc?: Date;
  /**
   * Holds the alert intent stage(s) mapping for this alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly intent?: KillChainIntent;
  /**
   * The identifier of the alert inside the product which generated the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly providerAlertId?: string;
  /**
   * The time the alert was made available for consumption.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processingEndTime?: Date;
  /**
   * The name of a component inside the product which generated the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productComponentName?: string;
  /**
   * The name of the product which published this alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productName?: string;
  /**
   * The version of the product generating the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productVersion?: string;
  /**
   * Manual action items to take to remediate the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly remediationSteps?: string[];
  /** The severity of the alert */
  severity?: AlertSeverity;
  /**
   * The impact start time of the alert (the time of the first event contributing to the alert).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTimeUtc?: Date;
  /**
   * The lifecycle status of the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: AlertStatus;
  /**
   * Holds the product identifier of the alert for the product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemAlertId?: string;
  /**
   * The tactics of the alert
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tactics?: AttackTactic[];
  /**
   * The time the alert was generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeGenerated?: Date;
  /**
   * The name of the vendor that raise the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vendorName?: string;
  /**
   * The uri link of the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly alertLink?: string;
  /**
   * The list of resource identifiers of the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceIdentifiers?: Record<string, unknown>[];
}

/** Describes bookmark properties */
export interface HuntingBookmarkProperties extends EntityCommonProperties {
  /** The time the bookmark was created */
  created?: Date;
  /** Describes a user that created the bookmark */
  createdBy?: UserInfo;
  /** The display name of the bookmark */
  displayName: string;
  /** The time of the event */
  eventTime?: Date;
  /** List of labels relevant to this bookmark */
  labels?: string[];
  /** The notes of the bookmark */
  notes?: string;
  /** The query of the bookmark. */
  query: string;
  /** The query result of the bookmark. */
  queryResult?: string;
  /** The last time the bookmark was updated */
  updated?: Date;
  /** Describes a user that updated the bookmark */
  updatedBy?: UserInfo;
  /** Describes an incident that relates to bookmark */
  incidentInfo?: IncidentInfo;
}

/** Describes threat intelligence entity properties */
export interface ThreatIntelligenceIndicatorProperties
  extends EntityCommonProperties {
  /** List of tags */
  threatIntelligenceTags?: string[];
  /** Last updated time in UTC */
  lastUpdatedTimeUtc?: string;
  /** Source of a threat intelligence entity */
  source?: string;
  /** Display name of a threat intelligence entity */
  displayName?: string;
  /** Description of a threat intelligence entity */
  description?: string;
  /** Indicator types of threat intelligence entities */
  indicatorTypes?: string[];
  /** Pattern of a threat intelligence entity */
  pattern?: string;
  /** Pattern type of a threat intelligence entity */
  patternType?: string;
  /** Pattern version of a threat intelligence entity */
  patternVersion?: string;
  /** Kill chain phases */
  killChainPhases?: ThreatIntelligenceKillChainPhase[];
  /** Parsed patterns */
  parsedPattern?: ThreatIntelligenceParsedPattern[];
  /** External ID of threat intelligence entity */
  externalId?: string;
  /** Created by reference of threat intelligence entity */
  createdByRef?: string;
  /** Is threat intelligence entity defanged */
  defanged?: boolean;
  /** External last updated time in UTC */
  externalLastUpdatedTimeUtc?: string;
  /** External References */
  externalReferences?: ThreatIntelligenceExternalReference[];
  /** Granular Markings */
  granularMarkings?: ThreatIntelligenceGranularMarkingModel[];
  /** Labels  of threat intelligence entity */
  labels?: string[];
  /** Is threat intelligence entity revoked */
  revoked?: boolean;
  /** Confidence of threat intelligence entity */
  confidence?: number;
  /** Threat intelligence entity object marking references */
  objectMarkingRefs?: string[];
  /** Language of threat intelligence entity */
  language?: string;
  /** Threat types */
  threatTypes?: string[];
  /** Valid from */
  validFrom?: string;
  /** Valid until */
  validUntil?: string;
  /** Created by */
  created?: string;
  /** Modified by */
  modified?: string;
  /** Extensions map */
  extensions?: { [propertyName: string]: any };
}

/** Account entity property bag. */
export interface AccountEntityProperties extends EntityCommonProperties {
  /**
   * The Azure Active Directory tenant id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly aadTenantId?: string;
  /**
   * The Azure Active Directory user id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly aadUserId?: string;
  /**
   * The name of the account. This field should hold only the name without any domain added to it, i.e. administrator.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountName?: string;
  /**
   * The display name of the account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The Host entity id that contains the account in case it is a local account (not domain joined)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostEntityId?: string;
  /**
   * Determines whether this is a domain account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDomainJoined?: boolean;
  /**
   * The NetBIOS domain name as it appears in the alert format - domain\username. Examples: NT AUTHORITY.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ntDomain?: string;
  /**
   * The objectGUID attribute is a single-value attribute that is the unique identifier for the object, assigned by active directory.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectGuid?: string;
  /**
   * The Azure Active Directory Passport User ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly puid?: string;
  /**
   * The account security identifier, e.g. S-1-5-18.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sid?: string;
  /**
   * The user principal name suffix for the account, in some cases it is also the domain name. Examples: contoso.com.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly upnSuffix?: string;
  /**
   * The fully qualified domain DNS name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dnsDomain?: string;
}

/** AzureResource entity property bag. */
export interface AzureResourceEntityProperties extends EntityCommonProperties {
  /**
   * The azure resource id of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceId?: string;
  /**
   * The subscription id of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
}

/** CloudApplication entity property bag. */
export interface CloudApplicationEntityProperties
  extends EntityCommonProperties {
  /**
   * The technical identifier of the application.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly appId?: number;
  /**
   * The name of the related cloud application.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly appName?: string;
  /**
   * The user defined instance name of the cloud application. It is often used to distinguish between several applications of the same type that a customer has.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly instanceName?: string;
}

/** Dns entity property bag. */
export interface DnsEntityProperties extends EntityCommonProperties {
  /**
   * An ip entity id for the dns server resolving the request
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dnsServerIpEntityId?: string;
  /**
   * The name of the dns record associated with the alert
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly domainName?: string;
  /**
   * An ip entity id for the dns request client
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostIpAddressEntityId?: string;
  /**
   * Ip entity identifiers for the resolved ip address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddressEntityIds?: string[];
}

/** File entity property bag. */
export interface FileEntityProperties extends EntityCommonProperties {
  /**
   * The full path to the file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly directory?: string;
  /**
   * The file hash entity identifiers associated with this file
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fileHashEntityIds?: string[];
  /**
   * The file name without path (some alerts might not include path).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fileName?: string;
  /**
   * The Host entity id which the file belongs to
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostEntityId?: string;
}

/** FileHash entity property bag. */
export interface FileHashEntityProperties extends EntityCommonProperties {
  /**
   * The hash algorithm type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly algorithm?: FileHashAlgorithm;
  /**
   * The file hash value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hashValue?: string;
}

/** Host entity property bag. */
export interface HostEntityProperties extends EntityCommonProperties {
  /**
   * The azure resource id of the VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azureID?: string;
  /**
   * The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dnsDomain?: string;
  /**
   * The hostname without the domain suffix.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostName?: string;
  /**
   * Determines whether this host belongs to a domain.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDomainJoined?: boolean;
  /**
   * The host name (pre-windows2000).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly netBiosName?: string;
  /**
   * The NT domain that this host belongs to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ntDomain?: string;
  /**
   * The OMS agent id, if the host has OMS agent installed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly omsAgentID?: string;
  /** The operating system type. */
  osFamily?: OSFamily;
  /**
   * A free text representation of the operating system. This field is meant to hold specific versions the are more fine grained than OSFamily or future values not supported by OSFamily enumeration
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osVersion?: string;
}

/** IoTDevice entity property bag. */
export interface IoTDeviceEntityProperties extends EntityCommonProperties {
  /**
   * The ID of the IoT Device in the IoT Hub
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deviceId?: string;
  /**
   * The friendly name of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deviceName?: string;
  /**
   * The source of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly source?: string;
  /**
   * The ID of the security agent running on the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly iotSecurityAgentId?: string;
  /**
   * The type of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deviceType?: string;
  /**
   * The vendor of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vendor?: string;
  /**
   * The ID of the edge device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly edgeId?: string;
  /**
   * The MAC address of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly macAddress?: string;
  /**
   * The model of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly model?: string;
  /**
   * The serial number of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serialNumber?: string;
  /**
   * The firmware version of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly firmwareVersion?: string;
  /**
   * The operating system of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operatingSystem?: string;
  /**
   * The AzureResource entity id of the IoT Hub
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly iotHubEntityId?: string;
  /**
   * The Host entity id of this device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostEntityId?: string;
  /**
   * The IP entity if of this device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddressEntityId?: string;
  /**
   * A list of TI contexts attached to the IoTDevice entity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly threatIntelligence?: ThreatIntelligence[];
  /**
   * A list of protocols of the IoTDevice entity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protocols?: string[];
}

/** Ip entity property bag. */
export interface IpEntityProperties extends EntityCommonProperties {
  /**
   * The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly address?: string;
  /**
   * The geo-location context attached to the ip entity
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly location?: GeoLocation;
  /**
   * A list of TI contexts attached to the ip entity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly threatIntelligence?: ThreatIntelligence[];
}

/** Mailbox entity property bag. */
export interface MailboxEntityProperties extends EntityCommonProperties {
  /**
   * The mailbox's primary address
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly mailboxPrimaryAddress?: string;
  /**
   * The mailbox's display name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The mailbox's UPN
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly upn?: string;
  /**
   * The AzureAD identifier of mailbox. Similar to AadUserId in account entity but this property is specific to mailbox object on office side
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly externalDirectoryObjectId?: string;
}

/** Mail cluster entity property bag. */
export interface MailClusterEntityProperties extends EntityCommonProperties {
  /**
   * The mail message IDs that are part of the mail cluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkMessageIds?: string[];
  /**
   * Count of mail messages by DeliveryStatus string representation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countByDeliveryStatus?: Record<string, unknown>;
  /**
   * Count of mail messages by ThreatType string representation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countByThreatType?: Record<string, unknown>;
  /**
   * Count of mail messages by ProtectionStatus string representation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countByProtectionStatus?: Record<string, unknown>;
  /**
   * The threats of mail messages that are part of the mail cluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly threats?: string[];
  /**
   * The query that was used to identify the messages of the mail cluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly query?: string;
  /**
   * The query time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly queryTime?: Date;
  /**
   * The number of mail messages that are part of the mail cluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly mailCount?: number;
  /**
   * Is this a volume anomaly mail cluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isVolumeAnomaly?: boolean;
  /**
   * The source of the mail cluster (default is 'O365 ATP')
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly source?: string;
  /**
   * The id of the cluster source
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterSourceIdentifier?: string;
  /**
   * The type of the cluster source
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterSourceType?: string;
  /**
   * The cluster query start time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterQueryStartTime?: Date;
  /**
   * The cluster query end time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterQueryEndTime?: Date;
  /**
   * The cluster group
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterGroup?: string;
}

/** Mail message entity property bag. */
export interface MailMessageEntityProperties extends EntityCommonProperties {
  /**
   * The File entity ids of this mail message's attachments
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fileEntityIds?: string[];
  /**
   * The recipient of this mail message. Note that in case of multiple recipients the mail message is forked and each copy has one recipient
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recipient?: string;
  /**
   * The Urls contained in this mail message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly urls?: string[];
  /**
   * The threats of this mail message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly threats?: string[];
  /**
   * The p1 sender's email address
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly p1Sender?: string;
  /**
   * The p1 sender's display name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly p1SenderDisplayName?: string;
  /**
   * The p1 sender's domain
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly p1SenderDomain?: string;
  /**
   * The sender's IP address
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly senderIP?: string;
  /**
   * The p2 sender's email address
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly p2Sender?: string;
  /**
   * The p2 sender's display name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly p2SenderDisplayName?: string;
  /**
   * The p2 sender's domain
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly p2SenderDomain?: string;
  /**
   * The receive date of this message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly receiveDate?: Date;
  /**
   * The network message id of this mail message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkMessageId?: string;
  /**
   * The internet message id of this mail message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly internetMessageId?: string;
  /**
   * The subject of this mail message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subject?: string;
  /**
   * The language of this mail message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly language?: string;
  /**
   * The threat detection methods
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly threatDetectionMethods?: string[];
  /** The bodyFingerprintBin1 */
  bodyFingerprintBin1?: number;
  /** The bodyFingerprintBin2 */
  bodyFingerprintBin2?: number;
  /** The bodyFingerprintBin3 */
  bodyFingerprintBin3?: number;
  /** The bodyFingerprintBin4 */
  bodyFingerprintBin4?: number;
  /** The bodyFingerprintBin5 */
  bodyFingerprintBin5?: number;
  /** The directionality of this mail message */
  antispamDirection?: AntispamMailDirection;
  /** The delivery action of this mail message like Delivered, Blocked, Replaced etc */
  deliveryAction?: DeliveryAction;
  /** The delivery location of this mail message like Inbox, JunkFolder etc */
  deliveryLocation?: DeliveryLocation;
}

/** Malware entity property bag. */
export interface MalwareEntityProperties extends EntityCommonProperties {
  /**
   * The malware category by the vendor, e.g. Trojan
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly category?: string;
  /**
   * List of linked file entity identifiers on which the malware was found
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fileEntityIds?: string[];
  /**
   * The malware name by the vendor, e.g. Win32/Toga!rfn
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly malwareName?: string;
  /**
   * List of linked process entity identifiers on which the malware was found.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processEntityIds?: string[];
}

/** Process entity property bag. */
export interface ProcessEntityProperties extends EntityCommonProperties {
  /**
   * The account entity id running the processes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountEntityId?: string;
  /**
   * The command line used to create the process
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly commandLine?: string;
  /**
   * The time when the process started to run
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTimeUtc?: Date;
  /** The elevation token associated with the process. */
  elevationToken?: ElevationToken;
  /**
   * The host entity id on which the process was running
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostEntityId?: string;
  /**
   * The session entity id in which the process was running
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostLogonSessionEntityId?: string;
  /**
   * Image file entity id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly imageFileEntityId?: string;
  /**
   * The parent process entity id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly parentProcessEntityId?: string;
  /**
   * The process ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processId?: string;
}

/** RegistryKey entity property bag. */
export interface RegistryKeyEntityProperties extends EntityCommonProperties {
  /**
   * the hive that holds the registry key.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hive?: RegistryHive;
  /**
   * The registry key path.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly key?: string;
}

/** RegistryValue entity property bag. */
export interface RegistryValueEntityProperties extends EntityCommonProperties {
  /**
   * The registry key entity id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly keyEntityId?: string;
  /**
   * String formatted representation of the value data.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly valueData?: string;
  /**
   * The registry value name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly valueName?: string;
  /**
   * Specifies the data types to use when storing values in the registry, or identifies the data type of a value in the registry.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly valueType?: RegistryValueKind;
}

/** SecurityGroup entity property bag. */
export interface SecurityGroupEntityProperties extends EntityCommonProperties {
  /**
   * The group distinguished name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly distinguishedName?: string;
  /**
   * A single-value attribute that is the unique identifier for the object, assigned by active directory.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectGuid?: string;
  /**
   * The SID attribute is a single-value attribute that specifies the security identifier (SID) of the group
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sid?: string;
}

/** Submission mail entity property bag. */
export interface SubmissionMailEntityProperties extends EntityCommonProperties {
  /**
   * The network message id of email to which submission belongs
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkMessageId?: string;
  /**
   * The submission id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly submissionId?: string;
  /**
   * The submitter
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly submitter?: string;
  /**
   * The submission date
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly submissionDate?: Date;
  /**
   * The Time stamp when the message is received (Mail)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timestamp?: Date;
  /**
   * The recipient of the mail
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recipient?: string;
  /**
   * The sender of the mail
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sender?: string;
  /**
   * The sender's IP
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly senderIp?: string;
  /**
   * The subject of submission mail
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subject?: string;
  /**
   * The submission type for the given instance. This maps to Junk, Phish, Malware or NotJunk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reportType?: string;
}

/** Url entity property bag. */
export interface UrlEntityProperties extends EntityCommonProperties {
  /**
   * A full URL the entity points to
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly url?: string;
}

/** MicrosoftSecurityIncidentCreation rule property bag. */
export interface MicrosoftSecurityIncidentCreationAlertRuleProperties
  extends MicrosoftSecurityIncidentCreationAlertRuleCommonProperties {
  /** The Name of the alert rule template used to create this rule. */
  alertRuleTemplateName?: string;
  /** The description of the alert rule. */
  description?: string;
  /** The display name for alerts created by this alert rule. */
  displayName: string;
  /** Determines whether this alert rule is enabled or disabled. */
  enabled: boolean;
  /**
   * The last time that this alert has been modified.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModifiedUtc?: Date;
}

/** Scheduled alert rule base property bag. */
export interface ScheduledAlertRuleProperties
  extends ScheduledAlertRuleCommonProperties {
  /** The Name of the alert rule template used to create this rule. */
  alertRuleTemplateName?: string;
  /** The version of the alert rule template used to create this rule - in format <a.b.c>, where all are numbers, for example 0 <1.0.2> */
  templateVersion?: string;
  /** The description of the alert rule. */
  description?: string;
  /** The display name for alerts created by this alert rule. */
  displayName: string;
  /** Determines whether this alert rule is enabled or disabled. */
  enabled: boolean;
  /**
   * The last time that this alert rule has been modified.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModifiedUtc?: Date;
  /** The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered. */
  suppressionDuration: string;
  /** Determines whether the suppression for this alert rule is enabled or disabled. */
  suppressionEnabled: boolean;
  /** The tactics of the alert rule */
  tactics?: AttackTactic[];
  /** The techniques of the alert rule */
  techniques?: string[];
  /** The settings of the incidents that created from alerts triggered by this analytics rule */
  incidentConfiguration?: IncidentConfiguration;
}

/** The available data types for MCAS (Microsoft Cloud App Security) data connector. */
export interface McasDataConnectorDataTypes
  extends AlertsDataTypeOfDataConnector {
  /** Discovery log data type connection. */
  discoveryLogs?: DataConnectorDataTypeCommon;
}

/** Logs data type. */
export interface AwsCloudTrailDataConnectorDataTypesLogs
  extends DataConnectorDataTypeCommon {}

/** Data type for indicators connection. */
export interface TIDataConnectorDataTypesIndicators
  extends DataConnectorDataTypeCommon {}

/** Exchange data type connection. */
export interface OfficeDataConnectorDataTypesExchange
  extends DataConnectorDataTypeCommon {}

/** SharePoint data type connection. */
export interface OfficeDataConnectorDataTypesSharePoint
  extends DataConnectorDataTypeCommon {}

/** Teams data type connection. */
export interface OfficeDataConnectorDataTypesTeams
  extends DataConnectorDataTypeCommon {}

/** ASC (Azure Security Center) data connector properties. */
export interface ASCDataConnectorProperties
  extends DataConnectorWithAlertsProperties {
  /** The subscription id to connect to, and get the data from. */
  subscriptionId?: string;
}

/** Alert rule. */
export interface AlertRule extends ResourceWithEtag {
  /** The alert rule kind */
  kind: AlertRuleKind;
}

/** Action for alert rule. */
export interface ActionRequest extends ResourceWithEtag {
  /** Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}. */
  logicAppResourceId?: string;
  /** Logic App Callback URL for this specific workflow. */
  triggerUri?: string;
}

export interface AutomationRule extends ResourceWithEtag {
  /** The display name of the automation rule. */
  displayName: string;
  /** The order of execution of the automation rule. */
  order: number;
  /** Describes automation rule triggering logic. */
  triggeringLogic: AutomationRuleTriggeringLogic;
  /** The actions to execute when the automation rule is triggered. */
  actions: AutomationRuleActionUnion[];
  /**
   * The last time the automation rule was updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModifiedTimeUtc?: Date;
  /**
   * The time the automation rule was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdTimeUtc?: Date;
  /**
   * Information on the client (user or application) that made some action
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModifiedBy?: ClientInfo;
  /**
   * Information on the client (user or application) that made some action
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdBy?: ClientInfo;
}

/** Represents a bookmark in Azure Security Insights. */
export interface Bookmark extends ResourceWithEtag {
  /** The time the bookmark was created */
  created?: Date;
  /** Describes a user that created the bookmark */
  createdBy?: UserInfo;
  /** The display name of the bookmark */
  displayName?: string;
  /** List of labels relevant to this bookmark */
  labels?: string[];
  /** The notes of the bookmark */
  notes?: string;
  /** The query of the bookmark. */
  query?: string;
  /** The query result of the bookmark. */
  queryResult?: string;
  /** The last time the bookmark was updated */
  updated?: Date;
  /** Describes a user that updated the bookmark */
  updatedBy?: UserInfo;
  /** The bookmark event time */
  eventTime?: Date;
  /** The start time for the query */
  queryStartTime?: Date;
  /** The end time for the query */
  queryEndTime?: Date;
  /** Describes an incident that relates to bookmark */
  incidentInfo?: IncidentInfo;
}

/** Data connector. */
export interface DataConnector extends ResourceWithEtag {
  /** The data connector kind */
  kind: DataConnectorKind;
}

/** Represents an incident in Azure Security Insights. */
export interface Incident extends ResourceWithEtag {
  /**
   * Additional data on the incident
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: IncidentAdditionalData;
  /** The reason the incident was closed */
  classification?: IncidentClassification;
  /** Describes the reason the incident was closed */
  classificationComment?: string;
  /** The classification reason the incident was closed with */
  classificationReason?: IncidentClassificationReason;
  /**
   * The time the incident was created
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdTimeUtc?: Date;
  /** The description of the incident */
  description?: string;
  /** The time of the first activity in the incident */
  firstActivityTimeUtc?: Date;
  /**
   * The deep-link url to the incident in Azure portal
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly incidentUrl?: string;
  /**
   * A sequential number
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly incidentNumber?: number;
  /** List of labels relevant to this incident */
  labels?: IncidentLabel[];
  /** The time of the last activity in the incident */
  lastActivityTimeUtc?: Date;
  /**
   * The last time the incident was updated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModifiedTimeUtc?: Date;
  /** Describes a user that the incident is assigned to */
  owner?: IncidentOwnerInfo;
  /**
   * List of resource ids of Analytic rules related to the incident
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly relatedAnalyticRuleIds?: string[];
  /** The severity of the incident */
  severity?: IncidentSeverity;
  /** The status of the incident */
  status?: IncidentStatus;
  /** The title of the incident */
  title?: string;
}

/** Represents an incident comment */
export interface IncidentComment extends ResourceWithEtag {
  /**
   * The time the comment was created
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdTimeUtc?: Date;
  /**
   * The time the comment was updated
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModifiedTimeUtc?: Date;
  /** The comment message */
  message?: string;
  /**
   * Describes the client that created the comment
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly author?: ClientInfo;
}

/** Represents a relation between two resources */
export interface Relation extends ResourceWithEtag {
  /** The resource ID of the related resource */
  relatedResourceId?: string;
  /**
   * The name of the related resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly relatedResourceName?: string;
  /**
   * The resource type of the related resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly relatedResourceType?: string;
  /**
   * The resource kind of the related resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly relatedResourceKind?: string;
}

/** Sentinel onboarding state */
export interface SentinelOnboardingState extends ResourceWithEtag {
  /** Flag that indicates the status of the CMK setting */
  customerManagedKey?: boolean;
}

/** Security ML Analytics Setting */
export interface SecurityMLAnalyticsSetting extends ResourceWithEtag {
  /** The kind of security ML Analytics Settings */
  kind: SecurityMLAnalyticsSettingsKind;
}

/** Threat intelligence information object. */
export interface ThreatIntelligenceInformation extends ResourceWithEtag {
  /** The kind of the entity. */
  kind: ThreatIntelligenceResourceInnerKind;
}

/** Represents a Watchlist in Azure Security Insights. */
export interface Watchlist extends ResourceWithEtag {
  /** The id (a Guid) of the watchlist */
  watchlistId?: string;
  /** The display name of the watchlist */
  displayName?: string;
  /** The provider of the watchlist */
  provider?: string;
  /** The source of the watchlist */
  source?: Source;
  /** The time the watchlist was created */
  created?: Date;
  /** The last time the watchlist was updated */
  updated?: Date;
  /** Describes a user that created the watchlist */
  createdBy?: UserInfo;
  /** Describes a user that updated the watchlist */
  updatedBy?: UserInfo;
  /** A description of the watchlist */
  description?: string;
  /** The type of the watchlist */
  watchlistType?: string;
  /** The alias of the watchlist */
  watchlistAlias?: string;
  /** A flag that indicates if the watchlist is deleted or not */
  isDeleted?: boolean;
  /** List of labels relevant to this watchlist */
  labels?: string[];
  /** The default duration of a watchlist (in ISO 8601 duration format) */
  defaultDuration?: string;
  /** The tenantId where the watchlist belongs to */
  tenantId?: string;
  /** The number of lines in a csv content to skip before the header */
  numberOfLinesToSkip?: number;
  /**
   * The raw content that represents to watchlist items to create. Example : This line will be skipped
   * header1,header2
   * value1,value2
   */
  rawContent?: string;
  /** The search key is used to optimize query performance when using watchlists for joins with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use this field as the key field when joining to other event data by IP address. */
  itemsSearchKey?: string;
  /** The content type of the raw content. For now, only text/csv is valid */
  contentType?: string;
  /** The status of the Watchlist upload : New, InProgress or Complete. **Note** : When a Watchlist upload status is InProgress, the Watchlist cannot be deleted */
  uploadStatus?: string;
}

/** Represents a Watchlist Item in Azure Security Insights. */
export interface WatchlistItem extends ResourceWithEtag {
  /** The type of the watchlist item */
  watchlistItemType?: string;
  /** The id (a Guid) of the watchlist item */
  watchlistItemId?: string;
  /** The tenantId to which the watchlist item belongs to */
  tenantId?: string;
  /** A flag that indicates if the watchlist item is deleted or not */
  isDeleted?: boolean;
  /** The time the watchlist item was created */
  created?: Date;
  /** The last time the watchlist item was updated */
  updated?: Date;
  /** Describes a user that created the watchlist item */
  createdBy?: UserInfo;
  /** Describes a user that updated the watchlist item */
  updatedBy?: UserInfo;
  /** key-value pairs for a watchlist item */
  itemsKeyValue?: Record<string, unknown>;
  /** key-value pairs for a watchlist item entity mapping */
  entityMapping?: Record<string, unknown>;
}

/** Represents Fusion alert rule template. */
export interface FusionAlertRuleTemplate extends AlertRuleTemplate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Fusion";
  /** the number of alert rules that were created by this template */
  alertRulesCreatedByTemplateCount?: number;
  /**
   * The time that this alert rule template has been added.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdDateUTC?: Date;
  /**
   * The time that this alert rule template was last updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedDateUTC?: Date;
  /** The description of the alert rule template. */
  description?: string;
  /** The display name for alert rule template. */
  displayName?: string;
  /** The required data connectors for this template */
  requiredDataConnectors?: AlertRuleTemplateDataSource[];
  /** The alert rule template status. */
  status?: TemplateStatus;
  /** The severity for alerts created by this alert rule. */
  severity?: AlertSeverity;
  /** The tactics of the alert rule template */
  tactics?: AttackTactic[];
  /** The techniques of the alert rule template */
  techniques?: string[];
}

/** Represents MicrosoftSecurityIncidentCreation rule template. */
export interface MicrosoftSecurityIncidentCreationAlertRuleTemplate
  extends AlertRuleTemplate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "MicrosoftSecurityIncidentCreation";
  /** the number of alert rules that were created by this template */
  alertRulesCreatedByTemplateCount?: number;
  /**
   * The time that this alert rule template has been added.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdDateUTC?: Date;
  /**
   * The time that this alert rule template was last updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedDateUTC?: Date;
  /** The description of the alert rule template. */
  description?: string;
  /** The display name for alert rule template. */
  displayName?: string;
  /** The required data connectors for this template */
  requiredDataConnectors?: AlertRuleTemplateDataSource[];
  /** The alert rule template status. */
  status?: TemplateStatus;
  /** the alerts' displayNames on which the cases will be generated */
  displayNamesFilter?: string[];
  /** the alerts' displayNames on which the cases will not be generated */
  displayNamesExcludeFilter?: string[];
  /** The alerts' productName on which the cases will be generated */
  productFilter?: MicrosoftSecurityProductName;
  /** the alerts' severities on which the cases will be generated */
  severitiesFilter?: AlertSeverity[];
}

/** Represents scheduled alert rule template. */
export interface ScheduledAlertRuleTemplate extends AlertRuleTemplate {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Scheduled";
  /** the number of alert rules that were created by this template */
  alertRulesCreatedByTemplateCount?: number;
  /**
   * The time that this alert rule template has been added.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdDateUTC?: Date;
  /**
   * The time that this alert rule template was last updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedDateUTC?: Date;
  /** The description of the alert rule template. */
  description?: string;
  /** The display name for alert rule template. */
  displayName?: string;
  /** The required data connectors for this template */
  requiredDataConnectors?: AlertRuleTemplateDataSource[];
  /** The alert rule template status. */
  status?: TemplateStatus;
  /** The query that creates alerts for this rule. */
  query?: string;
  /** The frequency (in ISO 8601 duration format) for this alert rule to run. */
  queryFrequency?: string;
  /** The period (in ISO 8601 duration format) that this alert rule looks at. */
  queryPeriod?: string;
  /** The severity for alerts created by this alert rule. */
  severity?: AlertSeverity;
  /** The operation against the threshold that triggers alert rule. */
  triggerOperator?: TriggerOperator;
  /** The threshold triggers this alert rule. */
  triggerThreshold?: number;
  /** The tactics of the alert rule template */
  tactics?: AttackTactic[];
  /** The techniques of the alert rule template */
  techniques?: string[];
  /** The version of this template - in format <a.b.c>, where all are numbers. For example <1.0.2>. */
  version?: string;
  /** The event grouping settings. */
  eventGroupingSettings?: EventGroupingSettings;
  /** Dictionary of string key-value pairs of columns to be attached to the alert */
  customDetails?: { [propertyName: string]: string };
  /** Array of the entity mappings of the alert rule */
  entityMappings?: EntityMapping[];
  /** The alert details override settings */
  alertDetailsOverride?: AlertDetailsOverride;
}

/** Represents a security alert entity. */
export interface SecurityAlert extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "SecurityAlert";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The display name of the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly alertDisplayName?: string;
  /**
   * The type name of the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly alertType?: string;
  /**
   * Display name of the main entity being reported on.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly compromisedEntity?: string;
  /**
   * The confidence level of this alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly confidenceLevel?: ConfidenceLevel;
  /**
   * The confidence reasons
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly confidenceReasons?: SecurityAlertPropertiesConfidenceReasonsItem[];
  /**
   * The confidence score of the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly confidenceScore?: number;
  /**
   * The confidence score calculation status, i.e. indicating if score calculation is pending for this alert, not applicable or final.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly confidenceScoreStatus?: ConfidenceScoreStatus;
  /**
   * Alert description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * The impact end time of the alert (the time of the last event contributing to the alert).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTimeUtc?: Date;
  /**
   * Holds the alert intent stage(s) mapping for this alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly intent?: KillChainIntent;
  /**
   * The identifier of the alert inside the product which generated the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly providerAlertId?: string;
  /**
   * The time the alert was made available for consumption.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processingEndTime?: Date;
  /**
   * The name of a component inside the product which generated the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productComponentName?: string;
  /**
   * The name of the product which published this alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productName?: string;
  /**
   * The version of the product generating the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productVersion?: string;
  /**
   * Manual action items to take to remediate the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly remediationSteps?: string[];
  /** The severity of the alert */
  severity?: AlertSeverity;
  /**
   * The impact start time of the alert (the time of the first event contributing to the alert).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTimeUtc?: Date;
  /**
   * The lifecycle status of the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: AlertStatus;
  /**
   * Holds the product identifier of the alert for the product.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemAlertId?: string;
  /**
   * The tactics of the alert
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tactics?: AttackTactic[];
  /**
   * The time the alert was generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timeGenerated?: Date;
  /**
   * The name of the vendor that raise the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vendorName?: string;
  /**
   * The uri link of the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly alertLink?: string;
  /**
   * The list of resource identifiers of the alert.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceIdentifiers?: Record<string, unknown>[];
}

/** Represents a Hunting bookmark entity. */
export interface HuntingBookmark extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Bookmark";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /** The time the bookmark was created */
  created?: Date;
  /** Describes a user that created the bookmark */
  createdBy?: UserInfo;
  /** The display name of the bookmark */
  displayName?: string;
  /** The time of the event */
  eventTime?: Date;
  /** List of labels relevant to this bookmark */
  labels?: string[];
  /** The notes of the bookmark */
  notes?: string;
  /** The query of the bookmark. */
  query?: string;
  /** The query result of the bookmark. */
  queryResult?: string;
  /** The last time the bookmark was updated */
  updated?: Date;
  /** Describes a user that updated the bookmark */
  updatedBy?: UserInfo;
  /** Describes an incident that relates to bookmark */
  incidentInfo?: IncidentInfo;
}

/** Represents an account entity. */
export interface AccountEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Account";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The Azure Active Directory tenant id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly aadTenantId?: string;
  /**
   * The Azure Active Directory user id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly aadUserId?: string;
  /**
   * The name of the account. This field should hold only the name without any domain added to it, i.e. administrator.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountName?: string;
  /**
   * The display name of the account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The Host entity id that contains the account in case it is a local account (not domain joined)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostEntityId?: string;
  /**
   * Determines whether this is a domain account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDomainJoined?: boolean;
  /**
   * The NetBIOS domain name as it appears in the alert format - domain\username. Examples: NT AUTHORITY.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ntDomain?: string;
  /**
   * The objectGUID attribute is a single-value attribute that is the unique identifier for the object, assigned by active directory.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectGuid?: string;
  /**
   * The Azure Active Directory Passport User ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly puid?: string;
  /**
   * The account security identifier, e.g. S-1-5-18.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sid?: string;
  /**
   * The user principal name suffix for the account, in some cases it is also the domain name. Examples: contoso.com.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly upnSuffix?: string;
  /**
   * The fully qualified domain DNS name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dnsDomain?: string;
}

/** Represents an azure resource entity. */
export interface AzureResourceEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "AzureResource";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The azure resource id of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceId?: string;
  /**
   * The subscription id of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subscriptionId?: string;
}

/** Represents a cloud application entity. */
export interface CloudApplicationEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "CloudApplication";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The technical identifier of the application.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly appId?: number;
  /**
   * The name of the related cloud application.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly appName?: string;
  /**
   * The user defined instance name of the cloud application. It is often used to distinguish between several applications of the same type that a customer has.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly instanceName?: string;
}

/** Represents a dns entity. */
export interface DnsEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "DnsResolution";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * An ip entity id for the dns server resolving the request
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dnsServerIpEntityId?: string;
  /**
   * The name of the dns record associated with the alert
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly domainName?: string;
  /**
   * An ip entity id for the dns request client
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostIpAddressEntityId?: string;
  /**
   * Ip entity identifiers for the resolved ip address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddressEntityIds?: string[];
}

/** Represents a file entity. */
export interface FileEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "File";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The full path to the file.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly directory?: string;
  /**
   * The file hash entity identifiers associated with this file
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fileHashEntityIds?: string[];
  /**
   * The file name without path (some alerts might not include path).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fileName?: string;
  /**
   * The Host entity id which the file belongs to
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostEntityId?: string;
}

/** Represents a file hash entity. */
export interface FileHashEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "FileHash";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The hash algorithm type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly algorithm?: FileHashAlgorithm;
  /**
   * The file hash value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hashValue?: string;
}

/** Represents a host entity. */
export interface HostEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Host";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The azure resource id of the VM.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly azureID?: string;
  /**
   * The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dnsDomain?: string;
  /**
   * The hostname without the domain suffix.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostName?: string;
  /**
   * Determines whether this host belongs to a domain.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDomainJoined?: boolean;
  /**
   * The host name (pre-windows2000).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly netBiosName?: string;
  /**
   * The NT domain that this host belongs to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ntDomain?: string;
  /**
   * The OMS agent id, if the host has OMS agent installed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly omsAgentID?: string;
  /** The operating system type. */
  osFamily?: OSFamily;
  /**
   * A free text representation of the operating system. This field is meant to hold specific versions the are more fine grained than OSFamily or future values not supported by OSFamily enumeration
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly osVersion?: string;
}

/** Represents an IoT device entity. */
export interface IoTDeviceEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "IoTDevice";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The ID of the IoT Device in the IoT Hub
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deviceId?: string;
  /**
   * The friendly name of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deviceName?: string;
  /**
   * The source of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly source?: string;
  /**
   * The ID of the security agent running on the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly iotSecurityAgentId?: string;
  /**
   * The type of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deviceType?: string;
  /**
   * The vendor of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vendor?: string;
  /**
   * The ID of the edge device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly edgeId?: string;
  /**
   * The MAC address of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly macAddress?: string;
  /**
   * The model of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly model?: string;
  /**
   * The serial number of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serialNumber?: string;
  /**
   * The firmware version of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly firmwareVersion?: string;
  /**
   * The operating system of the device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operatingSystem?: string;
  /**
   * The AzureResource entity id of the IoT Hub
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly iotHubEntityId?: string;
  /**
   * The Host entity id of this device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostEntityId?: string;
  /**
   * The IP entity if of this device
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddressEntityId?: string;
  /**
   * A list of TI contexts attached to the IoTDevice entity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly threatIntelligence?: ThreatIntelligence[];
  /**
   * A list of protocols of the IoTDevice entity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly protocols?: string[];
}

/** Represents an ip entity. */
export interface IpEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Ip";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly address?: string;
  /**
   * The geo-location context attached to the ip entity
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly location?: GeoLocation;
  /**
   * A list of TI contexts attached to the ip entity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly threatIntelligence?: ThreatIntelligence[];
}

/** Represents a mailbox entity. */
export interface MailboxEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Mailbox";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The mailbox's primary address
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly mailboxPrimaryAddress?: string;
  /**
   * The mailbox's display name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The mailbox's UPN
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly upn?: string;
  /**
   * The AzureAD identifier of mailbox. Similar to AadUserId in account entity but this property is specific to mailbox object on office side
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly externalDirectoryObjectId?: string;
}

/** Represents a mail cluster entity. */
export interface MailClusterEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "MailCluster";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The mail message IDs that are part of the mail cluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkMessageIds?: string[];
  /**
   * Count of mail messages by DeliveryStatus string representation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countByDeliveryStatus?: Record<string, unknown>;
  /**
   * Count of mail messages by ThreatType string representation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countByThreatType?: Record<string, unknown>;
  /**
   * Count of mail messages by ProtectionStatus string representation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly countByProtectionStatus?: Record<string, unknown>;
  /**
   * The threats of mail messages that are part of the mail cluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly threats?: string[];
  /**
   * The query that was used to identify the messages of the mail cluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly query?: string;
  /**
   * The query time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly queryTime?: Date;
  /**
   * The number of mail messages that are part of the mail cluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly mailCount?: number;
  /**
   * Is this a volume anomaly mail cluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isVolumeAnomaly?: boolean;
  /**
   * The source of the mail cluster (default is 'O365 ATP')
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly source?: string;
  /**
   * The id of the cluster source
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterSourceIdentifier?: string;
  /**
   * The type of the cluster source
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterSourceType?: string;
  /**
   * The cluster query start time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterQueryStartTime?: Date;
  /**
   * The cluster query end time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterQueryEndTime?: Date;
  /**
   * The cluster group
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterGroup?: string;
}

/** Represents a mail message entity. */
export interface MailMessageEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "MailMessage";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The File entity ids of this mail message's attachments
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fileEntityIds?: string[];
  /**
   * The recipient of this mail message. Note that in case of multiple recipients the mail message is forked and each copy has one recipient
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recipient?: string;
  /**
   * The Urls contained in this mail message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly urls?: string[];
  /**
   * The threats of this mail message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly threats?: string[];
  /**
   * The p1 sender's email address
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly p1Sender?: string;
  /**
   * The p1 sender's display name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly p1SenderDisplayName?: string;
  /**
   * The p1 sender's domain
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly p1SenderDomain?: string;
  /**
   * The sender's IP address
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly senderIP?: string;
  /**
   * The p2 sender's email address
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly p2Sender?: string;
  /**
   * The p2 sender's display name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly p2SenderDisplayName?: string;
  /**
   * The p2 sender's domain
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly p2SenderDomain?: string;
  /**
   * The receive date of this message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly receiveDate?: Date;
  /**
   * The network message id of this mail message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkMessageId?: string;
  /**
   * The internet message id of this mail message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly internetMessageId?: string;
  /**
   * The subject of this mail message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subject?: string;
  /**
   * The language of this mail message
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly language?: string;
  /**
   * The threat detection methods
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly threatDetectionMethods?: string[];
  /** The bodyFingerprintBin1 */
  bodyFingerprintBin1?: number;
  /** The bodyFingerprintBin2 */
  bodyFingerprintBin2?: number;
  /** The bodyFingerprintBin3 */
  bodyFingerprintBin3?: number;
  /** The bodyFingerprintBin4 */
  bodyFingerprintBin4?: number;
  /** The bodyFingerprintBin5 */
  bodyFingerprintBin5?: number;
  /** The directionality of this mail message */
  antispamDirection?: AntispamMailDirection;
  /** The delivery action of this mail message like Delivered, Blocked, Replaced etc */
  deliveryAction?: DeliveryAction;
  /** The delivery location of this mail message like Inbox, JunkFolder etc */
  deliveryLocation?: DeliveryLocation;
}

/** Represents a malware entity. */
export interface MalwareEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Malware";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The malware category by the vendor, e.g. Trojan
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly category?: string;
  /**
   * List of linked file entity identifiers on which the malware was found
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fileEntityIds?: string[];
  /**
   * The malware name by the vendor, e.g. Win32/Toga!rfn
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly malwareName?: string;
  /**
   * List of linked process entity identifiers on which the malware was found.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processEntityIds?: string[];
}

/** Represents a process entity. */
export interface ProcessEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Process";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The account entity id running the processes.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountEntityId?: string;
  /**
   * The command line used to create the process
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly commandLine?: string;
  /**
   * The time when the process started to run
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTimeUtc?: Date;
  /** The elevation token associated with the process. */
  elevationToken?: ElevationToken;
  /**
   * The host entity id on which the process was running
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostEntityId?: string;
  /**
   * The session entity id in which the process was running
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostLogonSessionEntityId?: string;
  /**
   * Image file entity id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly imageFileEntityId?: string;
  /**
   * The parent process entity id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly parentProcessEntityId?: string;
  /**
   * The process ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly processId?: string;
}

/** Represents a registry key entity. */
export interface RegistryKeyEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "RegistryKey";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * the hive that holds the registry key.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hive?: RegistryHive;
  /**
   * The registry key path.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly key?: string;
}

/** Represents a registry value entity. */
export interface RegistryValueEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "RegistryValue";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The registry key entity id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly keyEntityId?: string;
  /**
   * String formatted representation of the value data.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly valueData?: string;
  /**
   * The registry value name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly valueName?: string;
  /**
   * Specifies the data types to use when storing values in the registry, or identifies the data type of a value in the registry.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly valueType?: RegistryValueKind;
}

/** Represents a security group entity. */
export interface SecurityGroupEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "SecurityGroup";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The group distinguished name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly distinguishedName?: string;
  /**
   * A single-value attribute that is the unique identifier for the object, assigned by active directory.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectGuid?: string;
  /**
   * The SID attribute is a single-value attribute that specifies the security identifier (SID) of the group
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sid?: string;
}

/** Represents a submission mail entity. */
export interface SubmissionMailEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "SubmissionMail";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * The network message id of email to which submission belongs
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly networkMessageId?: string;
  /**
   * The submission id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly submissionId?: string;
  /**
   * The submitter
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly submitter?: string;
  /**
   * The submission date
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly submissionDate?: Date;
  /**
   * The Time stamp when the message is received (Mail)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly timestamp?: Date;
  /**
   * The recipient of the mail
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recipient?: string;
  /**
   * The sender of the mail
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sender?: string;
  /**
   * The sender's IP
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly senderIp?: string;
  /**
   * The subject of submission mail
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subject?: string;
  /**
   * The submission type for the given instance. This maps to Junk, Phish, Malware or NotJunk.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reportType?: string;
}

/** Represents a url entity. */
export interface UrlEntity extends Entity {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Url";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /**
   * A full URL the entity points to
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly url?: string;
}

/** Represents Fusion alert rule. */
export interface FusionAlertRule extends AlertRule {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Fusion";
  /** The Name of the alert rule template used to create this rule. */
  alertRuleTemplateName?: string;
  /**
   * The description of the alert rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * The display name for alerts created by this alert rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /** Determines whether this alert rule is enabled or disabled. */
  enabled?: boolean;
  /**
   * The last time that this alert has been modified.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModifiedUtc?: Date;
  /**
   * The severity for alerts created by this alert rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly severity?: AlertSeverity;
  /**
   * The tactics of the alert rule
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tactics?: AttackTactic[];
  /**
   * The techniques of the alert rule
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly techniques?: string[];
}

/** Represents MicrosoftSecurityIncidentCreation rule. */
export interface MicrosoftSecurityIncidentCreationAlertRule extends AlertRule {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "MicrosoftSecurityIncidentCreation";
  /** the alerts' displayNames on which the cases will be generated */
  displayNamesFilter?: string[];
  /** the alerts' displayNames on which the cases will not be generated */
  displayNamesExcludeFilter?: string[];
  /** The alerts' productName on which the cases will be generated */
  productFilter?: MicrosoftSecurityProductName;
  /** the alerts' severities on which the cases will be generated */
  severitiesFilter?: AlertSeverity[];
  /** The Name of the alert rule template used to create this rule. */
  alertRuleTemplateName?: string;
  /** The description of the alert rule. */
  description?: string;
  /** The display name for alerts created by this alert rule. */
  displayName?: string;
  /** Determines whether this alert rule is enabled or disabled. */
  enabled?: boolean;
  /**
   * The last time that this alert has been modified.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModifiedUtc?: Date;
}

/** Represents scheduled alert rule. */
export interface ScheduledAlertRule extends AlertRule {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Scheduled";
  /** The query that creates alerts for this rule. */
  query?: string;
  /** The frequency (in ISO 8601 duration format) for this alert rule to run. */
  queryFrequency?: string;
  /** The period (in ISO 8601 duration format) that this alert rule looks at. */
  queryPeriod?: string;
  /** The severity for alerts created by this alert rule. */
  severity?: AlertSeverity;
  /** The operation against the threshold that triggers alert rule. */
  triggerOperator?: TriggerOperator;
  /** The threshold triggers this alert rule. */
  triggerThreshold?: number;
  /** The event grouping settings. */
  eventGroupingSettings?: EventGroupingSettings;
  /** Dictionary of string key-value pairs of columns to be attached to the alert */
  customDetails?: { [propertyName: string]: string };
  /** Array of the entity mappings of the alert rule */
  entityMappings?: EntityMapping[];
  /** The alert details override settings */
  alertDetailsOverride?: AlertDetailsOverride;
  /** The Name of the alert rule template used to create this rule. */
  alertRuleTemplateName?: string;
  /** The version of the alert rule template used to create this rule - in format <a.b.c>, where all are numbers, for example 0 <1.0.2> */
  templateVersion?: string;
  /** The description of the alert rule. */
  description?: string;
  /** The display name for alerts created by this alert rule. */
  displayName?: string;
  /** Determines whether this alert rule is enabled or disabled. */
  enabled?: boolean;
  /**
   * The last time that this alert rule has been modified.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModifiedUtc?: Date;
  /** The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered. */
  suppressionDuration?: string;
  /** Determines whether the suppression for this alert rule is enabled or disabled. */
  suppressionEnabled?: boolean;
  /** The tactics of the alert rule */
  tactics?: AttackTactic[];
  /** The techniques of the alert rule */
  techniques?: string[];
  /** The settings of the incidents that created from alerts triggered by this analytics rule */
  incidentConfiguration?: IncidentConfiguration;
}

/** Represents AAD (Azure Active Directory) data connector. */
export interface AADDataConnector extends DataConnector {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "AzureActiveDirectory";
  /** The tenant id to connect to, and get the data from. */
  tenantId?: string;
  /** The available data types for the connector. */
  dataTypes?: AlertsDataTypeOfDataConnector;
}

/** Represents AATP (Azure Advanced Threat Protection) data connector. */
export interface AatpDataConnector extends DataConnector {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "AzureAdvancedThreatProtection";
  /** The tenant id to connect to, and get the data from. */
  tenantId?: string;
  /** The available data types for the connector. */
  dataTypes?: AlertsDataTypeOfDataConnector;
}

/** Represents ASC (Azure Security Center) data connector. */
export interface ASCDataConnector extends DataConnector {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "AzureSecurityCenter";
  /** The available data types for the connector. */
  dataTypes?: AlertsDataTypeOfDataConnector;
  /** The subscription id to connect to, and get the data from. */
  subscriptionId?: string;
}

/** Represents Amazon Web Services CloudTrail data connector. */
export interface AwsCloudTrailDataConnector extends DataConnector {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "AmazonWebServicesCloudTrail";
  /** The Aws Role Arn (with CloudTrailReadOnly policy) that is used to access the Aws account. */
  awsRoleArn?: string;
  /** The available data types for the connector. */
  dataTypes?: AwsCloudTrailDataConnectorDataTypes;
}

/** Represents MCAS (Microsoft Cloud App Security) data connector. */
export interface McasDataConnector extends DataConnector {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "MicrosoftCloudAppSecurity";
  /** The tenant id to connect to, and get the data from. */
  tenantId?: string;
  /** The available data types for the connector. */
  dataTypes?: McasDataConnectorDataTypes;
}

/** Represents MDATP (Microsoft Defender Advanced Threat Protection) data connector. */
export interface MdatpDataConnector extends DataConnector {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "MicrosoftDefenderAdvancedThreatProtection";
  /** The tenant id to connect to, and get the data from. */
  tenantId?: string;
  /** The available data types for the connector. */
  dataTypes?: AlertsDataTypeOfDataConnector;
}

/** Represents threat intelligence data connector. */
export interface TIDataConnector extends DataConnector {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "ThreatIntelligence";
  /** The tenant id to connect to, and get the data from. */
  tenantId?: string;
  /** The lookback period for the feed to be imported. */
  tipLookbackPeriod?: Date;
  /** The available data types for the connector. */
  dataTypes?: TIDataConnectorDataTypes;
}

/** Represents office data connector. */
export interface OfficeDataConnector extends DataConnector {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Office365";
  /** The tenant id to connect to, and get the data from. */
  tenantId?: string;
  /** The available data types for the connector. */
  dataTypes?: OfficeDataConnectorDataTypes;
}

/** Represents Anomaly Security ML Analytics Settings */
export interface AnomalySecurityMLAnalyticsSettings
  extends SecurityMLAnalyticsSetting {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "Anomaly";
  /** The description of the SecurityMLAnalyticsSettings. */
  description?: string;
  /** The display name for settings created by this SecurityMLAnalyticsSettings. */
  displayName?: string;
  /** Determines whether this settings is enabled or disabled. */
  enabled?: boolean;
  /**
   * The last time that this SecurityMLAnalyticsSettings has been modified.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastModifiedUtc?: Date;
  /** The required data sources for this SecurityMLAnalyticsSettings */
  requiredDataConnectors?: SecurityMLAnalyticsSettingsDataSource[];
  /** The tactics of the SecurityMLAnalyticsSettings */
  tactics?: AttackTactic[];
  /** The techniques of the SecurityMLAnalyticsSettings */
  techniques?: string[];
  /** The anomaly version of the AnomalySecurityMLAnalyticsSettings. */
  anomalyVersion?: string;
  /** The customizable observations of the AnomalySecurityMLAnalyticsSettings. */
  customizableObservations?: Record<string, unknown>;
  /** The frequency that this SecurityMLAnalyticsSettings will be run. */
  frequency?: string;
  /** The anomaly SecurityMLAnalyticsSettings status */
  settingsStatus?: SettingsStatus;
  /** Determines whether this anomaly security ml analytics settings is a default settings */
  isDefaultSettings?: boolean;
  /** The anomaly settings version of the Anomaly security ml analytics settings that dictates whether job version gets updated or not. */
  anomalySettingsVersion?: number;
  /** The anomaly settings definition Id */
  settingsDefinitionId?: string;
}

/** Threat intelligence indicator entity. */
export interface ThreatIntelligenceIndicatorModel
  extends ThreatIntelligenceInformation {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "indicator";
  /**
   * A bag of custom fields that should be part of the entity and will be presented to the user.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalData?: { [propertyName: string]: Record<string, unknown> };
  /**
   * The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly friendlyName?: string;
  /** List of tags */
  threatIntelligenceTags?: string[];
  /** Last updated time in UTC */
  lastUpdatedTimeUtc?: string;
  /** Source of a threat intelligence entity */
  source?: string;
  /** Display name of a threat intelligence entity */
  displayName?: string;
  /** Description of a threat intelligence entity */
  description?: string;
  /** Indicator types of threat intelligence entities */
  indicatorTypes?: string[];
  /** Pattern of a threat intelligence entity */
  pattern?: string;
  /** Pattern type of a threat intelligence entity */
  patternType?: string;
  /** Pattern version of a threat intelligence entity */
  patternVersion?: string;
  /** Kill chain phases */
  killChainPhases?: ThreatIntelligenceKillChainPhase[];
  /** Parsed patterns */
  parsedPattern?: ThreatIntelligenceParsedPattern[];
  /** External ID of threat intelligence entity */
  externalId?: string;
  /** Created by reference of threat intelligence entity */
  createdByRef?: string;
  /** Is threat intelligence entity defanged */
  defanged?: boolean;
  /** External last updated time in UTC */
  externalLastUpdatedTimeUtc?: string;
  /** External References */
  externalReferences?: ThreatIntelligenceExternalReference[];
  /** Granular Markings */
  granularMarkings?: ThreatIntelligenceGranularMarkingModel[];
  /** Labels  of threat intelligence entity */
  labels?: string[];
  /** Is threat intelligence entity revoked */
  revoked?: boolean;
  /** Confidence of threat intelligence entity */
  confidence?: number;
  /** Threat intelligence entity object marking references */
  objectMarkingRefs?: string[];
  /** Language of threat intelligence entity */
  language?: string;
  /** Threat types */
  threatTypes?: string[];
  /** Valid from */
  validFrom?: string;
  /** Valid until */
  validUntil?: string;
  /** Created by */
  created?: string;
  /** Modified by */
  modified?: string;
  /** Extensions map */
  extensions?: { [propertyName: string]: any };
}

/** Known values of {@link AlertRuleKind} that the service accepts. */
export enum KnownAlertRuleKind {
  /** Scheduled */
  Scheduled = "Scheduled",
  /** MicrosoftSecurityIncidentCreation */
  MicrosoftSecurityIncidentCreation = "MicrosoftSecurityIncidentCreation",
  /** Fusion */
  Fusion = "Fusion"
}

/**
 * Defines values for AlertRuleKind. \
 * {@link KnownAlertRuleKind} can be used interchangeably with AlertRuleKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Scheduled** \
 * **MicrosoftSecurityIncidentCreation** \
 * **Fusion**
 */
export type AlertRuleKind = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link TriggersOn} that the service accepts. */
export enum KnownTriggersOn {
  /** Trigger on Incidents */
  Incidents = "Incidents",
  /** Trigger on Alerts */
  Alerts = "Alerts"
}

/**
 * Defines values for TriggersOn. \
 * {@link KnownTriggersOn} can be used interchangeably with TriggersOn,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Incidents**: Trigger on Incidents \
 * **Alerts**: Trigger on Alerts
 */
export type TriggersOn = string;

/** Known values of {@link TriggersWhen} that the service accepts. */
export enum KnownTriggersWhen {
  /** Trigger on created objects */
  Created = "Created",
  /** Trigger on updated objects */
  Updated = "Updated"
}

/**
 * Defines values for TriggersWhen. \
 * {@link KnownTriggersWhen} can be used interchangeably with TriggersWhen,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Created**: Trigger on created objects \
 * **Updated**: Trigger on updated objects
 */
export type TriggersWhen = string;

/** Known values of {@link ConditionType} that the service accepts. */
export enum KnownConditionType {
  /** Evaluate an object property value */
  Property = "Property",
  /** Evaluate an object property changed value */
  PropertyChanged = "PropertyChanged",
  /** Evaluate an object array property changed value */
  PropertyArrayChanged = "PropertyArrayChanged"
}

/**
 * Defines values for ConditionType. \
 * {@link KnownConditionType} can be used interchangeably with ConditionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Property**: Evaluate an object property value \
 * **PropertyChanged**: Evaluate an object property changed value \
 * **PropertyArrayChanged**: Evaluate an object array property changed value
 */
export type ConditionType = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Modify an object's properties */
  ModifyProperties = "ModifyProperties",
  /** Run a playbook on an object */
  RunPlaybook = "RunPlaybook"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ModifyProperties**: Modify an object's properties \
 * **RunPlaybook**: Run a playbook on an object
 */
export type ActionType = string;

/** Known values of {@link IncidentSeverity} that the service accepts. */
export enum KnownIncidentSeverity {
  /** High severity */
  High = "High",
  /** Medium severity */
  Medium = "Medium",
  /** Low severity */
  Low = "Low",
  /** Informational severity */
  Informational = "Informational"
}

/**
 * Defines values for IncidentSeverity. \
 * {@link KnownIncidentSeverity} can be used interchangeably with IncidentSeverity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **High**: High severity \
 * **Medium**: Medium severity \
 * **Low**: Low severity \
 * **Informational**: Informational severity
 */
export type IncidentSeverity = string;

/** Known values of {@link DataConnectorKind} that the service accepts. */
export enum KnownDataConnectorKind {
  /** AzureActiveDirectory */
  AzureActiveDirectory = "AzureActiveDirectory",
  /** AzureSecurityCenter */
  AzureSecurityCenter = "AzureSecurityCenter",
  /** MicrosoftCloudAppSecurity */
  MicrosoftCloudAppSecurity = "MicrosoftCloudAppSecurity",
  /** ThreatIntelligence */
  ThreatIntelligence = "ThreatIntelligence",
  /** Office365 */
  Office365 = "Office365",
  /** AmazonWebServicesCloudTrail */
  AmazonWebServicesCloudTrail = "AmazonWebServicesCloudTrail",
  /** AzureAdvancedThreatProtection */
  AzureAdvancedThreatProtection = "AzureAdvancedThreatProtection",
  /** MicrosoftDefenderAdvancedThreatProtection */
  MicrosoftDefenderAdvancedThreatProtection = "MicrosoftDefenderAdvancedThreatProtection"
}

/**
 * Defines values for DataConnectorKind. \
 * {@link KnownDataConnectorKind} can be used interchangeably with DataConnectorKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureActiveDirectory** \
 * **AzureSecurityCenter** \
 * **MicrosoftCloudAppSecurity** \
 * **ThreatIntelligence** \
 * **Office365** \
 * **AmazonWebServicesCloudTrail** \
 * **AzureAdvancedThreatProtection** \
 * **MicrosoftDefenderAdvancedThreatProtection**
 */
export type DataConnectorKind = string;

/** Known values of {@link AttackTactic} that the service accepts. */
export enum KnownAttackTactic {
  /** Reconnaissance */
  Reconnaissance = "Reconnaissance",
  /** ResourceDevelopment */
  ResourceDevelopment = "ResourceDevelopment",
  /** InitialAccess */
  InitialAccess = "InitialAccess",
  /** Execution */
  Execution = "Execution",
  /** Persistence */
  Persistence = "Persistence",
  /** PrivilegeEscalation */
  PrivilegeEscalation = "PrivilegeEscalation",
  /** DefenseEvasion */
  DefenseEvasion = "DefenseEvasion",
  /** CredentialAccess */
  CredentialAccess = "CredentialAccess",
  /** Discovery */
  Discovery = "Discovery",
  /** LateralMovement */
  LateralMovement = "LateralMovement",
  /** Collection */
  Collection = "Collection",
  /** Exfiltration */
  Exfiltration = "Exfiltration",
  /** CommandAndControl */
  CommandAndControl = "CommandAndControl",
  /** Impact */
  Impact = "Impact",
  /** PreAttack */
  PreAttack = "PreAttack",
  /** ImpairProcessControl */
  ImpairProcessControl = "ImpairProcessControl",
  /** InhibitResponseFunction */
  InhibitResponseFunction = "InhibitResponseFunction"
}

/**
 * Defines values for AttackTactic. \
 * {@link KnownAttackTactic} can be used interchangeably with AttackTactic,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Reconnaissance** \
 * **ResourceDevelopment** \
 * **InitialAccess** \
 * **Execution** \
 * **Persistence** \
 * **PrivilegeEscalation** \
 * **DefenseEvasion** \
 * **CredentialAccess** \
 * **Discovery** \
 * **LateralMovement** \
 * **Collection** \
 * **Exfiltration** \
 * **CommandAndControl** \
 * **Impact** \
 * **PreAttack** \
 * **ImpairProcessControl** \
 * **InhibitResponseFunction**
 */
export type AttackTactic = string;

/** Known values of {@link IncidentClassification} that the service accepts. */
export enum KnownIncidentClassification {
  /** Incident classification was undetermined */
  Undetermined = "Undetermined",
  /** Incident was true positive */
  TruePositive = "TruePositive",
  /** Incident was benign positive */
  BenignPositive = "BenignPositive",
  /** Incident was false positive */
  FalsePositive = "FalsePositive"
}

/**
 * Defines values for IncidentClassification. \
 * {@link KnownIncidentClassification} can be used interchangeably with IncidentClassification,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Undetermined**: Incident classification was undetermined \
 * **TruePositive**: Incident was true positive \
 * **BenignPositive**: Incident was benign positive \
 * **FalsePositive**: Incident was false positive
 */
export type IncidentClassification = string;

/** Known values of {@link IncidentClassificationReason} that the service accepts. */
export enum KnownIncidentClassificationReason {
  /** Classification reason was suspicious activity */
  SuspiciousActivity = "SuspiciousActivity",
  /** Classification reason was suspicious but expected */
  SuspiciousButExpected = "SuspiciousButExpected",
  /** Classification reason was incorrect alert logic */
  IncorrectAlertLogic = "IncorrectAlertLogic",
  /** Classification reason was inaccurate data */
  InaccurateData = "InaccurateData"
}

/**
 * Defines values for IncidentClassificationReason. \
 * {@link KnownIncidentClassificationReason} can be used interchangeably with IncidentClassificationReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SuspiciousActivity**: Classification reason was suspicious activity \
 * **SuspiciousButExpected**: Classification reason was suspicious but expected \
 * **IncorrectAlertLogic**: Classification reason was incorrect alert logic \
 * **InaccurateData**: Classification reason was inaccurate data
 */
export type IncidentClassificationReason = string;

/** Known values of {@link IncidentLabelType} that the service accepts. */
export enum KnownIncidentLabelType {
  /** Label manually created by a user */
  User = "User",
  /** Label automatically created by the system */
  AutoAssigned = "AutoAssigned"
}

/**
 * Defines values for IncidentLabelType. \
 * {@link KnownIncidentLabelType} can be used interchangeably with IncidentLabelType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User**: Label manually created by a user \
 * **AutoAssigned**: Label automatically created by the system
 */
export type IncidentLabelType = string;

/** Known values of {@link OwnerType} that the service accepts. */
export enum KnownOwnerType {
  /** The incident owner type is unknown */
  Unknown = "Unknown",
  /** The incident owner type is an AAD user */
  User = "User",
  /** The incident owner type is an AAD group */
  Group = "Group"
}

/**
 * Defines values for OwnerType. \
 * {@link KnownOwnerType} can be used interchangeably with OwnerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown**: The incident owner type is unknown \
 * **User**: The incident owner type is an AAD user \
 * **Group**: The incident owner type is an AAD group
 */
export type OwnerType = string;

/** Known values of {@link IncidentStatus} that the service accepts. */
export enum KnownIncidentStatus {
  /** An active incident which isn't being handled currently */
  New = "New",
  /** An active incident which is being handled */
  Active = "Active",
  /** A non-active incident */
  Closed = "Closed"
}

/**
 * Defines values for IncidentStatus. \
 * {@link KnownIncidentStatus} can be used interchangeably with IncidentStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **New**: An active incident which isn't being handled currently \
 * **Active**: An active incident which is being handled \
 * **Closed**: A non-active incident
 */
export type IncidentStatus = string;

/** Known values of {@link ConfidenceLevel} that the service accepts. */
export enum KnownConfidenceLevel {
  /** Unknown confidence, the is the default value */
  Unknown = "Unknown",
  /** Low confidence, meaning we have some doubts this is indeed malicious or part of an attack */
  Low = "Low",
  /** High confidence that the alert is true positive malicious */
  High = "High"
}

/**
 * Defines values for ConfidenceLevel. \
 * {@link KnownConfidenceLevel} can be used interchangeably with ConfidenceLevel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown**: Unknown confidence, the is the default value \
 * **Low**: Low confidence, meaning we have some doubts this is indeed malicious or part of an attack \
 * **High**: High confidence that the alert is true positive malicious
 */
export type ConfidenceLevel = string;

/** Known values of {@link ConfidenceScoreStatus} that the service accepts. */
export enum KnownConfidenceScoreStatus {
  /** Score will not be calculated for this alert as it is not supported by virtual analyst */
  NotApplicable = "NotApplicable",
  /** No score was set yet and calculation is in progress */
  InProcess = "InProcess",
  /** Score is calculated and shown as part of the alert, but may be updated again at a later time following the processing of additional data */
  NotFinal = "NotFinal",
  /** Final score was calculated and available */
  Final = "Final"
}

/**
 * Defines values for ConfidenceScoreStatus. \
 * {@link KnownConfidenceScoreStatus} can be used interchangeably with ConfidenceScoreStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotApplicable**: Score will not be calculated for this alert as it is not supported by virtual analyst \
 * **InProcess**: No score was set yet and calculation is in progress \
 * **NotFinal**: Score is calculated and shown as part of the alert, but may be updated again at a later time following the processing of additional data \
 * **Final**: Final score was calculated and available
 */
export type ConfidenceScoreStatus = string;

/** Known values of {@link KillChainIntent} that the service accepts. */
export enum KnownKillChainIntent {
  /** The default value. */
  Unknown = "Unknown",
  /** Probing could be an attempt to access a certain resource regardless of a malicious intent or a failed attempt to gain access to a target system to gather information prior to exploitation. This step is usually detected as an attempt originating from outside the network in attempt to scan the target system and find a way in. */
  Probing = "Probing",
  /** Exploitation is the stage where an attacker manage to get foothold on the attacked resource. This stage is applicable not only for compute hosts, but also for resources such as user accounts, certificates etc. Adversaries will often be able to control the resource after this stage. */
  Exploitation = "Exploitation",
  /** Persistence is any access, action, or configuration change to a system that gives an adversary a persistent presence on that system. Adversaries will often need to maintain access to systems through interruptions such as system restarts, loss of credentials, or other failures that would require a remote access tool to restart or alternate backdoor for them to regain access. */
  Persistence = "Persistence",
  /** Privilege escalation is the result of actions that allow an adversary to obtain a higher level of permissions on a system or network. Certain tools or actions require a higher level of privilege to work and are likely necessary at many points throughout an operation. User accounts with permissions to access specific systems or perform specific functions necessary for adversaries to achieve their objective may also be considered an escalation of privilege. */
  PrivilegeEscalation = "PrivilegeEscalation",
  /** Defense evasion consists of techniques an adversary may use to evade detection or avoid other defenses. Sometimes these actions are the same as or variations of techniques in other categories that have the added benefit of subverting a particular defense or mitigation. */
  DefenseEvasion = "DefenseEvasion",
  /** Credential access represents techniques resulting in access to or control over system, domain, or service credentials that are used within an enterprise environment. Adversaries will likely attempt to obtain legitimate credentials from users or administrator accounts (local system administrator or domain users with administrator access) to use within the network. With sufficient access within a network, an adversary can create accounts for later use within the environment. */
  CredentialAccess = "CredentialAccess",
  /** Discovery consists of techniques that allow the adversary to gain knowledge about the system and internal network. When adversaries gain access to a new system, they must orient themselves to what they now have control of and what benefits operating from that system give to their current objective or overall goals during the intrusion. The operating system provides many native tools that aid in this post-compromise information-gathering phase. */
  Discovery = "Discovery",
  /** Lateral movement consists of techniques that enable an adversary to access and control remote systems on a network and could, but does not necessarily, include execution of tools on remote systems. The lateral movement techniques could allow an adversary to gather information from a system without needing additional tools, such as a remote access tool. An adversary can use lateral movement for many purposes, including remote Execution of tools, pivoting to additional systems, access to specific information or files, access to additional credentials, or to cause an effect. */
  LateralMovement = "LateralMovement",
  /** The execution tactic represents techniques that result in execution of adversary-controlled code on a local or remote system. This tactic is often used in conjunction with lateral movement to expand access to remote systems on a network. */
  Execution = "Execution",
  /** Collection consists of techniques used to identify and gather information, such as sensitive files, from a target network prior to exfiltration. This category also covers locations on a system or network where the adversary may look for information to exfiltrate. */
  Collection = "Collection",
  /** Exfiltration refers to techniques and attributes that result or aid in the adversary removing files and information from a target network. This category also covers locations on a system or network where the adversary may look for information to exfiltrate. */
  Exfiltration = "Exfiltration",
  /** The command and control tactic represents how adversaries communicate with systems under their control within a target network. */
  CommandAndControl = "CommandAndControl",
  /** The impact intent primary objective is to directly reduce the availability or integrity of a system, service, or network; including manipulation of data to impact a business or operational process. This would often refer to techniques such as ransom-ware, defacement, data manipulation and others. */
  Impact = "Impact"
}

/**
 * Defines values for KillChainIntent. \
 * {@link KnownKillChainIntent} can be used interchangeably with KillChainIntent,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown**: The default value. \
 * **Probing**: Probing could be an attempt to access a certain resource regardless of a malicious intent or a failed attempt to gain access to a target system to gather information prior to exploitation. This step is usually detected as an attempt originating from outside the network in attempt to scan the target system and find a way in. \
 * **Exploitation**: Exploitation is the stage where an attacker manage to get foothold on the attacked resource. This stage is applicable not only for compute hosts, but also for resources such as user accounts, certificates etc. Adversaries will often be able to control the resource after this stage. \
 * **Persistence**: Persistence is any access, action, or configuration change to a system that gives an adversary a persistent presence on that system. Adversaries will often need to maintain access to systems through interruptions such as system restarts, loss of credentials, or other failures that would require a remote access tool to restart or alternate backdoor for them to regain access. \
 * **PrivilegeEscalation**: Privilege escalation is the result of actions that allow an adversary to obtain a higher level of permissions on a system or network. Certain tools or actions require a higher level of privilege to work and are likely necessary at many points throughout an operation. User accounts with permissions to access specific systems or perform specific functions necessary for adversaries to achieve their objective may also be considered an escalation of privilege. \
 * **DefenseEvasion**: Defense evasion consists of techniques an adversary may use to evade detection or avoid other defenses. Sometimes these actions are the same as or variations of techniques in other categories that have the added benefit of subverting a particular defense or mitigation.  \
 * **CredentialAccess**: Credential access represents techniques resulting in access to or control over system, domain, or service credentials that are used within an enterprise environment. Adversaries will likely attempt to obtain legitimate credentials from users or administrator accounts (local system administrator or domain users with administrator access) to use within the network. With sufficient access within a network, an adversary can create accounts for later use within the environment. \
 * **Discovery**: Discovery consists of techniques that allow the adversary to gain knowledge about the system and internal network. When adversaries gain access to a new system, they must orient themselves to what they now have control of and what benefits operating from that system give to their current objective or overall goals during the intrusion. The operating system provides many native tools that aid in this post-compromise information-gathering phase. \
 * **LateralMovement**: Lateral movement consists of techniques that enable an adversary to access and control remote systems on a network and could, but does not necessarily, include execution of tools on remote systems. The lateral movement techniques could allow an adversary to gather information from a system without needing additional tools, such as a remote access tool. An adversary can use lateral movement for many purposes, including remote Execution of tools, pivoting to additional systems, access to specific information or files, access to additional credentials, or to cause an effect. \
 * **Execution**: The execution tactic represents techniques that result in execution of adversary-controlled code on a local or remote system. This tactic is often used in conjunction with lateral movement to expand access to remote systems on a network. \
 * **Collection**: Collection consists of techniques used to identify and gather information, such as sensitive files, from a target network prior to exfiltration. This category also covers locations on a system or network where the adversary may look for information to exfiltrate. \
 * **Exfiltration**: Exfiltration refers to techniques and attributes that result or aid in the adversary removing files and information from a target network. This category also covers locations on a system or network where the adversary may look for information to exfiltrate. \
 * **CommandAndControl**: The command and control tactic represents how adversaries communicate with systems under their control within a target network. \
 * **Impact**: The impact intent primary objective is to directly reduce the availability or integrity of a system, service, or network; including manipulation of data to impact a business or operational process. This would often refer to techniques such as ransom-ware, defacement, data manipulation and others.
 */
export type KillChainIntent = string;

/** Known values of {@link AlertSeverity} that the service accepts. */
export enum KnownAlertSeverity {
  /** High severity */
  High = "High",
  /** Medium severity */
  Medium = "Medium",
  /** Low severity */
  Low = "Low",
  /** Informational severity */
  Informational = "Informational"
}

/**
 * Defines values for AlertSeverity. \
 * {@link KnownAlertSeverity} can be used interchangeably with AlertSeverity,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **High**: High severity \
 * **Medium**: Medium severity \
 * **Low**: Low severity \
 * **Informational**: Informational severity
 */
export type AlertSeverity = string;

/** Known values of {@link AlertStatus} that the service accepts. */
export enum KnownAlertStatus {
  /** Unknown value */
  Unknown = "Unknown",
  /** New alert */
  New = "New",
  /** Alert closed after handling */
  Resolved = "Resolved",
  /** Alert dismissed as false positive */
  Dismissed = "Dismissed",
  /** Alert is being handled */
  InProgress = "InProgress"
}

/**
 * Defines values for AlertStatus. \
 * {@link KnownAlertStatus} can be used interchangeably with AlertStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown**: Unknown value \
 * **New**: New alert \
 * **Resolved**: Alert closed after handling \
 * **Dismissed**: Alert dismissed as false positive \
 * **InProgress**: Alert is being handled
 */
export type AlertStatus = string;

/** Known values of {@link EntityKindEnum} that the service accepts. */
export enum KnownEntityKindEnum {
  /** Entity represents account in the system. */
  Account = "Account",
  /** Entity represents host in the system. */
  Host = "Host",
  /** Entity represents file in the system. */
  File = "File",
  /** Entity represents azure resource in the system. */
  AzureResource = "AzureResource",
  /** Entity represents cloud application in the system. */
  CloudApplication = "CloudApplication",
  /** Entity represents dns resolution in the system. */
  DnsResolution = "DnsResolution",
  /** Entity represents file hash in the system. */
  FileHash = "FileHash",
  /** Entity represents ip in the system. */
  Ip = "Ip",
  /** Entity represents malware in the system. */
  Malware = "Malware",
  /** Entity represents process in the system. */
  Process = "Process",
  /** Entity represents registry key in the system. */
  RegistryKey = "RegistryKey",
  /** Entity represents registry value in the system. */
  RegistryValue = "RegistryValue",
  /** Entity represents security group in the system. */
  SecurityGroup = "SecurityGroup",
  /** Entity represents url in the system. */
  Url = "Url",
  /** Entity represents IoT device in the system. */
  IoTDevice = "IoTDevice",
  /** Entity represents security alert in the system. */
  SecurityAlert = "SecurityAlert",
  /** Entity represents bookmark in the system. */
  Bookmark = "Bookmark",
  /** Entity represents mail cluster in the system. */
  MailCluster = "MailCluster",
  /** Entity represents mail message in the system. */
  MailMessage = "MailMessage",
  /** Entity represents mailbox in the system. */
  Mailbox = "Mailbox",
  /** Entity represents submission mail in the system. */
  SubmissionMail = "SubmissionMail"
}

/**
 * Defines values for EntityKindEnum. \
 * {@link KnownEntityKindEnum} can be used interchangeably with EntityKindEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Account**: Entity represents account in the system. \
 * **Host**: Entity represents host in the system. \
 * **File**: Entity represents file in the system. \
 * **AzureResource**: Entity represents azure resource in the system. \
 * **CloudApplication**: Entity represents cloud application in the system. \
 * **DnsResolution**: Entity represents dns resolution in the system. \
 * **FileHash**: Entity represents file hash in the system. \
 * **Ip**: Entity represents ip in the system. \
 * **Malware**: Entity represents malware in the system. \
 * **Process**: Entity represents process in the system. \
 * **RegistryKey**: Entity represents registry key in the system. \
 * **RegistryValue**: Entity represents registry value in the system. \
 * **SecurityGroup**: Entity represents security group in the system. \
 * **Url**: Entity represents url in the system. \
 * **IoTDevice**: Entity represents IoT device in the system. \
 * **SecurityAlert**: Entity represents security alert in the system. \
 * **Bookmark**: Entity represents bookmark in the system. \
 * **MailCluster**: Entity represents mail cluster in the system. \
 * **MailMessage**: Entity represents mail message in the system. \
 * **Mailbox**: Entity represents mailbox in the system. \
 * **SubmissionMail**: Entity represents submission mail in the system.
 */
export type EntityKindEnum = string;

/** Known values of {@link SecurityMLAnalyticsSettingsKind} that the service accepts. */
export enum KnownSecurityMLAnalyticsSettingsKind {
  /** Anomaly */
  Anomaly = "Anomaly"
}

/**
 * Defines values for SecurityMLAnalyticsSettingsKind. \
 * {@link KnownSecurityMLAnalyticsSettingsKind} can be used interchangeably with SecurityMLAnalyticsSettingsKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Anomaly**
 */
export type SecurityMLAnalyticsSettingsKind = string;

/** Known values of {@link ThreatIntelligenceResourceInnerKind} that the service accepts. */
export enum KnownThreatIntelligenceResourceInnerKind {
  /** Entity represents threat intelligence indicator in the system. */
  Indicator = "indicator"
}

/**
 * Defines values for ThreatIntelligenceResourceInnerKind. \
 * {@link KnownThreatIntelligenceResourceInnerKind} can be used interchangeably with ThreatIntelligenceResourceInnerKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **indicator**: Entity represents threat intelligence indicator in the system.
 */
export type ThreatIntelligenceResourceInnerKind = string;

/** Known values of {@link ThreatIntelligenceSortingOrder} that the service accepts. */
export enum KnownThreatIntelligenceSortingOrder {
  /** Unsorted */
  Unsorted = "unsorted",
  /** Ascending */
  Ascending = "ascending",
  /** Descending */
  Descending = "descending"
}

/**
 * Defines values for ThreatIntelligenceSortingOrder. \
 * {@link KnownThreatIntelligenceSortingOrder} can be used interchangeably with ThreatIntelligenceSortingOrder,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **unsorted** \
 * **ascending** \
 * **descending**
 */
export type ThreatIntelligenceSortingOrder = string;

/** Known values of {@link Source} that the service accepts. */
export enum KnownSource {
  /** LocalFile */
  LocalFile = "Local file",
  /** RemoteStorage */
  RemoteStorage = "Remote storage"
}

/**
 * Defines values for Source. \
 * {@link KnownSource} can be used interchangeably with Source,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Local file** \
 * **Remote storage**
 */
export type Source = string;

/** Known values of {@link TemplateStatus} that the service accepts. */
export enum KnownTemplateStatus {
  /** Alert rule template installed. and can not use more then once */
  Installed = "Installed",
  /** Alert rule template is available. */
  Available = "Available",
  /** Alert rule template is not available */
  NotAvailable = "NotAvailable"
}

/**
 * Defines values for TemplateStatus. \
 * {@link KnownTemplateStatus} can be used interchangeably with TemplateStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Installed**: Alert rule template installed. and can not use more then once \
 * **Available**: Alert rule template is available. \
 * **NotAvailable**: Alert rule template is not available
 */
export type TemplateStatus = string;

/** Known values of {@link MicrosoftSecurityProductName} that the service accepts. */
export enum KnownMicrosoftSecurityProductName {
  /** MicrosoftCloudAppSecurity */
  MicrosoftCloudAppSecurity = "Microsoft Cloud App Security",
  /** AzureSecurityCenter */
  AzureSecurityCenter = "Azure Security Center",
  /** AzureAdvancedThreatProtection */
  AzureAdvancedThreatProtection = "Azure Advanced Threat Protection",
  /** AzureActiveDirectoryIdentityProtection */
  AzureActiveDirectoryIdentityProtection = "Azure Active Directory Identity Protection",
  /** AzureSecurityCenterForIoT */
  AzureSecurityCenterForIoT = "Azure Security Center for IoT"
}

/**
 * Defines values for MicrosoftSecurityProductName. \
 * {@link KnownMicrosoftSecurityProductName} can be used interchangeably with MicrosoftSecurityProductName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft Cloud App Security** \
 * **Azure Security Center** \
 * **Azure Advanced Threat Protection** \
 * **Azure Active Directory Identity Protection** \
 * **Azure Security Center for IoT**
 */
export type MicrosoftSecurityProductName = string;

/** Known values of {@link MatchingMethod} that the service accepts. */
export enum KnownMatchingMethod {
  /** Grouping alerts into a single incident if all the entities match */
  AllEntities = "AllEntities",
  /** Grouping any alerts triggered by this rule into a single incident */
  AnyAlert = "AnyAlert",
  /** Grouping alerts into a single incident if the selected entities, custom details and alert details match */
  Selected = "Selected"
}

/**
 * Defines values for MatchingMethod. \
 * {@link KnownMatchingMethod} can be used interchangeably with MatchingMethod,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AllEntities**: Grouping alerts into a single incident if all the entities match \
 * **AnyAlert**: Grouping any alerts triggered by this rule into a single incident \
 * **Selected**: Grouping alerts into a single incident if the selected entities, custom details and alert details match
 */
export type MatchingMethod = string;

/** Known values of {@link EntityMappingType} that the service accepts. */
export enum KnownEntityMappingType {
  /** User account entity type */
  Account = "Account",
  /** Host entity type */
  Host = "Host",
  /** IP address entity type */
  IP = "IP",
  /** Malware entity type */
  Malware = "Malware",
  /** System file entity type */
  File = "File",
  /** Process entity type */
  Process = "Process",
  /** Cloud app entity type */
  CloudApplication = "CloudApplication",
  /** DNS entity type */
  DNS = "DNS",
  /** Azure resource entity type */
  AzureResource = "AzureResource",
  /** File-hash entity type */
  FileHash = "FileHash",
  /** Registry key entity type */
  RegistryKey = "RegistryKey",
  /** Registry value entity type */
  RegistryValue = "RegistryValue",
  /** Security group entity type */
  SecurityGroup = "SecurityGroup",
  /** URL entity type */
  URL = "URL",
  /** Mailbox entity type */
  Mailbox = "Mailbox",
  /** Mail cluster entity type */
  MailCluster = "MailCluster",
  /** Mail message entity type */
  MailMessage = "MailMessage",
  /** Submission mail entity type */
  SubmissionMail = "SubmissionMail"
}

/**
 * Defines values for EntityMappingType. \
 * {@link KnownEntityMappingType} can be used interchangeably with EntityMappingType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Account**: User account entity type \
 * **Host**: Host entity type \
 * **IP**: IP address entity type \
 * **Malware**: Malware entity type \
 * **File**: System file entity type \
 * **Process**: Process entity type \
 * **CloudApplication**: Cloud app entity type \
 * **DNS**: DNS entity type \
 * **AzureResource**: Azure resource entity type \
 * **FileHash**: File-hash entity type \
 * **RegistryKey**: Registry key entity type \
 * **RegistryValue**: Registry value entity type \
 * **SecurityGroup**: Security group entity type \
 * **URL**: URL entity type \
 * **Mailbox**: Mailbox entity type \
 * **MailCluster**: Mail cluster entity type \
 * **MailMessage**: Mail message entity type \
 * **SubmissionMail**: Submission mail entity type
 */
export type EntityMappingType = string;

/** Known values of {@link AlertDetail} that the service accepts. */
export enum KnownAlertDetail {
  /** Alert display name */
  DisplayName = "DisplayName",
  /** Alert severity */
  Severity = "Severity"
}

/**
 * Defines values for AlertDetail. \
 * {@link KnownAlertDetail} can be used interchangeably with AlertDetail,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **DisplayName**: Alert display name \
 * **Severity**: Alert severity
 */
export type AlertDetail = string;

/** Known values of {@link EventGroupingAggregationKind} that the service accepts. */
export enum KnownEventGroupingAggregationKind {
  /** SingleAlert */
  SingleAlert = "SingleAlert",
  /** AlertPerResult */
  AlertPerResult = "AlertPerResult"
}

/**
 * Defines values for EventGroupingAggregationKind. \
 * {@link KnownEventGroupingAggregationKind} can be used interchangeably with EventGroupingAggregationKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SingleAlert** \
 * **AlertPerResult**
 */
export type EventGroupingAggregationKind = string;

/** Known values of {@link AlertProperty} that the service accepts. */
export enum KnownAlertProperty {
  /** Alert's link */
  AlertLink = "AlertLink",
  /** Confidence level property */
  ConfidenceLevel = "ConfidenceLevel",
  /** Confidence score */
  ConfidenceScore = "ConfidenceScore",
  /** Extended links to the alert */
  ExtendedLinks = "ExtendedLinks",
  /** Product name alert property */
  ProductName = "ProductName",
  /** Provider name alert property */
  ProviderName = "ProviderName",
  /** Product component name alert property */
  ProductComponentName = "ProductComponentName",
  /** Remediation steps alert property */
  RemediationSteps = "RemediationSteps",
  /** Techniques alert property */
  Techniques = "Techniques"
}

/**
 * Defines values for AlertProperty. \
 * {@link KnownAlertProperty} can be used interchangeably with AlertProperty,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AlertLink**: Alert's link \
 * **ConfidenceLevel**: Confidence level property \
 * **ConfidenceScore**: Confidence score \
 * **ExtendedLinks**: Extended links to the alert \
 * **ProductName**: Product name alert property \
 * **ProviderName**: Provider name alert property \
 * **ProductComponentName**: Product component name alert property \
 * **RemediationSteps**: Remediation steps alert property \
 * **Techniques**: Techniques alert property
 */
export type AlertProperty = string;

/** Known values of {@link AutomationRulePropertyArrayChangedConditionSupportedArrayType} that the service accepts. */
export enum KnownAutomationRulePropertyArrayChangedConditionSupportedArrayType {
  /** Evaluate the condition on the alerts */
  Alerts = "Alerts",
  /** Evaluate the condition on the labels */
  Labels = "Labels",
  /** Evaluate the condition on the tactics */
  Tactics = "Tactics",
  /** Evaluate the condition on the comments */
  Comments = "Comments"
}

/**
 * Defines values for AutomationRulePropertyArrayChangedConditionSupportedArrayType. \
 * {@link KnownAutomationRulePropertyArrayChangedConditionSupportedArrayType} can be used interchangeably with AutomationRulePropertyArrayChangedConditionSupportedArrayType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Alerts**: Evaluate the condition on the alerts \
 * **Labels**: Evaluate the condition on the labels \
 * **Tactics**: Evaluate the condition on the tactics \
 * **Comments**: Evaluate the condition on the comments
 */
export type AutomationRulePropertyArrayChangedConditionSupportedArrayType = string;

/** Known values of {@link AutomationRulePropertyArrayChangedConditionSupportedChangeType} that the service accepts. */
export enum KnownAutomationRulePropertyArrayChangedConditionSupportedChangeType {
  /** Evaluate the condition on items added to the array */
  Added = "Added"
}

/**
 * Defines values for AutomationRulePropertyArrayChangedConditionSupportedChangeType. \
 * {@link KnownAutomationRulePropertyArrayChangedConditionSupportedChangeType} can be used interchangeably with AutomationRulePropertyArrayChangedConditionSupportedChangeType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Added**: Evaluate the condition on items added to the array
 */
export type AutomationRulePropertyArrayChangedConditionSupportedChangeType = string;

/** Known values of {@link AutomationRulePropertyChangedConditionSupportedPropertyType} that the service accepts. */
export enum KnownAutomationRulePropertyChangedConditionSupportedPropertyType {
  /** Evaluate the condition on the incident severity */
  IncidentSeverity = "IncidentSeverity",
  /** Evaluate the condition on the incident status */
  IncidentStatus = "IncidentStatus",
  /** Evaluate the condition on the incident owner */
  IncidentOwner = "IncidentOwner"
}

/**
 * Defines values for AutomationRulePropertyChangedConditionSupportedPropertyType. \
 * {@link KnownAutomationRulePropertyChangedConditionSupportedPropertyType} can be used interchangeably with AutomationRulePropertyChangedConditionSupportedPropertyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IncidentSeverity**: Evaluate the condition on the incident severity \
 * **IncidentStatus**: Evaluate the condition on the incident status \
 * **IncidentOwner**: Evaluate the condition on the incident owner
 */
export type AutomationRulePropertyChangedConditionSupportedPropertyType = string;

/** Known values of {@link AutomationRulePropertyChangedConditionSupportedChangedType} that the service accepts. */
export enum KnownAutomationRulePropertyChangedConditionSupportedChangedType {
  /** Evaluate the condition on the previous value of the property */
  ChangedFrom = "ChangedFrom",
  /** Evaluate the condition on the updated value of the property */
  ChangedTo = "ChangedTo"
}

/**
 * Defines values for AutomationRulePropertyChangedConditionSupportedChangedType. \
 * {@link KnownAutomationRulePropertyChangedConditionSupportedChangedType} can be used interchangeably with AutomationRulePropertyChangedConditionSupportedChangedType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ChangedFrom**: Evaluate the condition on the previous value of the property \
 * **ChangedTo**: Evaluate the condition on the updated value of the property
 */
export type AutomationRulePropertyChangedConditionSupportedChangedType = string;

/** Known values of {@link AutomationRulePropertyConditionSupportedOperator} that the service accepts. */
export enum KnownAutomationRulePropertyConditionSupportedOperator {
  /** Evaluates if the property equals at least one of the condition values */
  Equals = "Equals",
  /** Evaluates if the property does not equal any of the condition values */
  NotEquals = "NotEquals",
  /** Evaluates if the property contains at least one of the condition values */
  Contains = "Contains",
  /** Evaluates if the property does not contain any of the condition values */
  NotContains = "NotContains",
  /** Evaluates if the property starts with any of the condition values */
  StartsWith = "StartsWith",
  /** Evaluates if the property does not start with any of the condition values */
  NotStartsWith = "NotStartsWith",
  /** Evaluates if the property ends with any of the condition values */
  EndsWith = "EndsWith",
  /** Evaluates if the property does not end with any of the condition values */
  NotEndsWith = "NotEndsWith"
}

/**
 * Defines values for AutomationRulePropertyConditionSupportedOperator. \
 * {@link KnownAutomationRulePropertyConditionSupportedOperator} can be used interchangeably with AutomationRulePropertyConditionSupportedOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Equals**: Evaluates if the property equals at least one of the condition values \
 * **NotEquals**: Evaluates if the property does not equal any of the condition values \
 * **Contains**: Evaluates if the property contains at least one of the condition values \
 * **NotContains**: Evaluates if the property does not contain any of the condition values \
 * **StartsWith**: Evaluates if the property starts with any of the condition values \
 * **NotStartsWith**: Evaluates if the property does not start with any of the condition values \
 * **EndsWith**: Evaluates if the property ends with any of the condition values \
 * **NotEndsWith**: Evaluates if the property does not end with any of the condition values
 */
export type AutomationRulePropertyConditionSupportedOperator = string;

/** Known values of {@link AutomationRulePropertyConditionSupportedProperty} that the service accepts. */
export enum KnownAutomationRulePropertyConditionSupportedProperty {
  /** The title of the incident */
  IncidentTitle = "IncidentTitle",
  /** The description of the incident */
  IncidentDescription = "IncidentDescription",
  /** The severity of the incident */
  IncidentSeverity = "IncidentSeverity",
  /** The status of the incident */
  IncidentStatus = "IncidentStatus",
  /** The related Analytic rule ids of the incident */
  IncidentRelatedAnalyticRuleIds = "IncidentRelatedAnalyticRuleIds",
  /** The tactics of the incident */
  IncidentTactics = "IncidentTactics",
  /** The labels of the incident */
  IncidentLabel = "IncidentLabel",
  /** The provider name of the incident */
  IncidentProviderName = "IncidentProviderName",
  /** The update source of the incident */
  IncidentUpdatedBySource = "IncidentUpdatedBySource",
  /** The account Azure Active Directory tenant id */
  AccountAadTenantId = "AccountAadTenantId",
  /** The account Azure Active Directory user id */
  AccountAadUserId = "AccountAadUserId",
  /** The account name */
  AccountName = "AccountName",
  /** The account NetBIOS domain name */
  AccountNTDomain = "AccountNTDomain",
  /** The account Azure Active Directory Passport User ID */
  AccountPuid = "AccountPUID",
  /** The account security identifier */
  AccountSid = "AccountSid",
  /** The account unique identifier */
  AccountObjectGuid = "AccountObjectGuid",
  /** The account user principal name suffix */
  AccountUPNSuffix = "AccountUPNSuffix",
  /** The name of the product of the alert */
  AlertProductNames = "AlertProductNames",
  /** The analytic rule ids of the alert */
  AlertAnalyticRuleIds = "AlertAnalyticRuleIds",
  /** The Azure resource id */
  AzureResourceResourceId = "AzureResourceResourceId",
  /** The Azure resource subscription id */
  AzureResourceSubscriptionId = "AzureResourceSubscriptionId",
  /** The cloud application identifier */
  CloudApplicationAppId = "CloudApplicationAppId",
  /** The cloud application name */
  CloudApplicationAppName = "CloudApplicationAppName",
  /** The dns record domain name */
  DNSDomainName = "DNSDomainName",
  /** The file directory full path */
  FileDirectory = "FileDirectory",
  /** The file name without path */
  FileName = "FileName",
  /** The file hash value */
  FileHashValue = "FileHashValue",
  /** The host Azure resource id */
  HostAzureID = "HostAzureID",
  /** The host name without domain */
  HostName = "HostName",
  /** The host NetBIOS name */
  HostNetBiosName = "HostNetBiosName",
  /** The host NT domain */
  HostNTDomain = "HostNTDomain",
  /** The host operating system */
  HostOSVersion = "HostOSVersion",
  /** "The IoT device id */
  IoTDeviceId = "IoTDeviceId",
  /** The IoT device name */
  IoTDeviceName = "IoTDeviceName",
  /** The IoT device type */
  IoTDeviceType = "IoTDeviceType",
  /** The IoT device vendor */
  IoTDeviceVendor = "IoTDeviceVendor",
  /** The IoT device model */
  IoTDeviceModel = "IoTDeviceModel",
  /** The IoT device operating system */
  IoTDeviceOperatingSystem = "IoTDeviceOperatingSystem",
  /** The IP address */
  IPAddress = "IPAddress",
  /** The mailbox display name */
  MailboxDisplayName = "MailboxDisplayName",
  /** The mailbox primary address */
  MailboxPrimaryAddress = "MailboxPrimaryAddress",
  /** The mailbox user principal name */
  MailboxUPN = "MailboxUPN",
  /** The mail message delivery action */
  MailMessageDeliveryAction = "MailMessageDeliveryAction",
  /** The mail message delivery location */
  MailMessageDeliveryLocation = "MailMessageDeliveryLocation",
  /** The mail message recipient */
  MailMessageRecipient = "MailMessageRecipient",
  /** The mail message sender IP address */
  MailMessageSenderIP = "MailMessageSenderIP",
  /** The mail message subject */
  MailMessageSubject = "MailMessageSubject",
  /** The mail message P1 sender */
  MailMessageP1Sender = "MailMessageP1Sender",
  /** The mail message P2 sender */
  MailMessageP2Sender = "MailMessageP2Sender",
  /** The malware category */
  MalwareCategory = "MalwareCategory",
  /** The malware name */
  MalwareName = "MalwareName",
  /** The process execution command line */
  ProcessCommandLine = "ProcessCommandLine",
  /** The process id */
  ProcessId = "ProcessId",
  /** The registry key path */
  RegistryKey = "RegistryKey",
  /** The registry key value in string formatted representation */
  RegistryValueData = "RegistryValueData",
  /** The url */
  Url = "Url"
}

/**
 * Defines values for AutomationRulePropertyConditionSupportedProperty. \
 * {@link KnownAutomationRulePropertyConditionSupportedProperty} can be used interchangeably with AutomationRulePropertyConditionSupportedProperty,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IncidentTitle**: The title of the incident \
 * **IncidentDescription**: The description of the incident \
 * **IncidentSeverity**: The severity of the incident \
 * **IncidentStatus**: The status of the incident \
 * **IncidentRelatedAnalyticRuleIds**: The related Analytic rule ids of the incident \
 * **IncidentTactics**: The tactics of the incident \
 * **IncidentLabel**: The labels of the incident \
 * **IncidentProviderName**: The provider name of the incident \
 * **IncidentUpdatedBySource**: The update source of the incident \
 * **AccountAadTenantId**: The account Azure Active Directory tenant id \
 * **AccountAadUserId**: The account Azure Active Directory user id \
 * **AccountName**: The account name \
 * **AccountNTDomain**: The account NetBIOS domain name \
 * **AccountPUID**: The account Azure Active Directory Passport User ID \
 * **AccountSid**: The account security identifier \
 * **AccountObjectGuid**: The account unique identifier \
 * **AccountUPNSuffix**: The account user principal name suffix \
 * **AlertProductNames**: The name of the product of the alert \
 * **AlertAnalyticRuleIds**: The analytic rule ids of the alert \
 * **AzureResourceResourceId**: The Azure resource id \
 * **AzureResourceSubscriptionId**: The Azure resource subscription id \
 * **CloudApplicationAppId**: The cloud application identifier \
 * **CloudApplicationAppName**: The cloud application name \
 * **DNSDomainName**: The dns record domain name \
 * **FileDirectory**: The file directory full path \
 * **FileName**: The file name without path \
 * **FileHashValue**: The file hash value \
 * **HostAzureID**: The host Azure resource id \
 * **HostName**: The host name without domain \
 * **HostNetBiosName**: The host NetBIOS name \
 * **HostNTDomain**: The host NT domain \
 * **HostOSVersion**: The host operating system \
 * **IoTDeviceId**: "The IoT device id \
 * **IoTDeviceName**: The IoT device name \
 * **IoTDeviceType**: The IoT device type \
 * **IoTDeviceVendor**: The IoT device vendor \
 * **IoTDeviceModel**: The IoT device model \
 * **IoTDeviceOperatingSystem**: The IoT device operating system \
 * **IPAddress**: The IP address \
 * **MailboxDisplayName**: The mailbox display name \
 * **MailboxPrimaryAddress**: The mailbox primary address \
 * **MailboxUPN**: The mailbox user principal name \
 * **MailMessageDeliveryAction**: The mail message delivery action \
 * **MailMessageDeliveryLocation**: The mail message delivery location \
 * **MailMessageRecipient**: The mail message recipient \
 * **MailMessageSenderIP**: The mail message sender IP address \
 * **MailMessageSubject**: The mail message subject \
 * **MailMessageP1Sender**: The mail message P1 sender \
 * **MailMessageP2Sender**: The mail message P2 sender \
 * **MalwareCategory**: The malware category \
 * **MalwareName**: The malware name \
 * **ProcessCommandLine**: The process execution command line \
 * **ProcessId**: The process id \
 * **RegistryKey**: The registry key path \
 * **RegistryValueData**: The registry key value in string formatted representation \
 * **Url**: The url
 */
export type AutomationRulePropertyConditionSupportedProperty = string;

/** Known values of {@link DataTypeState} that the service accepts. */
export enum KnownDataTypeState {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for DataTypeState. \
 * {@link KnownDataTypeState} can be used interchangeably with DataTypeState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type DataTypeState = string;

/** Known values of {@link SettingsStatus} that the service accepts. */
export enum KnownSettingsStatus {
  /** Anomaly settings status in Production mode */
  Production = "Production",
  /** Anomaly settings status in Flighting mode */
  Flighting = "Flighting"
}

/**
 * Defines values for SettingsStatus. \
 * {@link KnownSettingsStatus} can be used interchangeably with SettingsStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Production**: Anomaly settings status in Production mode \
 * **Flighting**: Anomaly settings status in Flighting mode
 */
export type SettingsStatus = string;

/** Known values of {@link FileHashAlgorithm} that the service accepts. */
export enum KnownFileHashAlgorithm {
  /** Unknown hash algorithm */
  Unknown = "Unknown",
  /** MD5 hash type */
  MD5 = "MD5",
  /** SHA1 hash type */
  SHA1 = "SHA1",
  /** SHA256 hash type */
  SHA256 = "SHA256",
  /** SHA256 Authenticode hash type */
  SHA256AC = "SHA256AC"
}

/**
 * Defines values for FileHashAlgorithm. \
 * {@link KnownFileHashAlgorithm} can be used interchangeably with FileHashAlgorithm,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown**: Unknown hash algorithm \
 * **MD5**: MD5 hash type \
 * **SHA1**: SHA1 hash type \
 * **SHA256**: SHA256 hash type \
 * **SHA256AC**: SHA256 Authenticode hash type
 */
export type FileHashAlgorithm = string;

/** Known values of {@link AntispamMailDirection} that the service accepts. */
export enum KnownAntispamMailDirection {
  /** Unknown */
  Unknown = "Unknown",
  /** Inbound */
  Inbound = "Inbound",
  /** Outbound */
  Outbound = "Outbound",
  /** Intraorg */
  Intraorg = "Intraorg"
}

/**
 * Defines values for AntispamMailDirection. \
 * {@link KnownAntispamMailDirection} can be used interchangeably with AntispamMailDirection,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown**: Unknown \
 * **Inbound**: Inbound \
 * **Outbound**: Outbound \
 * **Intraorg**: Intraorg
 */
export type AntispamMailDirection = string;

/** Known values of {@link RegistryHive} that the service accepts. */
export enum KnownRegistryHive {
  /** HKEY_LOCAL_MACHINE */
  HkeyLocalMachine = "HKEY_LOCAL_MACHINE",
  /** HKEY_CLASSES_ROOT */
  HkeyClassesRoot = "HKEY_CLASSES_ROOT",
  /** HKEY_CURRENT_CONFIG */
  HkeyCurrentConfig = "HKEY_CURRENT_CONFIG",
  /** HKEY_USERS */
  HkeyUsers = "HKEY_USERS",
  /** HKEY_CURRENT_USER_LOCAL_SETTINGS */
  HkeyCurrentUserLocalSettings = "HKEY_CURRENT_USER_LOCAL_SETTINGS",
  /** HKEY_PERFORMANCE_DATA */
  HkeyPerformanceData = "HKEY_PERFORMANCE_DATA",
  /** HKEY_PERFORMANCE_NLSTEXT */
  HkeyPerformanceNlstext = "HKEY_PERFORMANCE_NLSTEXT",
  /** HKEY_PERFORMANCE_TEXT */
  HkeyPerformanceText = "HKEY_PERFORMANCE_TEXT",
  /** HKEY_A */
  HkeyA = "HKEY_A",
  /** HKEY_CURRENT_USER */
  HkeyCurrentUser = "HKEY_CURRENT_USER"
}

/**
 * Defines values for RegistryHive. \
 * {@link KnownRegistryHive} can be used interchangeably with RegistryHive,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **HKEY_LOCAL_MACHINE**: HKEY_LOCAL_MACHINE \
 * **HKEY_CLASSES_ROOT**: HKEY_CLASSES_ROOT \
 * **HKEY_CURRENT_CONFIG**: HKEY_CURRENT_CONFIG \
 * **HKEY_USERS**: HKEY_USERS \
 * **HKEY_CURRENT_USER_LOCAL_SETTINGS**: HKEY_CURRENT_USER_LOCAL_SETTINGS \
 * **HKEY_PERFORMANCE_DATA**: HKEY_PERFORMANCE_DATA \
 * **HKEY_PERFORMANCE_NLSTEXT**: HKEY_PERFORMANCE_NLSTEXT \
 * **HKEY_PERFORMANCE_TEXT**: HKEY_PERFORMANCE_TEXT \
 * **HKEY_A**: HKEY_A \
 * **HKEY_CURRENT_USER**: HKEY_CURRENT_USER
 */
export type RegistryHive = string;

/** Known values of {@link RegistryValueKind} that the service accepts. */
export enum KnownRegistryValueKind {
  /** None */
  None = "None",
  /** Unknown value type */
  Unknown = "Unknown",
  /** String value type */
  String = "String",
  /** ExpandString value type */
  ExpandString = "ExpandString",
  /** Binary value type */
  Binary = "Binary",
  /** DWord value type */
  DWord = "DWord",
  /** MultiString value type */
  MultiString = "MultiString",
  /** QWord value type */
  QWord = "QWord"
}

/**
 * Defines values for RegistryValueKind. \
 * {@link KnownRegistryValueKind} can be used interchangeably with RegistryValueKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: None \
 * **Unknown**: Unknown value type \
 * **String**: String value type \
 * **ExpandString**: ExpandString value type \
 * **Binary**: Binary value type \
 * **DWord**: DWord value type \
 * **MultiString**: MultiString value type \
 * **QWord**: QWord value type
 */
export type RegistryValueKind = string;
/** Defines values for TriggerOperator. */
export type TriggerOperator = "GreaterThan" | "LessThan" | "Equal" | "NotEqual";
/** Defines values for OSFamily. */
export type OSFamily = "Linux" | "Windows" | "Android" | "IOS" | "Unknown";
/** Defines values for DeliveryAction. */
export type DeliveryAction =
  | "Unknown"
  | "DeliveredAsSpam"
  | "Delivered"
  | "Blocked"
  | "Replaced";
/** Defines values for DeliveryLocation. */
export type DeliveryLocation =
  | "Unknown"
  | "Inbox"
  | "JunkFolder"
  | "DeletedFolder"
  | "Quarantine"
  | "External"
  | "Failed"
  | "Dropped"
  | "Forwarded";
/** Defines values for ElevationToken. */
export type ElevationToken = "Default" | "Full" | "Limited";

/** Optional parameters. */
export interface AlertRulesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AlertRulesListResponse = AlertRulesList;

/** Optional parameters. */
export interface AlertRulesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AlertRulesGetResponse = AlertRuleUnion;

/** Optional parameters. */
export interface AlertRulesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type AlertRulesCreateOrUpdateResponse = AlertRuleUnion;

/** Optional parameters. */
export interface AlertRulesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface AlertRulesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type AlertRulesListNextResponse = AlertRulesList;

/** Optional parameters. */
export interface ActionsListByAlertRuleOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByAlertRule operation. */
export type ActionsListByAlertRuleResponse = ActionsList;

/** Optional parameters. */
export interface ActionsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ActionsGetResponse = ActionResponse;

/** Optional parameters. */
export interface ActionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type ActionsCreateOrUpdateResponse = ActionResponse;

/** Optional parameters. */
export interface ActionsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ActionsListByAlertRuleNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByAlertRuleNext operation. */
export type ActionsListByAlertRuleNextResponse = ActionsList;

/** Optional parameters. */
export interface AlertRuleTemplatesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AlertRuleTemplatesListResponse = AlertRuleTemplatesList;

/** Optional parameters. */
export interface AlertRuleTemplatesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AlertRuleTemplatesGetResponse = AlertRuleTemplateUnion;

/** Optional parameters. */
export interface AlertRuleTemplatesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type AlertRuleTemplatesListNextResponse = AlertRuleTemplatesList;

/** Optional parameters. */
export interface AutomationRulesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AutomationRulesGetResponse = AutomationRule;

/** Optional parameters. */
export interface AutomationRulesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The automation rule */
  automationRuleToUpsert?: AutomationRule;
}

/** Contains response data for the createOrUpdate operation. */
export type AutomationRulesCreateOrUpdateResponse = AutomationRule;

/** Optional parameters. */
export interface AutomationRulesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the delete operation. */
export type AutomationRulesDeleteResponse = Record<string, unknown>;

/** Optional parameters. */
export interface AutomationRulesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AutomationRulesListResponse = AutomationRulesList;

/** Optional parameters. */
export interface AutomationRulesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type AutomationRulesListNextResponse = AutomationRulesList;

/** Optional parameters. */
export interface BookmarksListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type BookmarksListResponse = BookmarkList;

/** Optional parameters. */
export interface BookmarksGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type BookmarksGetResponse = Bookmark;

/** Optional parameters. */
export interface BookmarksCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type BookmarksCreateOrUpdateResponse = Bookmark;

/** Optional parameters. */
export interface BookmarksDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface BookmarksListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type BookmarksListNextResponse = BookmarkList;

/** Optional parameters. */
export interface DataConnectorsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DataConnectorsListResponse = DataConnectorList;

/** Optional parameters. */
export interface DataConnectorsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DataConnectorsGetResponse = DataConnectorUnion;

/** Optional parameters. */
export interface DataConnectorsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type DataConnectorsCreateOrUpdateResponse = DataConnectorUnion;

/** Optional parameters. */
export interface DataConnectorsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DataConnectorsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type DataConnectorsListNextResponse = DataConnectorList;

/** Optional parameters. */
export interface IncidentsListOptionalParams
  extends coreClient.OperationOptions {
  /** Filters the results, based on a Boolean condition. Optional. */
  filter?: string;
  /** Sorts the results. Optional. */
  orderby?: string;
  /** Returns only the first n results. Optional. */
  top?: number;
  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type IncidentsListResponse = IncidentList;

/** Optional parameters. */
export interface IncidentsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type IncidentsGetResponse = Incident;

/** Optional parameters. */
export interface IncidentsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type IncidentsCreateOrUpdateResponse = Incident;

/** Optional parameters. */
export interface IncidentsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface IncidentsListAlertsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAlerts operation. */
export type IncidentsListAlertsResponse = IncidentAlertList;

/** Optional parameters. */
export interface IncidentsListBookmarksOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBookmarks operation. */
export type IncidentsListBookmarksResponse = IncidentBookmarkList;

/** Optional parameters. */
export interface IncidentsListEntitiesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listEntities operation. */
export type IncidentsListEntitiesResponse = IncidentEntitiesResponse;

/** Optional parameters. */
export interface IncidentsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type IncidentsListNextResponse = IncidentList;

/** Optional parameters. */
export interface IncidentCommentsListOptionalParams
  extends coreClient.OperationOptions {
  /** Filters the results, based on a Boolean condition. Optional. */
  filter?: string;
  /** Sorts the results. Optional. */
  orderby?: string;
  /** Returns only the first n results. Optional. */
  top?: number;
  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type IncidentCommentsListResponse = IncidentCommentList;

/** Optional parameters. */
export interface IncidentCommentsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type IncidentCommentsGetResponse = IncidentComment;

/** Optional parameters. */
export interface IncidentCommentsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type IncidentCommentsCreateOrUpdateResponse = IncidentComment;

/** Optional parameters. */
export interface IncidentCommentsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface IncidentCommentsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type IncidentCommentsListNextResponse = IncidentCommentList;

/** Optional parameters. */
export interface IncidentRelationsListOptionalParams
  extends coreClient.OperationOptions {
  /** Filters the results, based on a Boolean condition. Optional. */
  filter?: string;
  /** Sorts the results. Optional. */
  orderby?: string;
  /** Returns only the first n results. Optional. */
  top?: number;
  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type IncidentRelationsListResponse = RelationList;

/** Optional parameters. */
export interface IncidentRelationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type IncidentRelationsGetResponse = Relation;

/** Optional parameters. */
export interface IncidentRelationsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type IncidentRelationsCreateOrUpdateResponse = Relation;

/** Optional parameters. */
export interface IncidentRelationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface IncidentRelationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type IncidentRelationsListNextResponse = RelationList;

/** Optional parameters. */
export interface SentinelOnboardingStatesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SentinelOnboardingStatesGetResponse = SentinelOnboardingState;

/** Optional parameters. */
export interface SentinelOnboardingStatesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** The Sentinel onboarding state parameter */
  sentinelOnboardingStateParameter?: SentinelOnboardingState;
}

/** Contains response data for the create operation. */
export type SentinelOnboardingStatesCreateResponse = SentinelOnboardingState;

/** Optional parameters. */
export interface SentinelOnboardingStatesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface SentinelOnboardingStatesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SentinelOnboardingStatesListResponse = SentinelOnboardingStatesList;

/** Optional parameters. */
export interface SecurityMLAnalyticsSettingsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SecurityMLAnalyticsSettingsListResponse = SecurityMLAnalyticsSettingsList;

/** Optional parameters. */
export interface SecurityMLAnalyticsSettingsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SecurityMLAnalyticsSettingsGetResponse = SecurityMLAnalyticsSettingUnion;

/** Optional parameters. */
export interface SecurityMLAnalyticsSettingsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type SecurityMLAnalyticsSettingsCreateOrUpdateResponse = SecurityMLAnalyticsSettingUnion;

/** Optional parameters. */
export interface SecurityMLAnalyticsSettingsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface SecurityMLAnalyticsSettingsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SecurityMLAnalyticsSettingsListNextResponse = SecurityMLAnalyticsSettingsList;

/** Optional parameters. */
export interface ThreatIntelligenceIndicatorCreateIndicatorOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createIndicator operation. */
export type ThreatIntelligenceIndicatorCreateIndicatorResponse = ThreatIntelligenceInformationUnion;

/** Optional parameters. */
export interface ThreatIntelligenceIndicatorGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ThreatIntelligenceIndicatorGetResponse = ThreatIntelligenceInformationUnion;

/** Optional parameters. */
export interface ThreatIntelligenceIndicatorCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type ThreatIntelligenceIndicatorCreateResponse = ThreatIntelligenceInformationUnion;

/** Optional parameters. */
export interface ThreatIntelligenceIndicatorDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ThreatIntelligenceIndicatorQueryIndicatorsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the queryIndicators operation. */
export type ThreatIntelligenceIndicatorQueryIndicatorsResponse = ThreatIntelligenceInformationList;

/** Optional parameters. */
export interface ThreatIntelligenceIndicatorAppendTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ThreatIntelligenceIndicatorReplaceTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the replaceTags operation. */
export type ThreatIntelligenceIndicatorReplaceTagsResponse = ThreatIntelligenceInformationUnion;

/** Optional parameters. */
export interface ThreatIntelligenceIndicatorQueryIndicatorsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the queryIndicatorsNext operation. */
export type ThreatIntelligenceIndicatorQueryIndicatorsNextResponse = ThreatIntelligenceInformationList;

/** Optional parameters. */
export interface ThreatIntelligenceIndicatorsListOptionalParams
  extends coreClient.OperationOptions {
  /** Filters the results, based on a Boolean condition. Optional. */
  filter?: string;
  /** Sorts the results. Optional. */
  orderby?: string;
  /** Returns only the first n results. Optional. */
  top?: number;
  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type ThreatIntelligenceIndicatorsListResponse = ThreatIntelligenceInformationList;

/** Optional parameters. */
export interface ThreatIntelligenceIndicatorsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ThreatIntelligenceIndicatorsListNextResponse = ThreatIntelligenceInformationList;

/** Optional parameters. */
export interface ThreatIntelligenceIndicatorMetricsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ThreatIntelligenceIndicatorMetricsListResponse = ThreatIntelligenceMetricsList;

/** Optional parameters. */
export interface WatchlistsListOptionalParams
  extends coreClient.OperationOptions {
  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type WatchlistsListResponse = WatchlistList;

/** Optional parameters. */
export interface WatchlistsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WatchlistsGetResponse = Watchlist;

/** Optional parameters. */
export interface WatchlistsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface WatchlistsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type WatchlistsCreateOrUpdateResponse = Watchlist;

/** Optional parameters. */
export interface WatchlistsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type WatchlistsListNextResponse = WatchlistList;

/** Optional parameters. */
export interface WatchlistItemsListOptionalParams
  extends coreClient.OperationOptions {
  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type WatchlistItemsListResponse = WatchlistItemList;

/** Optional parameters. */
export interface WatchlistItemsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WatchlistItemsGetResponse = WatchlistItem;

/** Optional parameters. */
export interface WatchlistItemsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface WatchlistItemsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type WatchlistItemsCreateOrUpdateResponse = WatchlistItem;

/** Optional parameters. */
export interface WatchlistItemsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type WatchlistItemsListNextResponse = WatchlistItemList;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationsList;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationsList;

/** Optional parameters. */
export interface SecurityInsightsOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
