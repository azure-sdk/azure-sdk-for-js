/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** List available packages. */
export interface PackageList {
  /**
   * URL to fetch the next set of packages.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of packages. */
  value: PackageModel[];
}

/** The original source of the content item, where it comes from. */
export interface MetadataSource {
  /** Source type of the content */
  kind: SourceKind;
  /** Name of the content source.  The repo name, solution name, LA workspace name etc. */
  name?: string;
  /** ID of the content source.  The solution ID, workspace ID, etc */
  sourceId?: string;
}

/** Publisher or creator of the content item. */
export interface MetadataAuthor {
  /** Name of the author. Company or person. */
  name?: string;
  /** Email of author contact */
  email?: string;
  /** Link for author/vendor page */
  link?: string;
}

/** Support information for the content item. */
export interface MetadataSupport {
  /** Type of support for content item */
  tier: SupportTier;
  /** Name of the support contact. Company or person. */
  name?: string;
  /** Email of support contact */
  email?: string;
  /** Link for support help, like to support page to open a ticket etc. */
  link?: string;
}

/** Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies. */
export interface MetadataDependencies {
  /** Id of the content item we depend on */
  contentId?: string;
  /** Type of the content item we depend on */
  kind?: Kind;
  /** Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required. */
  version?: string;
  /** Name of the content item */
  name?: string;
  /** Operator used for list of dependencies in criteria array. */
  operator?: Operator;
  /** This is the list of dependencies we must fulfill, according to the AND/OR operator */
  criteria?: MetadataDependencies[];
}

/** ies for the solution content item */
export interface MetadataCategories {
  /** domain for the solution content item */
  domains?: string[];
  /** Industry verticals for the solution content item */
  verticals?: string[];
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Error response structure. */
export interface CloudError {
  /** Error data */
  error?: CloudErrorBody;
}

/** Error details. */
export interface CloudErrorBody {
  /**
   * An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * A message describing the error, intended to be suitable for display in a user interface.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** Package installation properties. */
export interface PackageInstallationProperties {
  /** package kind. */
  packageKind?: PackageKind;
  /** version of the package to be installed. */
  version?: string;
}

/** List of all the template. */
export interface TemplateList {
  /** Array of templates. */
  value: TemplateModel[];
  /**
   * URL to fetch the next page of template.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Lists the operations available in the SecurityInsights RP. */
export interface OperationsList {
  /**
   * URL to fetch the next set of operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
  /** Array of operations */
  value: Operation[];
}

/** Operation provided by provider */
export interface Operation {
  /** Properties of the operation */
  display?: OperationDisplay;
  /** Name of the operation */
  name?: string;
  /** The origin of the operation */
  origin?: string;
  /** Indicates whether the operation is a data action */
  isDataAction?: boolean;
}

/** Properties of the operation */
export interface OperationDisplay {
  /** Description of the operation */
  description?: string;
  /** Operation name */
  operation?: string;
  /** Provider name */
  provider?: string;
  /** Resource name */
  resource?: string;
}

/** An azure resource object with an Etag property */
export interface ResourceWithEtag extends Resource {
  /** Etag of the azure resource */
  etag?: string;
}

/** Represents a Package in Azure Security Insights. */
export interface PackageModel extends ResourceWithEtag {
  /** The package id */
  packageId?: string;
  /** The package kind */
  packageKind?: PackageKind;
  /** The version of the installed package, null or absent means not installed. */
  installedVersion?: string;
  /** The version of the content schema. */
  contentSchemaVersion?: string;
  /** The metadata resource id. */
  resourceId?: string;
  /** Flag indicates if this is a newly published package. */
  isNew?: Flag;
  /** Flag indicates if this package is in preview. */
  isPreview?: Flag;
  /** Flag indicates if this package is among the featured list. */
  isFeatured?: Flag;
  /** the latest version number of the package */
  version?: string;
  /** The display name of the package */
  displayName?: string;
  /** The description of the package */
  description?: string;
  /** The publisher display name of the package */
  publisherDisplayName?: string;
  /** The source of the package */
  source?: MetadataSource;
  /** The author of the package */
  author?: MetadataAuthor;
  /** The support tier of the package */
  support?: MetadataSupport;
  /** The support tier of the package */
  dependencies?: MetadataDependencies;
  /** Providers for the package item */
  providers?: string[];
  /** first publish date package item */
  firstPublishDate?: Date;
  /** last publish date for the package item */
  lastPublishDate?: Date;
  /** The categories of the package */
  categories?: MetadataCategories;
  /** the tactics the resource covers */
  threatAnalysisTactics?: string[];
  /** the techniques the resource covers, these have to be aligned with the tactics being used */
  threatAnalyticsTechniques?: string[];
  /** the icon identifier. this id can later be fetched from the content metadata */
  icon?: string;
  /** The JSON string of the package. */
  packageItems?: string;
}

/** Template resource definition. */
export interface TemplateModel extends ResourceWithEtag {
  /** Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name */
  contentId?: string;
  /** Full parent resource ID of the content item the template is for.  This is the full resource ID including the scope (subscription and resource group) */
  parentId?: string;
  /** Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks */
  version?: string;
  /** The display name of the template */
  displayName?: string;
  /** The kind of content the template is for. */
  contentKind?: Kind;
  /** Source of the content.  This is where/how it was created. */
  source?: MetadataSource;
  /** The creator of the content item. */
  author?: MetadataAuthor;
  /** Support information for the template - type, name, contact information */
  support?: MetadataSupport;
  /** Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats. */
  dependencies?: MetadataDependencies;
  /** Categories for the  item */
  categories?: MetadataCategories;
  /** Providers for the content item */
  providers?: string[];
  /** first publish date content item */
  firstPublishDate?: Date;
  /** last publish date for the content item */
  lastPublishDate?: Date;
  /** The custom version of the content. A optional free text */
  customVersion?: string;
  /** Schema version of the content. Can be used to distinguish between different flow based on the schema version */
  contentSchemaVersion?: string;
  /** the icon identifier. this id can later be fetched from the content metadata */
  icon?: string;
  /** the tactics the resource covers */
  threatAnalysisTactics?: string[];
  /** the techniques the resource covers, these have to be aligned with the tactics being used */
  threatAnalysisTechniques?: string[];
  /** preview image file names. These will be taken from the solution artifacts */
  previewImages?: string[];
  /** preview image file names. These will be taken from the solution artifacts. used for dark theme support */
  previewImagesDark?: string[];
  /** The JSON string of the template */
  mainTemplate?: string;
}

/** Known values of {@link PackageKind} that the service accepts. */
export enum KnownPackageKind {
  /** Solution */
  Solution = "Solution",
  /** Standalone */
  Standalone = "Standalone"
}

/**
 * Defines values for PackageKind. \
 * {@link KnownPackageKind} can be used interchangeably with PackageKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Solution** \
 * **Standalone**
 */
export type PackageKind = string;

/** Known values of {@link Flag} that the service accepts. */
export enum KnownFlag {
  /** True */
  True = "true",
  /** False */
  False = "false"
}

/**
 * Defines values for Flag. \
 * {@link KnownFlag} can be used interchangeably with Flag,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **true** \
 * **false**
 */
export type Flag = string;

/** Known values of {@link SourceKind} that the service accepts. */
export enum KnownSourceKind {
  /** LocalWorkspace */
  LocalWorkspace = "LocalWorkspace",
  /** Community */
  Community = "Community",
  /** Solution */
  Solution = "Solution",
  /** SourceRepository */
  SourceRepository = "SourceRepository"
}

/**
 * Defines values for SourceKind. \
 * {@link KnownSourceKind} can be used interchangeably with SourceKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LocalWorkspace** \
 * **Community** \
 * **Solution** \
 * **SourceRepository**
 */
export type SourceKind = string;

/** Known values of {@link SupportTier} that the service accepts. */
export enum KnownSupportTier {
  /** Microsoft */
  Microsoft = "Microsoft",
  /** Partner */
  Partner = "Partner",
  /** Community */
  Community = "Community"
}

/**
 * Defines values for SupportTier. \
 * {@link KnownSupportTier} can be used interchangeably with SupportTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft** \
 * **Partner** \
 * **Community**
 */
export type SupportTier = string;

/** Known values of {@link Kind} that the service accepts. */
export enum KnownKind {
  /** DataConnector */
  DataConnector = "DataConnector",
  /** DataType */
  DataType = "DataType",
  /** Workbook */
  Workbook = "Workbook",
  /** WorkbookTemplate */
  WorkbookTemplate = "WorkbookTemplate",
  /** Playbook */
  Playbook = "Playbook",
  /** PlaybookTemplate */
  PlaybookTemplate = "PlaybookTemplate",
  /** AnalyticsRuleTemplate */
  AnalyticsRuleTemplate = "AnalyticsRuleTemplate",
  /** AnalyticsRule */
  AnalyticsRule = "AnalyticsRule",
  /** HuntingQuery */
  HuntingQuery = "HuntingQuery",
  /** InvestigationQuery */
  InvestigationQuery = "InvestigationQuery",
  /** Parser */
  Parser = "Parser",
  /** Watchlist */
  Watchlist = "Watchlist",
  /** WatchlistTemplate */
  WatchlistTemplate = "WatchlistTemplate",
  /** Solution */
  Solution = "Solution",
  /** AzureFunction */
  AzureFunction = "AzureFunction",
  /** LogicAppsCustomConnector */
  LogicAppsCustomConnector = "LogicAppsCustomConnector",
  /** AutomationRule */
  AutomationRule = "AutomationRule"
}

/**
 * Defines values for Kind. \
 * {@link KnownKind} can be used interchangeably with Kind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **DataConnector** \
 * **DataType** \
 * **Workbook** \
 * **WorkbookTemplate** \
 * **Playbook** \
 * **PlaybookTemplate** \
 * **AnalyticsRuleTemplate** \
 * **AnalyticsRule** \
 * **HuntingQuery** \
 * **InvestigationQuery** \
 * **Parser** \
 * **Watchlist** \
 * **WatchlistTemplate** \
 * **Solution** \
 * **AzureFunction** \
 * **LogicAppsCustomConnector** \
 * **AutomationRule**
 */
export type Kind = string;

/** Known values of {@link Operator} that the service accepts. */
export enum KnownOperator {
  /** AND */
  AND = "AND",
  /** OR */
  OR = "OR"
}

/**
 * Defines values for Operator. \
 * {@link KnownOperator} can be used interchangeably with Operator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AND** \
 * **OR**
 */
export type Operator = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Optional parameters. */
export interface PackagesListOptionalParams
  extends coreClient.OperationOptions {
  /** Filters the results, based on a Boolean condition. Optional. */
  filter?: string;
  /** Sorts the results. Optional. */
  orderby?: string;
  /** Returns only the first n results. Optional. */
  top?: number;
  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type PackagesListResponse = PackageList;

/** Optional parameters. */
export interface PackagesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PackagesGetResponse = PackageModel;

/** Optional parameters. */
export interface PackagesListNextOptionalParams
  extends coreClient.OperationOptions {
  /** Filters the results, based on a Boolean condition. Optional. */
  filter?: string;
  /** Sorts the results. Optional. */
  orderby?: string;
  /** Returns only the first n results. Optional. */
  top?: number;
  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional. */
  skipToken?: string;
}

/** Contains response data for the listNext operation. */
export type PackagesListNextResponse = PackageList;

/** Optional parameters. */
export interface PackageInstallOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the install operation. */
export type PackageInstallResponse = PackageModel;

/** Optional parameters. */
export interface PackageUninstallOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TemplatesListOptionalParams
  extends coreClient.OperationOptions {
  /** Filters the results, based on a Boolean condition. Optional. */
  filter?: string;
  /** Sorts the results. Optional. */
  orderby?: string;
  /** Returns only the first n results. Optional. */
  top?: number;
  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type TemplatesListResponse = TemplateList;

/** Optional parameters. */
export interface TemplatesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TemplatesGetResponse = TemplateModel;

/** Optional parameters. */
export interface TemplatesListNextOptionalParams
  extends coreClient.OperationOptions {
  /** Filters the results, based on a Boolean condition. Optional. */
  filter?: string;
  /** Sorts the results. Optional. */
  orderby?: string;
  /** Returns only the first n results. Optional. */
  top?: number;
  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional. */
  skipToken?: string;
}

/** Contains response data for the listNext operation. */
export type TemplatesListNextResponse = TemplateList;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationsList;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationsList;

/** Optional parameters. */
export interface SecurityInsightsOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
