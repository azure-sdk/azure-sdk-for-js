/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const PackageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageModel"
            }
          }
        }
      }
    }
  }
};

export const MetadataSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataSource",
    modelProperties: {
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      sourceId: {
        serializedName: "sourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetadataAuthor: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataAuthor",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      link: {
        serializedName: "link",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetadataSupport: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataSupport",
    modelProperties: {
      tier: {
        serializedName: "tier",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      link: {
        serializedName: "link",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetadataDependencies: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataDependencies",
    modelProperties: {
      contentId: {
        serializedName: "contentId",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      operator: {
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      criteria: {
        serializedName: "criteria",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetadataDependencies"
            }
          }
        }
      }
    }
  }
};

export const MetadataCategories: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataCategories",
    modelProperties: {
      domains: {
        serializedName: "domains",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      verticals: {
        serializedName: "verticals",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody"
        }
      }
    }
  }
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageInstallationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageInstallationProperties",
    modelProperties: {
      packageKind: {
        serializedName: "packageKind",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TemplateList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TemplateList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TemplateModel"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationsList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceWithEtag: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceWithEtag",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageModel",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      packageId: {
        serializedName: "properties.packageId",
        type: {
          name: "String"
        }
      },
      packageKind: {
        serializedName: "properties.packageKind",
        type: {
          name: "String"
        }
      },
      installedVersion: {
        serializedName: "properties.installedVersion",
        type: {
          name: "String"
        }
      },
      contentSchemaVersion: {
        serializedName: "properties.contentSchemaVersion",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "properties.resourceId",
        type: {
          name: "String"
        }
      },
      isNew: {
        serializedName: "properties.isNew",
        type: {
          name: "String"
        }
      },
      isPreview: {
        serializedName: "properties.isPreview",
        type: {
          name: "String"
        }
      },
      isFeatured: {
        serializedName: "properties.isFeatured",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      publisherDisplayName: {
        serializedName: "properties.publisherDisplayName",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "MetadataSource"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "Composite",
          className: "MetadataAuthor"
        }
      },
      support: {
        serializedName: "properties.support",
        type: {
          name: "Composite",
          className: "MetadataSupport"
        }
      },
      dependencies: {
        serializedName: "properties.dependencies",
        type: {
          name: "Composite",
          className: "MetadataDependencies"
        }
      },
      providers: {
        serializedName: "properties.providers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      firstPublishDate: {
        serializedName: "properties.firstPublishDate",
        type: {
          name: "Date"
        }
      },
      lastPublishDate: {
        serializedName: "properties.lastPublishDate",
        type: {
          name: "Date"
        }
      },
      categories: {
        serializedName: "properties.categories",
        type: {
          name: "Composite",
          className: "MetadataCategories"
        }
      },
      threatAnalysisTactics: {
        serializedName: "properties.threatAnalysisTactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      threatAnalyticsTechniques: {
        serializedName: "properties.threatAnalyticsTechniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      icon: {
        serializedName: "properties.icon",
        type: {
          name: "String"
        }
      },
      packageItems: {
        serializedName: "properties.packageItems",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TemplateModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TemplateModel",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      contentId: {
        serializedName: "properties.contentId",
        type: {
          name: "String"
        }
      },
      parentId: {
        serializedName: "properties.parentId",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      contentKind: {
        serializedName: "properties.contentKind",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "MetadataSource"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "Composite",
          className: "MetadataAuthor"
        }
      },
      support: {
        serializedName: "properties.support",
        type: {
          name: "Composite",
          className: "MetadataSupport"
        }
      },
      dependencies: {
        serializedName: "properties.dependencies",
        type: {
          name: "Composite",
          className: "MetadataDependencies"
        }
      },
      categories: {
        serializedName: "properties.categories",
        type: {
          name: "Composite",
          className: "MetadataCategories"
        }
      },
      providers: {
        serializedName: "properties.providers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      firstPublishDate: {
        serializedName: "properties.firstPublishDate",
        type: {
          name: "Date"
        }
      },
      lastPublishDate: {
        serializedName: "properties.lastPublishDate",
        type: {
          name: "Date"
        }
      },
      customVersion: {
        serializedName: "properties.customVersion",
        type: {
          name: "String"
        }
      },
      contentSchemaVersion: {
        serializedName: "properties.contentSchemaVersion",
        type: {
          name: "String"
        }
      },
      icon: {
        serializedName: "properties.icon",
        type: {
          name: "String"
        }
      },
      threatAnalysisTactics: {
        serializedName: "properties.threatAnalysisTactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      threatAnalysisTechniques: {
        serializedName: "properties.threatAnalysisTechniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      previewImages: {
        serializedName: "properties.previewImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      previewImagesDark: {
        serializedName: "properties.previewImagesDark",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      mainTemplate: {
        serializedName: "properties.mainTemplate",
        type: {
          name: "String"
        }
      }
    }
  }
};
