/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const AlertRulesList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertRulesList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertRule"
            }
          }
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody"
        }
      }
    }
  }
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionsList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActionResponse"
            }
          }
        }
      }
    }
  }
};

export const ActionPropertiesBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionPropertiesBase",
    modelProperties: {
      logicAppResourceId: {
        serializedName: "logicAppResourceId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertRuleTemplatesList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertRuleTemplatesList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertRuleTemplate"
            }
          }
        }
      }
    }
  }
};

export const AutomationRuleTriggeringLogic: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AutomationRuleTriggeringLogic",
    modelProperties: {
      isEnabled: {
        serializedName: "isEnabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      expirationTimeUtc: {
        serializedName: "expirationTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      triggersOn: {
        serializedName: "triggersOn",
        required: true,
        type: {
          name: "String"
        }
      },
      triggersWhen: {
        serializedName: "triggersWhen",
        required: true,
        type: {
          name: "String"
        }
      },
      conditions: {
        constraints: {
          MaxItems: 50
        },
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AutomationRuleCondition"
            }
          }
        }
      }
    }
  }
};

export const AutomationRuleCondition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AutomationRuleCondition",
    uberParent: "AutomationRuleCondition",
    polymorphicDiscriminator: {
      serializedName: "conditionType",
      clientName: "conditionType"
    },
    modelProperties: {
      conditionType: {
        serializedName: "conditionType",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutomationRuleAction: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AutomationRuleAction",
    uberParent: "AutomationRuleAction",
    polymorphicDiscriminator: {
      serializedName: "actionType",
      clientName: "actionType"
    },
    modelProperties: {
      order: {
        serializedName: "order",
        required: true,
        type: {
          name: "Number"
        }
      },
      actionType: {
        serializedName: "actionType",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClientInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClientInfo",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "Uuid"
        }
      },
      userPrincipalName: {
        serializedName: "userPrincipalName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutomationRulesList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AutomationRulesList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AutomationRule"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BookmarkList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BookmarkList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Bookmark"
            }
          }
        }
      }
    }
  }
};

export const UserInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserInfo",
    modelProperties: {
      email: {
        serializedName: "email",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "objectId",
        nullable: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const IncidentInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentInfo",
    modelProperties: {
      incidentId: {
        serializedName: "incidentId",
        type: {
          name: "String"
        }
      },
      severity: {
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      relationName: {
        serializedName: "relationName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageModel"
            }
          }
        }
      }
    }
  }
};

export const PackageBaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageBaseProperties",
    modelProperties: {
      contentId: {
        serializedName: "contentId",
        type: {
          name: "String"
        }
      },
      contentProductId: {
        serializedName: "contentProductId",
        type: {
          name: "String"
        }
      },
      contentKind: {
        serializedName: "contentKind",
        type: {
          name: "String"
        }
      },
      contentSchemaVersion: {
        serializedName: "contentSchemaVersion",
        type: {
          name: "String"
        }
      },
      isNew: {
        serializedName: "isNew",
        type: {
          name: "String"
        }
      },
      isPreview: {
        serializedName: "isPreview",
        type: {
          name: "String"
        }
      },
      isFeatured: {
        serializedName: "isFeatured",
        type: {
          name: "String"
        }
      },
      isDeprecated: {
        serializedName: "isDeprecated",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      publisherDisplayName: {
        serializedName: "publisherDisplayName",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "MetadataSource"
        }
      },
      author: {
        serializedName: "author",
        type: {
          name: "Composite",
          className: "MetadataAuthor"
        }
      },
      support: {
        serializedName: "support",
        type: {
          name: "Composite",
          className: "MetadataSupport"
        }
      },
      dependencies: {
        serializedName: "dependencies",
        type: {
          name: "Composite",
          className: "MetadataDependencies"
        }
      },
      providers: {
        serializedName: "providers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      firstPublishDate: {
        serializedName: "firstPublishDate",
        type: {
          name: "Date"
        }
      },
      lastPublishDate: {
        serializedName: "lastPublishDate",
        type: {
          name: "Date"
        }
      },
      categories: {
        serializedName: "categories",
        type: {
          name: "Composite",
          className: "MetadataCategories"
        }
      },
      threatAnalysisTactics: {
        serializedName: "threatAnalysisTactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      threatAnalysisTechniques: {
        serializedName: "threatAnalysisTechniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      icon: {
        serializedName: "icon",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetadataSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataSource",
    modelProperties: {
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      sourceId: {
        serializedName: "sourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetadataAuthor: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataAuthor",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      link: {
        serializedName: "link",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetadataSupport: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataSupport",
    modelProperties: {
      tier: {
        serializedName: "tier",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      link: {
        serializedName: "link",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetadataDependencies: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataDependencies",
    modelProperties: {
      contentId: {
        serializedName: "contentId",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      operator: {
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      criteria: {
        serializedName: "criteria",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetadataDependencies"
            }
          }
        }
      }
    }
  }
};

export const MetadataCategories: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataCategories",
    modelProperties: {
      domains: {
        serializedName: "domains",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      verticals: {
        serializedName: "verticals",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ProductPackageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductPackageList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProductPackageModel"
            }
          }
        }
      }
    }
  }
};

export const ProductPackageAdditionalProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductPackageAdditionalProperties",
    modelProperties: {
      installedVersion: {
        serializedName: "installedVersion",
        type: {
          name: "String"
        }
      },
      metadataResourceId: {
        serializedName: "metadataResourceId",
        type: {
          name: "String"
        }
      },
      packagedContent: {
        serializedName: "packagedContent",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const ProductTemplateList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductTemplateList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProductTemplateModel"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TemplateBaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TemplateBaseProperties",
    modelProperties: {
      contentId: {
        serializedName: "contentId",
        type: {
          name: "String"
        }
      },
      contentProductId: {
        serializedName: "contentProductId",
        type: {
          name: "String"
        }
      },
      packageVersion: {
        serializedName: "packageVersion",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      contentKind: {
        serializedName: "contentKind",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "MetadataSource"
        }
      },
      author: {
        serializedName: "author",
        type: {
          name: "Composite",
          className: "MetadataAuthor"
        }
      },
      support: {
        serializedName: "support",
        type: {
          name: "Composite",
          className: "MetadataSupport"
        }
      },
      dependencies: {
        serializedName: "dependencies",
        type: {
          name: "Composite",
          className: "MetadataDependencies"
        }
      },
      categories: {
        serializedName: "categories",
        type: {
          name: "Composite",
          className: "MetadataCategories"
        }
      },
      providers: {
        serializedName: "providers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      firstPublishDate: {
        serializedName: "firstPublishDate",
        type: {
          name: "Date"
        }
      },
      lastPublishDate: {
        serializedName: "lastPublishDate",
        type: {
          name: "Date"
        }
      },
      customVersion: {
        serializedName: "customVersion",
        type: {
          name: "String"
        }
      },
      contentSchemaVersion: {
        serializedName: "contentSchemaVersion",
        type: {
          name: "String"
        }
      },
      icon: {
        serializedName: "icon",
        type: {
          name: "String"
        }
      },
      threatAnalysisTactics: {
        serializedName: "threatAnalysisTactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      threatAnalysisTechniques: {
        serializedName: "threatAnalysisTechniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      previewImages: {
        serializedName: "previewImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      previewImagesDark: {
        serializedName: "previewImagesDark",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      packageId: {
        serializedName: "packageId",
        type: {
          name: "String"
        }
      },
      packageKind: {
        serializedName: "packageKind",
        type: {
          name: "String"
        }
      },
      packageName: {
        serializedName: "packageName",
        type: {
          name: "String"
        }
      },
      isDeprecated: {
        serializedName: "isDeprecated",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductTemplateAdditionalProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductTemplateAdditionalProperties",
    modelProperties: {
      packagedContent: {
        serializedName: "packagedContent",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const TemplateList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TemplateList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TemplateModel"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TemplateAdditionalProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TemplateAdditionalProperties",
    modelProperties: {
      mainTemplate: {
        serializedName: "mainTemplate",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      dependantTemplates: {
        serializedName: "dependantTemplates",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TemplateProperties"
            }
          }
        }
      }
    }
  }
};

export const DataConnectorList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataConnectorList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataConnector"
            }
          }
        }
      }
    }
  }
};

export const IncidentList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Incident"
            }
          }
        }
      }
    }
  }
};

export const IncidentAdditionalData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentAdditionalData",
    modelProperties: {
      alertsCount: {
        serializedName: "alertsCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      bookmarksCount: {
        serializedName: "bookmarksCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      commentsCount: {
        serializedName: "commentsCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      alertProductNames: {
        serializedName: "alertProductNames",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      tactics: {
        serializedName: "tactics",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      providerIncidentUrl: {
        serializedName: "providerIncidentUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IncidentLabel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentLabel",
    modelProperties: {
      labelName: {
        serializedName: "labelName",
        required: true,
        type: {
          name: "String"
        }
      },
      labelType: {
        serializedName: "labelType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IncidentOwnerInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentOwnerInfo",
    modelProperties: {
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      assignedTo: {
        serializedName: "assignedTo",
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "Uuid"
        }
      },
      userPrincipalName: {
        serializedName: "userPrincipalName",
        type: {
          name: "String"
        }
      },
      ownerType: {
        serializedName: "ownerType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IncidentAlertList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentAlertList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityAlert"
            }
          }
        }
      }
    }
  }
};

export const SecurityAlertPropertiesConfidenceReasonsItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityAlertPropertiesConfidenceReasonsItem",
    modelProperties: {
      reason: {
        serializedName: "reason",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      reasonType: {
        serializedName: "reasonType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EntityCommonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EntityCommonProperties",
    modelProperties: {
      additionalData: {
        serializedName: "additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IncidentBookmarkList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentBookmarkList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HuntingBookmark"
            }
          }
        }
      }
    }
  }
};

export const IncidentCommentList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentCommentList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IncidentComment"
            }
          }
        }
      }
    }
  }
};

export const IncidentEntitiesResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentEntitiesResponse",
    modelProperties: {
      entities: {
        serializedName: "entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Entity"
            }
          }
        }
      },
      metaData: {
        serializedName: "metaData",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IncidentEntitiesResultsMetadata"
            }
          }
        }
      }
    }
  }
};

export const IncidentEntitiesResultsMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentEntitiesResultsMetadata",
    modelProperties: {
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      entityKind: {
        serializedName: "entityKind",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RelationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RelationList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Relation"
            }
          }
        }
      }
    }
  }
};

export const MetadataList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetadataModel"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetadataDependenciesAutoGenerated: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataDependenciesAutoGenerated",
    modelProperties: {
      contentId: {
        serializedName: "contentId",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      operator: {
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      criteria: {
        serializedName: "criteria",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetadataDependenciesAutoGenerated"
            }
          }
        }
      }
    }
  }
};

export const MetadataPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataPatch",
    modelProperties: {
      contentId: {
        serializedName: "properties.contentId",
        type: {
          name: "String"
        }
      },
      parentId: {
        serializedName: "properties.parentId",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "properties.kind",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "MetadataSource"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "Composite",
          className: "MetadataAuthor"
        }
      },
      support: {
        serializedName: "properties.support",
        type: {
          name: "Composite",
          className: "MetadataSupport"
        }
      },
      dependencies: {
        serializedName: "properties.dependencies",
        type: {
          name: "Composite",
          className: "MetadataDependenciesAutoGenerated"
        }
      },
      categories: {
        serializedName: "properties.categories",
        type: {
          name: "Composite",
          className: "MetadataCategories"
        }
      },
      providers: {
        serializedName: "properties.providers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      firstPublishDate: {
        serializedName: "properties.firstPublishDate",
        type: {
          name: "Date"
        }
      },
      lastPublishDate: {
        serializedName: "properties.lastPublishDate",
        type: {
          name: "Date"
        }
      },
      customVersion: {
        serializedName: "properties.customVersion",
        type: {
          name: "String"
        }
      },
      contentSchemaVersion: {
        serializedName: "properties.contentSchemaVersion",
        type: {
          name: "String"
        }
      },
      icon: {
        serializedName: "properties.icon",
        type: {
          name: "String"
        }
      },
      threatAnalysisTactics: {
        serializedName: "properties.threatAnalysisTactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      threatAnalysisTechniques: {
        serializedName: "properties.threatAnalysisTechniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      previewImages: {
        serializedName: "properties.previewImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      previewImagesDark: {
        serializedName: "properties.previewImagesDark",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SentinelOnboardingStatesList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SentinelOnboardingStatesList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SentinelOnboardingState"
            }
          }
        }
      }
    }
  }
};

export const SecurityMLAnalyticsSettingsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityMLAnalyticsSettingsList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityMLAnalyticsSetting"
            }
          }
        }
      }
    }
  }
};

export const RepositoryAccessProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RepositoryAccessProperties",
    modelProperties: {
      kind: {
        serializedName: "properties.repositoryAccess.kind",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "properties.repositoryAccess.code",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "properties.repositoryAccess.state",
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "properties.repositoryAccess.clientId",
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "properties.repositoryAccess.token",
        type: {
          name: "String"
        }
      },
      installationId: {
        serializedName: "properties.repositoryAccess.installationId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RepositoryAccess: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RepositoryAccess",
    modelProperties: {
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        type: {
          name: "String"
        }
      },
      installationId: {
        serializedName: "installationId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RepoList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RepoList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Repo"
            }
          }
        }
      }
    }
  }
};

export const Repo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Repo",
    modelProperties: {
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      fullName: {
        serializedName: "fullName",
        type: {
          name: "String"
        }
      },
      installationId: {
        serializedName: "installationId",
        type: {
          name: "Number"
        }
      },
      branches: {
        serializedName: "branches",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SourceControlList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SourceControlList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SourceControl"
            }
          }
        }
      }
    }
  }
};

export const Repository: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Repository",
    modelProperties: {
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      branch: {
        serializedName: "branch",
        required: true,
        type: {
          name: "String"
        }
      },
      displayUrl: {
        serializedName: "displayUrl",
        type: {
          name: "String"
        }
      },
      deploymentLogsUrl: {
        serializedName: "deploymentLogsUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicePrincipal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServicePrincipal",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "appId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      credentialsExpireOn: {
        serializedName: "credentialsExpireOn",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const RepositoryResourceInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RepositoryResourceInfo",
    modelProperties: {
      webhook: {
        serializedName: "webhook",
        type: {
          name: "Composite",
          className: "Webhook"
        }
      },
      gitHubResourceInfo: {
        serializedName: "gitHubResourceInfo",
        type: {
          name: "Composite",
          className: "GitHubResourceInfo"
        }
      },
      azureDevOpsResourceInfo: {
        serializedName: "azureDevOpsResourceInfo",
        type: {
          name: "Composite",
          className: "AzureDevOpsResourceInfo"
        }
      }
    }
  }
};

export const Webhook: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Webhook",
    modelProperties: {
      webhookId: {
        serializedName: "webhookId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      webhookUrl: {
        serializedName: "webhookUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      webhookSecretUpdateTime: {
        serializedName: "webhookSecretUpdateTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      rotateWebhookSecret: {
        serializedName: "rotateWebhookSecret",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GitHubResourceInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GitHubResourceInfo",
    modelProperties: {
      appInstallationId: {
        serializedName: "appInstallationId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureDevOpsResourceInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureDevOpsResourceInfo",
    modelProperties: {
      pipelineId: {
        serializedName: "pipelineId",
        type: {
          name: "String"
        }
      },
      serviceConnectionId: {
        serializedName: "serviceConnectionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeploymentInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentInfo",
    modelProperties: {
      deploymentFetchStatus: {
        serializedName: "deploymentFetchStatus",
        type: {
          name: "String"
        }
      },
      deployment: {
        serializedName: "deployment",
        type: {
          name: "Composite",
          className: "Deployment"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Deployment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Deployment",
    modelProperties: {
      deploymentId: {
        serializedName: "deploymentId",
        type: {
          name: "String"
        }
      },
      deploymentState: {
        serializedName: "deploymentState",
        type: {
          name: "String"
        }
      },
      deploymentResult: {
        serializedName: "deploymentResult",
        type: {
          name: "String"
        }
      },
      deploymentTime: {
        serializedName: "deploymentTime",
        type: {
          name: "DateTime"
        }
      },
      deploymentLogsUrl: {
        serializedName: "deploymentLogsUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PullRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PullRequest",
    modelProperties: {
      url: {
        serializedName: "url",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Warning: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Warning",
    modelProperties: {
      warning: {
        serializedName: "warning",
        type: {
          name: "Composite",
          className: "WarningBody"
        }
      }
    }
  }
};

export const WarningBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WarningBody",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WarningBody"
            }
          }
        }
      }
    }
  }
};

export const ThreatIntelligenceKillChainPhase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceKillChainPhase",
    modelProperties: {
      killChainName: {
        serializedName: "killChainName",
        type: {
          name: "String"
        }
      },
      phaseName: {
        serializedName: "phaseName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ThreatIntelligenceParsedPattern: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceParsedPattern",
    modelProperties: {
      patternTypeKey: {
        serializedName: "patternTypeKey",
        type: {
          name: "String"
        }
      },
      patternTypeValues: {
        serializedName: "patternTypeValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceParsedPatternTypeValue"
            }
          }
        }
      }
    }
  }
};

export const ThreatIntelligenceParsedPatternTypeValue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceParsedPatternTypeValue",
    modelProperties: {
      valueType: {
        serializedName: "valueType",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ThreatIntelligenceExternalReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceExternalReference",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      externalId: {
        serializedName: "externalId",
        type: {
          name: "String"
        }
      },
      sourceName: {
        serializedName: "sourceName",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      hashes: {
        serializedName: "hashes",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ThreatIntelligenceGranularMarkingModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceGranularMarkingModel",
    modelProperties: {
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      markingRef: {
        serializedName: "markingRef",
        type: {
          name: "Number"
        }
      },
      selectors: {
        serializedName: "selectors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ThreatIntelligenceInformationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceInformationList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceInformation"
            }
          }
        }
      }
    }
  }
};

export const ThreatIntelligenceFilteringCriteria: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceFilteringCriteria",
    modelProperties: {
      pageSize: {
        serializedName: "pageSize",
        type: {
          name: "Number"
        }
      },
      minConfidence: {
        serializedName: "minConfidence",
        type: {
          name: "Number"
        }
      },
      maxConfidence: {
        serializedName: "maxConfidence",
        type: {
          name: "Number"
        }
      },
      minValidUntil: {
        serializedName: "minValidUntil",
        type: {
          name: "String"
        }
      },
      maxValidUntil: {
        serializedName: "maxValidUntil",
        type: {
          name: "String"
        }
      },
      includeDisabled: {
        serializedName: "includeDisabled",
        type: {
          name: "Boolean"
        }
      },
      sortBy: {
        serializedName: "sortBy",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceSortingCriteria"
            }
          }
        }
      },
      sources: {
        serializedName: "sources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      patternTypes: {
        serializedName: "patternTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      threatTypes: {
        serializedName: "threatTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      ids: {
        serializedName: "ids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      keywords: {
        serializedName: "keywords",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      skipToken: {
        serializedName: "skipToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ThreatIntelligenceSortingCriteria: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceSortingCriteria",
    modelProperties: {
      itemKey: {
        serializedName: "itemKey",
        type: {
          name: "String"
        }
      },
      sortOrder: {
        serializedName: "sortOrder",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ThreatIntelligenceMetricsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceMetricsList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceMetrics"
            }
          }
        }
      }
    }
  }
};

export const ThreatIntelligenceMetrics: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceMetrics",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ThreatIntelligenceMetric"
        }
      }
    }
  }
};

export const ThreatIntelligenceMetric: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceMetric",
    modelProperties: {
      lastUpdatedTimeUtc: {
        serializedName: "lastUpdatedTimeUtc",
        type: {
          name: "String"
        }
      },
      threatTypeMetrics: {
        serializedName: "threatTypeMetrics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceMetricEntity"
            }
          }
        }
      },
      patternTypeMetrics: {
        serializedName: "patternTypeMetrics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceMetricEntity"
            }
          }
        }
      },
      sourceMetrics: {
        serializedName: "sourceMetrics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceMetricEntity"
            }
          }
        }
      }
    }
  }
};

export const ThreatIntelligenceMetricEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceMetricEntity",
    modelProperties: {
      metricName: {
        serializedName: "metricName",
        type: {
          name: "String"
        }
      },
      metricValue: {
        serializedName: "metricValue",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ThreatIntelligenceAppendTags: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceAppendTags",
    modelProperties: {
      threatIntelligenceTags: {
        serializedName: "threatIntelligenceTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const WatchlistList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WatchlistList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Watchlist"
            }
          }
        }
      }
    }
  }
};

export const WatchlistItemList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WatchlistItemList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WatchlistItem"
            }
          }
        }
      }
    }
  }
};

export const OperationsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationsList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertRuleTemplateDataSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertRuleTemplateDataSource",
    modelProperties: {
      connectorId: {
        serializedName: "connectorId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "dataTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MicrosoftSecurityIncidentCreationAlertRuleCommonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MicrosoftSecurityIncidentCreationAlertRuleCommonProperties",
    modelProperties: {
      displayNamesFilter: {
        serializedName: "displayNamesFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayNamesExcludeFilter: {
        serializedName: "displayNamesExcludeFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      productFilter: {
        serializedName: "productFilter",
        required: true,
        type: {
          name: "String"
        }
      },
      severitiesFilter: {
        serializedName: "severitiesFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const IncidentConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentConfiguration",
    modelProperties: {
      createIncident: {
        serializedName: "createIncident",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      groupingConfiguration: {
        serializedName: "groupingConfiguration",
        type: {
          name: "Composite",
          className: "GroupingConfiguration"
        }
      }
    }
  }
};

export const GroupingConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupingConfiguration",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      reopenClosedIncident: {
        serializedName: "reopenClosedIncident",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      lookbackDuration: {
        serializedName: "lookbackDuration",
        required: true,
        type: {
          name: "TimeSpan"
        }
      },
      matchingMethod: {
        serializedName: "matchingMethod",
        required: true,
        type: {
          name: "String"
        }
      },
      groupByEntities: {
        serializedName: "groupByEntities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      groupByAlertDetails: {
        serializedName: "groupByAlertDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      groupByCustomDetails: {
        serializedName: "groupByCustomDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ScheduledAlertRuleCommonProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScheduledAlertRuleCommonProperties",
    modelProperties: {
      query: {
        serializedName: "query",
        type: {
          name: "String"
        }
      },
      queryFrequency: {
        serializedName: "queryFrequency",
        type: {
          name: "TimeSpan"
        }
      },
      queryPeriod: {
        serializedName: "queryPeriod",
        type: {
          name: "TimeSpan"
        }
      },
      severity: {
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      triggerOperator: {
        serializedName: "triggerOperator",
        type: {
          name: "Enum",
          allowedValues: ["GreaterThan", "LessThan", "Equal", "NotEqual"]
        }
      },
      triggerThreshold: {
        serializedName: "triggerThreshold",
        type: {
          name: "Number"
        }
      },
      eventGroupingSettings: {
        serializedName: "eventGroupingSettings",
        type: {
          name: "Composite",
          className: "EventGroupingSettings"
        }
      },
      customDetails: {
        serializedName: "customDetails",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      entityMappings: {
        serializedName: "entityMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EntityMapping"
            }
          }
        }
      },
      alertDetailsOverride: {
        serializedName: "alertDetailsOverride",
        type: {
          name: "Composite",
          className: "AlertDetailsOverride"
        }
      }
    }
  }
};

export const EventGroupingSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventGroupingSettings",
    modelProperties: {
      aggregationKind: {
        serializedName: "aggregationKind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EntityMapping: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EntityMapping",
    modelProperties: {
      entityType: {
        serializedName: "entityType",
        type: {
          name: "String"
        }
      },
      fieldMappings: {
        serializedName: "fieldMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FieldMapping"
            }
          }
        }
      }
    }
  }
};

export const FieldMapping: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FieldMapping",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "String"
        }
      },
      columnName: {
        serializedName: "columnName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertDetailsOverride: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertDetailsOverride",
    modelProperties: {
      alertDisplayNameFormat: {
        serializedName: "alertDisplayNameFormat",
        type: {
          name: "String"
        }
      },
      alertDescriptionFormat: {
        serializedName: "alertDescriptionFormat",
        type: {
          name: "String"
        }
      },
      alertTacticsColumnName: {
        serializedName: "alertTacticsColumnName",
        type: {
          name: "String"
        }
      },
      alertSeverityColumnName: {
        serializedName: "alertSeverityColumnName",
        type: {
          name: "String"
        }
      },
      alertDynamicProperties: {
        serializedName: "alertDynamicProperties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertPropertyMapping"
            }
          }
        }
      }
    }
  }
};

export const AlertPropertyMapping: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertPropertyMapping",
    modelProperties: {
      alertProperty: {
        serializedName: "alertProperty",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IncidentPropertiesAction: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentPropertiesAction",
    modelProperties: {
      severity: {
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      classification: {
        serializedName: "classification",
        type: {
          name: "String"
        }
      },
      classificationReason: {
        serializedName: "classificationReason",
        type: {
          name: "String"
        }
      },
      classificationComment: {
        serializedName: "classificationComment",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "Composite",
          className: "IncidentOwnerInfo"
        }
      },
      labels: {
        serializedName: "labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IncidentLabel"
            }
          }
        }
      }
    }
  }
};

export const AutomationRulePropertyArrayChangedValuesCondition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AutomationRulePropertyArrayChangedValuesCondition",
    modelProperties: {
      arrayType: {
        serializedName: "arrayType",
        type: {
          name: "String"
        }
      },
      changeType: {
        serializedName: "changeType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutomationRulePropertyValuesChangedCondition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AutomationRulePropertyValuesChangedCondition",
    modelProperties: {
      propertyName: {
        serializedName: "propertyName",
        type: {
          name: "String"
        }
      },
      changeType: {
        serializedName: "changeType",
        type: {
          name: "String"
        }
      },
      operator: {
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      propertyValues: {
        serializedName: "propertyValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AutomationRulePropertyValuesCondition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AutomationRulePropertyValuesCondition",
    modelProperties: {
      propertyName: {
        serializedName: "propertyName",
        type: {
          name: "String"
        }
      },
      operator: {
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      propertyValues: {
        serializedName: "propertyValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PlaybookActionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlaybookActionProperties",
    modelProperties: {
      logicAppResourceId: {
        serializedName: "logicAppResourceId",
        required: true,
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const AlertsDataTypeOfDataConnector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertsDataTypeOfDataConnector",
    modelProperties: {
      alerts: {
        serializedName: "alerts",
        type: {
          name: "Composite",
          className: "DataConnectorDataTypeCommon"
        }
      }
    }
  }
};

export const DataConnectorDataTypeCommon: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataConnectorDataTypeCommon",
    modelProperties: {
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataConnectorWithAlertsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataConnectorWithAlertsProperties",
    modelProperties: {
      dataTypes: {
        serializedName: "dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      }
    }
  }
};

export const AwsCloudTrailDataConnectorDataTypes: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AwsCloudTrailDataConnectorDataTypes",
    modelProperties: {
      logs: {
        serializedName: "logs",
        type: {
          name: "Composite",
          className: "AwsCloudTrailDataConnectorDataTypesLogs"
        }
      }
    }
  }
};

export const DataConnectorTenantId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataConnectorTenantId",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TIDataConnectorDataTypes: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TIDataConnectorDataTypes",
    modelProperties: {
      indicators: {
        serializedName: "indicators",
        type: {
          name: "Composite",
          className: "TIDataConnectorDataTypesIndicators"
        }
      }
    }
  }
};

export const OfficeDataConnectorDataTypes: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OfficeDataConnectorDataTypes",
    modelProperties: {
      exchange: {
        serializedName: "exchange",
        type: {
          name: "Composite",
          className: "OfficeDataConnectorDataTypesExchange"
        }
      },
      sharePoint: {
        serializedName: "sharePoint",
        type: {
          name: "Composite",
          className: "OfficeDataConnectorDataTypesSharePoint"
        }
      },
      teams: {
        serializedName: "teams",
        type: {
          name: "Composite",
          className: "OfficeDataConnectorDataTypesTeams"
        }
      }
    }
  }
};

export const SecurityMLAnalyticsSettingsDataSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityMLAnalyticsSettingsDataSource",
    modelProperties: {
      connectorId: {
        serializedName: "connectorId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "dataTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const GeoLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GeoLocation",
    modelProperties: {
      asn: {
        serializedName: "asn",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      city: {
        serializedName: "city",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      countryCode: {
        serializedName: "countryCode",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      countryName: {
        serializedName: "countryName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      latitude: {
        serializedName: "latitude",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      longitude: {
        serializedName: "longitude",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ThreatIntelligence: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligence",
    modelProperties: {
      confidence: {
        serializedName: "confidence",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      providerName: {
        serializedName: "providerName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      reportLink: {
        serializedName: "reportLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      threatDescription: {
        serializedName: "threatDescription",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      threatName: {
        serializedName: "threatName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      threatType: {
        serializedName: "threatType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceWithEtag: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceWithEtag",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionResponse",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      logicAppResourceId: {
        serializedName: "properties.logicAppResourceId",
        type: {
          name: "String"
        }
      },
      workflowId: {
        serializedName: "properties.workflowId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertRuleTemplate: coreClient.CompositeMapper = {
  serializedName: "AlertRuleTemplate",
  type: {
    name: "Composite",
    className: "AlertRuleTemplate",
    uberParent: "Resource",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    modelProperties: {
      ...Resource.type.modelProperties,
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Entity: coreClient.CompositeMapper = {
  serializedName: "Entity",
  type: {
    name: "Composite",
    className: "Entity",
    uberParent: "Resource",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    modelProperties: {
      ...Resource.type.modelProperties,
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionResponseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionResponseProperties",
    modelProperties: {
      ...ActionPropertiesBase.type.modelProperties,
      workflowId: {
        serializedName: "workflowId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionRequestProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionRequestProperties",
    modelProperties: {
      ...ActionPropertiesBase.type.modelProperties,
      triggerUri: {
        serializedName: "triggerUri",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PropertyArrayChangedConditionProperties: coreClient.CompositeMapper = {
  serializedName: "PropertyArrayChanged",
  type: {
    name: "Composite",
    className: "PropertyArrayChangedConditionProperties",
    uberParent: "AutomationRuleCondition",
    polymorphicDiscriminator:
      AutomationRuleCondition.type.polymorphicDiscriminator,
    modelProperties: {
      ...AutomationRuleCondition.type.modelProperties,
      conditionProperties: {
        serializedName: "conditionProperties",
        type: {
          name: "Composite",
          className: "AutomationRulePropertyArrayChangedValuesCondition"
        }
      }
    }
  }
};

export const PropertyChangedConditionProperties: coreClient.CompositeMapper = {
  serializedName: "PropertyChanged",
  type: {
    name: "Composite",
    className: "PropertyChangedConditionProperties",
    uberParent: "AutomationRuleCondition",
    polymorphicDiscriminator:
      AutomationRuleCondition.type.polymorphicDiscriminator,
    modelProperties: {
      ...AutomationRuleCondition.type.modelProperties,
      conditionProperties: {
        serializedName: "conditionProperties",
        type: {
          name: "Composite",
          className: "AutomationRulePropertyValuesChangedCondition"
        }
      }
    }
  }
};

export const PropertyConditionProperties: coreClient.CompositeMapper = {
  serializedName: "Property",
  type: {
    name: "Composite",
    className: "PropertyConditionProperties",
    uberParent: "AutomationRuleCondition",
    polymorphicDiscriminator:
      AutomationRuleCondition.type.polymorphicDiscriminator,
    modelProperties: {
      ...AutomationRuleCondition.type.modelProperties,
      conditionProperties: {
        serializedName: "conditionProperties",
        type: {
          name: "Composite",
          className: "AutomationRulePropertyValuesCondition"
        }
      }
    }
  }
};

export const AutomationRuleModifyPropertiesAction: coreClient.CompositeMapper = {
  serializedName: "ModifyProperties",
  type: {
    name: "Composite",
    className: "AutomationRuleModifyPropertiesAction",
    uberParent: "AutomationRuleAction",
    polymorphicDiscriminator:
      AutomationRuleAction.type.polymorphicDiscriminator,
    modelProperties: {
      ...AutomationRuleAction.type.modelProperties,
      actionConfiguration: {
        serializedName: "actionConfiguration",
        type: {
          name: "Composite",
          className: "IncidentPropertiesAction"
        }
      }
    }
  }
};

export const AutomationRuleRunPlaybookAction: coreClient.CompositeMapper = {
  serializedName: "RunPlaybook",
  type: {
    name: "Composite",
    className: "AutomationRuleRunPlaybookAction",
    uberParent: "AutomationRuleAction",
    polymorphicDiscriminator:
      AutomationRuleAction.type.polymorphicDiscriminator,
    modelProperties: {
      ...AutomationRuleAction.type.modelProperties,
      actionConfiguration: {
        serializedName: "actionConfiguration",
        type: {
          name: "Composite",
          className: "PlaybookActionProperties"
        }
      }
    }
  }
};

export const PackageProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageProperties",
    modelProperties: {
      ...PackageBaseProperties.type.modelProperties
    }
  }
};

export const ProductPackageProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductPackageProperties",
    modelProperties: {
      ...PackageBaseProperties.type.modelProperties,
      ...ProductPackageAdditionalProperties.type.modelProperties
    }
  }
};

export const ProductTemplateProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductTemplateProperties",
    modelProperties: {
      ...TemplateBaseProperties.type.modelProperties,
      ...ProductTemplateAdditionalProperties.type.modelProperties
    }
  }
};

export const TemplateProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TemplateProperties",
    modelProperties: {
      ...TemplateBaseProperties.type.modelProperties,
      ...TemplateAdditionalProperties.type.modelProperties
    }
  }
};

export const SecurityAlertProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityAlertProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      alertDisplayName: {
        serializedName: "alertDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      alertType: {
        serializedName: "alertType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      compromisedEntity: {
        serializedName: "compromisedEntity",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      confidenceLevel: {
        serializedName: "confidenceLevel",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      confidenceReasons: {
        serializedName: "confidenceReasons",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityAlertPropertiesConfidenceReasonsItem"
            }
          }
        }
      },
      confidenceScore: {
        serializedName: "confidenceScore",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      confidenceScoreStatus: {
        serializedName: "confidenceScoreStatus",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      endTimeUtc: {
        serializedName: "endTimeUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      intent: {
        serializedName: "intent",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      providerAlertId: {
        serializedName: "providerAlertId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      processingEndTime: {
        serializedName: "processingEndTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      productComponentName: {
        serializedName: "productComponentName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      productName: {
        serializedName: "productName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      productVersion: {
        serializedName: "productVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      remediationSteps: {
        serializedName: "remediationSteps",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      severity: {
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      startTimeUtc: {
        serializedName: "startTimeUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemAlertId: {
        serializedName: "systemAlertId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tactics: {
        serializedName: "tactics",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timeGenerated: {
        serializedName: "timeGenerated",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      vendorName: {
        serializedName: "vendorName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      alertLink: {
        serializedName: "alertLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceIdentifiers: {
        serializedName: "resourceIdentifiers",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Dictionary",
              value: { type: { name: "any" } }
            }
          }
        }
      }
    }
  }
};

export const HuntingBookmarkProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HuntingBookmarkProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      created: {
        serializedName: "created",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      eventTime: {
        serializedName: "eventTime",
        type: {
          name: "DateTime"
        }
      },
      labels: {
        serializedName: "labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      notes: {
        serializedName: "notes",
        type: {
          name: "String"
        }
      },
      query: {
        serializedName: "query",
        required: true,
        type: {
          name: "String"
        }
      },
      queryResult: {
        serializedName: "queryResult",
        type: {
          name: "String"
        }
      },
      updated: {
        serializedName: "updated",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      incidentInfo: {
        serializedName: "incidentInfo",
        type: {
          name: "Composite",
          className: "IncidentInfo"
        }
      }
    }
  }
};

export const ThreatIntelligenceIndicatorProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThreatIntelligenceIndicatorProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      threatIntelligenceTags: {
        serializedName: "threatIntelligenceTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      lastUpdatedTimeUtc: {
        serializedName: "lastUpdatedTimeUtc",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      indicatorTypes: {
        serializedName: "indicatorTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      pattern: {
        serializedName: "pattern",
        type: {
          name: "String"
        }
      },
      patternType: {
        serializedName: "patternType",
        type: {
          name: "String"
        }
      },
      patternVersion: {
        serializedName: "patternVersion",
        type: {
          name: "String"
        }
      },
      killChainPhases: {
        serializedName: "killChainPhases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceKillChainPhase"
            }
          }
        }
      },
      parsedPattern: {
        serializedName: "parsedPattern",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceParsedPattern"
            }
          }
        }
      },
      externalId: {
        serializedName: "externalId",
        type: {
          name: "String"
        }
      },
      createdByRef: {
        serializedName: "createdByRef",
        type: {
          name: "String"
        }
      },
      defanged: {
        serializedName: "defanged",
        type: {
          name: "Boolean"
        }
      },
      externalLastUpdatedTimeUtc: {
        serializedName: "externalLastUpdatedTimeUtc",
        type: {
          name: "String"
        }
      },
      externalReferences: {
        serializedName: "externalReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceExternalReference"
            }
          }
        }
      },
      granularMarkings: {
        serializedName: "granularMarkings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceGranularMarkingModel"
            }
          }
        }
      },
      labels: {
        serializedName: "labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      revoked: {
        serializedName: "revoked",
        type: {
          name: "Boolean"
        }
      },
      confidence: {
        serializedName: "confidence",
        type: {
          name: "Number"
        }
      },
      objectMarkingRefs: {
        serializedName: "objectMarkingRefs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      threatTypes: {
        serializedName: "threatTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      validFrom: {
        serializedName: "validFrom",
        type: {
          name: "String"
        }
      },
      validUntil: {
        serializedName: "validUntil",
        type: {
          name: "String"
        }
      },
      created: {
        serializedName: "created",
        type: {
          name: "String"
        }
      },
      modified: {
        serializedName: "modified",
        type: {
          name: "String"
        }
      },
      extensions: {
        serializedName: "extensions",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const AccountEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccountEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      aadTenantId: {
        serializedName: "aadTenantId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      aadUserId: {
        serializedName: "aadUserId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      accountName: {
        serializedName: "accountName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostEntityId: {
        serializedName: "hostEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDomainJoined: {
        serializedName: "isDomainJoined",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      ntDomain: {
        serializedName: "ntDomain",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      objectGuid: {
        serializedName: "objectGuid",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      puid: {
        serializedName: "puid",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sid: {
        serializedName: "sid",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      upnSuffix: {
        serializedName: "upnSuffix",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dnsDomain: {
        serializedName: "dnsDomain",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureResourceEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      resourceId: {
        serializedName: "resourceId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudApplicationEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudApplicationEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      appId: {
        serializedName: "appId",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      appName: {
        serializedName: "appName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      instanceName: {
        serializedName: "instanceName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DnsEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DnsEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      dnsServerIpEntityId: {
        serializedName: "dnsServerIpEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      domainName: {
        serializedName: "domainName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostIpAddressEntityId: {
        serializedName: "hostIpAddressEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      ipAddressEntityIds: {
        serializedName: "ipAddressEntityIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const FileEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      directory: {
        serializedName: "directory",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      fileHashEntityIds: {
        serializedName: "fileHashEntityIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fileName: {
        serializedName: "fileName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostEntityId: {
        serializedName: "hostEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileHashEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileHashEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      algorithm: {
        serializedName: "algorithm",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hashValue: {
        serializedName: "hashValue",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HostEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HostEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      azureID: {
        serializedName: "azureID",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dnsDomain: {
        serializedName: "dnsDomain",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostName: {
        serializedName: "hostName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDomainJoined: {
        serializedName: "isDomainJoined",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      netBiosName: {
        serializedName: "netBiosName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      ntDomain: {
        serializedName: "ntDomain",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      omsAgentID: {
        serializedName: "omsAgentID",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      osFamily: {
        serializedName: "osFamily",
        type: {
          name: "Enum",
          allowedValues: ["Linux", "Windows", "Android", "IOS", "Unknown"]
        }
      },
      osVersion: {
        serializedName: "osVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IoTDeviceEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IoTDeviceEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      deviceId: {
        serializedName: "deviceId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      deviceName: {
        serializedName: "deviceName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      iotSecurityAgentId: {
        serializedName: "iotSecurityAgentId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      deviceType: {
        serializedName: "deviceType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      vendor: {
        serializedName: "vendor",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      edgeId: {
        serializedName: "edgeId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      macAddress: {
        serializedName: "macAddress",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "model",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      serialNumber: {
        serializedName: "serialNumber",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      firmwareVersion: {
        serializedName: "firmwareVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operatingSystem: {
        serializedName: "operatingSystem",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      iotHubEntityId: {
        serializedName: "iotHubEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostEntityId: {
        serializedName: "hostEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      ipAddressEntityId: {
        serializedName: "ipAddressEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      threatIntelligence: {
        serializedName: "threatIntelligence",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligence"
            }
          }
        }
      },
      protocols: {
        serializedName: "protocols",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const IpEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IpEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      address: {
        serializedName: "address",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "Composite",
          className: "GeoLocation"
        }
      },
      threatIntelligence: {
        serializedName: "threatIntelligence",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligence"
            }
          }
        }
      }
    }
  }
};

export const MailboxEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MailboxEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      mailboxPrimaryAddress: {
        serializedName: "mailboxPrimaryAddress",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      upn: {
        serializedName: "upn",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      externalDirectoryObjectId: {
        serializedName: "externalDirectoryObjectId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const MailClusterEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MailClusterEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      networkMessageIds: {
        serializedName: "networkMessageIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      countByDeliveryStatus: {
        serializedName: "countByDeliveryStatus",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      countByThreatType: {
        serializedName: "countByThreatType",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      countByProtectionStatus: {
        serializedName: "countByProtectionStatus",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      threats: {
        serializedName: "threats",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      query: {
        serializedName: "query",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      queryTime: {
        serializedName: "queryTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      mailCount: {
        serializedName: "mailCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      isVolumeAnomaly: {
        serializedName: "isVolumeAnomaly",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      source: {
        serializedName: "source",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      clusterSourceIdentifier: {
        serializedName: "clusterSourceIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      clusterSourceType: {
        serializedName: "clusterSourceType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      clusterQueryStartTime: {
        serializedName: "clusterQueryStartTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      clusterQueryEndTime: {
        serializedName: "clusterQueryEndTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      clusterGroup: {
        serializedName: "clusterGroup",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MailMessageEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MailMessageEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      fileEntityIds: {
        serializedName: "fileEntityIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      recipient: {
        serializedName: "recipient",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      urls: {
        serializedName: "urls",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      threats: {
        serializedName: "threats",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      p1Sender: {
        serializedName: "p1Sender",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      p1SenderDisplayName: {
        serializedName: "p1SenderDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      p1SenderDomain: {
        serializedName: "p1SenderDomain",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      senderIP: {
        serializedName: "senderIP",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      p2Sender: {
        serializedName: "p2Sender",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      p2SenderDisplayName: {
        serializedName: "p2SenderDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      p2SenderDomain: {
        serializedName: "p2SenderDomain",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      receiveDate: {
        serializedName: "receiveDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      networkMessageId: {
        serializedName: "networkMessageId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      internetMessageId: {
        serializedName: "internetMessageId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      subject: {
        serializedName: "subject",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "language",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      threatDetectionMethods: {
        serializedName: "threatDetectionMethods",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      bodyFingerprintBin1: {
        serializedName: "bodyFingerprintBin1",
        type: {
          name: "Number"
        }
      },
      bodyFingerprintBin2: {
        serializedName: "bodyFingerprintBin2",
        type: {
          name: "Number"
        }
      },
      bodyFingerprintBin3: {
        serializedName: "bodyFingerprintBin3",
        type: {
          name: "Number"
        }
      },
      bodyFingerprintBin4: {
        serializedName: "bodyFingerprintBin4",
        type: {
          name: "Number"
        }
      },
      bodyFingerprintBin5: {
        serializedName: "bodyFingerprintBin5",
        type: {
          name: "Number"
        }
      },
      antispamDirection: {
        serializedName: "antispamDirection",
        type: {
          name: "String"
        }
      },
      deliveryAction: {
        serializedName: "deliveryAction",
        type: {
          name: "Enum",
          allowedValues: [
            "Unknown",
            "DeliveredAsSpam",
            "Delivered",
            "Blocked",
            "Replaced"
          ]
        }
      },
      deliveryLocation: {
        serializedName: "deliveryLocation",
        type: {
          name: "Enum",
          allowedValues: [
            "Unknown",
            "Inbox",
            "JunkFolder",
            "DeletedFolder",
            "Quarantine",
            "External",
            "Failed",
            "Dropped",
            "Forwarded"
          ]
        }
      }
    }
  }
};

export const MalwareEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MalwareEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      category: {
        serializedName: "category",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      fileEntityIds: {
        serializedName: "fileEntityIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      malwareName: {
        serializedName: "malwareName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      processEntityIds: {
        serializedName: "processEntityIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ProcessEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProcessEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      accountEntityId: {
        serializedName: "accountEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      commandLine: {
        serializedName: "commandLine",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      creationTimeUtc: {
        serializedName: "creationTimeUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      elevationToken: {
        serializedName: "elevationToken",
        type: {
          name: "Enum",
          allowedValues: ["Default", "Full", "Limited"]
        }
      },
      hostEntityId: {
        serializedName: "hostEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostLogonSessionEntityId: {
        serializedName: "hostLogonSessionEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      imageFileEntityId: {
        serializedName: "imageFileEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      parentProcessEntityId: {
        serializedName: "parentProcessEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      processId: {
        serializedName: "processId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistryKeyEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegistryKeyEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      hive: {
        serializedName: "hive",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "key",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistryValueEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegistryValueEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      keyEntityId: {
        serializedName: "keyEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      valueData: {
        serializedName: "valueData",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      valueName: {
        serializedName: "valueName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      valueType: {
        serializedName: "valueType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityGroupEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityGroupEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      distinguishedName: {
        serializedName: "distinguishedName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      objectGuid: {
        serializedName: "objectGuid",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      sid: {
        serializedName: "sid",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubmissionMailEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubmissionMailEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      networkMessageId: {
        serializedName: "networkMessageId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      submissionId: {
        serializedName: "submissionId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      submitter: {
        serializedName: "submitter",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      submissionDate: {
        serializedName: "submissionDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      recipient: {
        serializedName: "recipient",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sender: {
        serializedName: "sender",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      senderIp: {
        serializedName: "senderIp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      subject: {
        serializedName: "subject",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      reportType: {
        serializedName: "reportType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UrlEntityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UrlEntityProperties",
    modelProperties: {
      ...EntityCommonProperties.type.modelProperties,
      url: {
        serializedName: "url",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MicrosoftSecurityIncidentCreationAlertRuleProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MicrosoftSecurityIncidentCreationAlertRuleProperties",
    modelProperties: {
      ...MicrosoftSecurityIncidentCreationAlertRuleCommonProperties.type
        .modelProperties,
      alertRuleTemplateName: {
        serializedName: "alertRuleTemplateName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      lastModifiedUtc: {
        serializedName: "lastModifiedUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ScheduledAlertRuleProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScheduledAlertRuleProperties",
    modelProperties: {
      ...ScheduledAlertRuleCommonProperties.type.modelProperties,
      alertRuleTemplateName: {
        serializedName: "alertRuleTemplateName",
        type: {
          name: "String"
        }
      },
      templateVersion: {
        serializedName: "templateVersion",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      lastModifiedUtc: {
        serializedName: "lastModifiedUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      suppressionDuration: {
        serializedName: "suppressionDuration",
        required: true,
        type: {
          name: "TimeSpan"
        }
      },
      suppressionEnabled: {
        serializedName: "suppressionEnabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      tactics: {
        serializedName: "tactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      techniques: {
        serializedName: "techniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      incidentConfiguration: {
        serializedName: "incidentConfiguration",
        type: {
          name: "Composite",
          className: "IncidentConfiguration"
        }
      }
    }
  }
};

export const McasDataConnectorDataTypes: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "McasDataConnectorDataTypes",
    modelProperties: {
      ...AlertsDataTypeOfDataConnector.type.modelProperties,
      discoveryLogs: {
        serializedName: "discoveryLogs",
        type: {
          name: "Composite",
          className: "DataConnectorDataTypeCommon"
        }
      }
    }
  }
};

export const AwsCloudTrailDataConnectorDataTypesLogs: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AwsCloudTrailDataConnectorDataTypesLogs",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const TIDataConnectorDataTypesIndicators: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TIDataConnectorDataTypesIndicators",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const OfficeDataConnectorDataTypesExchange: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OfficeDataConnectorDataTypesExchange",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const OfficeDataConnectorDataTypesSharePoint: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OfficeDataConnectorDataTypesSharePoint",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const OfficeDataConnectorDataTypesTeams: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OfficeDataConnectorDataTypesTeams",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const ASCDataConnectorProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ASCDataConnectorProperties",
    modelProperties: {
      ...DataConnectorWithAlertsProperties.type.modelProperties,
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertRule: coreClient.CompositeMapper = {
  serializedName: "AlertRule",
  type: {
    name: "Composite",
    className: "AlertRule",
    uberParent: "ResourceWithEtag",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionRequest",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      logicAppResourceId: {
        serializedName: "properties.logicAppResourceId",
        type: {
          name: "String"
        }
      },
      triggerUri: {
        serializedName: "properties.triggerUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutomationRule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AutomationRule",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      displayName: {
        constraints: {
          MaxLength: 500
        },
        serializedName: "properties.displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      order: {
        constraints: {
          InclusiveMaximum: 1000,
          InclusiveMinimum: 1
        },
        serializedName: "properties.order",
        required: true,
        type: {
          name: "Number"
        }
      },
      triggeringLogic: {
        serializedName: "properties.triggeringLogic",
        type: {
          name: "Composite",
          className: "AutomationRuleTriggeringLogic"
        }
      },
      actions: {
        constraints: {
          MaxItems: 20
        },
        serializedName: "properties.actions",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AutomationRuleAction"
            }
          }
        }
      },
      lastModifiedTimeUtc: {
        serializedName: "properties.lastModifiedTimeUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      createdTimeUtc: {
        serializedName: "properties.createdTimeUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "properties.lastModifiedBy",
        type: {
          name: "Composite",
          className: "ClientInfo"
        }
      },
      createdBy: {
        serializedName: "properties.createdBy",
        type: {
          name: "Composite",
          className: "ClientInfo"
        }
      }
    }
  }
};

export const Bookmark: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Bookmark",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      created: {
        serializedName: "properties.created",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "properties.createdBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      labels: {
        serializedName: "properties.labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      notes: {
        serializedName: "properties.notes",
        type: {
          name: "String"
        }
      },
      query: {
        serializedName: "properties.query",
        type: {
          name: "String"
        }
      },
      queryResult: {
        serializedName: "properties.queryResult",
        type: {
          name: "String"
        }
      },
      updated: {
        serializedName: "properties.updated",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "properties.updatedBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      eventTime: {
        serializedName: "properties.eventTime",
        type: {
          name: "DateTime"
        }
      },
      queryStartTime: {
        serializedName: "properties.queryStartTime",
        type: {
          name: "DateTime"
        }
      },
      queryEndTime: {
        serializedName: "properties.queryEndTime",
        type: {
          name: "DateTime"
        }
      },
      incidentInfo: {
        serializedName: "properties.incidentInfo",
        type: {
          name: "Composite",
          className: "IncidentInfo"
        }
      }
    }
  }
};

export const PackageModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageModel",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      contentId: {
        serializedName: "properties.contentId",
        type: {
          name: "String"
        }
      },
      contentProductId: {
        serializedName: "properties.contentProductId",
        type: {
          name: "String"
        }
      },
      contentKind: {
        serializedName: "properties.contentKind",
        type: {
          name: "String"
        }
      },
      contentSchemaVersion: {
        serializedName: "properties.contentSchemaVersion",
        type: {
          name: "String"
        }
      },
      isNew: {
        serializedName: "properties.isNew",
        type: {
          name: "String"
        }
      },
      isPreview: {
        serializedName: "properties.isPreview",
        type: {
          name: "String"
        }
      },
      isFeatured: {
        serializedName: "properties.isFeatured",
        type: {
          name: "String"
        }
      },
      isDeprecated: {
        serializedName: "properties.isDeprecated",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      publisherDisplayName: {
        serializedName: "properties.publisherDisplayName",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "MetadataSource"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "Composite",
          className: "MetadataAuthor"
        }
      },
      support: {
        serializedName: "properties.support",
        type: {
          name: "Composite",
          className: "MetadataSupport"
        }
      },
      dependencies: {
        serializedName: "properties.dependencies",
        type: {
          name: "Composite",
          className: "MetadataDependencies"
        }
      },
      providers: {
        serializedName: "properties.providers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      firstPublishDate: {
        serializedName: "properties.firstPublishDate",
        type: {
          name: "Date"
        }
      },
      lastPublishDate: {
        serializedName: "properties.lastPublishDate",
        type: {
          name: "Date"
        }
      },
      categories: {
        serializedName: "properties.categories",
        type: {
          name: "Composite",
          className: "MetadataCategories"
        }
      },
      threatAnalysisTactics: {
        serializedName: "properties.threatAnalysisTactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      threatAnalysisTechniques: {
        serializedName: "properties.threatAnalysisTechniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      icon: {
        serializedName: "properties.icon",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductPackageModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductPackageModel",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      contentId: {
        serializedName: "properties.contentId",
        type: {
          name: "String"
        }
      },
      contentProductId: {
        serializedName: "properties.contentProductId",
        type: {
          name: "String"
        }
      },
      contentKind: {
        serializedName: "properties.contentKind",
        type: {
          name: "String"
        }
      },
      contentSchemaVersion: {
        serializedName: "properties.contentSchemaVersion",
        type: {
          name: "String"
        }
      },
      isNew: {
        serializedName: "properties.isNew",
        type: {
          name: "String"
        }
      },
      isPreview: {
        serializedName: "properties.isPreview",
        type: {
          name: "String"
        }
      },
      isFeatured: {
        serializedName: "properties.isFeatured",
        type: {
          name: "String"
        }
      },
      isDeprecated: {
        serializedName: "properties.isDeprecated",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      publisherDisplayName: {
        serializedName: "properties.publisherDisplayName",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "MetadataSource"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "Composite",
          className: "MetadataAuthor"
        }
      },
      support: {
        serializedName: "properties.support",
        type: {
          name: "Composite",
          className: "MetadataSupport"
        }
      },
      dependencies: {
        serializedName: "properties.dependencies",
        type: {
          name: "Composite",
          className: "MetadataDependencies"
        }
      },
      providers: {
        serializedName: "properties.providers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      firstPublishDate: {
        serializedName: "properties.firstPublishDate",
        type: {
          name: "Date"
        }
      },
      lastPublishDate: {
        serializedName: "properties.lastPublishDate",
        type: {
          name: "Date"
        }
      },
      categories: {
        serializedName: "properties.categories",
        type: {
          name: "Composite",
          className: "MetadataCategories"
        }
      },
      threatAnalysisTactics: {
        serializedName: "properties.threatAnalysisTactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      threatAnalysisTechniques: {
        serializedName: "properties.threatAnalysisTechniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      icon: {
        serializedName: "properties.icon",
        type: {
          name: "String"
        }
      },
      installedVersion: {
        serializedName: "properties.installedVersion",
        type: {
          name: "String"
        }
      },
      metadataResourceId: {
        serializedName: "properties.metadataResourceId",
        type: {
          name: "String"
        }
      },
      packagedContent: {
        serializedName: "properties.packagedContent",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const ProductTemplateModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductTemplateModel",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      contentId: {
        serializedName: "properties.contentId",
        type: {
          name: "String"
        }
      },
      contentProductId: {
        serializedName: "properties.contentProductId",
        type: {
          name: "String"
        }
      },
      packageVersion: {
        serializedName: "properties.packageVersion",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      contentKind: {
        serializedName: "properties.contentKind",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "MetadataSource"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "Composite",
          className: "MetadataAuthor"
        }
      },
      support: {
        serializedName: "properties.support",
        type: {
          name: "Composite",
          className: "MetadataSupport"
        }
      },
      dependencies: {
        serializedName: "properties.dependencies",
        type: {
          name: "Composite",
          className: "MetadataDependencies"
        }
      },
      categories: {
        serializedName: "properties.categories",
        type: {
          name: "Composite",
          className: "MetadataCategories"
        }
      },
      providers: {
        serializedName: "properties.providers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      firstPublishDate: {
        serializedName: "properties.firstPublishDate",
        type: {
          name: "Date"
        }
      },
      lastPublishDate: {
        serializedName: "properties.lastPublishDate",
        type: {
          name: "Date"
        }
      },
      customVersion: {
        serializedName: "properties.customVersion",
        type: {
          name: "String"
        }
      },
      contentSchemaVersion: {
        serializedName: "properties.contentSchemaVersion",
        type: {
          name: "String"
        }
      },
      icon: {
        serializedName: "properties.icon",
        type: {
          name: "String"
        }
      },
      threatAnalysisTactics: {
        serializedName: "properties.threatAnalysisTactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      threatAnalysisTechniques: {
        serializedName: "properties.threatAnalysisTechniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      previewImages: {
        serializedName: "properties.previewImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      previewImagesDark: {
        serializedName: "properties.previewImagesDark",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      packageId: {
        serializedName: "properties.packageId",
        type: {
          name: "String"
        }
      },
      packageKind: {
        serializedName: "properties.packageKind",
        type: {
          name: "String"
        }
      },
      packageName: {
        serializedName: "properties.packageName",
        type: {
          name: "String"
        }
      },
      isDeprecated: {
        serializedName: "properties.isDeprecated",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      packagedContent: {
        serializedName: "properties.packagedContent",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const TemplateModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TemplateModel",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      contentId: {
        serializedName: "properties.contentId",
        type: {
          name: "String"
        }
      },
      contentProductId: {
        serializedName: "properties.contentProductId",
        type: {
          name: "String"
        }
      },
      packageVersion: {
        serializedName: "properties.packageVersion",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      contentKind: {
        serializedName: "properties.contentKind",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "MetadataSource"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "Composite",
          className: "MetadataAuthor"
        }
      },
      support: {
        serializedName: "properties.support",
        type: {
          name: "Composite",
          className: "MetadataSupport"
        }
      },
      dependencies: {
        serializedName: "properties.dependencies",
        type: {
          name: "Composite",
          className: "MetadataDependencies"
        }
      },
      categories: {
        serializedName: "properties.categories",
        type: {
          name: "Composite",
          className: "MetadataCategories"
        }
      },
      providers: {
        serializedName: "properties.providers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      firstPublishDate: {
        serializedName: "properties.firstPublishDate",
        type: {
          name: "Date"
        }
      },
      lastPublishDate: {
        serializedName: "properties.lastPublishDate",
        type: {
          name: "Date"
        }
      },
      customVersion: {
        serializedName: "properties.customVersion",
        type: {
          name: "String"
        }
      },
      contentSchemaVersion: {
        serializedName: "properties.contentSchemaVersion",
        type: {
          name: "String"
        }
      },
      icon: {
        serializedName: "properties.icon",
        type: {
          name: "String"
        }
      },
      threatAnalysisTactics: {
        serializedName: "properties.threatAnalysisTactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      threatAnalysisTechniques: {
        serializedName: "properties.threatAnalysisTechniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      previewImages: {
        serializedName: "properties.previewImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      previewImagesDark: {
        serializedName: "properties.previewImagesDark",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      packageId: {
        serializedName: "properties.packageId",
        type: {
          name: "String"
        }
      },
      packageKind: {
        serializedName: "properties.packageKind",
        type: {
          name: "String"
        }
      },
      packageName: {
        serializedName: "properties.packageName",
        type: {
          name: "String"
        }
      },
      isDeprecated: {
        serializedName: "properties.isDeprecated",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      mainTemplate: {
        serializedName: "properties.mainTemplate",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      dependantTemplates: {
        serializedName: "properties.dependantTemplates",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TemplateProperties"
            }
          }
        }
      }
    }
  }
};

export const DataConnector: coreClient.CompositeMapper = {
  serializedName: "DataConnector",
  type: {
    name: "Composite",
    className: "DataConnector",
    uberParent: "ResourceWithEtag",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Incident: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Incident",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        type: {
          name: "Composite",
          className: "IncidentAdditionalData"
        }
      },
      classification: {
        serializedName: "properties.classification",
        type: {
          name: "String"
        }
      },
      classificationComment: {
        serializedName: "properties.classificationComment",
        type: {
          name: "String"
        }
      },
      classificationReason: {
        serializedName: "properties.classificationReason",
        type: {
          name: "String"
        }
      },
      createdTimeUtc: {
        serializedName: "properties.createdTimeUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      firstActivityTimeUtc: {
        serializedName: "properties.firstActivityTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      incidentUrl: {
        serializedName: "properties.incidentUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      providerName: {
        serializedName: "properties.providerName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      providerIncidentId: {
        serializedName: "properties.providerIncidentId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      incidentNumber: {
        serializedName: "properties.incidentNumber",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      labels: {
        serializedName: "properties.labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IncidentLabel"
            }
          }
        }
      },
      lastActivityTimeUtc: {
        serializedName: "properties.lastActivityTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedTimeUtc: {
        serializedName: "properties.lastModifiedTimeUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      owner: {
        serializedName: "properties.owner",
        type: {
          name: "Composite",
          className: "IncidentOwnerInfo"
        }
      },
      relatedAnalyticRuleIds: {
        serializedName: "properties.relatedAnalyticRuleIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      severity: {
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IncidentComment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentComment",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      createdTimeUtc: {
        serializedName: "properties.createdTimeUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      lastModifiedTimeUtc: {
        serializedName: "properties.lastModifiedTimeUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      message: {
        serializedName: "properties.message",
        type: {
          name: "String"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "Composite",
          className: "ClientInfo"
        }
      }
    }
  }
};

export const Relation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Relation",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      relatedResourceId: {
        serializedName: "properties.relatedResourceId",
        type: {
          name: "String"
        }
      },
      relatedResourceName: {
        serializedName: "properties.relatedResourceName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      relatedResourceType: {
        serializedName: "properties.relatedResourceType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      relatedResourceKind: {
        serializedName: "properties.relatedResourceKind",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetadataModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetadataModel",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      contentId: {
        serializedName: "properties.contentId",
        type: {
          name: "String"
        }
      },
      parentId: {
        serializedName: "properties.parentId",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "properties.kind",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "MetadataSource"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "Composite",
          className: "MetadataAuthor"
        }
      },
      support: {
        serializedName: "properties.support",
        type: {
          name: "Composite",
          className: "MetadataSupport"
        }
      },
      dependencies: {
        serializedName: "properties.dependencies",
        type: {
          name: "Composite",
          className: "MetadataDependenciesAutoGenerated"
        }
      },
      categories: {
        serializedName: "properties.categories",
        type: {
          name: "Composite",
          className: "MetadataCategories"
        }
      },
      providers: {
        serializedName: "properties.providers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      firstPublishDate: {
        serializedName: "properties.firstPublishDate",
        type: {
          name: "Date"
        }
      },
      lastPublishDate: {
        serializedName: "properties.lastPublishDate",
        type: {
          name: "Date"
        }
      },
      customVersion: {
        serializedName: "properties.customVersion",
        type: {
          name: "String"
        }
      },
      contentSchemaVersion: {
        serializedName: "properties.contentSchemaVersion",
        type: {
          name: "String"
        }
      },
      icon: {
        serializedName: "properties.icon",
        type: {
          name: "String"
        }
      },
      threatAnalysisTactics: {
        serializedName: "properties.threatAnalysisTactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      threatAnalysisTechniques: {
        serializedName: "properties.threatAnalysisTechniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      previewImages: {
        serializedName: "properties.previewImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      previewImagesDark: {
        serializedName: "properties.previewImagesDark",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SentinelOnboardingState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SentinelOnboardingState",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      customerManagedKey: {
        serializedName: "properties.customerManagedKey",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SecurityMLAnalyticsSetting: coreClient.CompositeMapper = {
  serializedName: "SecurityMLAnalyticsSetting",
  type: {
    name: "Composite",
    className: "SecurityMLAnalyticsSetting",
    uberParent: "ResourceWithEtag",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SourceControl: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SourceControl",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      idPropertiesId: {
        serializedName: "properties.id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      repoType: {
        serializedName: "properties.repoType",
        required: true,
        type: {
          name: "String"
        }
      },
      contentTypes: {
        serializedName: "properties.contentTypes",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      repository: {
        serializedName: "properties.repository",
        type: {
          name: "Composite",
          className: "Repository"
        }
      },
      servicePrincipal: {
        serializedName: "properties.servicePrincipal",
        type: {
          name: "Composite",
          className: "ServicePrincipal"
        }
      },
      repositoryAccess: {
        serializedName: "properties.repositoryAccess",
        type: {
          name: "Composite",
          className: "RepositoryAccess"
        }
      },
      repositoryResourceInfo: {
        serializedName: "properties.repositoryResourceInfo",
        type: {
          name: "Composite",
          className: "RepositoryResourceInfo"
        }
      },
      lastDeploymentInfo: {
        serializedName: "properties.lastDeploymentInfo",
        type: {
          name: "Composite",
          className: "DeploymentInfo"
        }
      },
      pullRequest: {
        serializedName: "properties.pullRequest",
        type: {
          name: "Composite",
          className: "PullRequest"
        }
      }
    }
  }
};

export const ThreatIntelligenceInformation: coreClient.CompositeMapper = {
  serializedName: "ThreatIntelligenceInformation",
  type: {
    name: "Composite",
    className: "ThreatIntelligenceInformation",
    uberParent: "ResourceWithEtag",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Watchlist: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Watchlist",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      watchlistId: {
        serializedName: "properties.watchlistId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "properties.provider",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "String"
        }
      },
      created: {
        serializedName: "properties.created",
        type: {
          name: "DateTime"
        }
      },
      updated: {
        serializedName: "properties.updated",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "properties.createdBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      updatedBy: {
        serializedName: "properties.updatedBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      watchlistType: {
        serializedName: "properties.watchlistType",
        type: {
          name: "String"
        }
      },
      watchlistAlias: {
        serializedName: "properties.watchlistAlias",
        type: {
          name: "String"
        }
      },
      isDeleted: {
        serializedName: "properties.isDeleted",
        type: {
          name: "Boolean"
        }
      },
      labels: {
        serializedName: "properties.labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      defaultDuration: {
        serializedName: "properties.defaultDuration",
        type: {
          name: "TimeSpan"
        }
      },
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      numberOfLinesToSkip: {
        serializedName: "properties.numberOfLinesToSkip",
        type: {
          name: "Number"
        }
      },
      rawContent: {
        serializedName: "properties.rawContent",
        type: {
          name: "String"
        }
      },
      itemsSearchKey: {
        serializedName: "properties.itemsSearchKey",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "properties.contentType",
        type: {
          name: "String"
        }
      },
      uploadStatus: {
        serializedName: "properties.uploadStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WatchlistItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WatchlistItem",
    modelProperties: {
      ...ResourceWithEtag.type.modelProperties,
      watchlistItemType: {
        serializedName: "properties.watchlistItemType",
        type: {
          name: "String"
        }
      },
      watchlistItemId: {
        serializedName: "properties.watchlistItemId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      isDeleted: {
        serializedName: "properties.isDeleted",
        type: {
          name: "Boolean"
        }
      },
      created: {
        serializedName: "properties.created",
        type: {
          name: "DateTime"
        }
      },
      updated: {
        serializedName: "properties.updated",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "properties.createdBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      updatedBy: {
        serializedName: "properties.updatedBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      itemsKeyValue: {
        serializedName: "properties.itemsKeyValue",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      entityMapping: {
        serializedName: "properties.entityMapping",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const FusionAlertRuleTemplate: coreClient.CompositeMapper = {
  serializedName: "Fusion",
  type: {
    name: "Composite",
    className: "FusionAlertRuleTemplate",
    uberParent: "AlertRuleTemplate",
    polymorphicDiscriminator: AlertRuleTemplate.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertRuleTemplate.type.modelProperties,
      alertRulesCreatedByTemplateCount: {
        serializedName: "properties.alertRulesCreatedByTemplateCount",
        type: {
          name: "Number"
        }
      },
      createdDateUTC: {
        serializedName: "properties.createdDateUTC",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedDateUTC: {
        serializedName: "properties.lastUpdatedDateUTC",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      requiredDataConnectors: {
        serializedName: "properties.requiredDataConnectors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertRuleTemplateDataSource"
            }
          }
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      severity: {
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      tactics: {
        serializedName: "properties.tactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      techniques: {
        serializedName: "properties.techniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MicrosoftSecurityIncidentCreationAlertRuleTemplate: coreClient.CompositeMapper = {
  serializedName: "MicrosoftSecurityIncidentCreation",
  type: {
    name: "Composite",
    className: "MicrosoftSecurityIncidentCreationAlertRuleTemplate",
    uberParent: "AlertRuleTemplate",
    polymorphicDiscriminator: AlertRuleTemplate.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertRuleTemplate.type.modelProperties,
      alertRulesCreatedByTemplateCount: {
        serializedName: "properties.alertRulesCreatedByTemplateCount",
        type: {
          name: "Number"
        }
      },
      createdDateUTC: {
        serializedName: "properties.createdDateUTC",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedDateUTC: {
        serializedName: "properties.lastUpdatedDateUTC",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      requiredDataConnectors: {
        serializedName: "properties.requiredDataConnectors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertRuleTemplateDataSource"
            }
          }
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      displayNamesFilter: {
        serializedName: "properties.displayNamesFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayNamesExcludeFilter: {
        serializedName: "properties.displayNamesExcludeFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      productFilter: {
        serializedName: "properties.productFilter",
        type: {
          name: "String"
        }
      },
      severitiesFilter: {
        serializedName: "properties.severitiesFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ScheduledAlertRuleTemplate: coreClient.CompositeMapper = {
  serializedName: "Scheduled",
  type: {
    name: "Composite",
    className: "ScheduledAlertRuleTemplate",
    uberParent: "AlertRuleTemplate",
    polymorphicDiscriminator: AlertRuleTemplate.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertRuleTemplate.type.modelProperties,
      alertRulesCreatedByTemplateCount: {
        serializedName: "properties.alertRulesCreatedByTemplateCount",
        type: {
          name: "Number"
        }
      },
      createdDateUTC: {
        serializedName: "properties.createdDateUTC",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedDateUTC: {
        serializedName: "properties.lastUpdatedDateUTC",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      requiredDataConnectors: {
        serializedName: "properties.requiredDataConnectors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertRuleTemplateDataSource"
            }
          }
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      query: {
        serializedName: "properties.query",
        type: {
          name: "String"
        }
      },
      queryFrequency: {
        serializedName: "properties.queryFrequency",
        type: {
          name: "TimeSpan"
        }
      },
      queryPeriod: {
        serializedName: "properties.queryPeriod",
        type: {
          name: "TimeSpan"
        }
      },
      severity: {
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      triggerOperator: {
        serializedName: "properties.triggerOperator",
        type: {
          name: "Enum",
          allowedValues: ["GreaterThan", "LessThan", "Equal", "NotEqual"]
        }
      },
      triggerThreshold: {
        serializedName: "properties.triggerThreshold",
        type: {
          name: "Number"
        }
      },
      tactics: {
        serializedName: "properties.tactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      techniques: {
        serializedName: "properties.techniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      eventGroupingSettings: {
        serializedName: "properties.eventGroupingSettings",
        type: {
          name: "Composite",
          className: "EventGroupingSettings"
        }
      },
      customDetails: {
        serializedName: "properties.customDetails",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      entityMappings: {
        serializedName: "properties.entityMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EntityMapping"
            }
          }
        }
      },
      alertDetailsOverride: {
        serializedName: "properties.alertDetailsOverride",
        type: {
          name: "Composite",
          className: "AlertDetailsOverride"
        }
      }
    }
  }
};

export const SecurityAlert: coreClient.CompositeMapper = {
  serializedName: "SecurityAlert",
  type: {
    name: "Composite",
    className: "SecurityAlert",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      alertDisplayName: {
        serializedName: "properties.alertDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      alertType: {
        serializedName: "properties.alertType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      compromisedEntity: {
        serializedName: "properties.compromisedEntity",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      confidenceLevel: {
        serializedName: "properties.confidenceLevel",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      confidenceReasons: {
        serializedName: "properties.confidenceReasons",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityAlertPropertiesConfidenceReasonsItem"
            }
          }
        }
      },
      confidenceScore: {
        serializedName: "properties.confidenceScore",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      confidenceScoreStatus: {
        serializedName: "properties.confidenceScoreStatus",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      endTimeUtc: {
        serializedName: "properties.endTimeUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      intent: {
        serializedName: "properties.intent",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      providerAlertId: {
        serializedName: "properties.providerAlertId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      processingEndTime: {
        serializedName: "properties.processingEndTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      productComponentName: {
        serializedName: "properties.productComponentName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      productName: {
        serializedName: "properties.productName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      productVersion: {
        serializedName: "properties.productVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      remediationSteps: {
        serializedName: "properties.remediationSteps",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      severity: {
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      startTimeUtc: {
        serializedName: "properties.startTimeUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemAlertId: {
        serializedName: "properties.systemAlertId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tactics: {
        serializedName: "properties.tactics",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timeGenerated: {
        serializedName: "properties.timeGenerated",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      vendorName: {
        serializedName: "properties.vendorName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      alertLink: {
        serializedName: "properties.alertLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceIdentifiers: {
        serializedName: "properties.resourceIdentifiers",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Dictionary",
              value: { type: { name: "any" } }
            }
          }
        }
      }
    }
  }
};

export const HuntingBookmark: coreClient.CompositeMapper = {
  serializedName: "Bookmark",
  type: {
    name: "Composite",
    className: "HuntingBookmark",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      created: {
        serializedName: "properties.created",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "properties.createdBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      eventTime: {
        serializedName: "properties.eventTime",
        type: {
          name: "DateTime"
        }
      },
      labels: {
        serializedName: "properties.labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      notes: {
        serializedName: "properties.notes",
        type: {
          name: "String"
        }
      },
      query: {
        serializedName: "properties.query",
        type: {
          name: "String"
        }
      },
      queryResult: {
        serializedName: "properties.queryResult",
        type: {
          name: "String"
        }
      },
      updated: {
        serializedName: "properties.updated",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "properties.updatedBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      incidentInfo: {
        serializedName: "properties.incidentInfo",
        type: {
          name: "Composite",
          className: "IncidentInfo"
        }
      }
    }
  }
};

export const AccountEntity: coreClient.CompositeMapper = {
  serializedName: "Account",
  type: {
    name: "Composite",
    className: "AccountEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      aadTenantId: {
        serializedName: "properties.aadTenantId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      aadUserId: {
        serializedName: "properties.aadUserId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      accountName: {
        serializedName: "properties.accountName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostEntityId: {
        serializedName: "properties.hostEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDomainJoined: {
        serializedName: "properties.isDomainJoined",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      ntDomain: {
        serializedName: "properties.ntDomain",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      objectGuid: {
        serializedName: "properties.objectGuid",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      puid: {
        serializedName: "properties.puid",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sid: {
        serializedName: "properties.sid",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      upnSuffix: {
        serializedName: "properties.upnSuffix",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dnsDomain: {
        serializedName: "properties.dnsDomain",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureResourceEntity: coreClient.CompositeMapper = {
  serializedName: "AzureResource",
  type: {
    name: "Composite",
    className: "AzureResourceEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "properties.resourceId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudApplicationEntity: coreClient.CompositeMapper = {
  serializedName: "CloudApplication",
  type: {
    name: "Composite",
    className: "CloudApplicationEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "properties.appId",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      appName: {
        serializedName: "properties.appName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      instanceName: {
        serializedName: "properties.instanceName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DnsEntity: coreClient.CompositeMapper = {
  serializedName: "DnsResolution",
  type: {
    name: "Composite",
    className: "DnsEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dnsServerIpEntityId: {
        serializedName: "properties.dnsServerIpEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      domainName: {
        serializedName: "properties.domainName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostIpAddressEntityId: {
        serializedName: "properties.hostIpAddressEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      ipAddressEntityIds: {
        serializedName: "properties.ipAddressEntityIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const FileEntity: coreClient.CompositeMapper = {
  serializedName: "File",
  type: {
    name: "Composite",
    className: "FileEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      directory: {
        serializedName: "properties.directory",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      fileHashEntityIds: {
        serializedName: "properties.fileHashEntityIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      fileName: {
        serializedName: "properties.fileName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostEntityId: {
        serializedName: "properties.hostEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileHashEntity: coreClient.CompositeMapper = {
  serializedName: "FileHash",
  type: {
    name: "Composite",
    className: "FileHashEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      algorithm: {
        serializedName: "properties.algorithm",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hashValue: {
        serializedName: "properties.hashValue",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HostEntity: coreClient.CompositeMapper = {
  serializedName: "Host",
  type: {
    name: "Composite",
    className: "HostEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      azureID: {
        serializedName: "properties.azureID",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dnsDomain: {
        serializedName: "properties.dnsDomain",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostName: {
        serializedName: "properties.hostName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDomainJoined: {
        serializedName: "properties.isDomainJoined",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      netBiosName: {
        serializedName: "properties.netBiosName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      ntDomain: {
        serializedName: "properties.ntDomain",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      omsAgentID: {
        serializedName: "properties.omsAgentID",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      osFamily: {
        serializedName: "properties.osFamily",
        type: {
          name: "Enum",
          allowedValues: ["Linux", "Windows", "Android", "IOS", "Unknown"]
        }
      },
      osVersion: {
        serializedName: "properties.osVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IoTDeviceEntity: coreClient.CompositeMapper = {
  serializedName: "IoTDevice",
  type: {
    name: "Composite",
    className: "IoTDeviceEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      deviceId: {
        serializedName: "properties.deviceId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      deviceName: {
        serializedName: "properties.deviceName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      iotSecurityAgentId: {
        serializedName: "properties.iotSecurityAgentId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      deviceType: {
        serializedName: "properties.deviceType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      vendor: {
        serializedName: "properties.vendor",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      edgeId: {
        serializedName: "properties.edgeId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      macAddress: {
        serializedName: "properties.macAddress",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      model: {
        serializedName: "properties.model",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      serialNumber: {
        serializedName: "properties.serialNumber",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      firmwareVersion: {
        serializedName: "properties.firmwareVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operatingSystem: {
        serializedName: "properties.operatingSystem",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      iotHubEntityId: {
        serializedName: "properties.iotHubEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostEntityId: {
        serializedName: "properties.hostEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      ipAddressEntityId: {
        serializedName: "properties.ipAddressEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      threatIntelligence: {
        serializedName: "properties.threatIntelligence",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligence"
            }
          }
        }
      },
      protocols: {
        serializedName: "properties.protocols",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const IpEntity: coreClient.CompositeMapper = {
  serializedName: "Ip",
  type: {
    name: "Composite",
    className: "IpEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "properties.address",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "properties.location",
        type: {
          name: "Composite",
          className: "GeoLocation"
        }
      },
      threatIntelligence: {
        serializedName: "properties.threatIntelligence",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligence"
            }
          }
        }
      }
    }
  }
};

export const MailboxEntity: coreClient.CompositeMapper = {
  serializedName: "Mailbox",
  type: {
    name: "Composite",
    className: "MailboxEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      mailboxPrimaryAddress: {
        serializedName: "properties.mailboxPrimaryAddress",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      upn: {
        serializedName: "properties.upn",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      externalDirectoryObjectId: {
        serializedName: "properties.externalDirectoryObjectId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const MailClusterEntity: coreClient.CompositeMapper = {
  serializedName: "MailCluster",
  type: {
    name: "Composite",
    className: "MailClusterEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      networkMessageIds: {
        serializedName: "properties.networkMessageIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      countByDeliveryStatus: {
        serializedName: "properties.countByDeliveryStatus",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      countByThreatType: {
        serializedName: "properties.countByThreatType",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      countByProtectionStatus: {
        serializedName: "properties.countByProtectionStatus",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      threats: {
        serializedName: "properties.threats",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      query: {
        serializedName: "properties.query",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      queryTime: {
        serializedName: "properties.queryTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      mailCount: {
        serializedName: "properties.mailCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      isVolumeAnomaly: {
        serializedName: "properties.isVolumeAnomaly",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      source: {
        serializedName: "properties.source",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      clusterSourceIdentifier: {
        serializedName: "properties.clusterSourceIdentifier",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      clusterSourceType: {
        serializedName: "properties.clusterSourceType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      clusterQueryStartTime: {
        serializedName: "properties.clusterQueryStartTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      clusterQueryEndTime: {
        serializedName: "properties.clusterQueryEndTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      clusterGroup: {
        serializedName: "properties.clusterGroup",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MailMessageEntity: coreClient.CompositeMapper = {
  serializedName: "MailMessage",
  type: {
    name: "Composite",
    className: "MailMessageEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      fileEntityIds: {
        serializedName: "properties.fileEntityIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      recipient: {
        serializedName: "properties.recipient",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      urls: {
        serializedName: "properties.urls",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      threats: {
        serializedName: "properties.threats",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      p1Sender: {
        serializedName: "properties.p1Sender",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      p1SenderDisplayName: {
        serializedName: "properties.p1SenderDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      p1SenderDomain: {
        serializedName: "properties.p1SenderDomain",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      senderIP: {
        serializedName: "properties.senderIP",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      p2Sender: {
        serializedName: "properties.p2Sender",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      p2SenderDisplayName: {
        serializedName: "properties.p2SenderDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      p2SenderDomain: {
        serializedName: "properties.p2SenderDomain",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      receiveDate: {
        serializedName: "properties.receiveDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      networkMessageId: {
        serializedName: "properties.networkMessageId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      internetMessageId: {
        serializedName: "properties.internetMessageId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      subject: {
        serializedName: "properties.subject",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      language: {
        serializedName: "properties.language",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      threatDetectionMethods: {
        serializedName: "properties.threatDetectionMethods",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      bodyFingerprintBin1: {
        serializedName: "properties.bodyFingerprintBin1",
        type: {
          name: "Number"
        }
      },
      bodyFingerprintBin2: {
        serializedName: "properties.bodyFingerprintBin2",
        type: {
          name: "Number"
        }
      },
      bodyFingerprintBin3: {
        serializedName: "properties.bodyFingerprintBin3",
        type: {
          name: "Number"
        }
      },
      bodyFingerprintBin4: {
        serializedName: "properties.bodyFingerprintBin4",
        type: {
          name: "Number"
        }
      },
      bodyFingerprintBin5: {
        serializedName: "properties.bodyFingerprintBin5",
        type: {
          name: "Number"
        }
      },
      antispamDirection: {
        serializedName: "properties.antispamDirection",
        type: {
          name: "String"
        }
      },
      deliveryAction: {
        serializedName: "properties.deliveryAction",
        type: {
          name: "Enum",
          allowedValues: [
            "Unknown",
            "DeliveredAsSpam",
            "Delivered",
            "Blocked",
            "Replaced"
          ]
        }
      },
      deliveryLocation: {
        serializedName: "properties.deliveryLocation",
        type: {
          name: "Enum",
          allowedValues: [
            "Unknown",
            "Inbox",
            "JunkFolder",
            "DeletedFolder",
            "Quarantine",
            "External",
            "Failed",
            "Dropped",
            "Forwarded"
          ]
        }
      }
    }
  }
};

export const MalwareEntity: coreClient.CompositeMapper = {
  serializedName: "Malware",
  type: {
    name: "Composite",
    className: "MalwareEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "properties.category",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      fileEntityIds: {
        serializedName: "properties.fileEntityIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      malwareName: {
        serializedName: "properties.malwareName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      processEntityIds: {
        serializedName: "properties.processEntityIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ProcessEntity: coreClient.CompositeMapper = {
  serializedName: "Process",
  type: {
    name: "Composite",
    className: "ProcessEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      accountEntityId: {
        serializedName: "properties.accountEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      commandLine: {
        serializedName: "properties.commandLine",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      creationTimeUtc: {
        serializedName: "properties.creationTimeUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      elevationToken: {
        serializedName: "properties.elevationToken",
        type: {
          name: "Enum",
          allowedValues: ["Default", "Full", "Limited"]
        }
      },
      hostEntityId: {
        serializedName: "properties.hostEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hostLogonSessionEntityId: {
        serializedName: "properties.hostLogonSessionEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      imageFileEntityId: {
        serializedName: "properties.imageFileEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      parentProcessEntityId: {
        serializedName: "properties.parentProcessEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      processId: {
        serializedName: "properties.processId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistryKeyEntity: coreClient.CompositeMapper = {
  serializedName: "RegistryKey",
  type: {
    name: "Composite",
    className: "RegistryKeyEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hive: {
        serializedName: "properties.hive",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "properties.key",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistryValueEntity: coreClient.CompositeMapper = {
  serializedName: "RegistryValue",
  type: {
    name: "Composite",
    className: "RegistryValueEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      keyEntityId: {
        serializedName: "properties.keyEntityId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      valueData: {
        serializedName: "properties.valueData",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      valueName: {
        serializedName: "properties.valueName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      valueType: {
        serializedName: "properties.valueType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecurityGroupEntity: coreClient.CompositeMapper = {
  serializedName: "SecurityGroup",
  type: {
    name: "Composite",
    className: "SecurityGroupEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      distinguishedName: {
        serializedName: "properties.distinguishedName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      objectGuid: {
        serializedName: "properties.objectGuid",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      sid: {
        serializedName: "properties.sid",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubmissionMailEntity: coreClient.CompositeMapper = {
  serializedName: "SubmissionMail",
  type: {
    name: "Composite",
    className: "SubmissionMailEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      networkMessageId: {
        serializedName: "properties.networkMessageId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      submissionId: {
        serializedName: "properties.submissionId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      submitter: {
        serializedName: "properties.submitter",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      submissionDate: {
        serializedName: "properties.submissionDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      timestamp: {
        serializedName: "properties.timestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      recipient: {
        serializedName: "properties.recipient",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sender: {
        serializedName: "properties.sender",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      senderIp: {
        serializedName: "properties.senderIp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      subject: {
        serializedName: "properties.subject",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      reportType: {
        serializedName: "properties.reportType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UrlEntity: coreClient.CompositeMapper = {
  serializedName: "Url",
  type: {
    name: "Composite",
    className: "UrlEntity",
    uberParent: "Entity",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    modelProperties: {
      ...Entity.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "properties.url",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FusionAlertRule: coreClient.CompositeMapper = {
  serializedName: "Fusion",
  type: {
    name: "Composite",
    className: "FusionAlertRule",
    uberParent: "AlertRule",
    polymorphicDiscriminator: AlertRule.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertRule.type.modelProperties,
      alertRuleTemplateName: {
        serializedName: "properties.alertRuleTemplateName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      lastModifiedUtc: {
        serializedName: "properties.lastModifiedUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      severity: {
        serializedName: "properties.severity",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tactics: {
        serializedName: "properties.tactics",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      techniques: {
        serializedName: "properties.techniques",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MicrosoftSecurityIncidentCreationAlertRule: coreClient.CompositeMapper = {
  serializedName: "MicrosoftSecurityIncidentCreation",
  type: {
    name: "Composite",
    className: "MicrosoftSecurityIncidentCreationAlertRule",
    uberParent: "AlertRule",
    polymorphicDiscriminator: AlertRule.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertRule.type.modelProperties,
      displayNamesFilter: {
        serializedName: "properties.displayNamesFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayNamesExcludeFilter: {
        serializedName: "properties.displayNamesExcludeFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      productFilter: {
        serializedName: "properties.productFilter",
        type: {
          name: "String"
        }
      },
      severitiesFilter: {
        serializedName: "properties.severitiesFilter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      alertRuleTemplateName: {
        serializedName: "properties.alertRuleTemplateName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      lastModifiedUtc: {
        serializedName: "properties.lastModifiedUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ScheduledAlertRule: coreClient.CompositeMapper = {
  serializedName: "Scheduled",
  type: {
    name: "Composite",
    className: "ScheduledAlertRule",
    uberParent: "AlertRule",
    polymorphicDiscriminator: AlertRule.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertRule.type.modelProperties,
      query: {
        serializedName: "properties.query",
        type: {
          name: "String"
        }
      },
      queryFrequency: {
        serializedName: "properties.queryFrequency",
        type: {
          name: "TimeSpan"
        }
      },
      queryPeriod: {
        serializedName: "properties.queryPeriod",
        type: {
          name: "TimeSpan"
        }
      },
      severity: {
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      triggerOperator: {
        serializedName: "properties.triggerOperator",
        type: {
          name: "Enum",
          allowedValues: ["GreaterThan", "LessThan", "Equal", "NotEqual"]
        }
      },
      triggerThreshold: {
        serializedName: "properties.triggerThreshold",
        type: {
          name: "Number"
        }
      },
      eventGroupingSettings: {
        serializedName: "properties.eventGroupingSettings",
        type: {
          name: "Composite",
          className: "EventGroupingSettings"
        }
      },
      customDetails: {
        serializedName: "properties.customDetails",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      entityMappings: {
        serializedName: "properties.entityMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EntityMapping"
            }
          }
        }
      },
      alertDetailsOverride: {
        serializedName: "properties.alertDetailsOverride",
        type: {
          name: "Composite",
          className: "AlertDetailsOverride"
        }
      },
      alertRuleTemplateName: {
        serializedName: "properties.alertRuleTemplateName",
        type: {
          name: "String"
        }
      },
      templateVersion: {
        serializedName: "properties.templateVersion",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      lastModifiedUtc: {
        serializedName: "properties.lastModifiedUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      suppressionDuration: {
        serializedName: "properties.suppressionDuration",
        type: {
          name: "TimeSpan"
        }
      },
      suppressionEnabled: {
        serializedName: "properties.suppressionEnabled",
        type: {
          name: "Boolean"
        }
      },
      tactics: {
        serializedName: "properties.tactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      techniques: {
        serializedName: "properties.techniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      incidentConfiguration: {
        serializedName: "properties.incidentConfiguration",
        type: {
          name: "Composite",
          className: "IncidentConfiguration"
        }
      }
    }
  }
};

export const AADDataConnector: coreClient.CompositeMapper = {
  serializedName: "AzureActiveDirectory",
  type: {
    name: "Composite",
    className: "AADDataConnector",
    uberParent: "DataConnector",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      }
    }
  }
};

export const AatpDataConnector: coreClient.CompositeMapper = {
  serializedName: "AzureAdvancedThreatProtection",
  type: {
    name: "Composite",
    className: "AatpDataConnector",
    uberParent: "DataConnector",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      }
    }
  }
};

export const ASCDataConnector: coreClient.CompositeMapper = {
  serializedName: "AzureSecurityCenter",
  type: {
    name: "Composite",
    className: "ASCDataConnector",
    uberParent: "DataConnector",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    modelProperties: {
      ...DataConnector.type.modelProperties,
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      },
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AwsCloudTrailDataConnector: coreClient.CompositeMapper = {
  serializedName: "AmazonWebServicesCloudTrail",
  type: {
    name: "Composite",
    className: "AwsCloudTrailDataConnector",
    uberParent: "DataConnector",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    modelProperties: {
      ...DataConnector.type.modelProperties,
      awsRoleArn: {
        serializedName: "properties.awsRoleArn",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "AwsCloudTrailDataConnectorDataTypes"
        }
      }
    }
  }
};

export const McasDataConnector: coreClient.CompositeMapper = {
  serializedName: "MicrosoftCloudAppSecurity",
  type: {
    name: "Composite",
    className: "McasDataConnector",
    uberParent: "DataConnector",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "McasDataConnectorDataTypes"
        }
      }
    }
  }
};

export const MdatpDataConnector: coreClient.CompositeMapper = {
  serializedName: "MicrosoftDefenderAdvancedThreatProtection",
  type: {
    name: "Composite",
    className: "MdatpDataConnector",
    uberParent: "DataConnector",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      }
    }
  }
};

export const TIDataConnector: coreClient.CompositeMapper = {
  serializedName: "ThreatIntelligence",
  type: {
    name: "Composite",
    className: "TIDataConnector",
    uberParent: "DataConnector",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      tipLookbackPeriod: {
        serializedName: "properties.tipLookbackPeriod",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "TIDataConnectorDataTypes"
        }
      }
    }
  }
};

export const OfficeDataConnector: coreClient.CompositeMapper = {
  serializedName: "Office365",
  type: {
    name: "Composite",
    className: "OfficeDataConnector",
    uberParent: "DataConnector",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "OfficeDataConnectorDataTypes"
        }
      }
    }
  }
};

export const AnomalySecurityMLAnalyticsSettings: coreClient.CompositeMapper = {
  serializedName: "Anomaly",
  type: {
    name: "Composite",
    className: "AnomalySecurityMLAnalyticsSettings",
    uberParent: "SecurityMLAnalyticsSetting",
    polymorphicDiscriminator:
      SecurityMLAnalyticsSetting.type.polymorphicDiscriminator,
    modelProperties: {
      ...SecurityMLAnalyticsSetting.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      lastModifiedUtc: {
        serializedName: "properties.lastModifiedUtc",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      requiredDataConnectors: {
        serializedName: "properties.requiredDataConnectors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityMLAnalyticsSettingsDataSource"
            }
          }
        }
      },
      tactics: {
        serializedName: "properties.tactics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      techniques: {
        serializedName: "properties.techniques",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      anomalyVersion: {
        serializedName: "properties.anomalyVersion",
        type: {
          name: "String"
        }
      },
      customizableObservations: {
        serializedName: "properties.customizableObservations",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      frequency: {
        serializedName: "properties.frequency",
        type: {
          name: "TimeSpan"
        }
      },
      settingsStatus: {
        serializedName: "properties.settingsStatus",
        type: {
          name: "String"
        }
      },
      isDefaultSettings: {
        serializedName: "properties.isDefaultSettings",
        type: {
          name: "Boolean"
        }
      },
      anomalySettingsVersion: {
        serializedName: "properties.anomalySettingsVersion",
        type: {
          name: "Number"
        }
      },
      settingsDefinitionId: {
        serializedName: "properties.settingsDefinitionId",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const ThreatIntelligenceIndicatorModel: coreClient.CompositeMapper = {
  serializedName: "indicator",
  type: {
    name: "Composite",
    className: "ThreatIntelligenceIndicatorModel",
    uberParent: "ThreatIntelligenceInformation",
    polymorphicDiscriminator:
      ThreatIntelligenceInformation.type.polymorphicDiscriminator,
    modelProperties: {
      ...ThreatIntelligenceInformation.type.modelProperties,
      additionalData: {
        serializedName: "properties.additionalData",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      friendlyName: {
        serializedName: "properties.friendlyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      threatIntelligenceTags: {
        serializedName: "properties.threatIntelligenceTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      lastUpdatedTimeUtc: {
        serializedName: "properties.lastUpdatedTimeUtc",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "properties.source",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      indicatorTypes: {
        serializedName: "properties.indicatorTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      pattern: {
        serializedName: "properties.pattern",
        type: {
          name: "String"
        }
      },
      patternType: {
        serializedName: "properties.patternType",
        type: {
          name: "String"
        }
      },
      patternVersion: {
        serializedName: "properties.patternVersion",
        type: {
          name: "String"
        }
      },
      killChainPhases: {
        serializedName: "properties.killChainPhases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceKillChainPhase"
            }
          }
        }
      },
      parsedPattern: {
        serializedName: "properties.parsedPattern",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceParsedPattern"
            }
          }
        }
      },
      externalId: {
        serializedName: "properties.externalId",
        type: {
          name: "String"
        }
      },
      createdByRef: {
        serializedName: "properties.createdByRef",
        type: {
          name: "String"
        }
      },
      defanged: {
        serializedName: "properties.defanged",
        type: {
          name: "Boolean"
        }
      },
      externalLastUpdatedTimeUtc: {
        serializedName: "properties.externalLastUpdatedTimeUtc",
        type: {
          name: "String"
        }
      },
      externalReferences: {
        serializedName: "properties.externalReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceExternalReference"
            }
          }
        }
      },
      granularMarkings: {
        serializedName: "properties.granularMarkings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ThreatIntelligenceGranularMarkingModel"
            }
          }
        }
      },
      labels: {
        serializedName: "properties.labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      revoked: {
        serializedName: "properties.revoked",
        type: {
          name: "Boolean"
        }
      },
      confidence: {
        serializedName: "properties.confidence",
        type: {
          name: "Number"
        }
      },
      objectMarkingRefs: {
        serializedName: "properties.objectMarkingRefs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      language: {
        serializedName: "properties.language",
        type: {
          name: "String"
        }
      },
      threatTypes: {
        serializedName: "properties.threatTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      validFrom: {
        serializedName: "properties.validFrom",
        type: {
          name: "String"
        }
      },
      validUntil: {
        serializedName: "properties.validUntil",
        type: {
          name: "String"
        }
      },
      created: {
        serializedName: "properties.created",
        type: {
          name: "String"
        }
      },
      modified: {
        serializedName: "properties.modified",
        type: {
          name: "String"
        }
      },
      extensions: {
        serializedName: "properties.extensions",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export let discriminators = {
  AutomationRuleCondition: AutomationRuleCondition,
  AutomationRuleAction: AutomationRuleAction,
  "Resource.AlertRuleTemplate": AlertRuleTemplate,
  "Resource.Entity": Entity,
  "AutomationRuleCondition.PropertyArrayChanged": PropertyArrayChangedConditionProperties,
  "AutomationRuleCondition.PropertyChanged": PropertyChangedConditionProperties,
  "AutomationRuleCondition.Property": PropertyConditionProperties,
  "AutomationRuleAction.ModifyProperties": AutomationRuleModifyPropertiesAction,
  "AutomationRuleAction.RunPlaybook": AutomationRuleRunPlaybookAction,
  "ResourceWithEtag.AlertRule": AlertRule,
  "ResourceWithEtag.DataConnector": DataConnector,
  "ResourceWithEtag.SecurityMLAnalyticsSetting": SecurityMLAnalyticsSetting,
  "ResourceWithEtag.ThreatIntelligenceInformation": ThreatIntelligenceInformation,
  "AlertRuleTemplate.Fusion": FusionAlertRuleTemplate,
  "AlertRuleTemplate.MicrosoftSecurityIncidentCreation": MicrosoftSecurityIncidentCreationAlertRuleTemplate,
  "AlertRuleTemplate.Scheduled": ScheduledAlertRuleTemplate,
  "Entity.SecurityAlert": SecurityAlert,
  "Entity.Bookmark": HuntingBookmark,
  "Entity.Account": AccountEntity,
  "Entity.AzureResource": AzureResourceEntity,
  "Entity.CloudApplication": CloudApplicationEntity,
  "Entity.DnsResolution": DnsEntity,
  "Entity.File": FileEntity,
  "Entity.FileHash": FileHashEntity,
  "Entity.Host": HostEntity,
  "Entity.IoTDevice": IoTDeviceEntity,
  "Entity.Ip": IpEntity,
  "Entity.Mailbox": MailboxEntity,
  "Entity.MailCluster": MailClusterEntity,
  "Entity.MailMessage": MailMessageEntity,
  "Entity.Malware": MalwareEntity,
  "Entity.Process": ProcessEntity,
  "Entity.RegistryKey": RegistryKeyEntity,
  "Entity.RegistryValue": RegistryValueEntity,
  "Entity.SecurityGroup": SecurityGroupEntity,
  "Entity.SubmissionMail": SubmissionMailEntity,
  "Entity.Url": UrlEntity,
  "AlertRule.Fusion": FusionAlertRule,
  "AlertRule.MicrosoftSecurityIncidentCreation": MicrosoftSecurityIncidentCreationAlertRule,
  "AlertRule.Scheduled": ScheduledAlertRule,
  "DataConnector.AzureActiveDirectory": AADDataConnector,
  "DataConnector.AzureAdvancedThreatProtection": AatpDataConnector,
  "DataConnector.AzureSecurityCenter": ASCDataConnector,
  "DataConnector.AmazonWebServicesCloudTrail": AwsCloudTrailDataConnector,
  "DataConnector.MicrosoftCloudAppSecurity": McasDataConnector,
  "DataConnector.MicrosoftDefenderAdvancedThreatProtection": MdatpDataConnector,
  "DataConnector.ThreatIntelligence": TIDataConnector,
  "DataConnector.Office365": OfficeDataConnector,
  "SecurityMLAnalyticsSetting.Anomaly": AnomalySecurityMLAnalyticsSettings,
  "ThreatIntelligenceInformation.indicator": ThreatIntelligenceIndicatorModel
};
