/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  WebSite,
  WebSitesControllerListWebSitesOptionalParams,
  WebSitesControllerGetWebSiteOptionalParams,
  WebSitesControllerGetWebSiteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WebSitesController. */
export interface WebSitesController {
  /**
   * Gets a list of websites in the migrate project.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param migrateProjectName Name of the Azure Migrate project.
   * @param options The options parameters.
   */
  listWebSites(
    resourceGroupName: string,
    migrateProjectName: string,
    options?: WebSitesControllerListWebSitesOptionalParams,
  ): PagedAsyncIterableIterator<WebSite>;
  /**
   * Gets a website in the migrate project.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param migrateProjectName Name of the Azure Migrate project.
   * @param webSiteName The ARM name of the website to be fetched.
   * @param options The options parameters.
   */
  getWebSite(
    resourceGroupName: string,
    migrateProjectName: string,
    webSiteName: string,
    options?: WebSitesControllerGetWebSiteOptionalParams,
  ): Promise<WebSitesControllerGetWebSiteResponse>;
}
