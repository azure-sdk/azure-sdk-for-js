/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Solution,
  SolutionsControllerListSolutionsOptionalParams,
  SolutionsControllerGetSolutionOptionalParams,
  SolutionsControllerGetSolutionResponse,
  SolutionsControllerCreateOptionalParams,
  SolutionsControllerCreateResponse,
  SolutionsControllerUpdateOptionalParams,
  SolutionsControllerUpdateResponse,
  SolutionsControllerDeleteSolutionOptionalParams,
  SolutionsControllerDeleteSolutionResponse,
  SolutionsControllerGetConfigOptionalParams,
  SolutionsControllerGetConfigResponse,
  SolutionsControllerCleanupDataOptionalParams,
  SolutionsControllerCleanupDataResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SolutionsController. */
export interface SolutionsController {
  /**
   * Gets the list of solutions in the migrate project.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param migrateProjectName Name of the Azure Migrate project.
   * @param options The options parameters.
   */
  listSolutions(
    resourceGroupName: string,
    migrateProjectName: string,
    options?: SolutionsControllerListSolutionsOptionalParams,
  ): PagedAsyncIterableIterator<Solution>;
  /**
   * Gets a solution in the migrate project.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param migrateProjectName Name of the Azure Migrate project.
   * @param solutionName Unique name of a migration solution within a migrate project.
   * @param options The options parameters.
   */
  getSolution(
    resourceGroupName: string,
    migrateProjectName: string,
    solutionName: string,
    options?: SolutionsControllerGetSolutionOptionalParams,
  ): Promise<SolutionsControllerGetSolutionResponse>;
  /**
   * Creates a solution in the migrate project.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param migrateProjectName Name of the Azure Migrate project.
   * @param solutionName Unique name of a migration solution within a migrate project.
   * @param solutionInput The input for the solution.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    migrateProjectName: string,
    solutionName: string,
    solutionInput: Solution,
    options?: SolutionsControllerCreateOptionalParams,
  ): Promise<SolutionsControllerCreateResponse>;
  /**
   * Update a solution with specified name. Supports partial updates, for example only tags can be
   * provided.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param migrateProjectName Name of the Azure Migrate project.
   * @param solutionName Unique name of a migration solution within a migrate project.
   * @param solutionInput The input for the solution.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    migrateProjectName: string,
    solutionName: string,
    solutionInput: Solution,
    options?: SolutionsControllerUpdateOptionalParams,
  ): Promise<SolutionsControllerUpdateResponse>;
  /**
   * Delete the solution. Deleting non-existent project is a no-operation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param migrateProjectName Name of the Azure Migrate project.
   * @param solutionName Unique name of a migration solution within a migrate project.
   * @param options The options parameters.
   */
  deleteSolution(
    resourceGroupName: string,
    migrateProjectName: string,
    solutionName: string,
    options?: SolutionsControllerDeleteSolutionOptionalParams,
  ): Promise<SolutionsControllerDeleteSolutionResponse>;
  /**
   * Gets the config for the solution in the migrate project.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param migrateProjectName Name of the Azure Migrate project.
   * @param solutionName Unique name of a migration solution within a migrate project.
   * @param options The options parameters.
   */
  getConfig(
    resourceGroupName: string,
    migrateProjectName: string,
    solutionName: string,
    options?: SolutionsControllerGetConfigOptionalParams,
  ): Promise<SolutionsControllerGetConfigResponse>;
  /**
   * Cleanup the solution data in the migrate project.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param migrateProjectName Name of the Azure Migrate project.
   * @param solutionName Unique name of a migration solution within a migrate project.
   * @param options The options parameters.
   */
  cleanupData(
    resourceGroupName: string,
    migrateProjectName: string,
    solutionName: string,
    options?: SolutionsControllerCleanupDataOptionalParams,
  ): Promise<SolutionsControllerCleanupDataResponse>;
}
