/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const DatabaseInstanceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseInstanceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabaseInstance",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DatabaseInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseInstance",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DatabaseInstanceProperties",
        },
      },
    },
  },
};

export const DatabaseInstanceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseInstanceProperties",
    modelProperties: {
      discoveryData: {
        serializedName: "discoveryData",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabaseInstanceDiscoveryDetails",
            },
          },
        },
      },
      summary: {
        serializedName: "summary",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "DatabaseInstanceSummary" },
          },
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const DatabaseInstanceDiscoveryDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseInstanceDiscoveryDetails",
    modelProperties: {
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      instanceId: {
        serializedName: "instanceId",
        type: {
          name: "String",
        },
      },
      enqueueTime: {
        serializedName: "enqueueTime",
        type: {
          name: "String",
        },
      },
      solutionName: {
        serializedName: "solutionName",
        type: {
          name: "String",
        },
      },
      instanceName: {
        serializedName: "instanceName",
        type: {
          name: "String",
        },
      },
      instanceVersion: {
        serializedName: "instanceVersion",
        type: {
          name: "String",
        },
      },
      instanceType: {
        serializedName: "instanceType",
        type: {
          name: "String",
        },
      },
      hostName: {
        serializedName: "hostName",
        type: {
          name: "String",
        },
      },
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String",
        },
      },
      portNumber: {
        serializedName: "portNumber",
        type: {
          name: "Number",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const DatabaseInstanceSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseInstanceSummary",
    modelProperties: {
      databasesAssessedCount: {
        serializedName: "databasesAssessedCount",
        type: {
          name: "Number",
        },
      },
      migrationReadyCount: {
        serializedName: "migrationReadyCount",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const DatabaseCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Database",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Database: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Database",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DatabaseProperties",
        },
      },
    },
  },
};

export const DatabaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseProperties",
    modelProperties: {
      assessmentData: {
        serializedName: "assessmentData",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabaseAssessmentDetails",
            },
          },
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const DatabaseAssessmentDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseAssessmentDetails",
    modelProperties: {
      assessmentId: {
        serializedName: "assessmentId",
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      migrationBlockersCount: {
        serializedName: "migrationBlockersCount",
        type: {
          name: "Number",
        },
      },
      breakingChangesCount: {
        serializedName: "breakingChangesCount",
        type: {
          name: "Number",
        },
      },
      isReadyForMigration: {
        serializedName: "isReadyForMigration",
        type: {
          name: "Boolean",
        },
      },
      assessmentTargetType: {
        serializedName: "assessmentTargetType",
        type: {
          name: "String",
        },
      },
      lastAssessedTime: {
        serializedName: "lastAssessedTime",
        type: {
          name: "DateTime",
        },
      },
      compatibilityLevel: {
        serializedName: "compatibilityLevel",
        type: {
          name: "String",
        },
      },
      databaseSizeInMB: {
        serializedName: "databaseSizeInMB",
        type: {
          name: "String",
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
      enqueueTime: {
        serializedName: "enqueueTime",
        type: {
          name: "String",
        },
      },
      solutionName: {
        serializedName: "solutionName",
        type: {
          name: "String",
        },
      },
      instanceId: {
        serializedName: "instanceId",
        type: {
          name: "String",
        },
      },
      databaseName: {
        serializedName: "databaseName",
        type: {
          name: "String",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const EventCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MigrateEvent",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MigrateEvent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrateEvent",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MigrateEventProperties",
        },
      },
    },
  },
};

export const MigrateEventProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrateEventProperties",
    modelProperties: {
      instanceType: {
        serializedName: "instanceType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String",
        },
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String",
        },
      },
      recommendation: {
        serializedName: "recommendation",
        type: {
          name: "String",
        },
      },
      possibleCauses: {
        serializedName: "possibleCauses",
        type: {
          name: "String",
        },
      },
      solution: {
        serializedName: "solution",
        type: {
          name: "String",
        },
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MachineCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Machine",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Machine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Machine",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MachineProperties",
        },
      },
    },
  },
};

export const MachineProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineProperties",
    modelProperties: {
      discoveryData: {
        serializedName: "discoveryData",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiscoveryDetails",
            },
          },
        },
      },
      assessmentData: {
        serializedName: "assessmentData",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessmentDetails",
            },
          },
        },
      },
      migrationData: {
        serializedName: "migrationData",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MigrationDetails",
            },
          },
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const DiscoveryDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiscoveryDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String",
        },
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String",
        },
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String",
        },
      },
      enqueueTime: {
        serializedName: "enqueueTime",
        type: {
          name: "String",
        },
      },
      solutionName: {
        serializedName: "solutionName",
        type: {
          name: "String",
        },
      },
      machineId: {
        serializedName: "machineId",
        type: {
          name: "String",
        },
      },
      machineManagerId: {
        serializedName: "machineManagerId",
        type: {
          name: "String",
        },
      },
      fabricType: {
        serializedName: "fabricType",
        type: {
          name: "String",
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
      machineName: {
        serializedName: "machineName",
        type: {
          name: "String",
        },
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      fqdn: {
        serializedName: "fqdn",
        type: {
          name: "String",
        },
      },
      biosId: {
        serializedName: "biosId",
        type: {
          name: "String",
        },
      },
      macAddresses: {
        serializedName: "macAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const AssessmentDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      assessmentId: {
        serializedName: "assessmentId",
        type: {
          name: "String",
        },
      },
      targetVMSize: {
        serializedName: "targetVMSize",
        type: {
          name: "String",
        },
      },
      targetVMLocation: {
        serializedName: "targetVMLocation",
        type: {
          name: "String",
        },
      },
      targetStorageType: {
        serializedName: "targetStorageType",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      enqueueTime: {
        serializedName: "enqueueTime",
        type: {
          name: "String",
        },
      },
      solutionName: {
        serializedName: "solutionName",
        type: {
          name: "String",
        },
      },
      machineId: {
        serializedName: "machineId",
        type: {
          name: "String",
        },
      },
      machineManagerId: {
        serializedName: "machineManagerId",
        type: {
          name: "String",
        },
      },
      fabricType: {
        serializedName: "fabricType",
        type: {
          name: "String",
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
      machineName: {
        serializedName: "machineName",
        type: {
          name: "String",
        },
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      fqdn: {
        serializedName: "fqdn",
        type: {
          name: "String",
        },
      },
      biosId: {
        serializedName: "biosId",
        type: {
          name: "String",
        },
      },
      macAddresses: {
        serializedName: "macAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const MigrationDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrationDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      migrationPhase: {
        serializedName: "migrationPhase",
        type: {
          name: "String",
        },
      },
      migrationTested: {
        serializedName: "migrationTested",
        type: {
          name: "Boolean",
        },
      },
      replicationProgressPercentage: {
        serializedName: "replicationProgressPercentage",
        type: {
          name: "Number",
        },
      },
      targetVMArmId: {
        serializedName: "targetVMArmId",
        type: {
          name: "String",
        },
      },
      enqueueTime: {
        serializedName: "enqueueTime",
        type: {
          name: "String",
        },
      },
      solutionName: {
        serializedName: "solutionName",
        type: {
          name: "String",
        },
      },
      machineId: {
        serializedName: "machineId",
        type: {
          name: "String",
        },
      },
      machineManagerId: {
        serializedName: "machineManagerId",
        type: {
          name: "String",
        },
      },
      fabricType: {
        serializedName: "fabricType",
        type: {
          name: "String",
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
      machineName: {
        serializedName: "machineName",
        type: {
          name: "String",
        },
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      fqdn: {
        serializedName: "fqdn",
        type: {
          name: "String",
        },
      },
      biosId: {
        serializedName: "biosId",
        type: {
          name: "String",
        },
      },
      macAddresses: {
        serializedName: "macAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const RegisterToolInput: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegisterToolInput",
    modelProperties: {
      tool: {
        serializedName: "tool",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RegistrationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegistrationResult",
    modelProperties: {
      isRegistered: {
        serializedName: "isRegistered",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const RefreshSummaryInput: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RefreshSummaryInput",
    modelProperties: {
      goal: {
        serializedName: "goal",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RefreshSummaryResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RefreshSummaryResult",
    modelProperties: {
      isRefreshed: {
        serializedName: "isRefreshed",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const Solution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Solution",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SolutionProperties",
        },
      },
    },
  },
};

export const SolutionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionProperties",
    modelProperties: {
      tool: {
        serializedName: "tool",
        type: {
          name: "String",
        },
      },
      purpose: {
        serializedName: "purpose",
        type: {
          name: "String",
        },
      },
      goal: {
        serializedName: "goal",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      cleanupState: {
        serializedName: "cleanupState",
        type: {
          name: "String",
        },
      },
      summary: {
        serializedName: "summary",
        type: {
          name: "Composite",
          className: "SolutionSummary",
        },
      },
      details: {
        serializedName: "details",
        type: {
          name: "Composite",
          className: "SolutionDetails",
        },
      },
    },
  },
};

export const SolutionSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionSummary",
    modelProperties: {
      instanceType: {
        serializedName: "instanceType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SolutionDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionDetails",
    modelProperties: {
      groupCount: {
        serializedName: "groupCount",
        type: {
          name: "Number",
        },
      },
      assessmentCount: {
        serializedName: "assessmentCount",
        type: {
          name: "Number",
        },
      },
      extendedDetails: {
        serializedName: "extendedDetails",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const SolutionsCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionsCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Solution",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SolutionConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionConfig",
    modelProperties: {
      publisherSasUri: {
        serializedName: "publisherSasUri",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VirtualDesktopUserCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualDesktopUserCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualDesktopUser",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VirtualDesktopUser: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualDesktopUser",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "VirtualDesktopUserProperties",
        },
      },
    },
  },
};

export const VirtualDesktopUserProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualDesktopUserProperties",
    modelProperties: {
      assessmentData: {
        serializedName: "assessmentData",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualDesktopUserAssessmentDetails",
            },
          },
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const VirtualDesktopUserAssessmentDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualDesktopUserAssessmentDetails",
    modelProperties: {
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      enqueueTime: {
        serializedName: "enqueueTime",
        type: {
          name: "String",
        },
      },
      solutionName: {
        serializedName: "solutionName",
        type: {
          name: "String",
        },
      },
      userName: {
        serializedName: "userName",
        type: {
          name: "String",
        },
      },
      userAccount: {
        serializedName: "userAccount",
        type: {
          name: "String",
        },
      },
      country: {
        serializedName: "country",
        type: {
          name: "String",
        },
      },
      state: {
        serializedName: "state",
        type: {
          name: "String",
        },
      },
      city: {
        serializedName: "city",
        type: {
          name: "String",
        },
      },
      devicesUsed: {
        serializedName: "devicesUsed",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      virtualization: {
        serializedName: "virtualization",
        type: {
          name: "String",
        },
      },
      totalApplicationsCount: {
        serializedName: "totalApplicationsCount",
        type: {
          name: "Number",
        },
      },
      criticalApplications: {
        serializedName: "criticalApplications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      osUsed: {
        serializedName: "osUsed",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      multiUserWindows10: {
        serializedName: "multiUserWindows10",
        type: {
          name: "Boolean",
        },
      },
      windows7: {
        serializedName: "windows7",
        type: {
          name: "Boolean",
        },
      },
      persona: {
        serializedName: "persona",
        type: {
          name: "String",
        },
      },
      assessmentId: {
        serializedName: "assessmentId",
        type: {
          name: "String",
        },
      },
      targetLocation: {
        serializedName: "targetLocation",
        type: {
          name: "String",
        },
      },
      isReadyForMigration: {
        serializedName: "isReadyForMigration",
        type: {
          name: "Boolean",
        },
      },
      targetAzureVmSize: {
        serializedName: "targetAzureVmSize",
        type: {
          name: "String",
        },
      },
      targetStorageType: {
        serializedName: "targetStorageType",
        type: {
          name: "String",
        },
      },
      activeWeeklyHours: {
        serializedName: "activeWeeklyHours",
        type: {
          name: "Number",
        },
      },
      userExperienceScore: {
        serializedName: "userExperienceScore",
        type: {
          name: "Number",
        },
      },
      egressBandwidthWeekly: {
        serializedName: "egressBandwidthWeekly",
        type: {
          name: "Number",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const WebServerCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebServerCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebServer",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WebServer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebServer",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "WebServerProperties",
        },
      },
    },
  },
};

export const WebServerProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebServerProperties",
    modelProperties: {
      discoveryData: {
        serializedName: "discoveryData",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebServerDiscoveryDetails",
            },
          },
        },
      },
      summary: {
        serializedName: "summary",
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "WebServerSummary" } },
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const WebServerDiscoveryDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebServerDiscoveryDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String",
        },
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String",
        },
      },
      cpuCores: {
        serializedName: "cpuCores",
        type: {
          name: "Number",
        },
      },
      memoryInMb: {
        serializedName: "memoryInMb",
        type: {
          name: "String",
        },
      },
      webServerType: {
        serializedName: "webServerType",
        type: {
          name: "String",
        },
      },
      webServerVersion: {
        serializedName: "webServerVersion",
        type: {
          name: "String",
        },
      },
      portList: {
        serializedName: "portList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number",
            },
          },
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
      enqueueTime: {
        serializedName: "enqueueTime",
        type: {
          name: "String",
        },
      },
      solutionName: {
        serializedName: "solutionName",
        type: {
          name: "String",
        },
      },
      webServerId: {
        serializedName: "webServerId",
        type: {
          name: "String",
        },
      },
      webServerName: {
        serializedName: "webServerName",
        type: {
          name: "String",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const WebServerSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebServerSummary",
    modelProperties: {
      discoveredCount: {
        serializedName: "discoveredCount",
        type: {
          name: "Number",
        },
      },
      assessedCount: {
        serializedName: "assessedCount",
        type: {
          name: "Number",
        },
      },
      readyForMigration: {
        serializedName: "readyForMigration",
        type: {
          name: "Number",
        },
      },
      migratingCount: {
        serializedName: "migratingCount",
        type: {
          name: "Number",
        },
      },
      migratedCount: {
        serializedName: "migratedCount",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const WebSiteCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSiteCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebSite",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WebSite: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSite",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "WebSiteProperties",
        },
      },
    },
  },
};

export const WebSiteProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSiteProperties",
    modelProperties: {
      discoveryData: {
        serializedName: "discoveryData",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebSiteDiscoveryDetails",
            },
          },
        },
      },
      assessmentData: {
        serializedName: "assessmentData",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebSiteAssessmentDetails",
            },
          },
        },
      },
      migrationData: {
        serializedName: "migrationData",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebSiteMigrationDetails",
            },
          },
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const WebSiteDiscoveryDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSiteDiscoveryDetails",
    modelProperties: {
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      webServerId: {
        serializedName: "webServerId",
        type: {
          name: "String",
        },
      },
      webServerType: {
        serializedName: "webServerType",
        type: {
          name: "String",
        },
      },
      webSiteName: {
        serializedName: "webSiteName",
        type: {
          name: "String",
        },
      },
      enqueueTime: {
        serializedName: "enqueueTime",
        type: {
          name: "String",
        },
      },
      solutionName: {
        serializedName: "solutionName",
        type: {
          name: "String",
        },
      },
      port: {
        serializedName: "port",
        type: {
          name: "Number",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const WebSiteAssessmentDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSiteAssessmentDetails",
    modelProperties: {
      assessmentId: {
        serializedName: "assessmentId",
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      isReadyForMigration: {
        serializedName: "isReadyForMigration",
        type: {
          name: "Boolean",
        },
      },
      assessmentTargetType: {
        serializedName: "assessmentTargetType",
        type: {
          name: "String",
        },
      },
      migrationBlockersCount: {
        serializedName: "migrationBlockersCount",
        type: {
          name: "Number",
        },
      },
      successList: {
        serializedName: "successList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      warningList: {
        serializedName: "warningList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      errorList: {
        serializedName: "errorList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      framework: {
        serializedName: "framework",
        type: {
          name: "String",
        },
      },
      frameworkVersion: {
        serializedName: "frameworkVersion",
        type: {
          name: "String",
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
      webServerId: {
        serializedName: "webServerId",
        type: {
          name: "String",
        },
      },
      webServerType: {
        serializedName: "webServerType",
        type: {
          name: "String",
        },
      },
      webSiteName: {
        serializedName: "webSiteName",
        type: {
          name: "String",
        },
      },
      enqueueTime: {
        serializedName: "enqueueTime",
        type: {
          name: "String",
        },
      },
      solutionName: {
        serializedName: "solutionName",
        type: {
          name: "String",
        },
      },
      port: {
        serializedName: "port",
        type: {
          name: "Number",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const WebSiteMigrationDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebSiteMigrationDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      migrationPhase: {
        serializedName: "migrationPhase",
        type: {
          name: "String",
        },
      },
      progressPercentage: {
        serializedName: "progressPercentage",
        type: {
          name: "Number",
        },
      },
      targetAppServiceArmId: {
        serializedName: "targetAppServiceArmId",
        type: {
          name: "String",
        },
      },
      lastUpdatedTime: {
        serializedName: "lastUpdatedTime",
        type: {
          name: "DateTime",
        },
      },
      webServerId: {
        serializedName: "webServerId",
        type: {
          name: "String",
        },
      },
      webServerType: {
        serializedName: "webServerType",
        type: {
          name: "String",
        },
      },
      webSiteName: {
        serializedName: "webSiteName",
        type: {
          name: "String",
        },
      },
      enqueueTime: {
        serializedName: "enqueueTime",
        type: {
          name: "String",
        },
      },
      solutionName: {
        serializedName: "solutionName",
        type: {
          name: "String",
        },
      },
      port: {
        serializedName: "port",
        type: {
          name: "Number",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const ProjectResultList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectResultList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MigrateProject",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MigrateProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrateProject",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MigrateProjectProperties",
        },
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const MigrateProjectProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrateProjectProperties",
    modelProperties: {
      registeredTools: {
        serializedName: "registeredTools",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      serviceEndpoint: {
        serializedName: "serviceEndpoint",
        type: {
          name: "String",
        },
      },
      summary: {
        serializedName: "summary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "ProjectSummary" } },
        },
      },
      lastSummaryRefreshedTime: {
        serializedName: "lastSummaryRefreshedTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      refreshSummaryState: {
        serializedName: "refreshSummaryState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      utilityStorageAccountId: {
        serializedName: "utilityStorageAccountId",
        type: {
          name: "String",
        },
      },
      publicNetworkAccess: {
        serializedName: "publicNetworkAccess",
        type: {
          name: "String",
        },
      },
      privateEndpointConnections: {
        serializedName: "privateEndpointConnections",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection",
            },
          },
        },
      },
    },
  },
};

export const ProjectSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectSummary",
    modelProperties: {
      instanceType: {
        serializedName: "instanceType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      refreshSummaryState: {
        serializedName: "refreshSummaryState",
        type: {
          name: "String",
        },
      },
      lastSummaryRefreshedTime: {
        serializedName: "lastSummaryRefreshedTime",
        type: {
          name: "DateTime",
        },
      },
      extendedSummary: {
        serializedName: "extendedSummary",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const PrivateEndpointConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      eTag: {
        serializedName: "eTag",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PrivateEndpointConnectionProperties",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const PrivateEndpointConnectionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      privateEndpoint: {
        serializedName: "privateEndpoint",
        type: {
          name: "Composite",
          className: "ResourceId",
        },
      },
      privateLinkServiceConnectionState: {
        serializedName: "privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionState",
        },
      },
    },
  },
};

export const ResourceId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceId",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      actionsRequired: {
        serializedName: "actionsRequired",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const RegistrationDetailsInput: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegistrationDetailsInput",
    modelProperties: {
      tool: {
        serializedName: "tool",
        type: {
          name: "String",
        },
      },
      applicationDetails: {
        serializedName: "applicationDetails",
        type: {
          name: "Composite",
          className: "AadAppDetails",
        },
      },
    },
  },
};

export const AadAppDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AadAppDetails",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String",
        },
      },
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RegistrationDetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegistrationDetailsResponse",
    modelProperties: {
      serviceEndpoint: {
        serializedName: "serviceEndpoint",
        type: {
          name: "String",
        },
      },
      oneTimeKey: {
        serializedName: "oneTimeKey",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateEndpointConnectionCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateEndpointConnectionProxyCollection: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "PrivateEndpointConnectionProxyCollection",
      modelProperties: {
        value: {
          serializedName: "value",
          readOnly: true,
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "PrivateEndpointConnectionProxy",
              },
            },
          },
        },
        nextLink: {
          serializedName: "nextLink",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const PrivateEndpointConnectionProxy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionProxy",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PrivateEndpointConnectionProxyProperties",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const PrivateEndpointConnectionProxyProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "PrivateEndpointConnectionProxyProperties",
      modelProperties: {
        remotePrivateEndpoint: {
          serializedName: "remotePrivateEndpoint",
          type: {
            name: "Composite",
            className: "PrivateEndpointDetails",
          },
        },
        status: {
          serializedName: "status",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const PrivateEndpointDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      manualPrivateLinkServiceConnections: {
        serializedName: "manualPrivateLinkServiceConnections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkServiceConnection",
            },
          },
        },
      },
      privateLinkServiceConnections: {
        serializedName: "privateLinkServiceConnections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkServiceConnection",
            },
          },
        },
      },
      privateLinkServiceProxies: {
        serializedName: "privateLinkServiceProxies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkServiceProxy",
            },
          },
        },
      },
      connectionDetails: {
        serializedName: "connectionDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IpConfiguration",
            },
          },
        },
      },
    },
  },
};

export const PrivateLinkServiceConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnection",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      groupIds: {
        serializedName: "groupIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      requestMessage: {
        serializedName: "requestMessage",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateLinkServiceProxy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkServiceProxy",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      groupConnectivityInformation: {
        serializedName: "groupConnectivityInformation",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GroupConnectivityInformation",
            },
          },
        },
      },
      remotePrivateEndpointConnection: {
        serializedName: "remotePrivateEndpointConnection",
        type: {
          name: "Composite",
          className: "ResourceId",
        },
      },
      remotePrivateLinkServiceConnectionState: {
        serializedName: "remotePrivateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionState",
        },
      },
    },
  },
};

export const GroupConnectivityInformation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupConnectivityInformation",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      groupId: {
        serializedName: "groupId",
        type: {
          name: "String",
        },
      },
      memberName: {
        serializedName: "memberName",
        type: {
          name: "String",
        },
      },
      customerVisibleFqdns: {
        serializedName: "customerVisibleFqdns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      internalFqdn: {
        serializedName: "internalFqdn",
        type: {
          name: "String",
        },
      },
      redirectMapId: {
        serializedName: "redirectMapId",
        type: {
          name: "String",
        },
      },
      privateLinkServiceArmRegion: {
        serializedName: "privateLinkServiceArmRegion",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IpConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IpConfiguration",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      privateIpAddress: {
        serializedName: "privateIpAddress",
        type: {
          name: "String",
        },
      },
      linkIdentifier: {
        serializedName: "linkIdentifier",
        type: {
          name: "String",
        },
      },
      groupId: {
        serializedName: "groupId",
        type: {
          name: "String",
        },
      },
      memberName: {
        serializedName: "memberName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateLinkResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PrivateLinkResourceProperties",
        },
      },
    },
  },
};

export const PrivateLinkResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResourceProperties",
    modelProperties: {
      requiredMembers: {
        serializedName: "requiredMembers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      requiredZoneNames: {
        serializedName: "requiredZoneNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      groupId: {
        serializedName: "groupId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateLinkResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ODataQueryOptions1: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ODataQueryOptions1",
    modelProperties: {
      filter: {
        serializedName: "filter",
        type: {
          name: "Composite",
          className: "FilterQueryOption",
        },
      },
    },
  },
};

export const FilterQueryOption: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilterQueryOption",
    modelProperties: {
      context: {
        serializedName: "context",
        type: {
          name: "Composite",
          className: "ODataQueryContext",
        },
      },
      validator: {
        serializedName: "validator",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
      filterClause: {
        serializedName: "filterClause",
        type: {
          name: "Composite",
          className: "FilterClause",
        },
      },
      rawValue: {
        serializedName: "rawValue",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ODataQueryContext: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ODataQueryContext",
    modelProperties: {
      defaultQuerySettings: {
        serializedName: "defaultQuerySettings",
        type: {
          name: "Composite",
          className: "DefaultQuerySettings",
        },
      },
      model: {
        serializedName: "model",
        type: {
          name: "Composite",
          className: "IEdmModel",
        },
      },
      elementType: {
        serializedName: "elementType",
        type: {
          name: "Composite",
          className: "IEdmType",
        },
      },
      navigationSource: {
        serializedName: "navigationSource",
        type: {
          name: "Composite",
          className: "IEdmNavigationSource",
        },
      },
      elementClrType: {
        serializedName: "elementClrType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      path: {
        serializedName: "path",
        type: {
          name: "Composite",
          className: "ODataPath",
        },
      },
      requestContainer: {
        serializedName: "requestContainer",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const DefaultQuerySettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DefaultQuerySettings",
    modelProperties: {
      enableExpand: {
        serializedName: "enableExpand",
        type: {
          name: "Boolean",
        },
      },
      enableSelect: {
        serializedName: "enableSelect",
        type: {
          name: "Boolean",
        },
      },
      enableCount: {
        serializedName: "enableCount",
        type: {
          name: "Boolean",
        },
      },
      enableOrderBy: {
        serializedName: "enableOrderBy",
        type: {
          name: "Boolean",
        },
      },
      enableFilter: {
        serializedName: "enableFilter",
        type: {
          name: "Boolean",
        },
      },
      maxTop: {
        serializedName: "maxTop",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const IEdmModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmModel",
    modelProperties: {
      schemaElements: {
        serializedName: "schemaElements",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IEdmSchemaElement",
            },
          },
        },
      },
      vocabularyAnnotations: {
        serializedName: "vocabularyAnnotations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IEdmVocabularyAnnotation",
            },
          },
        },
      },
      referencedModels: {
        serializedName: "referencedModels",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IEdmModel",
            },
          },
        },
      },
      declaredNamespaces: {
        serializedName: "declaredNamespaces",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      directValueAnnotationsManager: {
        serializedName: "directValueAnnotationsManager",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
      entityContainer: {
        serializedName: "entityContainer",
        type: {
          name: "Composite",
          className: "IEdmEntityContainer",
        },
      },
    },
  },
};

export const IEdmSchemaElement: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmSchemaElement",
    modelProperties: {
      schemaElementKind: {
        serializedName: "schemaElementKind",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      namespace: {
        serializedName: "namespace",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IEdmVocabularyAnnotation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmVocabularyAnnotation",
    modelProperties: {
      qualifier: {
        serializedName: "qualifier",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      term: {
        serializedName: "term",
        type: {
          name: "Composite",
          className: "IEdmTerm",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "Composite",
          className: "IEdmExpression",
        },
      },
    },
  },
};

export const IEdmTerm: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmTerm",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "Composite",
          className: "IEdmTypeReference",
        },
      },
      appliesTo: {
        serializedName: "appliesTo",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      defaultValue: {
        serializedName: "defaultValue",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaElementKind: {
        serializedName: "schemaElementKind",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      namespace: {
        serializedName: "namespace",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IEdmTypeReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmTypeReference",
    modelProperties: {
      isNullable: {
        serializedName: "isNullable",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      definition: {
        serializedName: "definition",
        type: {
          name: "Composite",
          className: "IEdmType",
        },
      },
    },
  },
};

export const IEdmType: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmType",
    modelProperties: {
      typeKind: {
        serializedName: "typeKind",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IEdmExpression: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmExpression",
    modelProperties: {
      expressionKind: {
        serializedName: "expressionKind",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IEdmEntityContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmEntityContainer",
    modelProperties: {
      elements: {
        serializedName: "elements",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IEdmEntityContainerElement",
            },
          },
        },
      },
      schemaElementKind: {
        serializedName: "schemaElementKind",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      namespace: {
        serializedName: "namespace",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IEdmEntityContainerElement: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmEntityContainerElement",
    modelProperties: {
      containerElementKind: {
        serializedName: "containerElementKind",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      container: {
        serializedName: "container",
        type: {
          name: "Composite",
          className: "IEdmEntityContainer",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IEdmNavigationSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmNavigationSource",
    modelProperties: {
      navigationPropertyBindings: {
        serializedName: "navigationPropertyBindings",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IEdmNavigationPropertyBinding",
            },
          },
        },
      },
      path: {
        serializedName: "path",
        type: {
          name: "Composite",
          className: "IEdmPathExpression",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "Composite",
          className: "IEdmType",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IEdmNavigationPropertyBinding: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmNavigationPropertyBinding",
    modelProperties: {
      navigationProperty: {
        serializedName: "navigationProperty",
        type: {
          name: "Composite",
          className: "IEdmNavigationProperty",
        },
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "IEdmNavigationSource",
        },
      },
      path: {
        serializedName: "path",
        type: {
          name: "Composite",
          className: "IEdmPathExpression",
        },
      },
    },
  },
};

export const IEdmNavigationProperty: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmNavigationProperty",
    modelProperties: {
      partner: {
        serializedName: "partner",
        type: {
          name: "Composite",
          className: "IEdmNavigationProperty",
        },
      },
      onDelete: {
        serializedName: "onDelete",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      containsTarget: {
        serializedName: "containsTarget",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      referentialConstraint: {
        serializedName: "referentialConstraint",
        type: {
          name: "Composite",
          className: "IEdmReferentialConstraint",
        },
      },
      propertyKind: {
        serializedName: "propertyKind",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "Composite",
          className: "IEdmTypeReference",
        },
      },
      declaringType: {
        serializedName: "declaringType",
        type: {
          name: "Composite",
          className: "IEdmStructuredType",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IEdmReferentialConstraint: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmReferentialConstraint",
    modelProperties: {
      propertyPairs: {
        serializedName: "propertyPairs",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EdmReferentialConstraintPropertyPair",
            },
          },
        },
      },
    },
  },
};

export const EdmReferentialConstraintPropertyPair: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "EdmReferentialConstraintPropertyPair",
      modelProperties: {
        dependentProperty: {
          serializedName: "dependentProperty",
          type: {
            name: "Composite",
            className: "IEdmStructuralProperty",
          },
        },
        principalProperty: {
          serializedName: "principalProperty",
          type: {
            name: "Composite",
            className: "IEdmStructuralProperty",
          },
        },
      },
    },
  };

export const IEdmStructuralProperty: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmStructuralProperty",
    modelProperties: {
      defaultValueString: {
        serializedName: "defaultValueString",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      propertyKind: {
        serializedName: "propertyKind",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "Composite",
          className: "IEdmTypeReference",
        },
      },
      declaringType: {
        serializedName: "declaringType",
        type: {
          name: "Composite",
          className: "IEdmStructuredType",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IEdmStructuredType: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmStructuredType",
    modelProperties: {
      isAbstract: {
        serializedName: "isAbstract",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      isOpen: {
        serializedName: "isOpen",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      baseType: {
        serializedName: "baseType",
        type: {
          name: "Composite",
          className: "IEdmStructuredType",
        },
      },
      declaredProperties: {
        serializedName: "declaredProperties",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IEdmProperty",
            },
          },
        },
      },
      typeKind: {
        serializedName: "typeKind",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IEdmProperty: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmProperty",
    modelProperties: {
      propertyKind: {
        serializedName: "propertyKind",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "Composite",
          className: "IEdmTypeReference",
        },
      },
      declaringType: {
        serializedName: "declaringType",
        type: {
          name: "Composite",
          className: "IEdmStructuredType",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IEdmPathExpression: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IEdmPathExpression",
    modelProperties: {
      pathSegments: {
        serializedName: "pathSegments",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      path: {
        serializedName: "path",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      expressionKind: {
        serializedName: "expressionKind",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ODataPath: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ODataPath",
    modelProperties: {
      edmType: {
        serializedName: "edmType",
        type: {
          name: "Composite",
          className: "IEdmType",
        },
      },
      navigationSource: {
        serializedName: "navigationSource",
        type: {
          name: "Composite",
          className: "IEdmNavigationSource",
        },
      },
      segments: {
        serializedName: "segments",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ODataPathSegment",
            },
          },
        },
      },
      pathTemplate: {
        serializedName: "pathTemplate",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      path: {
        serializedName: "path",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ODataPathSegment",
            },
          },
        },
      },
    },
  },
};

export const ODataPathSegment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ODataPathSegment",
    modelProperties: {
      edmType: {
        serializedName: "edmType",
        type: {
          name: "Composite",
          className: "IEdmType",
        },
      },
      identifier: {
        serializedName: "identifier",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const FilterClause: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilterClause",
    modelProperties: {
      expression: {
        serializedName: "expression",
        type: {
          name: "Composite",
          className: "SingleValueNode",
        },
      },
      rangeVariable: {
        serializedName: "rangeVariable",
        type: {
          name: "Composite",
          className: "RangeVariable",
        },
      },
      itemType: {
        serializedName: "itemType",
        type: {
          name: "Composite",
          className: "IEdmTypeReference",
        },
      },
    },
  },
};

export const SingleValueNode: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SingleValueNode",
    modelProperties: {
      typeReference: {
        serializedName: "typeReference",
        type: {
          name: "Composite",
          className: "IEdmTypeReference",
        },
      },
      kind: {
        serializedName: "kind",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RangeVariable: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RangeVariable",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      typeReference: {
        serializedName: "typeReference",
        type: {
          name: "Composite",
          className: "IEdmTypeReference",
        },
      },
      kind: {
        serializedName: "kind",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ODataRawQueryOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ODataRawQueryOptions",
    modelProperties: {
      filter: {
        serializedName: "filter",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      apply: {
        serializedName: "apply",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      orderBy: {
        serializedName: "orderBy",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      top: {
        serializedName: "top",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      skip: {
        serializedName: "skip",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      select: {
        serializedName: "select",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      expand: {
        serializedName: "expand",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      count: {
        serializedName: "count",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      format: {
        serializedName: "format",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      skipToken: {
        serializedName: "skipToken",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      deltaToken: {
        serializedName: "deltaToken",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SelectExpandClause: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SelectExpandClause",
    modelProperties: {
      selectedItems: {
        serializedName: "selectedItems",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Dictionary",
              value: { type: { name: "any" } },
            },
          },
        },
      },
      allSelected: {
        serializedName: "allSelected",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const ApplyClause: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplyClause",
    modelProperties: {
      transformations: {
        serializedName: "transformations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TransformationNode",
            },
          },
        },
      },
    },
  },
};

export const TransformationNode: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TransformationNode",
    modelProperties: {
      kind: {
        serializedName: "kind",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MachineMigrateEventProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineMigrateEventProperties",
    modelProperties: {
      ...MigrateEventProperties.type.modelProperties,
      machine: {
        serializedName: "machine",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DatabaseMigrateEventProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseMigrateEventProperties",
    modelProperties: {
      ...MigrateEventProperties.type.modelProperties,
      database: {
        serializedName: "database",
        type: {
          name: "String",
        },
      },
      databaseInstanceId: {
        serializedName: "databaseInstanceId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ServersSolutionSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServersSolutionSummary",
    modelProperties: {
      ...SolutionSummary.type.modelProperties,
      discoveredCount: {
        serializedName: "discoveredCount",
        type: {
          name: "Number",
        },
      },
      assessedCount: {
        serializedName: "assessedCount",
        type: {
          name: "Number",
        },
      },
      replicatingCount: {
        serializedName: "replicatingCount",
        type: {
          name: "Number",
        },
      },
      testMigratedCount: {
        serializedName: "testMigratedCount",
        type: {
          name: "Number",
        },
      },
      migratedCount: {
        serializedName: "migratedCount",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const DatabasesSolutionSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabasesSolutionSummary",
    modelProperties: {
      ...SolutionSummary.type.modelProperties,
      databasesAssessedCount: {
        serializedName: "databasesAssessedCount",
        type: {
          name: "Number",
        },
      },
      databaseInstancesAssessedCount: {
        serializedName: "databaseInstancesAssessedCount",
        type: {
          name: "Number",
        },
      },
      migrationReadyCount: {
        serializedName: "migrationReadyCount",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ServersProjectSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServersProjectSummary",
    modelProperties: {
      ...ProjectSummary.type.modelProperties,
      discoveredCount: {
        serializedName: "discoveredCount",
        type: {
          name: "Number",
        },
      },
      assessedCount: {
        serializedName: "assessedCount",
        type: {
          name: "Number",
        },
      },
      replicatingCount: {
        serializedName: "replicatingCount",
        type: {
          name: "Number",
        },
      },
      testMigratedCount: {
        serializedName: "testMigratedCount",
        type: {
          name: "Number",
        },
      },
      migratedCount: {
        serializedName: "migratedCount",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const DatabaseProjectSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseProjectSummary",
    modelProperties: {
      ...ProjectSummary.type.modelProperties,
    },
  },
};

export const MigrateProjectsControllerPutMigrateProjectHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "MigrateProjectsControllerPutMigrateProjectHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const SolutionsControllerCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SolutionsControllerCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ProjectsListBySubscriptionHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectsListBySubscriptionHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProjectsListHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectsListHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProjectsListBySubscriptionNextHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ProjectsListBySubscriptionNextHeaders",
      modelProperties: {
        xMsRequestId: {
          serializedName: "x-ms-request-id",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const ProjectsListNextHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectsListNextHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateEndpointConnectionControllerPutPrivateEndpointConnectionHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "PrivateEndpointConnectionControllerPutPrivateEndpointConnectionHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const PrivateEndpointConnectionProxyControllerCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "PrivateEndpointConnectionProxyControllerCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };
