/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type MigrateAgentModelCustomPropertiesUnion =
  | MigrateAgentModelCustomProperties
  | VMwareMigrateAgentModelCustomProperties;
export type WorkflowModelCustomPropertiesUnion =
  | WorkflowModelCustomProperties
  | BuildContainerImageWorkflowModelCustomProperties
  | EnableReplicationWorkflowModelCustomProperties
  | MigrateWorkflowModelCustomProperties
  | TestMigrateCleanupWorkflowModelCustomProperties
  | TestMigrateWorkflowModelCustomProperties;
export type WorkloadInstanceModelCustomPropertiesUnion =
  | WorkloadInstanceModelCustomProperties
  | ApacheTomcatWorkloadInstanceModelCustomProperties
  | IISWorkloadInstanceModelCustomProperties;
export type WorkloadDeploymentModelCustomPropertiesUnion =
  | WorkloadDeploymentModelCustomProperties
  | ApacheTomcatAKSWorkloadDeploymentModelCustomProperties
  | IisaksWorkloadDeploymentModelCustomProperties;

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** DeployedResource model. */
export interface DeployedResourceModel {
  /** DeployedResource properties. */
  properties?: DeployedResourceModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: DeployedResourceModelSystemData;
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
}

/** DeployedResource properties. */
export interface DeployedResourceModelProperties {
  /** Gets or sets the list of resources deployed. */
  resourcesDeployed?: { [propertyName: string]: string };
  /**
   * Gets or sets the workload deployment id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly workloadDeploymentId?: string;
  /**
   * Gets or sets the name of deployed resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * Gets or sets the deployment timestamp.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deploymentTimestamp?: Date;
  /**
   * Gets or sets the deployment target service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetAzureService?: WorkloadDeploymentTarget;
  /**
   * Gets or sets the container registry ARM Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly containerRegistryId?: string;
  /**
   * Gets or sets the image name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly imageName?: string;
  /**
   * Gets or sets the image tag.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly imageTag?: string;
  /**
   * Gets or sets the app ip address.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly appIp?: string;
  /** Gets or sets the secret store ARM Id. */
  secretStoreId?: string;
  /** Gets or sets the custom deployed resource properties. */
  customProperties?: { [propertyName: string]: string };
}

/** System data required to be defined for Azure resources. */
export interface SystemDataModel {
  /** Gets or sets identity that created the resource. */
  createdBy?: string;
  /**
   * Gets or sets the type of identity that created the resource: user, application,
   * managedIdentity.
   */
  createdByType?: string;
  /** Gets or sets the timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** Gets or sets the identity that last modified the resource. */
  lastModifiedBy?: string;
  /**
   * Gets or sets the type of identity that last modified the resource: user, application,
   * managedIdentity.
   */
  lastModifiedByType?: string;
  /** Gets or sets the timestamp of resource last modification (UTC). */
  lastModifiedAt?: Date;
}

/** ARM error. */
export interface ArmError {
  /** Arm error information. */
  error?: ArmErrorInfo;
}

/** Arm error information. */
export interface ArmErrorInfo {
  /** Gets or sets the error code returned by the service. */
  code?: string;
  /** Gets or sets error Message returned by the service. */
  message?: string;
}

/** DeployedResource model collection. */
export interface DeployedResourceModelCollection {
  /** Gets or sets the list of deployedResources. */
  value?: DeployedResourceModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** MigrateAgent model. */
export interface MigrateAgentModel {
  /** MigrateAgent model properties. */
  properties?: MigrateAgentModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: MigrateAgentModelSystemData;
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
}

/** MigrateAgent model properties. */
export interface MigrateAgentModelProperties {
  /**
   * Gets or sets the MigrateAgent correlation Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly correlationId?: string;
  /** Gets or sets the machine Id where MigrateAgent is running. */
  machineId?: string;
  /** Gets or sets the machine name where MigrateAgent is running. */
  machineName?: string;
  /** Identity model. */
  authenticationIdentity?: IdentityModel;
  /**
   * Gets or sets a value indicating whether MigrateAgent is responsive.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isResponsive?: boolean;
  /**
   * Gets or sets the time when last heartbeat was sent by the MigrateAgent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastHeartbeat?: Date;
  /**
   * Gets or sets the MigrateAgent version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly versionNumber?: string;
  /**
   * Gets or sets the provisioning state of the MigrateAgent.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Gets or sets the list of health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthErrorModel[];
  /** MigrateAgent model custom properties. */
  customProperties?: MigrateAgentModelCustomPropertiesUnion;
}

/** Identity model. */
export interface IdentityModel {
  /** Gets or sets the tenant Id of the SPN with which MigrateAgent communicates to service. */
  tenantId?: string;
  /**
   * Gets or sets the client/application Id of the SPN with which MigrateAgent communicates to
   * service.
   */
  applicationId?: string;
  /** Gets or sets the object Id of the SPN with which MigrateAgent communicates to service. */
  objectId?: string;
  /** Gets or sets the audience of the SPN with which MigrateAgent communicates to service. */
  audience?: string;
  /** Gets or sets the authority of the SPN with which MigrateAgent communicates to service. */
  aadAuthority?: string;
}

/** Health error model. */
export interface HealthErrorModel {
  /** Gets or sets the type of affected resource type. */
  affectedResourceType?: string;
  /**
   * Gets or sets the list of affected resource correlation Ids. This can be used to
   * uniquely identify the count of items affected by a specific category and severity
   * as well as count of item affected by an specific issue.
   */
  affectedResourceCorrelationIds?: string[];
  /** Gets or sets a list of child health errors associated with this error. */
  childErrors?: InnerHealthErrorModel[];
  /**
   * Gets the ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Gets or sets the health category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthCategory?: string;
  /**
   * Gets or sets the error category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly category?: string;
  /**
   * Gets or sets the error severity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly severity?: string;
  /**
   * Gets or sets the error source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly source?: string;
  /**
   * Gets or sets the error creation time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /**
   * Gets or sets a value indicating whether the error is customer resolvable.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isCustomerResolvable?: boolean;
  /**
   * Gets or sets the error summary.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly summary?: string;
  /**
   * Gets or sets the error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Gets or sets possible causes of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly causes?: string;
  /**
   * Gets or sets recommended action to resolve the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendation?: string;
}

/** Inner health error model. */
export interface InnerHealthErrorModel {
  /**
   * Gets the ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Gets or sets the health category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthCategory?: string;
  /**
   * Gets or sets the error category.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly category?: string;
  /**
   * Gets or sets the error severity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly severity?: string;
  /**
   * Gets or sets the error source.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly source?: string;
  /**
   * Gets or sets the error creation time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /**
   * Gets or sets a value indicating whether the error is customer resolvable.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isCustomerResolvable?: boolean;
  /**
   * Gets or sets the error summary.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly summary?: string;
  /**
   * Gets or sets the error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Gets or sets possible causes of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly causes?: string;
  /**
   * Gets or sets recommended action to resolve the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendation?: string;
}

/** MigrateAgent model custom properties. */
export interface MigrateAgentModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareMigrateAgentModelCustomProperties";
}

/** MigrateAgent model collection. */
export interface MigrateAgentModelCollection {
  /** Gets or sets the list of agents. */
  value?: MigrateAgentModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** Defines the operation status. */
export interface OperationStatus {
  /**
   * Gets the Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets the operation name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets the status of the operation. ARM expects the terminal status to be one of
   * Succeeded/ Failed/ Canceled. All other values imply that the operation is still running.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * Gets the start time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: string;
  /**
   * Gets the end time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: string;
}

/** ModernizeProject model. */
export interface ModernizeProjectModel {
  /** Gets or sets the location of the modernizeProject. */
  location?: string;
  /** ModernizeProject properties. */
  properties?: ModernizeProjectModelProperties;
  identity?: ResourceIdentity;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: ModernizeProjectModelSystemData;
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
}

/** ModernizeProject properties. */
export interface ModernizeProjectModelProperties {
  /**
   * Gets or sets the provisioning state of the ModernizeProject.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Gets or sets the service resource Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceResourceId?: string;
  /**
   * Gets or sets the service endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serviceEndpoint?: string;
  /** MigrationConfiguration properties. */
  migrationConfiguration?: MigrationConfiguration;
}

/** MigrationConfiguration properties. */
export interface MigrationConfiguration {
  /** Gets or sets the storage account resource Id. */
  storageAccountResourceId?: string;
  /** Gets or sets the key vault resource Id. */
  keyVaultResourceId?: string;
  /** Gets or sets the migration solution resource Id. */
  migrationSolutionResourceId?: string;
}

export interface ResourceIdentity {
  principalId?: string;
  tenantId?: string;
  type?: ResourceIdentityTypes;
  /** Dictionary of <UserAssignedIdentity> */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

export interface UserAssignedIdentity {
  principalId?: string;
  clientId?: string;
}

/** Update ModernizeProject model. */
export interface UpdateModernizeProjectModel {
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
  identity?: ResourceIdentity;
}

/** ModernizeProject model collection. */
export interface ModernizeProjectModelCollection {
  /** Gets or sets the list of modernizeProjects. */
  value?: ModernizeProjectModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** ModernizeProject statistics model. */
export interface ModernizeProjectStatisticsModel {
  /** ModernizeProject statistics properties. */
  properties?: ModernizeProjectStatisticsModelProperties;
}

/** ModernizeProject statistics properties. */
export interface ModernizeProjectStatisticsModelProperties {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly workloadDeploymentStatistics?: ModernizeProjectStatisticsModelPropertiesWorkloadDeploymentStatistics;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly jobStatistics?: ModernizeProjectStatisticsModelPropertiesJobStatistics;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly workloadInstanceStatistics?: ModernizeProjectStatisticsModelPropertiesWorkloadInstanceStatistics;
  /**
   * Gets or sets the list of modernizeProject health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly modernizeProjectErrors?: HealthErrorModel[];
}

/** Workload deployment statistics. */
export interface WorkloadDeploymentStatisticsModel {
  /**
   * Gets or sets the list of health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthErrorModel[];
  /**
   * Gets or sets the resource count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly count?: number;
  /**
   * Gets or sets the categorized resource counts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly categorizedCounts?: { [propertyName: string]: number };
}

/** Workflow statistics. */
export interface WorkflowStatisticsModel {
  /**
   * Gets or sets the resource count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly count?: number;
  /**
   * Gets or sets the categorized resource counts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly categorizedCounts?: { [propertyName: string]: number };
}

/** Workload instance statistics. */
export interface WorkloadInstanceStatisticsModel {
  /**
   * Gets or sets the list of health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthErrorModel[];
  /**
   * Gets or sets the resource count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly count?: number;
  /**
   * Gets or sets the categorized resource counts.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly categorizedCounts?: { [propertyName: string]: number };
}

/** Workflow model. */
export interface WorkflowModel {
  /** Workflow model properties. */
  properties?: WorkflowModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: WorkflowModelSystemData;
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Workflow model properties. */
export interface WorkflowModelProperties {
  /**
   * Gets or sets the friendly display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * Gets or sets the workflow state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: WorkflowState;
  /**
   * Gets or sets the start time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * Gets or sets the end time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
  /**
   * Gets or sets the affected object Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectId?: string;
  /**
   * Gets or sets the affected object name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectName?: string;
  /**
   * Gets or sets the affected object internal Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectInternalId?: string;
  /**
   * Gets or sets the affected object internal name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectInternalName?: string;
  /**
   * Gets or sets the object type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly objectType?: WorkflowObjectType;
  /**
   * Gets or sets the workload instance provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly workloadInstanceProviderId?: string;
  /**
   * Gets or sets the workload deployment provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly workloadDeploymentProviderId?: string;
  /**
   * Gets or sets the list of allowed actions on the workflow.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allowedActions?: string[];
  /**
   * Gets or sets the workflow activity id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activityId?: string;
  /**
   * Gets or sets the list of tasks.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tasks?: TaskModel[];
  /**
   * Gets or sets the list of errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: ErrorModel[];
  /** Workflow model custom properties. */
  customProperties?: WorkflowModelCustomPropertiesUnion;
}

/** Task model. */
export interface TaskModel {
  /**
   * Gets the ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the task name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly taskName?: string;
  /**
   * Gets or sets the task state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: TaskState;
  /**
   * Gets or sets the start time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * Gets or sets the end time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
  /** Task model custom properties. */
  customProperties?: TaskModelCustomProperties;
}

/** Task model custom properties. */
export interface TaskModelCustomProperties {
  /** Gets or sets the instance type. */
  instanceType?: string;
}

/** Error model. */
export interface ErrorModel {
  /**
   * Gets the ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Gets or sets the error type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Gets or sets the error severity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly severity?: string;
  /**
   * Gets or sets the creation time of error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTime?: Date;
  /**
   * Gets or sets the error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * Gets or sets the possible causes of error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly causes?: string;
  /**
   * Gets or sets the recommended action to resolve error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly recommendation?: string;
}

/** Workflow model custom properties. */
export interface WorkflowModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "BuildContainerImageWorkflowModelCustomProperties"
    | "EnableReplicationWorkflowModelCustomProperties"
    | "MigrateWorkflowModelCustomProperties"
    | "TestMigrateCleanupWorkflowModelCustomProperties"
    | "TestMigrateWorkflowModelCustomProperties";
  /**
   * Gets or sets any custom properties of the affected object.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly affectedObjectDetails?: { [propertyName: string]: string };
}

/** Workflow model collection. */
export interface WorkflowModelCollection {
  /** Gets or sets the list of workflows. */
  value?: WorkflowModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** Workload deployment model. */
export interface WorkloadDeploymentModel {
  /** Workload deployment model properties. */
  properties?: WorkloadDeploymentModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: WorkloadDeploymentModelSystemData;
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Workload deployment model properties. */
export interface WorkloadDeploymentModelProperties {
  /**
   * Gets or sets the provisioning state of the workload deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Gets or sets the workload deployment status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: WorkloadStatus;
  /**
   * Gets or sets the workload deployment status description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusDescription?: string;
  /**
   * Gets or sets the test migrate state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testMigrationStatus?: ClientFacingTestMigrateStatus;
  /**
   * Gets or sets the Test migrate state description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly testMigrationStatusDescription?: string;
  /**
   * Gets or sets the migrate state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationStatus?: ClientFacingMigrateStatus;
  /**
   * Gets or sets the migrate state description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly migrationStatusDescription?: string;
  /** Gets or sets the display name. */
  displayName?: string;
  /** Gets or sets the deployment target platform. */
  targetPlatform?: WorkloadDeploymentTarget;
  /** Workload instance model properties. */
  workloadInstanceProperties?: WorkloadInstanceModelProperties;
  /**
   * Gets or sets the workload deployment correlation Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly correlationId?: string;
  /**
   * Gets or sets the Last successful unplanned migrate time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSuccessfulMigrateTime?: Date;
  /**
   * Gets or sets the Last successful test migrate time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSuccessfulTestMigrateTime?: Date;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly currentJob?: WorkloadDeploymentModelPropertiesCurrentJob;
  /**
   * Gets or sets the allowed scenarios on the workload deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allowedOperations?: WorkloadScenario[];
  /**
   * Gets or sets the list of health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthErrorModel[];
  /** Workload deployment model custom properties. */
  customProperties?: WorkloadDeploymentModelCustomPropertiesUnion;
}

/** Workload instance model properties. */
export interface WorkloadInstanceModelProperties {
  /** Gets or sets the workload instance name. */
  name?: string;
  /**
   * Gets or sets the provisioning state of the workload instance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Gets or sets the migrate agent id associated with the workload instance. */
  migrateAgentId?: string;
  /** Gets or sets the display name. */
  displayName?: string;
  /** Gets or sets the source platform. */
  sourcePlatform?: string;
  /** Gets or sets the source name. */
  sourceName?: string;
  /**
   * Gets or sets the replication health of the workload instance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly replicationHealth?: HealthStatus;
  /**
   * Gets or sets the replication state of the workload instance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly replicationStatus?: ClientFacingReplicationStatus;
  /**
   * Gets or sets the workload replication state description.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly replicationStatusDescription?: string;
  /**
   * Gets or sets the Last successful replication cycle time.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastSuccessfulReplicationCycleTime?: Date;
  /**
   * Gets or sets the list of health errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthErrors?: HealthErrorModel[];
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly currentJob?: WorkloadInstanceModelPropertiesCurrentJob;
  /**
   * Gets or sets the allowed scenarios on the workload instance.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allowedOperations?: string[];
  /** Gets or Sets the master site name. */
  masterSiteName?: string;
  /** Workload instance model custom properties. */
  customProperties?: WorkloadInstanceModelCustomPropertiesUnion;
}

/** Workload job properties. */
export interface WorkloadJobProperties {
  /**
   * Gets or sets workload scenario name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scenarioName?: string;
  /**
   * Gets or sets workflow Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets workflow name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the workflow friendly display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * Gets or sets workflow state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: string;
  /**
   * Gets or sets start time of the workflow.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * Gets or sets end time of the workflow.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
}

/** Workload instance model custom properties. */
export interface WorkloadInstanceModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "ApacheTomcatWorkloadInstanceModelCustomProperties"
    | "IISWorkloadInstanceModelCustomProperties";
  /** Gets or sets the Web application ARM id. */
  webAppArmId?: string;
  /** Gets or sets the Web application site name. */
  webAppSiteName?: string;
}

/** Workload deployment model custom properties. */
export interface WorkloadDeploymentModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType:
    | "ApacheTomcatAKSWorkloadDeploymentModelCustomProperties"
    | "IISAKSWorkloadDeploymentModelCustomProperties";
}

/** Workload deployment model collection. */
export interface WorkloadDeploymentModelCollection {
  /** Gets or sets the list of workload deployments. */
  value?: WorkloadDeploymentModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** BuildContainerImage model. */
export interface BuildContainerImageModel {
  /** Class for container image properties. */
  properties?: ContainerImageProperties;
}

/** Class for container image properties. */
export interface ContainerImageProperties {
  /**
   * Gets the ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /** Gets or sets the dockerfile for the container image. */
  dockerfile?: string;
  /** Class for ACR Properties. */
  registryProperties?: ACRProperties;
  /** Gets or sets the container image tag. */
  imageTag?: string;
  /** Gets or sets the container image name. */
  imageName?: string;
  /** Gets or sets the RunId. */
  runId?: string;
  /** Gets or sets the RunStatus. */
  runStatus?: string;
}

/** Class for ACR Properties. */
export interface ACRProperties {
  /** Gets or sets the azure container registry name. */
  registryName?: string;
  /** Gets or sets the tenant id. */
  tenantId?: string;
  /** Gets or sets the subscription id of the resource. */
  subscriptionId?: string;
  /** Gets or sets the resource group of the resource. */
  resourceGroup?: string;
}

/** Test migrate model. */
export interface TestMigrateModel {
  /** Test migrate model properties. */
  properties?: TestMigrateModelProperties;
}

/** Test migrate model properties. */
export interface TestMigrateModelProperties {
  /** Workload deployment model custom properties. */
  customProperties?: WorkloadDeploymentModelCustomPropertiesUnion;
}

/** Workload instance model. */
export interface WorkloadInstanceModel {
  /** Workload instance model properties. */
  properties?: WorkloadInstanceModelProperties;
  /**
   * Gets or sets the Id of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Gets or sets the type of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly systemData?: WorkloadInstanceModelSystemData;
  /** Gets or sets the resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Workload instance model collection. */
export interface WorkloadInstanceModelCollection {
  /** Gets or sets the list of workload instances. */
  value?: WorkloadInstanceModel[];
  /** Gets or sets the value of next link. */
  nextLink?: string;
}

/** Class for AKSDeployment Properties. */
export interface AKSDeploymentProperties {
  /** Gets or sets the AKS cluster name. */
  aksClusterName?: string;
  /** Gets or sets the tenant id. */
  tenantId?: string;
  /** Gets or sets the subscription id of the resource. */
  subscriptionId?: string;
  /** Gets or sets the resource group of the resource. */
  resourceGroup?: string;
}

/** AKS Deployment Specification. */
export interface AKSDeploymentSpecification {
  /** Gets or sets the Merged Deployment and service Yaml. */
  kubernetesObjectsYaml?: string;
  /** Gets or sets the replica count to be created in AKS. */
  replicaCount?: string;
  /** Gets or sets the load balancer type. */
  loadBalancerType?: LoadBalancerType;
}

/** ApacheTomcat web application. */
export interface ApacheTomcatAKSWorkloadDeployment {
  /** Class for AKSDeployment Properties. */
  clusterProperties?: AKSDeploymentProperties;
  /** AKS Deployment Specification. */
  deploymentSpec?: AKSDeploymentSpecification;
  /**
   * Gets or sets the deployment history.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deploymentHistory?: DeployedResourcesProperties[];
  /** Gets or sets the deployment name prefix. */
  deploymentNamePrefix?: string;
  /** Class for automation artifact. */
  automationArtifactProperties?: AutomationArtifact;
  /** Gets or sets application directories. */
  directories?: WebApplicationDirectory[];
  /** Gets or sets application configuration. */
  configurations?: WebApplicationConfiguration[];
  /** Class for container image properties. */
  containerImageProperties?: ContainerImageProperties;
  /** Gets or sets the build container images. */
  buildContainerImages?: ContainerImageProperties[];
  /** Gets or sets the bindings for the application. */
  bindings?: Binding[];
  /** Resource Requirements. */
  requests?: ResourceRequirements;
  /** Resource Requirements. */
  limits?: ResourceRequirements;
  /** Gets or sets the target platform managed identity. */
  targetPlatformIdentity?: string;
  /** Class for app insight monitoring properties. */
  monitoringProperties?: AppInsightMonitoringProperties;
}

/** Class for deployed resource properties. */
export interface DeployedResourcesProperties {
  /**
   * Gets or sets the ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets the deployed resource id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deployedResourceId?: string;
  /**
   * Gets or sets the name of deployed resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * Gets or sets the context of deployed resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly context?: string;
  /**
   * Gets or sets the status of deployed resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * Gets or sets the type of deployed resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Gets or sets the deployment timestamp.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deploymentTimestamp?: Date;
  /**
   * Gets or sets a value indicating whether resources are cleaned up from target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isCleanUpDone?: boolean;
  /**
   * Gets or sets a value indicating whether scenario is test migration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isTestMigration?: boolean;
}

/** Class for automation artifact. */
export interface AutomationArtifact {
  /** Gets or sets the status of automation artifacts. */
  status?: AutomationArtifactStatus;
  /**
   * Azure file share profile for hydration of application folders not mounted on
   * the container file system.
   */
  azureFileShareProfile?: AzureFileShareHydrationProfile;
  /** Gets or sets the artifacts. */
  artifacts?: { [propertyName: string]: string };
}

/**
 * Azure file share profile for hydration of application folders not mounted on
 * the container file system.
 */
export interface AzureFileShareHydrationProfile {
  /** Gets or sets the name of the azure file share. */
  azureFileShareName?: string;
  /** Gets or sets the subscription id of the azure file share. */
  azureFileShareSubscriptionId?: string;
  /** Gets or sets the name of the azure file share resource group. */
  azureFileShareResourceGroup?: string;
  /** Gets or sets the name of the azure file share storage account. */
  azureFileShareStorageAccount?: string;
  /** Gets or sets the cloud directory path of the directory on azure file share. */
  azureFileShareDirPath?: string;
}

/** WebApplication directory structure. */
export interface WebApplicationDirectory {
  /**
   * Gets the unique id corresponding to the application directory.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets or sets a value indicating whether the directory object is editable.
   * True when the directory is added as an optional directory, false when discovery is done
   * manually.
   */
  isEditable?: boolean;
  /** Gets or sets the paths of the directory on the source machine. */
  sourcePaths?: string[];
  /** Gets or sets the size of the directory on the source machine. */
  sourceSize?: string;
  /** Storage profile for the directory on the target container. */
  storageProfile?: TargetStorageProfile;
}

/** Storage profile for the directory on the target container. */
export interface TargetStorageProfile {
  /** Gets or sets the target storage access type. */
  storageAccessType?: TargetStorageAccessType;
  /** Gets or sets the target projection type. */
  storageProjectionType?: TargetStorageProjectionType;
  /**
   * Gets or sets the storage provider type on the target.
   * Applicable when StorageProjectionType is not ContainerFileSystem.
   */
  hydrationStorageProviderType?: TargetHydrationStorageProviderType;
  /**
   * Gets or sets the target persistent volume id.
   * Applicable when StorageProjectionType is PersistentVolume and on using an
   * existing PersistentVolume.
   */
  persistentVolumeId?: string;
  /** Gets or sets the name of the projected volume on the target environment. */
  targetName?: string;
  /**
   * Gets or sets the storage size on the target.
   * Applicable when StorageProjectionType is PersistentVolume and on creating a new
   * PersistentVolume.
   */
  targetSize?: string;
  /**
   * Azure file share profile for hydration of application folders not mounted on
   * the container file system.
   */
  azureFileShareProfile?: AzureFileShareHydrationProfile;
}

/** Class for web application configurations. */
export interface WebApplicationConfiguration {
  /**
   * Gets the ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /** Gets or sets the configuration name. */
  name?: string;
  /** Gets or sets the configuration file path. */
  filePath?: string;
  /** Gets or sets the configuration local file path. */
  localFilePath?: string;
  /** Gets or sets the configuration target file path. */
  targetFilePath?: string;
  /** Gets or sets the configuration section in the file. */
  section?: string;
  /** Gets or sets the configuration type. */
  type?: ConfigurationType;
  /** Gets or sets a value indicating whether the configuration is edited or not by the user. */
  isDeploymentTimeEditable?: boolean;
  /** Gets or sets the configuration value. */
  value?: string;
  /** Gets or sets the identifier for the configuration. */
  identifier?: string;
  secretStoreDetails?: SecretStoreDetails;
}

export interface SecretStoreDetails {
  /** Gets or sets the type of secret store for the certificate. */
  secretStore?: SecretStoreType;
  secretStoreProperties?: SecretStoreProperties;
}

export interface SecretStoreProperties {
  secretStoreId?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly inputType?: string;
}

/** Binding for a web application. */
export interface Binding {
  /**
   * Gets the ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /** Gets or sets the application port. */
  port?: string;
  /** WebApplication port mapping. */
  portMapping?: PortMapping;
  /** WebApplication certificate. */
  cert?: Cert;
  /** Gets or sets the binding host name. */
  hostName?: string;
  /** Gets or sets the protocol. */
  protocol?: string;
  /** Gets or sets the IP Address. */
  ipAddress?: string;
}

/** WebApplication port mapping. */
export interface PortMapping {
  /** Gets or sets the Internal Port. */
  internalPort?: number;
  /** Gets or sets the External Port. */
  externalPort?: number;
}

/** WebApplication certificate. */
export interface Cert {
  /** Gets or sets a value indicating whether certificate is needed or not. */
  certNeeded?: boolean;
  /** Gets or sets a value indicating whether certificate is provided or not. */
  certProvided?: boolean;
  /** Gets or sets the Certificate data. */
  certData?: Uint8Array;
  /** Gets or sets the type of secret store for the certificate. */
  secretStore?: SecretStoreType;
}

/** Resource Requirements. */
export interface ResourceRequirements {
  /** Gets or sets the Cpu requirement. */
  cpu?: string;
  /** Gets or sets the Memory requirement. */
  memory?: string;
}

/** Class for app insight monitoring properties. */
export interface AppInsightMonitoringProperties {
  /** Gets or sets the subscription id of the resource. */
  subscriptionId?: string;
  /** Gets or sets the resource group of the resource. */
  resourceGroup?: string;
  /** Gets or sets the app insights name. */
  appInsightsName?: string;
  /** Gets or sets the region. */
  region?: string;
  /** Gets or sets a value indicating whether monitoring is enabled. */
  isEnabled?: boolean;
  secretStoreDetails?: SecretStoreDetails;
}

/** ApacheTomcat web application. */
export interface ApacheTomcatWebApplication {
  /** Gets or sets the web application id. */
  applicationId?: string;
  /** Gets or sets the web application name. */
  applicationName?: string;
  /** Gets or sets application scratch path. */
  applicationScratchPath?: string;
  /** Gets or sets the web server id. */
  webServerId?: string;
  /** Gets or sets the web server name. */
  webServerName?: string;
  /** Gets or sets the display name. */
  displayName?: string;
  /** Gets or sets application directories. */
  directories?: WebApplicationDirectory[];
  /** Gets or sets application configuration. */
  configurations?: WebApplicationConfiguration[];
  /** Second level entity for virtual directories. */
  path?: DirectoryPath;
  /** Gets or sets the bindings for the application. */
  bindings?: Binding[];
  /** Framework specific data for a web application. */
  primaryFramework?: WebApplicationFramework;
  /** Gets or sets the discovered frameworks of application. */
  discoveredFrameworks?: WebApplicationFramework[];
  /** Resource Requirements. */
  requests?: ResourceRequirements;
  /** Resource Requirements. */
  limits?: ResourceRequirements;
}

/** Second level entity for virtual directories. */
export interface DirectoryPath {
  /**
   * Gets the ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /** Gets or sets the virtual path for the directory. */
  virtual?: string;
  /** Gets or sets the physical path of the directory on the web server. */
  physical?: string;
}

/** Framework specific data for a web application. */
export interface WebApplicationFramework {
  /**
   * Gets the ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /** Gets or sets Name of the framework. */
  name?: string;
  /** Gets or sets Version of the framework. */
  version?: string;
}

/** Class for GMSA authentication details to configure Active Directory connectivity. */
export interface GmsaAuthenticationProperties {
  /**
   * Gets or sets the current state of GMSA configuration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly configurationState?: GmsaConfigurationState;
  /** Gets or sets the name to be used for GMSA. */
  gmsaAccountName?: string;
  /** Gets or sets username of the user having authorization to access GMSA on Active Directory. */
  gmsaUsername?: string;
  /** Gets or sets the password of the user specified by RestApi.Controllers.V2022_05_01_preview.Models.WorkloadDeployment.Gmsa.GmsaAuthenticationProperties.GmsaUsername. */
  gmsaUserPassword?: string;
  /** Gets or sets the list of dns server that can resolve the Active Directory Domain Name/Address. */
  adDomainControllerDns?: string;
  /** Gets or sets the FQDN of the Active Directory Domain. For e.g. 'contoso.local', 'fareast.corp.microsoft.com' etc. */
  adDomainFqdn?: string;
  /** Gets or sets the address of the Active Directory Domain Controller running Domain Services. */
  domainControllerAddress?: string;
  /** Gets or sets the name of the user having admin rights on the Active Directory Domain Controller. */
  domainAdminUsername?: string;
  /** Gets or sets the password of the user specified by RestApi.Controllers.V2022_05_01_preview.Models.WorkloadDeployment.Gmsa.GmsaAuthenticationProperties.DomainAdminUsername. */
  domainAdminPassword?: string;
  akvProperties?: KeyVaultSecretStoreProperties;
  /**
   * Gets Cred Spec Name to be used.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gmsaCredSpecName?: string;
  /**
   * Gets name of the secret where GMSA secret is stored in the KeyVault.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gmsaSecretName?: string;
}

export interface ManagedIdentityProperties {
  tenantId?: string;
  subscriptionId?: string;
  resourceGroup?: string;
  managedIdentityName?: string;
  clientId?: string;
  principalId?: string;
}

/** IIS AKS workload deployment. */
export interface IisaksWorkloadDeployment {
  /** Class for AKSDeployment Properties. */
  clusterProperties?: AKSDeploymentProperties;
  /** AKS Deployment Specification. */
  deploymentSpec?: AKSDeploymentSpecification;
  /**
   * Gets or sets the deployment history.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deploymentHistory?: DeployedResourcesProperties[];
  /** Class for GMSA authentication details to configure Active Directory connectivity. */
  authenticationProperties?: GmsaAuthenticationProperties;
  /** Gets or sets the deployment name prefix. */
  deploymentNamePrefix?: string;
  /** Class for automation artifact. */
  automationArtifactProperties?: AutomationArtifact;
  /** Gets or sets application directories. */
  directories?: WebApplicationDirectory[];
  /** Gets or sets application configuration. */
  configurations?: WebApplicationConfiguration[];
  /** Class for container image properties. */
  containerImageProperties?: ContainerImageProperties;
  /** Gets or sets the build container images. */
  buildContainerImages?: ContainerImageProperties[];
  /** Gets or sets the bindings for the application. */
  bindings?: Binding[];
  /** Resource Requirements. */
  requests?: ResourceRequirements;
  /** Resource Requirements. */
  limits?: ResourceRequirements;
  /** Gets or sets the target platform managed identity. */
  targetPlatformIdentity?: string;
  /** Class for app insight monitoring properties. */
  monitoringProperties?: AppInsightMonitoringProperties;
}

/** IISApplication details. */
export interface IISApplicationDetails {
  /**
   * Gets the ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /** Gets or sets the application pool name. */
  applicationPoolName?: string;
  /** Gets or sets the managed pipeline mode. */
  managedPipelineMode?: string;
  /** Gets or sets the runtime version. */
  runtimeVersion?: string;
  /** Gets or sets a value indicating whether 32 bit applications are allowed to run on 64 bit. */
  enable32BitApiOnWin64?: boolean;
  /** Second level entity for virtual directories. */
  path?: DirectoryPath;
  /** Gets or sets the list of directories. */
  directories?: DirectoryPath[];
}

/** IIS virtual application details. */
export interface IISVirtualApplicationDetails {
  /**
   * Gets the ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Gets a value indicating whether the application corresponds to a directory.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isVirtualDirectory?: boolean;
  /** Second level entity for virtual directories. */
  path?: DirectoryPath;
  /** Gets or sets the list of directories. */
  directories?: DirectoryPath[];
}

/** IISWeb application. */
export interface IISWebApplication {
  /** Gets or sets the list of applications for the IIS web site. */
  applications?: IISApplicationDetails[];
  /** Gets or sets the list of application units for the web site. */
  virtualApplications?: IISVirtualApplicationDetails[];
  /** IISWeb server. */
  iisWebServer?: IISWebServer;
  /** Gets or sets the web application id. */
  applicationId?: string;
  /** Gets or sets the web application name. */
  applicationName?: string;
  /** Gets or sets application scratch path. */
  applicationScratchPath?: string;
  /** Gets or sets the web server id. */
  webServerId?: string;
  /** Gets or sets the web server name. */
  webServerName?: string;
  /** Gets or sets the display name. */
  displayName?: string;
  /** Gets or sets application directories. */
  directories?: WebApplicationDirectory[];
  /** Gets or sets application configuration. */
  configurations?: WebApplicationConfiguration[];
  /** Second level entity for virtual directories. */
  path?: DirectoryPath;
  /** Gets or sets the bindings for the application. */
  bindings?: Binding[];
  /** Framework specific data for a web application. */
  primaryFramework?: WebApplicationFramework;
  /** Gets or sets the discovered frameworks of application. */
  discoveredFrameworks?: WebApplicationFramework[];
  /** Resource Requirements. */
  requests?: ResourceRequirements;
  /** Resource Requirements. */
  limits?: ResourceRequirements;
}

/** IISWeb server. */
export interface IISWebServer {
  /** Gets or sets the web server id. */
  serverId?: string;
  /** Gets or sets the web server name. */
  serverName?: string;
  /** Gets or sets the server root configuration location. */
  rootConfigurationLocation?: string;
  /** Gets or sets the server version. */
  version?: string;
  /** Gets or sets the list of machines. */
  machines?: string[];
  /** Gets or sets the list of web applications. */
  webApplications?: string[];
  /** Gets or sets the display name. */
  displayName?: string;
  /** Gets or sets the server FQDN. */
  serverFqdn?: string;
  /** Gets or sets list of ip addresses. */
  ipAddresses?: string[];
  /** Gets or sets the run as account id. */
  runAsAccountId?: string;
  operatingSystemDetails?: OperatingSystemDetails;
}

export interface OperatingSystemDetails {
  os?: OperatingSystemType;
  osName?: string;
  osVersion?: string;
  osArchitecture?: string;
}

export interface DeployedResourceModelSystemData extends SystemDataModel {}

export interface MigrateAgentModelSystemData extends SystemDataModel {}

export interface ModernizeProjectModelSystemData extends SystemDataModel {}

export interface WorkflowModelSystemData extends SystemDataModel {}

export interface WorkloadDeploymentModelSystemData extends SystemDataModel {}

export interface WorkloadInstanceModelSystemData extends SystemDataModel {}

/** VMware MigrateAgent model custom properties. */
export interface VMwareMigrateAgentModelCustomProperties
  extends MigrateAgentModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "VMwareMigrateAgentModelCustomProperties";
  /** Gets or sets the master Site Id of the Migrate Agent. */
  vmwareSiteId?: string;
  /** Gets or sets the friendly name of the,of the MigrateAgent fabric. */
  fabricFriendlyName?: string;
}

export interface ModernizeProjectStatisticsModelPropertiesWorkloadDeploymentStatistics
  extends WorkloadDeploymentStatisticsModel {}

export interface ModernizeProjectStatisticsModelPropertiesJobStatistics
  extends WorkflowStatisticsModel {}

export interface ModernizeProjectStatisticsModelPropertiesWorkloadInstanceStatistics
  extends WorkloadInstanceStatisticsModel {}

/** Build container image workflow model custom properties. */
export interface BuildContainerImageWorkflowModelCustomProperties
  extends WorkflowModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "BuildContainerImageWorkflowModelCustomProperties";
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly containerImageProperties?: BuildContainerImageWorkflowModelCustomPropertiesContainerImageProperties;
}

/** Enable replication workflow model custom properties. */
export interface EnableReplicationWorkflowModelCustomProperties
  extends WorkflowModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "EnableReplicationWorkflowModelCustomProperties";
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly workloadInstanceProperties?: EnableReplicationWorkflowModelCustomPropertiesWorkloadInstanceProperties;
}

/** Migrate workflow model custom properties. */
export interface MigrateWorkflowModelCustomProperties
  extends WorkflowModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "MigrateWorkflowModelCustomProperties";
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly deployedResourcesProperties?: MigrateWorkflowModelCustomPropertiesDeployedResourcesProperties;
}

/** Test migrate cleanup workflow model custom properties. */
export interface TestMigrateCleanupWorkflowModelCustomProperties
  extends WorkflowModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "TestMigrateCleanupWorkflowModelCustomProperties";
  /**
   * Gets or sets the test migrate cleanup comments.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly comments?: string;
}

/** Test migrate workflow model custom properties. */
export interface TestMigrateWorkflowModelCustomProperties
  extends WorkflowModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "TestMigrateWorkflowModelCustomProperties";
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly deployedResourcesProperties?: TestMigrateWorkflowModelCustomPropertiesDeployedResourcesProperties;
}

export interface EnableReplicationWorkflowModelCustomPropertiesWorkloadInstanceProperties
  extends WorkloadInstanceModelProperties {}

export interface WorkloadInstanceModelPropertiesCurrentJob
  extends WorkloadJobProperties {}

export interface WorkloadDeploymentModelPropertiesCurrentJob
  extends WorkloadJobProperties {}

/** ApacheTomcat workload instance model custom properties. */
export interface ApacheTomcatWorkloadInstanceModelCustomProperties
  extends WorkloadInstanceModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "ApacheTomcatWorkloadInstanceModelCustomProperties";
  /** ApacheTomcat web application. */
  apacheTomcatWebApplication?: ApacheTomcatWebApplication;
}

/** IIS workload instance model custom properties. */
export interface IISWorkloadInstanceModelCustomProperties
  extends WorkloadInstanceModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "IISWorkloadInstanceModelCustomProperties";
  /** IISWeb application. */
  iisWebApplication?: IISWebApplication;
  /** Gets or sets the container Id. */
  containerName?: string;
  /** Gets or sets the fileshare name. */
  fileshareName?: string;
}

/** ApacheTomcat workload instance model custom properties. */
export interface ApacheTomcatAKSWorkloadDeploymentModelCustomProperties
  extends WorkloadDeploymentModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "ApacheTomcatAKSWorkloadDeploymentModelCustomProperties";
  /** ApacheTomcat web application. */
  apacheTomcatAksWorkloadDeploymentProperties?: ApacheTomcatAKSWorkloadDeployment;
}

/** IIS workload instance model custom properties. */
export interface IisaksWorkloadDeploymentModelCustomProperties
  extends WorkloadDeploymentModelCustomProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  instanceType: "IISAKSWorkloadDeploymentModelCustomProperties";
  /** IIS AKS workload deployment. */
  iisAksWorkloadDeploymentProperties?: IisaksWorkloadDeployment;
}

export interface BuildContainerImageWorkflowModelCustomPropertiesContainerImageProperties
  extends ContainerImageProperties {}

export interface MigrateWorkflowModelCustomPropertiesDeployedResourcesProperties
  extends DeployedResourcesProperties {}

export interface TestMigrateWorkflowModelCustomPropertiesDeployedResourcesProperties
  extends DeployedResourcesProperties {}

export interface AppServiceSettingSecretStoreProperties
  extends SecretStoreProperties {
  tenantId?: string;
  subscriptionId?: string;
  resourceGroup?: string;
  appServiceName?: string;
}

export interface KeyVaultSecretStoreProperties extends SecretStoreProperties {
  tenantId?: string;
  subscriptionId?: string;
  resourceGroup?: string;
  keyvaultName?: string;
  managedIdentityProperties?: ManagedIdentityProperties;
}

export interface KubeSecretStoreProperties extends SecretStoreProperties {}

/** Defines headers for MigrateAgent_delete operation. */
export interface MigrateAgentDeleteHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for MigrateAgent_refresh operation. */
export interface MigrateAgentRefreshHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for ModernizeProject_update operation. */
export interface ModernizeProjectUpdateHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for ModernizeProject_delete operation. */
export interface ModernizeProjectDeleteHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for WorkloadDeployment_delete operation. */
export interface WorkloadDeploymentDeleteHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for WorkloadDeployment_buildContainerImage operation. */
export interface WorkloadDeploymentBuildContainerImageHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for WorkloadDeployment_testMigrate operation. */
export interface WorkloadDeploymentTestMigrateHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for WorkloadDeployment_testMigrateCleanup operation. */
export interface WorkloadDeploymentTestMigrateCleanupHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for WorkloadDeployment_migrate operation. */
export interface WorkloadDeploymentMigrateHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for WorkloadInstance_delete operation. */
export interface WorkloadInstanceDeleteHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for WorkloadInstance_migrateComplete operation. */
export interface WorkloadInstanceMigrateCompleteHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Defines headers for WorkloadInstance_stopReplicate operation. */
export interface WorkloadInstanceStopReplicateHeaders {
  /** Tracking URL for long running operation. */
  azureAsyncOperation?: string;
  location?: string;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link WorkloadDeploymentTarget} that the service accepts. */
export enum KnownWorkloadDeploymentTarget {
  /** AzureKubernetesService */
  AzureKubernetesService = "AzureKubernetesService",
  /** AzureAppServiceContainer */
  AzureAppServiceContainer = "AzureAppServiceContainer",
  /** AzureAppServiceNative */
  AzureAppServiceNative = "AzureAppServiceNative",
}

/**
 * Defines values for WorkloadDeploymentTarget. \
 * {@link KnownWorkloadDeploymentTarget} can be used interchangeably with WorkloadDeploymentTarget,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureKubernetesService** \
 * **AzureAppServiceContainer** \
 * **AzureAppServiceNative**
 */
export type WorkloadDeploymentTarget = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Canceled */
  Canceled = "Canceled",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Deleted */
  Deleted = "Deleted",
  /** Failed */
  Failed = "Failed",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Updating */
  Updating = "Updating",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Canceled** \
 * **Creating** \
 * **Deleting** \
 * **Deleted** \
 * **Failed** \
 * **Succeeded** \
 * **Updating**
 */
export type ProvisioningState = string;

/** Known values of {@link ResourceIdentityTypes} that the service accepts. */
export enum KnownResourceIdentityTypes {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
}

/**
 * Defines values for ResourceIdentityTypes. \
 * {@link KnownResourceIdentityTypes} can be used interchangeably with ResourceIdentityTypes,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned**
 */
export type ResourceIdentityTypes = string;

/** Known values of {@link WorkflowState} that the service accepts. */
export enum KnownWorkflowState {
  /** Pending */
  Pending = "Pending",
  /** Started */
  Started = "Started",
  /** Cancelling */
  Cancelling = "Cancelling",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** CompletedWithInformation */
  CompletedWithInformation = "CompletedWithInformation",
  /** CompletedWithWarnings */
  CompletedWithWarnings = "CompletedWithWarnings",
  /** CompletedWithErrors */
  CompletedWithErrors = "CompletedWithErrors",
}

/**
 * Defines values for WorkflowState. \
 * {@link KnownWorkflowState} can be used interchangeably with WorkflowState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Started** \
 * **Cancelling** \
 * **Succeeded** \
 * **Failed** \
 * **Cancelled** \
 * **CompletedWithInformation** \
 * **CompletedWithWarnings** \
 * **CompletedWithErrors**
 */
export type WorkflowState = string;

/** Known values of {@link WorkflowObjectType} that the service accepts. */
export enum KnownWorkflowObjectType {
  /** ModernizeProject */
  ModernizeProject = "ModernizeProject",
  /** MigrateAgent */
  MigrateAgent = "MigrateAgent",
  /** WorkloadInstance */
  WorkloadInstance = "WorkloadInstance",
  /** WorkloadDeployment */
  WorkloadDeployment = "WorkloadDeployment",
  /** ReplicationPostAction */
  ReplicationPostAction = "ReplicationPostAction",
}

/**
 * Defines values for WorkflowObjectType. \
 * {@link KnownWorkflowObjectType} can be used interchangeably with WorkflowObjectType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ModernizeProject** \
 * **MigrateAgent** \
 * **WorkloadInstance** \
 * **WorkloadDeployment** \
 * **ReplicationPostAction**
 */
export type WorkflowObjectType = string;

/** Known values of {@link TaskState} that the service accepts. */
export enum KnownTaskState {
  /** Pending */
  Pending = "Pending",
  /** Started */
  Started = "Started",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Cancelled */
  Cancelled = "Cancelled",
  /** Skipped */
  Skipped = "Skipped",
}

/**
 * Defines values for TaskState. \
 * {@link KnownTaskState} can be used interchangeably with TaskState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Started** \
 * **Succeeded** \
 * **Failed** \
 * **Cancelled** \
 * **Skipped**
 */
export type TaskState = string;

/** Known values of {@link WorkflowType} that the service accepts. */
export enum KnownWorkflowType {
  /** SampleWorkflow */
  SampleWorkflow = "SampleWorkflow",
  /** EnableReplicationWorkflow */
  EnableReplicationWorkflow = "EnableReplicationWorkflow",
  /** StopReplicationWorkflow */
  StopReplicationWorkflow = "StopReplicationWorkflow",
  /** BuildContainerImageWorkflow */
  BuildContainerImageWorkflow = "BuildContainerImageWorkflow",
  /** MigrateWorkflow */
  MigrateWorkflow = "MigrateWorkflow",
  /** TestMigrateWorkflow */
  TestMigrateWorkflow = "TestMigrateWorkflow",
  /** TestMigrateCleanupWorkflow */
  TestMigrateCleanupWorkflow = "TestMigrateCleanupWorkflow",
  /** CompleteMigrationWorkflow */
  CompleteMigrationWorkflow = "CompleteMigrationWorkflow",
  /** DisableReplicationWorkflow */
  DisableReplicationWorkflow = "DisableReplicationWorkflow",
}

/**
 * Defines values for WorkflowType. \
 * {@link KnownWorkflowType} can be used interchangeably with WorkflowType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SampleWorkflow** \
 * **EnableReplicationWorkflow** \
 * **StopReplicationWorkflow** \
 * **BuildContainerImageWorkflow** \
 * **MigrateWorkflow** \
 * **TestMigrateWorkflow** \
 * **TestMigrateCleanupWorkflow** \
 * **CompleteMigrationWorkflow** \
 * **DisableReplicationWorkflow**
 */
export type WorkflowType = string;

/** Known values of {@link WorkloadStatus} that the service accepts. */
export enum KnownWorkloadStatus {
  /** None */
  None = "None",
  /** InitialReplication */
  InitialReplication = "InitialReplication",
  /** ReplicationFailed */
  ReplicationFailed = "ReplicationFailed",
  /** ImageBuildPending */
  ImageBuildPending = "ImageBuildPending",
  /** ImageBuildInProgress */
  ImageBuildInProgress = "ImageBuildInProgress",
  /** ImageBuildFailed */
  ImageBuildFailed = "ImageBuildFailed",
  /** TestMigrating */
  TestMigrating = "TestMigrating",
  /** CleanUpPending */
  CleanUpPending = "CleanUpPending",
  /** CleanUpInProgress */
  CleanUpInProgress = "CleanUpInProgress",
  /** ReadyToMigrate */
  ReadyToMigrate = "ReadyToMigrate",
  /** Migrating */
  Migrating = "Migrating",
  /** Migrated */
  Migrated = "Migrated",
  /** MigrationFailed */
  MigrationFailed = "MigrationFailed",
}

/**
 * Defines values for WorkloadStatus. \
 * {@link KnownWorkloadStatus} can be used interchangeably with WorkloadStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **InitialReplication** \
 * **ReplicationFailed** \
 * **ImageBuildPending** \
 * **ImageBuildInProgress** \
 * **ImageBuildFailed** \
 * **TestMigrating** \
 * **CleanUpPending** \
 * **CleanUpInProgress** \
 * **ReadyToMigrate** \
 * **Migrating** \
 * **Migrated** \
 * **MigrationFailed**
 */
export type WorkloadStatus = string;

/** Known values of {@link ClientFacingTestMigrateStatus} that the service accepts. */
export enum KnownClientFacingTestMigrateStatus {
  /** None */
  None = "None",
  /** ImageBuildPending */
  ImageBuildPending = "ImageBuildPending",
  /** ImageBuildInProgress */
  ImageBuildInProgress = "ImageBuildInProgress",
  /** ImageBuildFailed */
  ImageBuildFailed = "ImageBuildFailed",
  /** ReadyToTestMigrate */
  ReadyToTestMigrate = "ReadyToTestMigrate",
  /** TestMigrationInProgress */
  TestMigrationInProgress = "TestMigrationInProgress",
  /** TestMigrated */
  TestMigrated = "TestMigrated",
  /** Failed */
  Failed = "Failed",
  /** CleanupInProgress */
  CleanupInProgress = "CleanupInProgress",
  /** CleanedUp */
  CleanedUp = "CleanedUp",
}

/**
 * Defines values for ClientFacingTestMigrateStatus. \
 * {@link KnownClientFacingTestMigrateStatus} can be used interchangeably with ClientFacingTestMigrateStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **ImageBuildPending** \
 * **ImageBuildInProgress** \
 * **ImageBuildFailed** \
 * **ReadyToTestMigrate** \
 * **TestMigrationInProgress** \
 * **TestMigrated** \
 * **Failed** \
 * **CleanupInProgress** \
 * **CleanedUp**
 */
export type ClientFacingTestMigrateStatus = string;

/** Known values of {@link ClientFacingMigrateStatus} that the service accepts. */
export enum KnownClientFacingMigrateStatus {
  /** None */
  None = "None",
  /** ImageBuildPending */
  ImageBuildPending = "ImageBuildPending",
  /** ImageBuildInProgress */
  ImageBuildInProgress = "ImageBuildInProgress",
  /** ImageBuildFailed */
  ImageBuildFailed = "ImageBuildFailed",
  /** ReadyToTestMigrate */
  ReadyToTestMigrate = "ReadyToTestMigrate",
  /** ReadyToMigrate */
  ReadyToMigrate = "ReadyToMigrate",
  /** TestMigrating */
  TestMigrating = "TestMigrating",
  /** TestMigrated */
  TestMigrated = "TestMigrated",
  /** TestMigrateCleanupInProgress */
  TestMigrateCleanupInProgress = "TestMigrateCleanupInProgress",
  /** Migrating */
  Migrating = "Migrating",
  /** Migrated */
  Migrated = "Migrated",
  /** Failed */
  Failed = "Failed",
}

/**
 * Defines values for ClientFacingMigrateStatus. \
 * {@link KnownClientFacingMigrateStatus} can be used interchangeably with ClientFacingMigrateStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **ImageBuildPending** \
 * **ImageBuildInProgress** \
 * **ImageBuildFailed** \
 * **ReadyToTestMigrate** \
 * **ReadyToMigrate** \
 * **TestMigrating** \
 * **TestMigrated** \
 * **TestMigrateCleanupInProgress** \
 * **Migrating** \
 * **Migrated** \
 * **Failed**
 */
export type ClientFacingMigrateStatus = string;

/** Known values of {@link HealthStatus} that the service accepts. */
export enum KnownHealthStatus {
  /** Normal */
  Normal = "Normal",
  /** Warning */
  Warning = "Warning",
  /** Critical */
  Critical = "Critical",
}

/**
 * Defines values for HealthStatus. \
 * {@link KnownHealthStatus} can be used interchangeably with HealthStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Normal** \
 * **Warning** \
 * **Critical**
 */
export type HealthStatus = string;

/** Known values of {@link ClientFacingReplicationStatus} that the service accepts. */
export enum KnownClientFacingReplicationStatus {
  /** None */
  None = "None",
  /** Scheduled */
  Scheduled = "Scheduled",
  /** InitialSync */
  InitialSync = "InitialSync",
  /** Completed */
  Completed = "Completed",
  /** Failed */
  Failed = "Failed",
}

/**
 * Defines values for ClientFacingReplicationStatus. \
 * {@link KnownClientFacingReplicationStatus} can be used interchangeably with ClientFacingReplicationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **Scheduled** \
 * **InitialSync** \
 * **Completed** \
 * **Failed**
 */
export type ClientFacingReplicationStatus = string;

/** Known values of {@link WorkloadType} that the service accepts. */
export enum KnownWorkloadType {
  /** IISWorkload */
  IISWorkload = "IISWorkload",
  /** ApacheTomcatWorkload */
  ApacheTomcatWorkload = "ApacheTomcatWorkload",
}

/**
 * Defines values for WorkloadType. \
 * {@link KnownWorkloadType} can be used interchangeably with WorkloadType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IISWorkload** \
 * **ApacheTomcatWorkload**
 */
export type WorkloadType = string;

/** Known values of {@link WorkloadScenario} that the service accepts. */
export enum KnownWorkloadScenario {
  /** EnableReplication */
  EnableReplication = "EnableReplication",
  /** DisableReplication */
  DisableReplication = "DisableReplication",
  /** CompleteMigration */
  CompleteMigration = "CompleteMigration",
  /** BuildContainerImage */
  BuildContainerImage = "BuildContainerImage",
  /** Migrate */
  Migrate = "Migrate",
  /** TestMigrate */
  TestMigrate = "TestMigrate",
  /** TestMigrateCleanup */
  TestMigrateCleanup = "TestMigrateCleanup",
  /** UpdateProperties */
  UpdateProperties = "UpdateProperties",
}

/**
 * Defines values for WorkloadScenario. \
 * {@link KnownWorkloadScenario} can be used interchangeably with WorkloadScenario,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EnableReplication** \
 * **DisableReplication** \
 * **CompleteMigration** \
 * **BuildContainerImage** \
 * **Migrate** \
 * **TestMigrate** \
 * **TestMigrateCleanup** \
 * **UpdateProperties**
 */
export type WorkloadScenario = string;

/** Known values of {@link WorkloadDeploymentType} that the service accepts. */
export enum KnownWorkloadDeploymentType {
  /** IisaksWorkloadDeployment */
  IisaksWorkloadDeployment = "IISAKSWorkloadDeployment",
  /** ApacheTomcatAKSWorkloadDeployment */
  ApacheTomcatAKSWorkloadDeployment = "ApacheTomcatAKSWorkloadDeployment",
}

/**
 * Defines values for WorkloadDeploymentType. \
 * {@link KnownWorkloadDeploymentType} can be used interchangeably with WorkloadDeploymentType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IISAKSWorkloadDeployment** \
 * **ApacheTomcatAKSWorkloadDeployment**
 */
export type WorkloadDeploymentType = string;

/** Known values of {@link LoadBalancerType} that the service accepts. */
export enum KnownLoadBalancerType {
  /** Private */
  Private = "Private",
  /** Public */
  Public = "Public",
}

/**
 * Defines values for LoadBalancerType. \
 * {@link KnownLoadBalancerType} can be used interchangeably with LoadBalancerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Private** \
 * **Public**
 */
export type LoadBalancerType = string;

/** Known values of {@link AutomationArtifactStatus} that the service accepts. */
export enum KnownAutomationArtifactStatus {
  /** NotGenerated */
  NotGenerated = "NotGenerated",
  /** Generated */
  Generated = "Generated",
}

/**
 * Defines values for AutomationArtifactStatus. \
 * {@link KnownAutomationArtifactStatus} can be used interchangeably with AutomationArtifactStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotGenerated** \
 * **Generated**
 */
export type AutomationArtifactStatus = string;

/** Known values of {@link TargetStorageAccessType} that the service accepts. */
export enum KnownTargetStorageAccessType {
  /** Shared */
  Shared = "Shared",
  /** Exclusive */
  Exclusive = "Exclusive",
}

/**
 * Defines values for TargetStorageAccessType. \
 * {@link KnownTargetStorageAccessType} can be used interchangeably with TargetStorageAccessType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Shared** \
 * **Exclusive**
 */
export type TargetStorageAccessType = string;

/** Known values of {@link TargetStorageProjectionType} that the service accepts. */
export enum KnownTargetStorageProjectionType {
  /** ContainerFileSystem */
  ContainerFileSystem = "ContainerFileSystem",
  /** PersistentVolume */
  PersistentVolume = "PersistentVolume",
}

/**
 * Defines values for TargetStorageProjectionType. \
 * {@link KnownTargetStorageProjectionType} can be used interchangeably with TargetStorageProjectionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ContainerFileSystem** \
 * **PersistentVolume**
 */
export type TargetStorageProjectionType = string;

/** Known values of {@link TargetHydrationStorageProviderType} that the service accepts. */
export enum KnownTargetHydrationStorageProviderType {
  /** AzureFileShare */
  AzureFileShare = "AzureFileShare",
}

/**
 * Defines values for TargetHydrationStorageProviderType. \
 * {@link KnownTargetHydrationStorageProviderType} can be used interchangeably with TargetHydrationStorageProviderType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureFileShare**
 */
export type TargetHydrationStorageProviderType = string;

/** Known values of {@link ConfigurationType} that the service accepts. */
export enum KnownConfigurationType {
  /** IISConnectionString */
  IISConnectionString = "IISConnectionString",
  /** IISAuthentication */
  IISAuthentication = "IISAuthentication",
  /** ApacheTomcatContextResource */
  ApacheTomcatContextResource = "ApacheTomcatContextResource",
}

/**
 * Defines values for ConfigurationType. \
 * {@link KnownConfigurationType} can be used interchangeably with ConfigurationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IISConnectionString** \
 * **IISAuthentication** \
 * **ApacheTomcatContextResource**
 */
export type ConfigurationType = string;

/** Known values of {@link SecretStoreType} that the service accepts. */
export enum KnownSecretStoreType {
  /** None */
  None = "None",
  /** KubeSecret */
  KubeSecret = "KubeSecret",
  /** KeyVaultSecret */
  KeyVaultSecret = "KeyVaultSecret",
  /** AppServiceAppSettings */
  AppServiceAppSettings = "AppServiceAppSettings",
}

/**
 * Defines values for SecretStoreType. \
 * {@link KnownSecretStoreType} can be used interchangeably with SecretStoreType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **KubeSecret** \
 * **KeyVaultSecret** \
 * **AppServiceAppSettings**
 */
export type SecretStoreType = string;

/** Known values of {@link GmsaConfigurationState} that the service accepts. */
export enum KnownGmsaConfigurationState {
  /** NotApplicable */
  NotApplicable = "NotApplicable",
  /** Pending */
  Pending = "Pending",
  /** InProgress */
  InProgress = "InProgress",
  /** Completed */
  Completed = "Completed",
  /** Failed */
  Failed = "Failed",
}

/**
 * Defines values for GmsaConfigurationState. \
 * {@link KnownGmsaConfigurationState} can be used interchangeably with GmsaConfigurationState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotApplicable** \
 * **Pending** \
 * **InProgress** \
 * **Completed** \
 * **Failed**
 */
export type GmsaConfigurationState = string;

/** Known values of {@link OperatingSystemType} that the service accepts. */
export enum KnownOperatingSystemType {
  /** Windows */
  Windows = "Windows",
  /** Linux */
  Linux = "Linux",
}

/**
 * Defines values for OperatingSystemType. \
 * {@link KnownOperatingSystemType} can be used interchangeably with OperatingSystemType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Windows** \
 * **Linux**
 */
export type OperatingSystemType = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface DeployedResourceGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DeployedResourceGetResponse = DeployedResourceModel;

/** Optional parameters. */
export interface DeployedResourceListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DeployedResourceListResponse = DeployedResourceModelCollection;

/** Optional parameters. */
export interface DeployedResourceListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type DeployedResourceListNextResponse = DeployedResourceModelCollection;

/** Optional parameters. */
export interface MigrateAgentGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MigrateAgentGetResponse = MigrateAgentModel;

/** Optional parameters. */
export interface MigrateAgentCreateOptionalParams
  extends coreClient.OperationOptions {
  /** MigrateAgent model. */
  body?: MigrateAgentModel;
}

/** Contains response data for the create operation. */
export type MigrateAgentCreateResponse = MigrateAgentModel;

/** Optional parameters. */
export interface MigrateAgentDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type MigrateAgentDeleteResponse = MigrateAgentDeleteHeaders;

/** Optional parameters. */
export interface MigrateAgentListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type MigrateAgentListResponse = MigrateAgentModelCollection;

/** Optional parameters. */
export interface MigrateAgentRefreshOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the refresh operation. */
export type MigrateAgentRefreshResponse = MigrateAgentRefreshHeaders;

/** Optional parameters. */
export interface MigrateAgentOperationStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MigrateAgentOperationStatusGetResponse = OperationStatus;

/** Optional parameters. */
export interface ModernizeProjectGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ModernizeProjectGetResponse = ModernizeProjectModel;

/** Optional parameters. */
export interface ModernizeProjectCreateOptionalParams
  extends coreClient.OperationOptions {
  /** ModernizeProject properties. */
  body?: ModernizeProjectModel;
}

/** Contains response data for the create operation. */
export type ModernizeProjectCreateResponse = ModernizeProjectModel;

/** Optional parameters. */
export interface ModernizeProjectUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** ModernizeProject properties. */
  body?: UpdateModernizeProjectModel;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ModernizeProjectUpdateResponse = ModernizeProjectUpdateHeaders &
  ModernizeProjectModel;

/** Optional parameters. */
export interface ModernizeProjectDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ModernizeProjectDeleteResponse = ModernizeProjectDeleteHeaders;

/** Optional parameters. */
export interface ModernizeProjectListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token from the previous call. */
  continuationToken?: string;
}

/** Contains response data for the listBySubscription operation. */
export type ModernizeProjectListBySubscriptionResponse =
  ModernizeProjectModelCollection;

/** Optional parameters. */
export interface ModernizeProjectListOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token from the previous call. */
  continuationToken?: string;
}

/** Contains response data for the list operation. */
export type ModernizeProjectListResponse = ModernizeProjectModelCollection;

/** Optional parameters. */
export interface ModernizeProjectListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type ModernizeProjectListBySubscriptionNextResponse =
  ModernizeProjectModelCollection;

/** Optional parameters. */
export interface ModernizeProjectListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ModernizeProjectListNextResponse = ModernizeProjectModelCollection;

/** Optional parameters. */
export interface ModernizeProjectStatisticsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ModernizeProjectStatisticsGetResponse =
  ModernizeProjectStatisticsModel;

/** Optional parameters. */
export interface ModernizeProjectOperationStatusGetOptionalParams
  extends coreClient.OperationOptions {
  /** The operation type. */
  operationType?: string;
}

/** Contains response data for the get operation. */
export type ModernizeProjectOperationStatusGetResponse = OperationStatus;

/** Optional parameters. */
export interface WorkflowGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkflowGetResponse = WorkflowModel;

/** Optional parameters. */
export interface WorkflowListOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token. */
  continuationToken?: string;
  /** Filter string. */
  filter?: string;
}

/** Contains response data for the list operation. */
export type WorkflowListResponse = WorkflowModelCollection;

/** Optional parameters. */
export interface WorkflowListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type WorkflowListNextResponse = WorkflowModelCollection;

/** Optional parameters. */
export interface WorkflowOperationStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkflowOperationStatusGetResponse = OperationStatus;

/** Optional parameters. */
export interface WorkloadDeploymentGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkloadDeploymentGetResponse = WorkloadDeploymentModel;

/** Optional parameters. */
export interface WorkloadDeploymentCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Workload deployment model. */
  body?: WorkloadDeploymentModel;
}

/** Contains response data for the create operation. */
export type WorkloadDeploymentCreateResponse = WorkloadDeploymentModel;

/** Optional parameters. */
export interface WorkloadDeploymentDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** A flag indicating whether to do force delete or not. */
  forceDelete?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type WorkloadDeploymentDeleteResponse = WorkloadDeploymentDeleteHeaders;

/** Optional parameters. */
export interface WorkloadDeploymentListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type WorkloadDeploymentListResponse = WorkloadDeploymentModelCollection;

/** Optional parameters. */
export interface WorkloadDeploymentGetSecretConfigurationsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getSecretConfigurations operation. */
export type WorkloadDeploymentGetSecretConfigurationsResponse =
  WorkloadDeploymentModel;

/** Optional parameters. */
export interface WorkloadDeploymentBuildContainerImageOptionalParams
  extends coreClient.OperationOptions {
  /** Build container image model. */
  body?: BuildContainerImageModel;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the buildContainerImage operation. */
export type WorkloadDeploymentBuildContainerImageResponse =
  WorkloadDeploymentBuildContainerImageHeaders;

/** Optional parameters. */
export interface WorkloadDeploymentTestMigrateOptionalParams
  extends coreClient.OperationOptions {
  /** Test migrate model. */
  body?: TestMigrateModel;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the testMigrate operation. */
export type WorkloadDeploymentTestMigrateResponse =
  WorkloadDeploymentTestMigrateHeaders;

/** Optional parameters. */
export interface WorkloadDeploymentTestMigrateCleanupOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the testMigrateCleanup operation. */
export type WorkloadDeploymentTestMigrateCleanupResponse =
  WorkloadDeploymentTestMigrateCleanupHeaders;

/** Optional parameters. */
export interface WorkloadDeploymentMigrateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the migrate operation. */
export type WorkloadDeploymentMigrateResponse =
  WorkloadDeploymentMigrateHeaders;

/** Optional parameters. */
export interface WorkloadDeploymentListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type WorkloadDeploymentListNextResponse =
  WorkloadDeploymentModelCollection;

/** Optional parameters. */
export interface WorkloadDeploymentOperationStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkloadDeploymentOperationStatusGetResponse = OperationStatus;

/** Optional parameters. */
export interface WorkloadInstanceGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkloadInstanceGetResponse = WorkloadInstanceModel;

/** Optional parameters. */
export interface WorkloadInstanceCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Workload instance model. */
  body?: WorkloadInstanceModel;
}

/** Contains response data for the create operation. */
export type WorkloadInstanceCreateResponse = WorkloadInstanceModel;

/** Optional parameters. */
export interface WorkloadInstanceDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type WorkloadInstanceDeleteResponse = WorkloadInstanceDeleteHeaders;

/** Optional parameters. */
export interface WorkloadInstanceListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type WorkloadInstanceListResponse = WorkloadInstanceModelCollection;

/** Optional parameters. */
export interface WorkloadInstanceMigrateCompleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the migrateComplete operation. */
export type WorkloadInstanceMigrateCompleteResponse =
  WorkloadInstanceMigrateCompleteHeaders;

/** Optional parameters. */
export interface WorkloadInstanceStopReplicateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the stopReplicate operation. */
export type WorkloadInstanceStopReplicateResponse =
  WorkloadInstanceStopReplicateHeaders;

/** Optional parameters. */
export interface WorkloadInstanceListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type WorkloadInstanceListNextResponse = WorkloadInstanceModelCollection;

/** Optional parameters. */
export interface WorkloadInstanceOperationStatusGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkloadInstanceOperationStatusGetResponse = OperationStatus;

/** Optional parameters. */
export interface AzureMigrateEngineAPIsOptionalParams
  extends coreClient.ServiceClientOptions {
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
