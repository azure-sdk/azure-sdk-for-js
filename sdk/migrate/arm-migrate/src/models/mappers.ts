/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const DeployedResourceModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeployedResourceModel",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DeployedResourceModelProperties",
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "DeployedResourceModelSystemData",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const DeployedResourceModelProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeployedResourceModelProperties",
    modelProperties: {
      resourcesDeployed: {
        serializedName: "resourcesDeployed",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      workloadDeploymentId: {
        serializedName: "workloadDeploymentId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      deploymentTimestamp: {
        serializedName: "deploymentTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      targetAzureService: {
        serializedName: "targetAzureService",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      containerRegistryId: {
        serializedName: "containerRegistryId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      imageName: {
        serializedName: "imageName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      imageTag: {
        serializedName: "imageTag",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      appIp: {
        serializedName: "appIp",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      secretStoreId: {
        serializedName: "secretStoreId",
        type: {
          name: "String",
        },
      },
      customProperties: {
        serializedName: "customProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const SystemDataModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemDataModel",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ArmError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArmError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ArmErrorInfo",
        },
      },
    },
  },
};

export const ArmErrorInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArmErrorInfo",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DeployedResourceModelCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeployedResourceModelCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeployedResourceModel",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MigrateAgentModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrateAgentModel",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MigrateAgentModelProperties",
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "MigrateAgentModelSystemData",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const MigrateAgentModelProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrateAgentModelProperties",
    modelProperties: {
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineId: {
        serializedName: "machineId",
        type: {
          name: "String",
        },
      },
      machineName: {
        serializedName: "machineName",
        type: {
          name: "String",
        },
      },
      authenticationIdentity: {
        serializedName: "authenticationIdentity",
        type: {
          name: "Composite",
          className: "IdentityModel",
        },
      },
      isResponsive: {
        serializedName: "isResponsive",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      lastHeartbeat: {
        serializedName: "lastHeartbeat",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      versionNumber: {
        serializedName: "versionNumber",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      healthErrors: {
        serializedName: "healthErrors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HealthErrorModel",
            },
          },
        },
      },
      customProperties: {
        serializedName: "customProperties",
        type: {
          name: "Composite",
          className: "MigrateAgentModelCustomProperties",
        },
      },
    },
  },
};

export const IdentityModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IdentityModel",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String",
        },
      },
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "String",
        },
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "String",
        },
      },
      audience: {
        serializedName: "audience",
        type: {
          name: "String",
        },
      },
      aadAuthority: {
        serializedName: "aadAuthority",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const HealthErrorModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HealthErrorModel",
    modelProperties: {
      affectedResourceType: {
        serializedName: "affectedResourceType",
        type: {
          name: "String",
        },
      },
      affectedResourceCorrelationIds: {
        serializedName: "affectedResourceCorrelationIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      childErrors: {
        serializedName: "childErrors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InnerHealthErrorModel",
            },
          },
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      healthCategory: {
        serializedName: "healthCategory",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      category: {
        serializedName: "category",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      severity: {
        serializedName: "severity",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      source: {
        serializedName: "source",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      creationTime: {
        serializedName: "creationTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      isCustomerResolvable: {
        serializedName: "isCustomerResolvable",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      summary: {
        serializedName: "summary",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      causes: {
        serializedName: "causes",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendation: {
        serializedName: "recommendation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const InnerHealthErrorModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InnerHealthErrorModel",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      healthCategory: {
        serializedName: "healthCategory",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      category: {
        serializedName: "category",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      severity: {
        serializedName: "severity",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      source: {
        serializedName: "source",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      creationTime: {
        serializedName: "creationTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      isCustomerResolvable: {
        serializedName: "isCustomerResolvable",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      summary: {
        serializedName: "summary",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      causes: {
        serializedName: "causes",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendation: {
        serializedName: "recommendation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MigrateAgentModelCustomProperties: coreClient.CompositeMapper = {
  serializedName: "IISWorkload",
  type: {
    name: "Composite",
    className: "MigrateAgentModelCustomProperties",
    uberParent: "MigrateAgentModelCustomProperties",
    polymorphicDiscriminator: {
      serializedName: "instanceType",
      clientName: "instanceType",
    },
    modelProperties: {
      instanceType: {
        serializedName: "instanceType",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MigrateAgentModelCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrateAgentModelCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MigrateAgentModel",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationStatus",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      startTime: {
        serializedName: "startTime",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      endTime: {
        serializedName: "endTime",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ModernizeProjectModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModernizeProjectModel",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ModernizeProjectModelProperties",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ResourceIdentity",
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "ModernizeProjectModelSystemData",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const ModernizeProjectModelProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModernizeProjectModelProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serviceResourceId: {
        serializedName: "serviceResourceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serviceEndpoint: {
        serializedName: "serviceEndpoint",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrationConfiguration: {
        serializedName: "migrationConfiguration",
        type: {
          name: "Composite",
          className: "MigrationConfiguration",
        },
      },
    },
  },
};

export const MigrationConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrationConfiguration",
    modelProperties: {
      storageAccountResourceId: {
        serializedName: "storageAccountResourceId",
        type: {
          name: "String",
        },
      },
      keyVaultResourceId: {
        serializedName: "keyVaultResourceId",
        type: {
          name: "String",
        },
      },
      migrationSolutionResourceId: {
        serializedName: "migrationSolutionResourceId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" },
          },
        },
      },
    },
  },
};

export const UserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String",
        },
      },
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UpdateModernizeProjectModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateModernizeProjectModel",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ResourceIdentity",
        },
      },
    },
  },
};

export const ModernizeProjectModelCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModernizeProjectModelCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModernizeProjectModel",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ModernizeProjectStatisticsModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModernizeProjectStatisticsModel",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ModernizeProjectStatisticsModelProperties",
        },
      },
    },
  },
};

export const ModernizeProjectStatisticsModelProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ModernizeProjectStatisticsModelProperties",
      modelProperties: {
        workloadDeploymentStatistics: {
          serializedName: "workloadDeploymentStatistics",
          type: {
            name: "Composite",
            className:
              "ModernizeProjectStatisticsModelPropertiesWorkloadDeploymentStatistics",
          },
        },
        jobStatistics: {
          serializedName: "jobStatistics",
          type: {
            name: "Composite",
            className: "ModernizeProjectStatisticsModelPropertiesJobStatistics",
          },
        },
        workloadInstanceStatistics: {
          serializedName: "workloadInstanceStatistics",
          type: {
            name: "Composite",
            className:
              "ModernizeProjectStatisticsModelPropertiesWorkloadInstanceStatistics",
          },
        },
        modernizeProjectErrors: {
          serializedName: "modernizeProjectErrors",
          readOnly: true,
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "HealthErrorModel",
              },
            },
          },
        },
      },
    },
  };

export const WorkloadDeploymentStatisticsModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadDeploymentStatisticsModel",
    modelProperties: {
      healthErrors: {
        serializedName: "healthErrors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HealthErrorModel",
            },
          },
        },
      },
      count: {
        serializedName: "count",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      categorizedCounts: {
        serializedName: "categorizedCounts",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
    },
  },
};

export const WorkflowStatisticsModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkflowStatisticsModel",
    modelProperties: {
      count: {
        serializedName: "count",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      categorizedCounts: {
        serializedName: "categorizedCounts",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
    },
  },
};

export const WorkloadInstanceStatisticsModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadInstanceStatisticsModel",
    modelProperties: {
      healthErrors: {
        serializedName: "healthErrors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HealthErrorModel",
            },
          },
        },
      },
      count: {
        serializedName: "count",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      categorizedCounts: {
        serializedName: "categorizedCounts",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
    },
  },
};

export const WorkflowModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkflowModel",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "WorkflowModelProperties",
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "WorkflowModelSystemData",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const WorkflowModelProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkflowModelProperties",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      startTime: {
        serializedName: "startTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      objectId: {
        serializedName: "objectId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      objectName: {
        serializedName: "objectName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      objectInternalId: {
        serializedName: "objectInternalId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      objectInternalName: {
        serializedName: "objectInternalName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      objectType: {
        serializedName: "objectType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      workloadInstanceProviderId: {
        serializedName: "workloadInstanceProviderId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      workloadDeploymentProviderId: {
        serializedName: "workloadDeploymentProviderId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      allowedActions: {
        serializedName: "allowedActions",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      activityId: {
        serializedName: "activityId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      tasks: {
        serializedName: "tasks",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TaskModel",
            },
          },
        },
      },
      errors: {
        serializedName: "errors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorModel",
            },
          },
        },
      },
      customProperties: {
        serializedName: "customProperties",
        type: {
          name: "Composite",
          className: "WorkflowModelCustomProperties",
        },
      },
    },
  },
};

export const TaskModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TaskModel",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      taskName: {
        serializedName: "taskName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      startTime: {
        serializedName: "startTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      customProperties: {
        serializedName: "customProperties",
        type: {
          name: "Composite",
          className: "TaskModelCustomProperties",
        },
      },
    },
  },
};

export const TaskModelCustomProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TaskModelCustomProperties",
    modelProperties: {
      instanceType: {
        serializedName: "instanceType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      severity: {
        serializedName: "severity",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      creationTime: {
        serializedName: "creationTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      causes: {
        serializedName: "causes",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendation: {
        serializedName: "recommendation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkflowModelCustomProperties: coreClient.CompositeMapper = {
  serializedName: "SampleWorkflow",
  type: {
    name: "Composite",
    className: "WorkflowModelCustomProperties",
    uberParent: "WorkflowModelCustomProperties",
    polymorphicDiscriminator: {
      serializedName: "instanceType",
      clientName: "instanceType",
    },
    modelProperties: {
      instanceType: {
        serializedName: "instanceType",
        required: true,
        type: {
          name: "String",
        },
      },
      affectedObjectDetails: {
        serializedName: "affectedObjectDetails",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const WorkflowModelCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkflowModelCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkflowModel",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkloadDeploymentModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadDeploymentModel",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "WorkloadDeploymentModelProperties",
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "WorkloadDeploymentModelSystemData",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const WorkloadDeploymentModelProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadDeploymentModelProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      statusDescription: {
        serializedName: "statusDescription",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      testMigrationStatus: {
        serializedName: "testMigrationStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      testMigrationStatusDescription: {
        serializedName: "testMigrationStatusDescription",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrationStatus: {
        serializedName: "migrationStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrationStatusDescription: {
        serializedName: "migrationStatusDescription",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      targetPlatform: {
        serializedName: "targetPlatform",
        type: {
          name: "String",
        },
      },
      workloadInstanceProperties: {
        serializedName: "workloadInstanceProperties",
        type: {
          name: "Composite",
          className: "WorkloadInstanceModelProperties",
        },
      },
      correlationId: {
        serializedName: "correlationId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      lastSuccessfulMigrateTime: {
        serializedName: "lastSuccessfulMigrateTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      lastSuccessfulTestMigrateTime: {
        serializedName: "lastSuccessfulTestMigrateTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      currentJob: {
        serializedName: "currentJob",
        type: {
          name: "Composite",
          className: "WorkloadDeploymentModelPropertiesCurrentJob",
        },
      },
      allowedOperations: {
        serializedName: "allowedOperations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      healthErrors: {
        serializedName: "healthErrors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HealthErrorModel",
            },
          },
        },
      },
      customProperties: {
        serializedName: "customProperties",
        type: {
          name: "Composite",
          className: "WorkloadDeploymentModelCustomProperties",
        },
      },
    },
  },
};

export const WorkloadInstanceModelProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadInstanceModelProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrateAgentId: {
        serializedName: "migrateAgentId",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      sourcePlatform: {
        serializedName: "sourcePlatform",
        type: {
          name: "String",
        },
      },
      sourceName: {
        serializedName: "sourceName",
        type: {
          name: "String",
        },
      },
      replicationHealth: {
        serializedName: "replicationHealth",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      replicationStatus: {
        serializedName: "replicationStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      replicationStatusDescription: {
        serializedName: "replicationStatusDescription",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      lastSuccessfulReplicationCycleTime: {
        serializedName: "lastSuccessfulReplicationCycleTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      healthErrors: {
        serializedName: "healthErrors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HealthErrorModel",
            },
          },
        },
      },
      currentJob: {
        serializedName: "currentJob",
        type: {
          name: "Composite",
          className: "WorkloadInstanceModelPropertiesCurrentJob",
        },
      },
      allowedOperations: {
        serializedName: "allowedOperations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      masterSiteName: {
        serializedName: "masterSiteName",
        type: {
          name: "String",
        },
      },
      customProperties: {
        serializedName: "customProperties",
        type: {
          name: "Composite",
          className: "WorkloadInstanceModelCustomProperties",
        },
      },
    },
  },
};

export const WorkloadJobProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadJobProperties",
    modelProperties: {
      scenarioName: {
        serializedName: "scenarioName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      startTime: {
        serializedName: "startTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const WorkloadInstanceModelCustomProperties: coreClient.CompositeMapper =
  {
    serializedName: "IISWorkload",
    type: {
      name: "Composite",
      className: "WorkloadInstanceModelCustomProperties",
      uberParent: "WorkloadInstanceModelCustomProperties",
      polymorphicDiscriminator: {
        serializedName: "instanceType",
        clientName: "instanceType",
      },
      modelProperties: {
        instanceType: {
          serializedName: "instanceType",
          required: true,
          type: {
            name: "String",
          },
        },
        webAppArmId: {
          serializedName: "webAppArmId",
          type: {
            name: "String",
          },
        },
        webAppSiteName: {
          serializedName: "webAppSiteName",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const WorkloadDeploymentModelCustomProperties: coreClient.CompositeMapper =
  {
    serializedName: "IISAKSWorkloadDeployment",
    type: {
      name: "Composite",
      className: "WorkloadDeploymentModelCustomProperties",
      uberParent: "WorkloadDeploymentModelCustomProperties",
      polymorphicDiscriminator: {
        serializedName: "instanceType",
        clientName: "instanceType",
      },
      modelProperties: {
        instanceType: {
          serializedName: "instanceType",
          required: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const WorkloadDeploymentModelCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadDeploymentModelCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkloadDeploymentModel",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const BuildContainerImageModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildContainerImageModel",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ContainerImageProperties",
        },
      },
    },
  },
};

export const ContainerImageProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ContainerImageProperties",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      dockerfile: {
        serializedName: "dockerfile",
        type: {
          name: "String",
        },
      },
      registryProperties: {
        serializedName: "registryProperties",
        type: {
          name: "Composite",
          className: "ACRProperties",
        },
      },
      imageTag: {
        serializedName: "imageTag",
        type: {
          name: "String",
        },
      },
      imageName: {
        serializedName: "imageName",
        type: {
          name: "String",
        },
      },
      runId: {
        serializedName: "runId",
        type: {
          name: "String",
        },
      },
      runStatus: {
        serializedName: "runStatus",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ACRProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ACRProperties",
    modelProperties: {
      registryName: {
        serializedName: "registryName",
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String",
        },
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String",
        },
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TestMigrateModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestMigrateModel",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "TestMigrateModelProperties",
        },
      },
    },
  },
};

export const TestMigrateModelProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestMigrateModelProperties",
    modelProperties: {
      customProperties: {
        serializedName: "customProperties",
        type: {
          name: "Composite",
          className: "WorkloadDeploymentModelCustomProperties",
        },
      },
    },
  },
};

export const WorkloadInstanceModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadInstanceModel",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "WorkloadInstanceModelProperties",
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "WorkloadInstanceModelSystemData",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const WorkloadInstanceModelCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadInstanceModelCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkloadInstanceModel",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AKSDeploymentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSDeploymentProperties",
    modelProperties: {
      aksClusterName: {
        serializedName: "aksClusterName",
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String",
        },
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String",
        },
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AKSDeploymentSpecification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSDeploymentSpecification",
    modelProperties: {
      kubernetesObjectsYaml: {
        serializedName: "kubernetesObjectsYaml",
        type: {
          name: "String",
        },
      },
      replicaCount: {
        serializedName: "replicaCount",
        type: {
          name: "String",
        },
      },
      loadBalancerType: {
        serializedName: "loadBalancerType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApacheTomcatAKSWorkloadDeployment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApacheTomcatAKSWorkloadDeployment",
    modelProperties: {
      clusterProperties: {
        serializedName: "clusterProperties",
        type: {
          name: "Composite",
          className: "AKSDeploymentProperties",
        },
      },
      deploymentSpec: {
        serializedName: "deploymentSpec",
        type: {
          name: "Composite",
          className: "AKSDeploymentSpecification",
        },
      },
      deploymentHistory: {
        serializedName: "deploymentHistory",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeployedResourcesProperties",
            },
          },
        },
      },
      deploymentNamePrefix: {
        serializedName: "deploymentNamePrefix",
        type: {
          name: "String",
        },
      },
      automationArtifactProperties: {
        serializedName: "automationArtifactProperties",
        type: {
          name: "Composite",
          className: "AutomationArtifact",
        },
      },
      directories: {
        serializedName: "directories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebApplicationDirectory",
            },
          },
        },
      },
      configurations: {
        serializedName: "configurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebApplicationConfiguration",
            },
          },
        },
      },
      containerImageProperties: {
        serializedName: "containerImageProperties",
        type: {
          name: "Composite",
          className: "ContainerImageProperties",
        },
      },
      buildContainerImages: {
        serializedName: "buildContainerImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ContainerImageProperties",
            },
          },
        },
      },
      bindings: {
        serializedName: "bindings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Binding",
            },
          },
        },
      },
      requests: {
        serializedName: "requests",
        type: {
          name: "Composite",
          className: "ResourceRequirements",
        },
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Composite",
          className: "ResourceRequirements",
        },
      },
      targetPlatformIdentity: {
        serializedName: "targetPlatformIdentity",
        type: {
          name: "String",
        },
      },
      monitoringProperties: {
        serializedName: "monitoringProperties",
        type: {
          name: "Composite",
          className: "AppInsightMonitoringProperties",
        },
      },
    },
  },
};

export const DeployedResourcesProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeployedResourcesProperties",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      deployedResourceId: {
        serializedName: "deployedResourceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      context: {
        serializedName: "context",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      deploymentTimestamp: {
        serializedName: "deploymentTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      isCleanUpDone: {
        serializedName: "isCleanUpDone",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      isTestMigration: {
        serializedName: "isTestMigration",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const AutomationArtifact: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AutomationArtifact",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      azureFileShareProfile: {
        serializedName: "azureFileShareProfile",
        type: {
          name: "Composite",
          className: "AzureFileShareHydrationProfile",
        },
      },
      artifacts: {
        serializedName: "artifacts",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const AzureFileShareHydrationProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureFileShareHydrationProfile",
    modelProperties: {
      azureFileShareName: {
        serializedName: "azureFileShareName",
        type: {
          name: "String",
        },
      },
      azureFileShareSubscriptionId: {
        serializedName: "azureFileShareSubscriptionId",
        type: {
          name: "String",
        },
      },
      azureFileShareResourceGroup: {
        serializedName: "azureFileShareResourceGroup",
        type: {
          name: "String",
        },
      },
      azureFileShareStorageAccount: {
        serializedName: "azureFileShareStorageAccount",
        type: {
          name: "String",
        },
      },
      azureFileShareDirPath: {
        serializedName: "azureFileShareDirPath",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WebApplicationDirectory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebApplicationDirectory",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isEditable: {
        serializedName: "isEditable",
        type: {
          name: "Boolean",
        },
      },
      sourcePaths: {
        serializedName: "sourcePaths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      sourceSize: {
        serializedName: "sourceSize",
        type: {
          name: "String",
        },
      },
      storageProfile: {
        serializedName: "storageProfile",
        type: {
          name: "Composite",
          className: "TargetStorageProfile",
        },
      },
    },
  },
};

export const TargetStorageProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TargetStorageProfile",
    modelProperties: {
      storageAccessType: {
        serializedName: "storageAccessType",
        type: {
          name: "String",
        },
      },
      storageProjectionType: {
        serializedName: "storageProjectionType",
        type: {
          name: "String",
        },
      },
      hydrationStorageProviderType: {
        serializedName: "hydrationStorageProviderType",
        type: {
          name: "String",
        },
      },
      persistentVolumeId: {
        serializedName: "persistentVolumeId",
        type: {
          name: "String",
        },
      },
      targetName: {
        serializedName: "targetName",
        type: {
          name: "String",
        },
      },
      targetSize: {
        serializedName: "targetSize",
        type: {
          name: "String",
        },
      },
      azureFileShareProfile: {
        serializedName: "azureFileShareProfile",
        type: {
          name: "Composite",
          className: "AzureFileShareHydrationProfile",
        },
      },
    },
  },
};

export const WebApplicationConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebApplicationConfiguration",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      filePath: {
        serializedName: "filePath",
        type: {
          name: "String",
        },
      },
      localFilePath: {
        serializedName: "localFilePath",
        type: {
          name: "String",
        },
      },
      targetFilePath: {
        serializedName: "targetFilePath",
        type: {
          name: "String",
        },
      },
      section: {
        serializedName: "section",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
      isDeploymentTimeEditable: {
        serializedName: "isDeploymentTimeEditable",
        type: {
          name: "Boolean",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
      identifier: {
        serializedName: "identifier",
        type: {
          name: "String",
        },
      },
      secretStoreDetails: {
        serializedName: "secretStoreDetails",
        type: {
          name: "Composite",
          className: "SecretStoreDetails",
        },
      },
    },
  },
};

export const SecretStoreDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecretStoreDetails",
    modelProperties: {
      secretStore: {
        serializedName: "secretStore",
        type: {
          name: "String",
        },
      },
      secretStoreProperties: {
        serializedName: "secretStoreProperties",
        type: {
          name: "Composite",
          className: "SecretStoreProperties",
        },
      },
    },
  },
};

export const SecretStoreProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecretStoreProperties",
    modelProperties: {
      secretStoreId: {
        serializedName: "secretStoreId",
        type: {
          name: "String",
        },
      },
      inputType: {
        serializedName: "inputType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Binding: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Binding",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      port: {
        serializedName: "port",
        type: {
          name: "String",
        },
      },
      portMapping: {
        serializedName: "portMapping",
        type: {
          name: "Composite",
          className: "PortMapping",
        },
      },
      cert: {
        serializedName: "cert",
        type: {
          name: "Composite",
          className: "Cert",
        },
      },
      hostName: {
        serializedName: "hostName",
        type: {
          name: "String",
        },
      },
      protocol: {
        serializedName: "protocol",
        type: {
          name: "String",
        },
      },
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PortMapping: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PortMapping",
    modelProperties: {
      internalPort: {
        serializedName: "internalPort",
        type: {
          name: "Number",
        },
      },
      externalPort: {
        serializedName: "externalPort",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const Cert: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Cert",
    modelProperties: {
      certNeeded: {
        serializedName: "certNeeded",
        type: {
          name: "Boolean",
        },
      },
      certProvided: {
        serializedName: "certProvided",
        type: {
          name: "Boolean",
        },
      },
      certData: {
        serializedName: "certData",
        type: {
          name: "ByteArray",
        },
      },
      secretStore: {
        serializedName: "secretStore",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceRequirements: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceRequirements",
    modelProperties: {
      cpu: {
        serializedName: "cpu",
        type: {
          name: "String",
        },
      },
      memory: {
        serializedName: "memory",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AppInsightMonitoringProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppInsightMonitoringProperties",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String",
        },
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String",
        },
      },
      appInsightsName: {
        serializedName: "appInsightsName",
        type: {
          name: "String",
        },
      },
      region: {
        serializedName: "region",
        type: {
          name: "String",
        },
      },
      isEnabled: {
        serializedName: "isEnabled",
        type: {
          name: "Boolean",
        },
      },
      secretStoreDetails: {
        serializedName: "secretStoreDetails",
        type: {
          name: "Composite",
          className: "SecretStoreDetails",
        },
      },
    },
  },
};

export const ApacheTomcatWebApplication: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApacheTomcatWebApplication",
    modelProperties: {
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "String",
        },
      },
      applicationName: {
        serializedName: "applicationName",
        type: {
          name: "String",
        },
      },
      applicationScratchPath: {
        serializedName: "applicationScratchPath",
        type: {
          name: "String",
        },
      },
      webServerId: {
        serializedName: "webServerId",
        type: {
          name: "String",
        },
      },
      webServerName: {
        serializedName: "webServerName",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      directories: {
        serializedName: "directories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebApplicationDirectory",
            },
          },
        },
      },
      configurations: {
        serializedName: "configurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebApplicationConfiguration",
            },
          },
        },
      },
      path: {
        serializedName: "path",
        type: {
          name: "Composite",
          className: "DirectoryPath",
        },
      },
      bindings: {
        serializedName: "bindings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Binding",
            },
          },
        },
      },
      primaryFramework: {
        serializedName: "primaryFramework",
        type: {
          name: "Composite",
          className: "WebApplicationFramework",
        },
      },
      discoveredFrameworks: {
        serializedName: "discoveredFrameworks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebApplicationFramework",
            },
          },
        },
      },
      requests: {
        serializedName: "requests",
        type: {
          name: "Composite",
          className: "ResourceRequirements",
        },
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Composite",
          className: "ResourceRequirements",
        },
      },
    },
  },
};

export const DirectoryPath: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DirectoryPath",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      virtual: {
        serializedName: "virtual",
        type: {
          name: "String",
        },
      },
      physical: {
        serializedName: "physical",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WebApplicationFramework: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebApplicationFramework",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GmsaAuthenticationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GmsaAuthenticationProperties",
    modelProperties: {
      configurationState: {
        serializedName: "configurationState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      gmsaAccountName: {
        serializedName: "gmsaAccountName",
        type: {
          name: "String",
        },
      },
      gmsaUsername: {
        serializedName: "gmsaUsername",
        type: {
          name: "String",
        },
      },
      gmsaUserPassword: {
        serializedName: "gmsaUserPassword",
        type: {
          name: "String",
        },
      },
      adDomainControllerDns: {
        serializedName: "adDomainControllerDns",
        type: {
          name: "String",
        },
      },
      adDomainFqdn: {
        serializedName: "adDomainFqdn",
        type: {
          name: "String",
        },
      },
      domainControllerAddress: {
        serializedName: "domainControllerAddress",
        type: {
          name: "String",
        },
      },
      domainAdminUsername: {
        serializedName: "domainAdminUsername",
        type: {
          name: "String",
        },
      },
      domainAdminPassword: {
        serializedName: "domainAdminPassword",
        type: {
          name: "String",
        },
      },
      akvProperties: {
        serializedName: "akvProperties",
        type: {
          name: "Composite",
          className: "KeyVaultSecretStoreProperties",
        },
      },
      gmsaCredSpecName: {
        serializedName: "gmsaCredSpecName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      gmsaSecretName: {
        serializedName: "gmsaSecretName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ManagedIdentityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedIdentityProperties",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String",
        },
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String",
        },
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String",
        },
      },
      managedIdentityName: {
        serializedName: "managedIdentityName",
        type: {
          name: "String",
        },
      },
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String",
        },
      },
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IisaksWorkloadDeployment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IisaksWorkloadDeployment",
    modelProperties: {
      clusterProperties: {
        serializedName: "clusterProperties",
        type: {
          name: "Composite",
          className: "AKSDeploymentProperties",
        },
      },
      deploymentSpec: {
        serializedName: "deploymentSpec",
        type: {
          name: "Composite",
          className: "AKSDeploymentSpecification",
        },
      },
      deploymentHistory: {
        serializedName: "deploymentHistory",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeployedResourcesProperties",
            },
          },
        },
      },
      authenticationProperties: {
        serializedName: "authenticationProperties",
        type: {
          name: "Composite",
          className: "GmsaAuthenticationProperties",
        },
      },
      deploymentNamePrefix: {
        serializedName: "deploymentNamePrefix",
        type: {
          name: "String",
        },
      },
      automationArtifactProperties: {
        serializedName: "automationArtifactProperties",
        type: {
          name: "Composite",
          className: "AutomationArtifact",
        },
      },
      directories: {
        serializedName: "directories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebApplicationDirectory",
            },
          },
        },
      },
      configurations: {
        serializedName: "configurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebApplicationConfiguration",
            },
          },
        },
      },
      containerImageProperties: {
        serializedName: "containerImageProperties",
        type: {
          name: "Composite",
          className: "ContainerImageProperties",
        },
      },
      buildContainerImages: {
        serializedName: "buildContainerImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ContainerImageProperties",
            },
          },
        },
      },
      bindings: {
        serializedName: "bindings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Binding",
            },
          },
        },
      },
      requests: {
        serializedName: "requests",
        type: {
          name: "Composite",
          className: "ResourceRequirements",
        },
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Composite",
          className: "ResourceRequirements",
        },
      },
      targetPlatformIdentity: {
        serializedName: "targetPlatformIdentity",
        type: {
          name: "String",
        },
      },
      monitoringProperties: {
        serializedName: "monitoringProperties",
        type: {
          name: "Composite",
          className: "AppInsightMonitoringProperties",
        },
      },
    },
  },
};

export const IISApplicationDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IISApplicationDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      applicationPoolName: {
        serializedName: "applicationPoolName",
        type: {
          name: "String",
        },
      },
      managedPipelineMode: {
        serializedName: "managedPipelineMode",
        type: {
          name: "String",
        },
      },
      runtimeVersion: {
        serializedName: "runtimeVersion",
        type: {
          name: "String",
        },
      },
      enable32BitApiOnWin64: {
        serializedName: "enable32BitApiOnWin64",
        type: {
          name: "Boolean",
        },
      },
      path: {
        serializedName: "path",
        type: {
          name: "Composite",
          className: "DirectoryPath",
        },
      },
      directories: {
        serializedName: "directories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DirectoryPath",
            },
          },
        },
      },
    },
  },
};

export const IISVirtualApplicationDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IISVirtualApplicationDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isVirtualDirectory: {
        serializedName: "isVirtualDirectory",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      path: {
        serializedName: "path",
        type: {
          name: "Composite",
          className: "DirectoryPath",
        },
      },
      directories: {
        serializedName: "directories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DirectoryPath",
            },
          },
        },
      },
    },
  },
};

export const IISWebApplication: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IISWebApplication",
    modelProperties: {
      applications: {
        serializedName: "applications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IISApplicationDetails",
            },
          },
        },
      },
      virtualApplications: {
        serializedName: "virtualApplications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IISVirtualApplicationDetails",
            },
          },
        },
      },
      iisWebServer: {
        serializedName: "iisWebServer",
        type: {
          name: "Composite",
          className: "IISWebServer",
        },
      },
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "String",
        },
      },
      applicationName: {
        serializedName: "applicationName",
        type: {
          name: "String",
        },
      },
      applicationScratchPath: {
        serializedName: "applicationScratchPath",
        type: {
          name: "String",
        },
      },
      webServerId: {
        serializedName: "webServerId",
        type: {
          name: "String",
        },
      },
      webServerName: {
        serializedName: "webServerName",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      directories: {
        serializedName: "directories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebApplicationDirectory",
            },
          },
        },
      },
      configurations: {
        serializedName: "configurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebApplicationConfiguration",
            },
          },
        },
      },
      path: {
        serializedName: "path",
        type: {
          name: "Composite",
          className: "DirectoryPath",
        },
      },
      bindings: {
        serializedName: "bindings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Binding",
            },
          },
        },
      },
      primaryFramework: {
        serializedName: "primaryFramework",
        type: {
          name: "Composite",
          className: "WebApplicationFramework",
        },
      },
      discoveredFrameworks: {
        serializedName: "discoveredFrameworks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebApplicationFramework",
            },
          },
        },
      },
      requests: {
        serializedName: "requests",
        type: {
          name: "Composite",
          className: "ResourceRequirements",
        },
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Composite",
          className: "ResourceRequirements",
        },
      },
    },
  },
};

export const IISWebServer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IISWebServer",
    modelProperties: {
      serverId: {
        serializedName: "serverId",
        type: {
          name: "String",
        },
      },
      serverName: {
        serializedName: "serverName",
        type: {
          name: "String",
        },
      },
      rootConfigurationLocation: {
        serializedName: "rootConfigurationLocation",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
      machines: {
        serializedName: "machines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      webApplications: {
        serializedName: "webApplications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      serverFqdn: {
        serializedName: "serverFqdn",
        type: {
          name: "String",
        },
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      runAsAccountId: {
        serializedName: "runAsAccountId",
        type: {
          name: "String",
        },
      },
      operatingSystemDetails: {
        serializedName: "operatingSystemDetails",
        type: {
          name: "Composite",
          className: "OperatingSystemDetails",
        },
      },
    },
  },
};

export const OperatingSystemDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperatingSystemDetails",
    modelProperties: {
      os: {
        serializedName: "os",
        type: {
          name: "String",
        },
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String",
        },
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String",
        },
      },
      osArchitecture: {
        serializedName: "osArchitecture",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DeployedResourceModelSystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeployedResourceModelSystemData",
    modelProperties: {
      ...SystemDataModel.type.modelProperties,
    },
  },
};

export const MigrateAgentModelSystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrateAgentModelSystemData",
    modelProperties: {
      ...SystemDataModel.type.modelProperties,
    },
  },
};

export const ModernizeProjectModelSystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModernizeProjectModelSystemData",
    modelProperties: {
      ...SystemDataModel.type.modelProperties,
    },
  },
};

export const WorkflowModelSystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkflowModelSystemData",
    modelProperties: {
      ...SystemDataModel.type.modelProperties,
    },
  },
};

export const WorkloadDeploymentModelSystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadDeploymentModelSystemData",
    modelProperties: {
      ...SystemDataModel.type.modelProperties,
    },
  },
};

export const WorkloadInstanceModelSystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadInstanceModelSystemData",
    modelProperties: {
      ...SystemDataModel.type.modelProperties,
    },
  },
};

export const VMwareMigrateAgentModelCustomProperties: coreClient.CompositeMapper =
  {
    serializedName: "VMwareMigrateAgentModelCustomProperties",
    type: {
      name: "Composite",
      className: "VMwareMigrateAgentModelCustomProperties",
      uberParent: "MigrateAgentModelCustomProperties",
      polymorphicDiscriminator:
        MigrateAgentModelCustomProperties.type.polymorphicDiscriminator,
      modelProperties: {
        ...MigrateAgentModelCustomProperties.type.modelProperties,
        vmwareSiteId: {
          serializedName: "vmwareSiteId",
          type: {
            name: "String",
          },
        },
        fabricFriendlyName: {
          serializedName: "fabricFriendlyName",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const ModernizeProjectStatisticsModelPropertiesWorkloadDeploymentStatistics: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "ModernizeProjectStatisticsModelPropertiesWorkloadDeploymentStatistics",
      modelProperties: {
        ...WorkloadDeploymentStatisticsModel.type.modelProperties,
      },
    },
  };

export const ModernizeProjectStatisticsModelPropertiesJobStatistics: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ModernizeProjectStatisticsModelPropertiesJobStatistics",
      modelProperties: {
        ...WorkflowStatisticsModel.type.modelProperties,
      },
    },
  };

export const ModernizeProjectStatisticsModelPropertiesWorkloadInstanceStatistics: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "ModernizeProjectStatisticsModelPropertiesWorkloadInstanceStatistics",
      modelProperties: {
        ...WorkloadInstanceStatisticsModel.type.modelProperties,
      },
    },
  };

export const BuildContainerImageWorkflowModelCustomProperties: coreClient.CompositeMapper =
  {
    serializedName: "BuildContainerImageWorkflowModelCustomProperties",
    type: {
      name: "Composite",
      className: "BuildContainerImageWorkflowModelCustomProperties",
      uberParent: "WorkflowModelCustomProperties",
      polymorphicDiscriminator:
        WorkflowModelCustomProperties.type.polymorphicDiscriminator,
      modelProperties: {
        ...WorkflowModelCustomProperties.type.modelProperties,
        containerImageProperties: {
          serializedName: "containerImageProperties",
          type: {
            name: "Composite",
            className:
              "BuildContainerImageWorkflowModelCustomPropertiesContainerImageProperties",
          },
        },
      },
    },
  };

export const EnableReplicationWorkflowModelCustomProperties: coreClient.CompositeMapper =
  {
    serializedName: "EnableReplicationWorkflowModelCustomProperties",
    type: {
      name: "Composite",
      className: "EnableReplicationWorkflowModelCustomProperties",
      uberParent: "WorkflowModelCustomProperties",
      polymorphicDiscriminator:
        WorkflowModelCustomProperties.type.polymorphicDiscriminator,
      modelProperties: {
        ...WorkflowModelCustomProperties.type.modelProperties,
        workloadInstanceProperties: {
          serializedName: "workloadInstanceProperties",
          type: {
            name: "Composite",
            className:
              "EnableReplicationWorkflowModelCustomPropertiesWorkloadInstanceProperties",
          },
        },
      },
    },
  };

export const MigrateWorkflowModelCustomProperties: coreClient.CompositeMapper =
  {
    serializedName: "MigrateWorkflowModelCustomProperties",
    type: {
      name: "Composite",
      className: "MigrateWorkflowModelCustomProperties",
      uberParent: "WorkflowModelCustomProperties",
      polymorphicDiscriminator:
        WorkflowModelCustomProperties.type.polymorphicDiscriminator,
      modelProperties: {
        ...WorkflowModelCustomProperties.type.modelProperties,
        deployedResourcesProperties: {
          serializedName: "deployedResourcesProperties",
          type: {
            name: "Composite",
            className:
              "MigrateWorkflowModelCustomPropertiesDeployedResourcesProperties",
          },
        },
      },
    },
  };

export const TestMigrateCleanupWorkflowModelCustomProperties: coreClient.CompositeMapper =
  {
    serializedName: "TestMigrateCleanupWorkflowModelCustomProperties",
    type: {
      name: "Composite",
      className: "TestMigrateCleanupWorkflowModelCustomProperties",
      uberParent: "WorkflowModelCustomProperties",
      polymorphicDiscriminator:
        WorkflowModelCustomProperties.type.polymorphicDiscriminator,
      modelProperties: {
        ...WorkflowModelCustomProperties.type.modelProperties,
        comments: {
          serializedName: "comments",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const TestMigrateWorkflowModelCustomProperties: coreClient.CompositeMapper =
  {
    serializedName: "TestMigrateWorkflowModelCustomProperties",
    type: {
      name: "Composite",
      className: "TestMigrateWorkflowModelCustomProperties",
      uberParent: "WorkflowModelCustomProperties",
      polymorphicDiscriminator:
        WorkflowModelCustomProperties.type.polymorphicDiscriminator,
      modelProperties: {
        ...WorkflowModelCustomProperties.type.modelProperties,
        deployedResourcesProperties: {
          serializedName: "deployedResourcesProperties",
          type: {
            name: "Composite",
            className:
              "TestMigrateWorkflowModelCustomPropertiesDeployedResourcesProperties",
          },
        },
      },
    },
  };

export const EnableReplicationWorkflowModelCustomPropertiesWorkloadInstanceProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "EnableReplicationWorkflowModelCustomPropertiesWorkloadInstanceProperties",
      modelProperties: {
        ...WorkloadInstanceModelProperties.type.modelProperties,
      },
    },
  };

export const WorkloadInstanceModelPropertiesCurrentJob: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "WorkloadInstanceModelPropertiesCurrentJob",
      modelProperties: {
        ...WorkloadJobProperties.type.modelProperties,
      },
    },
  };

export const WorkloadDeploymentModelPropertiesCurrentJob: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "WorkloadDeploymentModelPropertiesCurrentJob",
      modelProperties: {
        ...WorkloadJobProperties.type.modelProperties,
      },
    },
  };

export const ApacheTomcatWorkloadInstanceModelCustomProperties: coreClient.CompositeMapper =
  {
    serializedName: "ApacheTomcatWorkloadInstanceModelCustomProperties",
    type: {
      name: "Composite",
      className: "ApacheTomcatWorkloadInstanceModelCustomProperties",
      uberParent: "WorkloadInstanceModelCustomProperties",
      polymorphicDiscriminator:
        WorkloadInstanceModelCustomProperties.type.polymorphicDiscriminator,
      modelProperties: {
        ...WorkloadInstanceModelCustomProperties.type.modelProperties,
        apacheTomcatWebApplication: {
          serializedName: "apacheTomcatWebApplication",
          type: {
            name: "Composite",
            className: "ApacheTomcatWebApplication",
          },
        },
      },
    },
  };

export const IISWorkloadInstanceModelCustomProperties: coreClient.CompositeMapper =
  {
    serializedName: "IISWorkloadInstanceModelCustomProperties",
    type: {
      name: "Composite",
      className: "IISWorkloadInstanceModelCustomProperties",
      uberParent: "WorkloadInstanceModelCustomProperties",
      polymorphicDiscriminator:
        WorkloadInstanceModelCustomProperties.type.polymorphicDiscriminator,
      modelProperties: {
        ...WorkloadInstanceModelCustomProperties.type.modelProperties,
        iisWebApplication: {
          serializedName: "iisWebApplication",
          type: {
            name: "Composite",
            className: "IISWebApplication",
          },
        },
        containerName: {
          serializedName: "containerName",
          type: {
            name: "String",
          },
        },
        fileshareName: {
          serializedName: "fileshareName",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const ApacheTomcatAKSWorkloadDeploymentModelCustomProperties: coreClient.CompositeMapper =
  {
    serializedName: "ApacheTomcatAKSWorkloadDeploymentModelCustomProperties",
    type: {
      name: "Composite",
      className: "ApacheTomcatAKSWorkloadDeploymentModelCustomProperties",
      uberParent: "WorkloadDeploymentModelCustomProperties",
      polymorphicDiscriminator:
        WorkloadDeploymentModelCustomProperties.type.polymorphicDiscriminator,
      modelProperties: {
        ...WorkloadDeploymentModelCustomProperties.type.modelProperties,
        apacheTomcatAksWorkloadDeploymentProperties: {
          serializedName: "apacheTomcatAksWorkloadDeploymentProperties",
          type: {
            name: "Composite",
            className: "ApacheTomcatAKSWorkloadDeployment",
          },
        },
      },
    },
  };

export const IisaksWorkloadDeploymentModelCustomProperties: coreClient.CompositeMapper =
  {
    serializedName: "IISAKSWorkloadDeploymentModelCustomProperties",
    type: {
      name: "Composite",
      className: "IisaksWorkloadDeploymentModelCustomProperties",
      uberParent: "WorkloadDeploymentModelCustomProperties",
      polymorphicDiscriminator:
        WorkloadDeploymentModelCustomProperties.type.polymorphicDiscriminator,
      modelProperties: {
        ...WorkloadDeploymentModelCustomProperties.type.modelProperties,
        iisAksWorkloadDeploymentProperties: {
          serializedName: "iisAksWorkloadDeploymentProperties",
          type: {
            name: "Composite",
            className: "IisaksWorkloadDeployment",
          },
        },
      },
    },
  };

export const BuildContainerImageWorkflowModelCustomPropertiesContainerImageProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "BuildContainerImageWorkflowModelCustomPropertiesContainerImageProperties",
      modelProperties: {
        ...ContainerImageProperties.type.modelProperties,
      },
    },
  };

export const MigrateWorkflowModelCustomPropertiesDeployedResourcesProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "MigrateWorkflowModelCustomPropertiesDeployedResourcesProperties",
      modelProperties: {
        ...DeployedResourcesProperties.type.modelProperties,
      },
    },
  };

export const TestMigrateWorkflowModelCustomPropertiesDeployedResourcesProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "TestMigrateWorkflowModelCustomPropertiesDeployedResourcesProperties",
      modelProperties: {
        ...DeployedResourcesProperties.type.modelProperties,
      },
    },
  };

export const AppServiceSettingSecretStoreProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AppServiceSettingSecretStoreProperties",
      modelProperties: {
        ...SecretStoreProperties.type.modelProperties,
        tenantId: {
          serializedName: "tenantId",
          type: {
            name: "String",
          },
        },
        subscriptionId: {
          serializedName: "subscriptionId",
          type: {
            name: "String",
          },
        },
        resourceGroup: {
          serializedName: "resourceGroup",
          type: {
            name: "String",
          },
        },
        appServiceName: {
          serializedName: "appServiceName",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const KeyVaultSecretStoreProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyVaultSecretStoreProperties",
    modelProperties: {
      ...SecretStoreProperties.type.modelProperties,
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String",
        },
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String",
        },
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String",
        },
      },
      keyvaultName: {
        serializedName: "keyvaultName",
        type: {
          name: "String",
        },
      },
      managedIdentityProperties: {
        serializedName: "managedIdentityProperties",
        type: {
          name: "Composite",
          className: "ManagedIdentityProperties",
        },
      },
    },
  },
};

export const KubeSecretStoreProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KubeSecretStoreProperties",
    modelProperties: {
      ...SecretStoreProperties.type.modelProperties,
    },
  },
};

export const MigrateAgentDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrateAgentDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MigrateAgentRefreshHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrateAgentRefreshHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ModernizeProjectUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModernizeProjectUpdateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ModernizeProjectDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModernizeProjectDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkloadDeploymentDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadDeploymentDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkloadDeploymentBuildContainerImageHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "WorkloadDeploymentBuildContainerImageHeaders",
      modelProperties: {
        azureAsyncOperation: {
          serializedName: "azure-asyncoperation",
          type: {
            name: "String",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const WorkloadDeploymentTestMigrateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "WorkloadDeploymentTestMigrateHeaders",
      modelProperties: {
        azureAsyncOperation: {
          serializedName: "azure-asyncoperation",
          type: {
            name: "String",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const WorkloadDeploymentTestMigrateCleanupHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "WorkloadDeploymentTestMigrateCleanupHeaders",
      modelProperties: {
        azureAsyncOperation: {
          serializedName: "azure-asyncoperation",
          type: {
            name: "String",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const WorkloadDeploymentMigrateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadDeploymentMigrateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkloadInstanceDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadInstanceDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkloadInstanceMigrateCompleteHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "WorkloadInstanceMigrateCompleteHeaders",
      modelProperties: {
        azureAsyncOperation: {
          serializedName: "azure-asyncoperation",
          type: {
            name: "String",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const WorkloadInstanceStopReplicateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "WorkloadInstanceStopReplicateHeaders",
      modelProperties: {
        azureAsyncOperation: {
          serializedName: "azure-asyncoperation",
          type: {
            name: "String",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export let discriminators = {
  MigrateAgentModelCustomProperties: MigrateAgentModelCustomProperties,
  WorkflowModelCustomProperties: WorkflowModelCustomProperties,
  WorkloadInstanceModelCustomProperties: WorkloadInstanceModelCustomProperties,
  WorkloadDeploymentModelCustomProperties:
    WorkloadDeploymentModelCustomProperties,
  "MigrateAgentModelCustomProperties.VMwareMigrateAgentModelCustomProperties":
    VMwareMigrateAgentModelCustomProperties,
  "WorkflowModelCustomProperties.BuildContainerImageWorkflowModelCustomProperties":
    BuildContainerImageWorkflowModelCustomProperties,
  "WorkflowModelCustomProperties.EnableReplicationWorkflowModelCustomProperties":
    EnableReplicationWorkflowModelCustomProperties,
  "WorkflowModelCustomProperties.MigrateWorkflowModelCustomProperties":
    MigrateWorkflowModelCustomProperties,
  "WorkflowModelCustomProperties.TestMigrateCleanupWorkflowModelCustomProperties":
    TestMigrateCleanupWorkflowModelCustomProperties,
  "WorkflowModelCustomProperties.TestMigrateWorkflowModelCustomProperties":
    TestMigrateWorkflowModelCustomProperties,
  "WorkloadInstanceModelCustomProperties.ApacheTomcatWorkloadInstanceModelCustomProperties":
    ApacheTomcatWorkloadInstanceModelCustomProperties,
  "WorkloadInstanceModelCustomProperties.IISWorkloadInstanceModelCustomProperties":
    IISWorkloadInstanceModelCustomProperties,
  "WorkloadDeploymentModelCustomProperties.ApacheTomcatAKSWorkloadDeploymentModelCustomProperties":
    ApacheTomcatAKSWorkloadDeploymentModelCustomProperties,
  "WorkloadDeploymentModelCustomProperties.IISAKSWorkloadDeploymentModelCustomProperties":
    IisaksWorkloadDeploymentModelCustomProperties,
};
