/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DependencyMapServiceMapextensionsClientGroupMembersRequest,
  HypervDependencyMapControllerClientGroupMembersOptionalParams,
  HypervDependencyMapControllerClientGroupMembersResponse,
  DependencyMapServiceMapextensionsExportDependenciesRequest,
  HypervDependencyMapControllerExportDependenciesOptionalParams,
  HypervDependencyMapControllerExportDependenciesResponse,
  DependencyMapServiceMapextensionsScopeMapRequest,
  HypervDependencyMapControllerGenerateCoarseMapOptionalParams,
  HypervDependencyMapControllerGenerateCoarseMapResponse,
  DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest,
  HypervDependencyMapControllerGenerateDetailedMapOptionalParams,
  HypervDependencyMapControllerGenerateDetailedMapResponse,
  DependencyMapServiceMapextensionsServerGroupMembersRequest,
  HypervDependencyMapControllerServerGroupMembersOptionalParams,
  HypervDependencyMapControllerServerGroupMembersResponse,
  UpdateMachineDepMapStatus,
  HypervDependencyMapControllerUpdateDependencyMapStatusOptionalParams,
  HypervDependencyMapControllerUpdateDependencyMapStatusResponse,
} from "../models";

/** Interface representing a HypervDependencyMapController. */
export interface HypervDependencyMapController {
  /**
   * API to list client group members for the selected client group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginClientGroupMembers(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsClientGroupMembersRequest,
    options?: HypervDependencyMapControllerClientGroupMembersOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<HypervDependencyMapControllerClientGroupMembersResponse>,
      HypervDependencyMapControllerClientGroupMembersResponse
    >
  >;
  /**
   * API to list client group members for the selected client group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginClientGroupMembersAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsClientGroupMembersRequest,
    options?: HypervDependencyMapControllerClientGroupMembersOptionalParams,
  ): Promise<HypervDependencyMapControllerClientGroupMembersResponse>;
  /**
   * API to generate report containing agentless dependencies.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param requestBody The content of the action request
   * @param options The options parameters.
   */
  beginExportDependencies(
    resourceGroupName: string,
    siteName: string,
    requestBody: DependencyMapServiceMapextensionsExportDependenciesRequest,
    options?: HypervDependencyMapControllerExportDependenciesOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<HypervDependencyMapControllerExportDependenciesResponse>,
      HypervDependencyMapControllerExportDependenciesResponse
    >
  >;
  /**
   * API to generate report containing agentless dependencies.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param requestBody The content of the action request
   * @param options The options parameters.
   */
  beginExportDependenciesAndWait(
    resourceGroupName: string,
    siteName: string,
    requestBody: DependencyMapServiceMapextensionsExportDependenciesRequest,
    options?: HypervDependencyMapControllerExportDependenciesOptionalParams,
  ): Promise<HypervDependencyMapControllerExportDependenciesResponse>;
  /**
   * API to generate coarse map for the list of machines.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginGenerateCoarseMap(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsScopeMapRequest,
    options?: HypervDependencyMapControllerGenerateCoarseMapOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<HypervDependencyMapControllerGenerateCoarseMapResponse>,
      HypervDependencyMapControllerGenerateCoarseMapResponse
    >
  >;
  /**
   * API to generate coarse map for the list of machines.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginGenerateCoarseMapAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsScopeMapRequest,
    options?: HypervDependencyMapControllerGenerateCoarseMapOptionalParams,
  ): Promise<HypervDependencyMapControllerGenerateCoarseMapResponse>;
  /**
   * API to generate detailed map for a selected machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginGenerateDetailedMap(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest,
    options?: HypervDependencyMapControllerGenerateDetailedMapOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<HypervDependencyMapControllerGenerateDetailedMapResponse>,
      HypervDependencyMapControllerGenerateDetailedMapResponse
    >
  >;
  /**
   * API to generate detailed map for a selected machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginGenerateDetailedMapAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest,
    options?: HypervDependencyMapControllerGenerateDetailedMapOptionalParams,
  ): Promise<HypervDependencyMapControllerGenerateDetailedMapResponse>;
  /**
   * API to list server group members for the selected server group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginServerGroupMembers(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsServerGroupMembersRequest,
    options?: HypervDependencyMapControllerServerGroupMembersOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<HypervDependencyMapControllerServerGroupMembersResponse>,
      HypervDependencyMapControllerServerGroupMembersResponse
    >
  >;
  /**
   * API to list server group members for the selected server group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginServerGroupMembersAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsServerGroupMembersRequest,
    options?: HypervDependencyMapControllerServerGroupMembersOptionalParams,
  ): Promise<HypervDependencyMapControllerServerGroupMembersResponse>;
  /**
   * Method to enable disable dependency map status for machines
   *             in a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginUpdateDependencyMapStatus(
    resourceGroupName: string,
    siteName: string,
    mapRequest: UpdateMachineDepMapStatus,
    options?: HypervDependencyMapControllerUpdateDependencyMapStatusOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<HypervDependencyMapControllerUpdateDependencyMapStatusResponse>,
      HypervDependencyMapControllerUpdateDependencyMapStatusResponse
    >
  >;
  /**
   * Method to enable disable dependency map status for machines
   *             in a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginUpdateDependencyMapStatusAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: UpdateMachineDepMapStatus,
    options?: HypervDependencyMapControllerUpdateDependencyMapStatusOptionalParams,
  ): Promise<HypervDependencyMapControllerUpdateDependencyMapStatusResponse>;
}
