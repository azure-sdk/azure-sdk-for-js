/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SqlAvailabilityGroup,
  SqlAvailabilityGroupsControllerListBySqlSiteOptionalParams,
  SqlAvailabilityGroupsControllerGetOptionalParams,
  SqlAvailabilityGroupsControllerGetResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlAvailabilityGroupsController. */
export interface SqlAvailabilityGroupsController {
  /**
   * Gets the sql availability groups.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param sqlSiteName SQL site name.
   * @param options The options parameters.
   */
  listBySqlSite(
    resourceGroupName: string,
    siteName: string,
    sqlSiteName: string,
    options?: SqlAvailabilityGroupsControllerListBySqlSiteOptionalParams,
  ): PagedAsyncIterableIterator<SqlAvailabilityGroup>;
  /**
   * Gets the sql availability group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param sqlSiteName SQL site name.
   * @param sqlAvailabilityGroupName SQL availability group name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    siteName: string,
    sqlSiteName: string,
    sqlAvailabilityGroupName: string,
    options?: SqlAvailabilityGroupsControllerGetOptionalParams,
  ): Promise<SqlAvailabilityGroupsControllerGetResponse>;
}
