/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  WebAppSite,
  WebAppSitesControllerListByMasterSiteOptionalParams,
  WebAppSitesControllerGetOptionalParams,
  WebAppSitesControllerGetResponse,
  WebAppSitesControllerCreateOptionalParams,
  WebAppSitesControllerCreateResponse,
  WebAppSiteUpdate,
  WebAppSitesControllerUpdateOptionalParams,
  WebAppSitesControllerUpdateResponse,
  WebAppSitesControllerDeleteOptionalParams,
  ErrorSummaryRequest,
  WebAppSitesControllerErrorSummaryOptionalParams,
  WebAppSitesControllerErrorSummaryResponse,
  ExportWebAppsRequest,
  WebAppSitesControllerExportInventoryOptionalParams,
  WebAppSitesControllerExportInventoryResponse,
  ProxySiteRefreshBody,
  WebAppSitesControllerRefreshOptionalParams,
  WebAppSitesControllerRefreshResponse,
  WebAppSitesControllerSummaryOptionalParams,
  WebAppSitesControllerSummaryResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WebAppSitesController. */
export interface WebAppSitesController {
  /**
   * Method to get all sites.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  listByMasterSite(
    resourceGroupName: string,
    siteName: string,
    options?: WebAppSitesControllerListByMasterSiteOptionalParams,
  ): PagedAsyncIterableIterator<WebAppSite>;
  /**
   * Method to get a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param webAppSiteName Web app site name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    siteName: string,
    webAppSiteName: string,
    options?: WebAppSitesControllerGetOptionalParams,
  ): Promise<WebAppSitesControllerGetResponse>;
  /**
   * Method to create a WebApp site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param webAppSiteName Web app site name.
   * @param body Resource create parameters.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    siteName: string,
    webAppSiteName: string,
    body: WebAppSite,
    options?: WebAppSitesControllerCreateOptionalParams,
  ): Promise<WebAppSitesControllerCreateResponse>;
  /**
   * Method to update an existing site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param webAppSiteName Web app site name.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    siteName: string,
    webAppSiteName: string,
    properties: WebAppSiteUpdate,
    options?: WebAppSitesControllerUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WebAppSitesControllerUpdateResponse>,
      WebAppSitesControllerUpdateResponse
    >
  >;
  /**
   * Method to update an existing site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param webAppSiteName Web app site name.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    siteName: string,
    webAppSiteName: string,
    properties: WebAppSiteUpdate,
    options?: WebAppSitesControllerUpdateOptionalParams,
  ): Promise<WebAppSitesControllerUpdateResponse>;
  /**
   * Deletes the WebApp site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param webAppSiteName Web app site name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    siteName: string,
    webAppSiteName: string,
    options?: WebAppSitesControllerDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes the WebApp site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param webAppSiteName Web app site name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    siteName: string,
    webAppSiteName: string,
    options?: WebAppSitesControllerDeleteOptionalParams,
  ): Promise<void>;
  /**
   * MMethod to get error summary from web app  site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param webAppSiteName Web app site name.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  errorSummary(
    resourceGroupName: string,
    siteName: string,
    webAppSiteName: string,
    body: ErrorSummaryRequest,
    options?: WebAppSitesControllerErrorSummaryOptionalParams,
  ): Promise<WebAppSitesControllerErrorSummaryResponse>;
  /**
   * Method to generate report containing web app inventory.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param webAppSiteName Web app site name.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportInventory(
    resourceGroupName: string,
    siteName: string,
    webAppSiteName: string,
    body: ExportWebAppsRequest,
    options?: WebAppSitesControllerExportInventoryOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WebAppSitesControllerExportInventoryResponse>,
      WebAppSitesControllerExportInventoryResponse
    >
  >;
  /**
   * Method to generate report containing web app inventory.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param webAppSiteName Web app site name.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportInventoryAndWait(
    resourceGroupName: string,
    siteName: string,
    webAppSiteName: string,
    body: ExportWebAppsRequest,
    options?: WebAppSitesControllerExportInventoryOptionalParams,
  ): Promise<WebAppSitesControllerExportInventoryResponse>;
  /**
   * Method to refresh a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param webAppSiteName Web app site name.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginRefresh(
    resourceGroupName: string,
    siteName: string,
    webAppSiteName: string,
    body: ProxySiteRefreshBody,
    options?: WebAppSitesControllerRefreshOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WebAppSitesControllerRefreshResponse>,
      WebAppSitesControllerRefreshResponse
    >
  >;
  /**
   * Method to refresh a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param webAppSiteName Web app site name.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginRefreshAndWait(
    resourceGroupName: string,
    siteName: string,
    webAppSiteName: string,
    body: ProxySiteRefreshBody,
    options?: WebAppSitesControllerRefreshOptionalParams,
  ): Promise<WebAppSitesControllerRefreshResponse>;
  /**
   * Method to get site usage/summary.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param webAppSiteName Web app site name.
   * @param options The options parameters.
   */
  summary(
    resourceGroupName: string,
    siteName: string,
    webAppSiteName: string,
    options?: WebAppSitesControllerSummaryOptionalParams,
  ): Promise<WebAppSitesControllerSummaryResponse>;
}
