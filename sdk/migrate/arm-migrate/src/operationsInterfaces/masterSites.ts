/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  MasterSite,
  MasterSitesListBySubscriptionOptionalParams,
  MasterSitesListOptionalParams,
  MasterSitesGetSiteOptionalParams,
  MasterSitesGetSiteResponse,
  MasterSitesPutSiteOptionalParams,
  MasterSitesPutSiteResponse,
  MasterSitesDeleteSiteOptionalParams,
  MasterSitesPatchSiteOptionalParams,
  MasterSitesPatchSiteResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a MasterSites. */
export interface MasterSites {
  /**
   * Get all the sites in the subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: MasterSitesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<MasterSite>;
  /**
   * Get all the sites in the resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    options?: MasterSitesListOptionalParams
  ): PagedAsyncIterableIterator<MasterSite>;
  /**
   * Method to get a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName The site name.
   * @param options The options parameters.
   */
  getSite(
    resourceGroupName: string,
    siteName: string,
    options?: MasterSitesGetSiteOptionalParams
  ): Promise<MasterSitesGetSiteResponse>;
  /**
   * Method to create or update a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name.
   * @param body Body with site details.
   * @param options The options parameters.
   */
  putSite(
    resourceGroupName: string,
    siteName: string,
    body: MasterSite,
    options?: MasterSitesPutSiteOptionalParams
  ): Promise<MasterSitesPutSiteResponse>;
  /**
   * Method to delete a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name.
   * @param options The options parameters.
   */
  deleteSite(
    resourceGroupName: string,
    siteName: string,
    options?: MasterSitesDeleteSiteOptionalParams
  ): Promise<void>;
  /**
   * Method to patch an existing site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name.
   * @param body Body with site details.
   * @param options The options parameters.
   */
  patchSite(
    resourceGroupName: string,
    siteName: string,
    body: MasterSite,
    options?: MasterSitesPatchSiteOptionalParams
  ): Promise<MasterSitesPatchSiteResponse>;
}
