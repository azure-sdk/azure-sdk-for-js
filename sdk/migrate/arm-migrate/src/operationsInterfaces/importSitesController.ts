/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ImportSite,
  ImportSitesControllerListBySubscriptionOptionalParams,
  ImportSitesControllerListByResourceGroupOptionalParams,
  ImportSitesControllerGetOptionalParams,
  ImportSitesControllerGetResponse,
  ImportSitesControllerCreateOptionalParams,
  ImportSitesControllerCreateResponse,
  ImportSiteUpdate,
  ImportSitesControllerUpdateOptionalParams,
  ImportSitesControllerUpdateResponse,
  ImportSitesControllerDeleteOptionalParams,
  ImportSitesControllerDeleteImportedMachinesOptionalParams,
  ImportSitesControllerDeleteImportedMachinesResponse,
  SasUriResponse,
  ImportSitesControllerExportUriOptionalParams,
  ImportSitesControllerExportUriResponse,
  ImportSitesControllerImportUriOptionalParams,
  ImportSitesControllerImportUriResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ImportSitesController. */
export interface ImportSitesController {
  /**
   * List ImportSite resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ImportSitesControllerListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<ImportSite>;
  /**
   * Get all import sites.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ImportSitesControllerListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<ImportSite>;
  /**
   * Get a ImportSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    siteName: string,
    options?: ImportSitesControllerGetOptionalParams,
  ): Promise<ImportSitesControllerGetResponse>;
  /**
   * Create a ImportSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body Resource create parameters.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    siteName: string,
    body: ImportSite,
    options?: ImportSitesControllerCreateOptionalParams,
  ): Promise<ImportSitesControllerCreateResponse>;
  /**
   * Update a ImportSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    siteName: string,
    body: ImportSiteUpdate,
    options?: ImportSitesControllerUpdateOptionalParams,
  ): Promise<ImportSitesControllerUpdateResponse>;
  /**
   * Delete a ImportSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    siteName: string,
    options?: ImportSitesControllerDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Deletes the imported machines for site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  deleteImportedMachines(
    resourceGroupName: string,
    siteName: string,
    body: Record<string, unknown>,
    options?: ImportSitesControllerDeleteImportedMachinesOptionalParams,
  ): Promise<ImportSitesControllerDeleteImportedMachinesResponse>;
  /**
   * Method to export  a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  exportUri(
    resourceGroupName: string,
    siteName: string,
    body: SasUriResponse,
    options?: ImportSitesControllerExportUriOptionalParams,
  ): Promise<ImportSitesControllerExportUriResponse>;
  /**
   * Method to import a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  importUri(
    resourceGroupName: string,
    siteName: string,
    body: SasUriResponse,
    options?: ImportSitesControllerImportUriOptionalParams,
  ): Promise<ImportSitesControllerImportUriResponse>;
}
