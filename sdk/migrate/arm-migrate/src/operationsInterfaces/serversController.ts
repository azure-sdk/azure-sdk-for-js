/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Server,
  ServersControllerListByServerSiteResourceOptionalParams,
  ServersControllerGetMachineOptionalParams,
  ServersControllerGetMachineResponse,
  ServerUpdate,
  ServersControllerUpdateMachineOptionalParams,
  ServersControllerUpdateMachineResponse,
  ServersControllerDeleteMachineOptionalParams,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ServersController. */
export interface ServersController {
  /**
   * Get all machines in a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  listByServerSiteResource(
    resourceGroupName: string,
    siteName: string,
    options?: ServersControllerListByServerSiteResourceOptionalParams,
  ): PagedAsyncIterableIterator<Server>;
  /**
   * Get a Server
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param machineName  A server machine name
   * @param options The options parameters.
   */
  getMachine(
    resourceGroupName: string,
    siteName: string,
    machineName: string,
    options?: ServersControllerGetMachineOptionalParams,
  ): Promise<ServersControllerGetMachineResponse>;
  /**
   * Update a Server machine
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param machineName  A server machine name
   * @param body The resource properties to be updated.
   * @param options The options parameters.
   */
  updateMachine(
    resourceGroupName: string,
    siteName: string,
    machineName: string,
    body: ServerUpdate,
    options?: ServersControllerUpdateMachineOptionalParams,
  ): Promise<ServersControllerUpdateMachineResponse>;
  /**
   * Delete a Server
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param machineName  A server machine name
   * @param options The options parameters.
   */
  deleteMachine(
    resourceGroupName: string,
    siteName: string,
    machineName: string,
    options?: ServersControllerDeleteMachineOptionalParams,
  ): Promise<void>;
}
