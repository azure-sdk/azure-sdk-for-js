/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  DeleteImportMachinesJob,
  ImportJobsControllerListDeletejobsOptionalParams,
  ExportImportedMachinesJob,
  ImportJobsControllerListExportjobsOptionalParams,
  ImportMachinesJob,
  ImportJobsControllerListImportjobsOptionalParams,
  ImportJob,
  ImportJobsControllerListByImportSiteOptionalParams,
  ImportJobsControllerGetDeletejobOptionalParams,
  ImportJobsControllerGetDeletejobResponse,
  ImportJobsControllerGetExportjobOptionalParams,
  ImportJobsControllerGetExportjobResponse,
  ImportJobsControllerGetImportjobOptionalParams,
  ImportJobsControllerGetImportjobResponse,
  ImportJobsControllerGetOptionalParams,
  ImportJobsControllerGetResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ImportJobsController. */
export interface ImportJobsController {
  /**
   * Method to get all delete import machines job for the given site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  listDeletejobs(
    resourceGroupName: string,
    siteName: string,
    options?: ImportJobsControllerListDeletejobsOptionalParams,
  ): PagedAsyncIterableIterator<DeleteImportMachinesJob>;
  /**
   * Method to get all export import machines job for the given site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  listExportjobs(
    resourceGroupName: string,
    siteName: string,
    options?: ImportJobsControllerListExportjobsOptionalParams,
  ): PagedAsyncIterableIterator<ExportImportedMachinesJob>;
  /**
   * Method to get all import machines job for the given site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  listImportjobs(
    resourceGroupName: string,
    siteName: string,
    options?: ImportJobsControllerListImportjobsOptionalParams,
  ): PagedAsyncIterableIterator<ImportMachinesJob>;
  /**
   * List ImportJob resources by ImportSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  listByImportSite(
    resourceGroupName: string,
    siteName: string,
    options?: ImportJobsControllerListByImportSiteOptionalParams,
  ): PagedAsyncIterableIterator<ImportJob>;
  /**
   * Gets the delete imported machines job with the given job name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param jobName Job Arm Name.
   * @param options The options parameters.
   */
  getDeletejob(
    resourceGroupName: string,
    siteName: string,
    jobName: string,
    options?: ImportJobsControllerGetDeletejobOptionalParams,
  ): Promise<ImportJobsControllerGetDeletejobResponse>;
  /**
   * Gets the export imported machines job with the given job name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param jobName Job Arm Name.
   * @param options The options parameters.
   */
  getExportjob(
    resourceGroupName: string,
    siteName: string,
    jobName: string,
    options?: ImportJobsControllerGetExportjobOptionalParams,
  ): Promise<ImportJobsControllerGetExportjobResponse>;
  /**
   * Gets the import job with the given job name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param jobName Job Arm Name.
   * @param options The options parameters.
   */
  getImportjob(
    resourceGroupName: string,
    siteName: string,
    jobName: string,
    options?: ImportJobsControllerGetImportjobOptionalParams,
  ): Promise<ImportJobsControllerGetImportjobResponse>;
  /**
   * Get a ImportJob
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param jobName  Jobs name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    siteName: string,
    jobName: string,
    options?: ImportJobsControllerGetOptionalParams,
  ): Promise<ImportJobsControllerGetResponse>;
}
