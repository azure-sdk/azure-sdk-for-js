/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  HypervSitesControllerGetOptionalParams,
  HypervSitesControllerGetResponse,
  HypervSite,
  HypervSitesControllerCreateOptionalParams,
  HypervSitesControllerCreateResponse,
  HypervSiteUpdate,
  HypervSitesControllerUpdateOptionalParams,
  HypervSitesControllerUpdateResponse,
  HypervSitesControllerDeleteOptionalParams,
  HypervSitesControllerComputeErrorSummaryOptionalParams,
  HypervSitesControllerComputeErrorSummaryResponse,
  HypervSitesControllerComputeusageOptionalParams,
  HypervSitesControllerComputeusageResponse,
  HypervSitesControllerExportApplicationsOptionalParams,
  HypervSitesControllerExportApplicationsResponse,
  ExportMachineErrorsRequest,
  HypervSitesControllerExportMachineErrorsOptionalParams,
  HypervSitesControllerExportMachineErrorsResponse,
  HypervSitesControllerListHealthSummaryOptionalParams,
  HypervSitesControllerListHealthSummaryResponse,
  HypervSitesControllerSummaryOptionalParams,
  HypervSitesControllerSummaryResponse,
} from "../models";

/** Interface representing a HypervSitesController. */
export interface HypervSitesController {
  /**
   * Get a HypervSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    siteName: string,
    options?: HypervSitesControllerGetOptionalParams,
  ): Promise<HypervSitesControllerGetResponse>;
  /**
   * Create a HypervSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body Resource create parameters.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    siteName: string,
    body: HypervSite,
    options?: HypervSitesControllerCreateOptionalParams,
  ): Promise<HypervSitesControllerCreateResponse>;
  /**
   * Update a HypervSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    siteName: string,
    body: HypervSiteUpdate,
    options?: HypervSitesControllerUpdateOptionalParams,
  ): Promise<HypervSitesControllerUpdateResponse>;
  /**
   * Delete a HypervSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    siteName: string,
    options?: HypervSitesControllerDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Method to get site error summary.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  computeErrorSummary(
    resourceGroupName: string,
    siteName: string,
    body: Record<string, unknown>,
    options?: HypervSitesControllerComputeErrorSummaryOptionalParams,
  ): Promise<HypervSitesControllerComputeErrorSummaryResponse>;
  /**
   * Get a hyperv site usage.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  computeusage(
    resourceGroupName: string,
    siteName: string,
    body: Record<string, unknown>,
    options?: HypervSitesControllerComputeusageOptionalParams,
  ): Promise<HypervSitesControllerComputeusageResponse>;
  /**
   * Method to generate report containing
   *             machine and the deep discovery of the application installed in the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportApplications(
    resourceGroupName: string,
    siteName: string,
    body: Record<string, unknown>,
    options?: HypervSitesControllerExportApplicationsOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<HypervSitesControllerExportApplicationsResponse>,
      HypervSitesControllerExportApplicationsResponse
    >
  >;
  /**
   * Method to generate report containing
   *             machine and the deep discovery of the application installed in the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportApplicationsAndWait(
    resourceGroupName: string,
    siteName: string,
    body: Record<string, unknown>,
    options?: HypervSitesControllerExportApplicationsOptionalParams,
  ): Promise<HypervSitesControllerExportApplicationsResponse>;
  /**
   * Method to generate report containing
   *             machine and the errors encountered during guest discovery of the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportMachineErrors(
    resourceGroupName: string,
    siteName: string,
    body: ExportMachineErrorsRequest,
    options?: HypervSitesControllerExportMachineErrorsOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<HypervSitesControllerExportMachineErrorsResponse>,
      HypervSitesControllerExportMachineErrorsResponse
    >
  >;
  /**
   * Method to generate report containing
   *             machine and the errors encountered during guest discovery of the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportMachineErrorsAndWait(
    resourceGroupName: string,
    siteName: string,
    body: ExportMachineErrorsRequest,
    options?: HypervSitesControllerExportMachineErrorsOptionalParams,
  ): Promise<HypervSitesControllerExportMachineErrorsResponse>;
  /**
   * Method to get site health summary.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  listHealthSummary(
    resourceGroupName: string,
    siteName: string,
    options?: HypervSitesControllerListHealthSummaryOptionalParams,
  ): Promise<HypervSitesControllerListHealthSummaryResponse>;
  /**
   * Method to get site usage.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  summary(
    resourceGroupName: string,
    siteName: string,
    options?: HypervSitesControllerSummaryOptionalParams,
  ): Promise<HypervSitesControllerSummaryResponse>;
}
