/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DependencyMapServiceMapextensionsClientGroupMembersRequest,
  DependencyMapControllerClientGroupMembersOptionalParams,
  DependencyMapControllerClientGroupMembersResponse,
  DependencyMapServiceMapextensionsExportDependenciesRequest,
  DependencyMapControllerExportDependenciesOptionalParams,
  DependencyMapControllerExportDependenciesResponse,
  DependencyMapServiceMapextensionsScopeMapRequest,
  DependencyMapControllerGenerateCoarseMapOptionalParams,
  DependencyMapControllerGenerateCoarseMapResponse,
  DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest,
  DependencyMapControllerGenerateDetailedMapOptionalParams,
  DependencyMapControllerGenerateDetailedMapResponse,
  DependencyMapServiceMapextensionsServerGroupMembersRequest,
  DependencyMapControllerServerGroupMembersOptionalParams,
  DependencyMapControllerServerGroupMembersResponse,
} from "../models";

/** Interface representing a DependencyMapController. */
export interface DependencyMapController {
  /**
   * API to list client group members for the selected client group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginClientGroupMembers(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsClientGroupMembersRequest,
    options?: DependencyMapControllerClientGroupMembersOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DependencyMapControllerClientGroupMembersResponse>,
      DependencyMapControllerClientGroupMembersResponse
    >
  >;
  /**
   * API to list client group members for the selected client group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginClientGroupMembersAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsClientGroupMembersRequest,
    options?: DependencyMapControllerClientGroupMembersOptionalParams,
  ): Promise<DependencyMapControllerClientGroupMembersResponse>;
  /**
   * API to generate report containing agentless dependencies.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param requestBody The content of the action request
   * @param options The options parameters.
   */
  beginExportDependencies(
    resourceGroupName: string,
    siteName: string,
    requestBody: DependencyMapServiceMapextensionsExportDependenciesRequest,
    options?: DependencyMapControllerExportDependenciesOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DependencyMapControllerExportDependenciesResponse>,
      DependencyMapControllerExportDependenciesResponse
    >
  >;
  /**
   * API to generate report containing agentless dependencies.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param requestBody The content of the action request
   * @param options The options parameters.
   */
  beginExportDependenciesAndWait(
    resourceGroupName: string,
    siteName: string,
    requestBody: DependencyMapServiceMapextensionsExportDependenciesRequest,
    options?: DependencyMapControllerExportDependenciesOptionalParams,
  ): Promise<DependencyMapControllerExportDependenciesResponse>;
  /**
   * API to generate coarse map for the list of machines.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginGenerateCoarseMap(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsScopeMapRequest,
    options?: DependencyMapControllerGenerateCoarseMapOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DependencyMapControllerGenerateCoarseMapResponse>,
      DependencyMapControllerGenerateCoarseMapResponse
    >
  >;
  /**
   * API to generate coarse map for the list of machines.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginGenerateCoarseMapAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsScopeMapRequest,
    options?: DependencyMapControllerGenerateCoarseMapOptionalParams,
  ): Promise<DependencyMapControllerGenerateCoarseMapResponse>;
  /**
   * API to generate detailed map for a selected machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginGenerateDetailedMap(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest,
    options?: DependencyMapControllerGenerateDetailedMapOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DependencyMapControllerGenerateDetailedMapResponse>,
      DependencyMapControllerGenerateDetailedMapResponse
    >
  >;
  /**
   * API to generate detailed map for a selected machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginGenerateDetailedMapAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest,
    options?: DependencyMapControllerGenerateDetailedMapOptionalParams,
  ): Promise<DependencyMapControllerGenerateDetailedMapResponse>;
  /**
   * API to list server group members for the selected server group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginServerGroupMembers(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsServerGroupMembersRequest,
    options?: DependencyMapControllerServerGroupMembersOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DependencyMapControllerServerGroupMembersResponse>,
      DependencyMapControllerServerGroupMembersResponse
    >
  >;
  /**
   * API to list server group members for the selected server group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginServerGroupMembersAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsServerGroupMembersRequest,
    options?: DependencyMapControllerServerGroupMembersOptionalParams,
  ): Promise<DependencyMapControllerServerGroupMembersResponse>;
}
