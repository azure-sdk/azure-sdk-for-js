/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  VmwareSite,
  SitesControllerListBySubscriptionOptionalParams,
  SitesControllerListByResourceGroupOptionalParams,
  SitesControllerGetOptionalParams,
  SitesControllerGetResponse,
  SitesControllerCreateOptionalParams,
  SitesControllerCreateResponse,
  VmwareSiteUpdate,
  SitesControllerUpdateOptionalParams,
  SitesControllerUpdateResponse,
  SitesControllerDeleteOptionalParams,
  SitesControllerComputeErrorSummaryOptionalParams,
  SitesControllerComputeErrorSummaryResponse,
  SitesControllerComputeusageOptionalParams,
  SitesControllerComputeusageResponse,
  SitesControllerExportApplicationsOptionalParams,
  SitesControllerExportApplicationsResponse,
  ExportMachineErrorsRequest,
  SitesControllerExportMachineErrorsOptionalParams,
  SitesControllerExportMachineErrorsResponse,
  ExportMachinesRequest,
  SitesControllerExportMachinesOptionalParams,
  SitesControllerExportMachinesResponse,
  SitesControllerListHealthSummaryOptionalParams,
  SitesControllerListHealthSummaryResponse,
  SitesControllerSummaryOptionalParams,
  SitesControllerSummaryResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SitesController. */
export interface SitesController {
  /**
   * Get all the vmware sites in the subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: SitesControllerListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<VmwareSite>;
  /**
   * Get all the vmware sites in the resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: SitesControllerListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<VmwareSite>;
  /**
   * Get a VmwareSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    siteName: string,
    options?: SitesControllerGetOptionalParams,
  ): Promise<SitesControllerGetResponse>;
  /**
   * Create a VmwareSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body Resource create parameters.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    siteName: string,
    body: VmwareSite,
    options?: SitesControllerCreateOptionalParams,
  ): Promise<SitesControllerCreateResponse>;
  /**
   * Update a VmwareSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    siteName: string,
    body: VmwareSiteUpdate,
    options?: SitesControllerUpdateOptionalParams,
  ): Promise<SitesControllerUpdateResponse>;
  /**
   * Delete a VmwareSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    siteName: string,
    options?: SitesControllerDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Method to get site error summary.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  computeErrorSummary(
    resourceGroupName: string,
    siteName: string,
    body: Record<string, unknown>,
    options?: SitesControllerComputeErrorSummaryOptionalParams,
  ): Promise<SitesControllerComputeErrorSummaryResponse>;
  /**
   * Method to get site error summary.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  computeusage(
    resourceGroupName: string,
    siteName: string,
    body: Record<string, unknown>,
    options?: SitesControllerComputeusageOptionalParams,
  ): Promise<SitesControllerComputeusageResponse>;
  /**
   * Method to generate report containing
   *             machine and the deep discovery of the application installed in the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportApplications(
    resourceGroupName: string,
    siteName: string,
    body: Record<string, unknown>,
    options?: SitesControllerExportApplicationsOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SitesControllerExportApplicationsResponse>,
      SitesControllerExportApplicationsResponse
    >
  >;
  /**
   * Method to generate report containing
   *             machine and the deep discovery of the application installed in the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportApplicationsAndWait(
    resourceGroupName: string,
    siteName: string,
    body: Record<string, unknown>,
    options?: SitesControllerExportApplicationsOptionalParams,
  ): Promise<SitesControllerExportApplicationsResponse>;
  /**
   * Method to generate report containing
   *             machine and the errors encountered during guest discovery of the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportMachineErrors(
    resourceGroupName: string,
    siteName: string,
    body: ExportMachineErrorsRequest,
    options?: SitesControllerExportMachineErrorsOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SitesControllerExportMachineErrorsResponse>,
      SitesControllerExportMachineErrorsResponse
    >
  >;
  /**
   * Method to generate report containing
   *             machine and the errors encountered during guest discovery of the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportMachineErrorsAndWait(
    resourceGroupName: string,
    siteName: string,
    body: ExportMachineErrorsRequest,
    options?: SitesControllerExportMachineErrorsOptionalParams,
  ): Promise<SitesControllerExportMachineErrorsResponse>;
  /**
   * Method to generate report containing
   *             machine and the deep discovery of the application installed in the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportMachines(
    resourceGroupName: string,
    siteName: string,
    body: ExportMachinesRequest,
    options?: SitesControllerExportMachinesOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SitesControllerExportMachinesResponse>,
      SitesControllerExportMachinesResponse
    >
  >;
  /**
   * Method to generate report containing
   *             machine and the deep discovery of the application installed in the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportMachinesAndWait(
    resourceGroupName: string,
    siteName: string,
    body: ExportMachinesRequest,
    options?: SitesControllerExportMachinesOptionalParams,
  ): Promise<SitesControllerExportMachinesResponse>;
  /**
   * Method to get site health summary.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  listHealthSummary(
    resourceGroupName: string,
    siteName: string,
    options?: SitesControllerListHealthSummaryOptionalParams,
  ): Promise<SitesControllerListHealthSummaryResponse>;
  /**
   * Method to get site usage/summary.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  summary(
    resourceGroupName: string,
    siteName: string,
    options?: SitesControllerSummaryOptionalParams,
  ): Promise<SitesControllerSummaryResponse>;
}
