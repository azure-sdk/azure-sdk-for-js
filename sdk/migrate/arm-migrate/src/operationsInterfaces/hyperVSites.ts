/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  SiteHealthSummary,
  HyperVSitesGetSiteHealthSummaryOptionalParams,
  HyperVSite,
  HyperVSitesListBySubscriptionOptionalParams,
  HyperVSitesListOptionalParams,
  HyperVSitesGetSiteOptionalParams,
  HyperVSitesGetSiteResponse,
  HyperVSitesPutSiteOptionalParams,
  HyperVSitesPutSiteResponse,
  HyperVSitesDeleteSiteOptionalParams,
  HyperVSitesPatchSiteOptionalParams,
  HyperVSitesPatchSiteResponse,
  HyperVSitesRefreshSiteOptionalParams,
  HyperVSitesRefreshSiteResponse,
  HyperVSitesGetSiteUsageOptionalParams,
  HyperVSitesGetSiteUsageResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a HyperVSites. */
export interface HyperVSites {
  /**
   * Method to get site health summary.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name.
   * @param options The options parameters.
   */
  listSiteHealthSummary(
    resourceGroupName: string,
    siteName: string,
    options?: HyperVSitesGetSiteHealthSummaryOptionalParams
  ): PagedAsyncIterableIterator<SiteHealthSummary>;
  /**
   * Get all the hyperv sites in the subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: HyperVSitesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<HyperVSite>;
  /**
   * Get all the hyperv sites in the subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    options?: HyperVSitesListOptionalParams
  ): PagedAsyncIterableIterator<HyperVSite>;
  /**
   * Method to get a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name.
   * @param options The options parameters.
   */
  getSite(
    resourceGroupName: string,
    siteName: string,
    options?: HyperVSitesGetSiteOptionalParams
  ): Promise<HyperVSitesGetSiteResponse>;
  /**
   * Method to create or update a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name.
   * @param body Body with site details.
   * @param options The options parameters.
   */
  putSite(
    resourceGroupName: string,
    siteName: string,
    body: HyperVSite,
    options?: HyperVSitesPutSiteOptionalParams
  ): Promise<HyperVSitesPutSiteResponse>;
  /**
   * Method to delete a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name.
   * @param options The options parameters.
   */
  deleteSite(
    resourceGroupName: string,
    siteName: string,
    options?: HyperVSitesDeleteSiteOptionalParams
  ): Promise<void>;
  /**
   * Method to patch an existing site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName The site name.
   * @param body Body with site details.
   * @param options The options parameters.
   */
  patchSite(
    resourceGroupName: string,
    siteName: string,
    body: HyperVSite,
    options?: HyperVSitesPatchSiteOptionalParams
  ): Promise<HyperVSitesPatchSiteResponse>;
  /**
   * Method to refresh a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name.
   * @param options The options parameters.
   */
  refreshSite(
    resourceGroupName: string,
    siteName: string,
    options?: HyperVSitesRefreshSiteOptionalParams
  ): Promise<HyperVSitesRefreshSiteResponse>;
  /**
   * Method to get site usage.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name.
   * @param options The options parameters.
   */
  getSiteUsage(
    resourceGroupName: string,
    siteName: string,
    options?: HyperVSitesGetSiteUsageOptionalParams
  ): Promise<HyperVSitesGetSiteUsageResponse>;
}
