/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Vcenter,
  VcenterControllerListByVmwareSiteOptionalParams,
  VcenterControllerGetOptionalParams,
  VcenterControllerGetResponse,
  VcenterControllerCreateOptionalParams,
  VcenterControllerCreateResponse,
  VcenterControllerDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VcenterController. */
export interface VcenterController {
  /**
   * List Vcenter resources by VmwareSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  listByVmwareSite(
    resourceGroupName: string,
    siteName: string,
    options?: VcenterControllerListByVmwareSiteOptionalParams,
  ): PagedAsyncIterableIterator<Vcenter>;
  /**
   * Get a Vcenter
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param vcenterName  VCenters name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    siteName: string,
    vcenterName: string,
    options?: VcenterControllerGetOptionalParams,
  ): Promise<VcenterControllerGetResponse>;
  /**
   * Create a Vcenter
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param vcenterName  VCenters name
   * @param body Resource create parameters.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    siteName: string,
    vcenterName: string,
    body: Vcenter,
    options?: VcenterControllerCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<VcenterControllerCreateResponse>,
      VcenterControllerCreateResponse
    >
  >;
  /**
   * Create a Vcenter
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param vcenterName  VCenters name
   * @param body Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    siteName: string,
    vcenterName: string,
    body: Vcenter,
    options?: VcenterControllerCreateOptionalParams,
  ): Promise<VcenterControllerCreateResponse>;
  /**
   * Delete a Vcenter
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param vcenterName  VCenters name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    siteName: string,
    vcenterName: string,
    options?: VcenterControllerDeleteOptionalParams,
  ): Promise<void>;
}
