/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ServerSiteResource,
  ServerSitesControllerListBySubscriptionOptionalParams,
  ServerSitesControllerListByResourceGroupOptionalParams,
  ServerSitesControllerGetOptionalParams,
  ServerSitesControllerGetResponse,
  ServerSitesControllerCreateOptionalParams,
  ServerSitesControllerCreateResponse,
  ServerSiteResourceUpdate,
  ServerSitesControllerUpdateOptionalParams,
  ServerSitesControllerUpdateResponse,
  ServerSitesControllerDeleteOptionalParams,
  ServerSitesControllerComputeErrorSummaryOptionalParams,
  ServerSitesControllerComputeErrorSummaryResponse,
  ServerSitesControllerComputeusageOptionalParams,
  ServerSitesControllerComputeusageResponse,
  ServerSitesControllerExportApplicationsOptionalParams,
  ServerSitesControllerExportApplicationsResponse,
  ExportMachineErrorsRequest,
  ServerSitesControllerExportMachineErrorsOptionalParams,
  ServerSitesControllerExportMachineErrorsResponse,
  ServerSitesControllerListHealthSummaryOptionalParams,
  ServerSitesControllerListHealthSummaryResponse,
  ServerSitesControllerRefreshSiteOptionalParams,
  ServerSitesControllerRefreshSiteResponse,
  ServerSitesControllerSummaryOptionalParams,
  ServerSitesControllerSummaryResponse,
  UpdateMachineDepMapStatus,
  ServerSitesControllerUpdateDependencyMapStatusOptionalParams,
  ServerSitesControllerUpdateDependencyMapStatusResponse,
  MachineMetadataCollection,
  ServerSitesControllerUpdatePropertiesOptionalParams,
  ServerSitesControllerUpdatePropertiesResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ServerSitesController. */
export interface ServerSitesController {
  /**
   * List ServerSiteResource resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ServerSitesControllerListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<ServerSiteResource>;
  /**
   * List ServerSiteResource resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ServerSitesControllerListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<ServerSiteResource>;
  /**
   * Get a ServerSiteResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    siteName: string,
    options?: ServerSitesControllerGetOptionalParams,
  ): Promise<ServerSitesControllerGetResponse>;
  /**
   * Create a ServerSiteResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body Resource create parameters.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    siteName: string,
    body: ServerSiteResource,
    options?: ServerSitesControllerCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ServerSitesControllerCreateResponse>,
      ServerSitesControllerCreateResponse
    >
  >;
  /**
   * Create a ServerSiteResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    siteName: string,
    body: ServerSiteResource,
    options?: ServerSitesControllerCreateOptionalParams,
  ): Promise<ServerSitesControllerCreateResponse>;
  /**
   * Update a ServerSiteResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    siteName: string,
    body: ServerSiteResourceUpdate,
    options?: ServerSitesControllerUpdateOptionalParams,
  ): Promise<ServerSitesControllerUpdateResponse>;
  /**
   * Delete a ServerSiteResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    siteName: string,
    options?: ServerSitesControllerDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Get the error summary for a server site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  computeErrorSummary(
    resourceGroupName: string,
    siteName: string,
    body: Record<string, unknown>,
    options?: ServerSitesControllerComputeErrorSummaryOptionalParams,
  ): Promise<ServerSitesControllerComputeErrorSummaryResponse>;
  /**
   * Get a serve site usage.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  computeusage(
    resourceGroupName: string,
    siteName: string,
    body: Record<string, unknown>,
    options?: ServerSitesControllerComputeusageOptionalParams,
  ): Promise<ServerSitesControllerComputeusageResponse>;
  /**
   * Method to generate report containing
   *             machine and the deep discovery of the application installed in the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportApplications(
    resourceGroupName: string,
    siteName: string,
    body: Record<string, unknown>,
    options?: ServerSitesControllerExportApplicationsOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ServerSitesControllerExportApplicationsResponse>,
      ServerSitesControllerExportApplicationsResponse
    >
  >;
  /**
   * Method to generate report containing
   *             machine and the deep discovery of the application installed in the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportApplicationsAndWait(
    resourceGroupName: string,
    siteName: string,
    body: Record<string, unknown>,
    options?: ServerSitesControllerExportApplicationsOptionalParams,
  ): Promise<ServerSitesControllerExportApplicationsResponse>;
  /**
   * Method to generate report containing
   *             machine and the errors encountered during guest discovery of the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportMachineErrors(
    resourceGroupName: string,
    siteName: string,
    body: ExportMachineErrorsRequest,
    options?: ServerSitesControllerExportMachineErrorsOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ServerSitesControllerExportMachineErrorsResponse>,
      ServerSitesControllerExportMachineErrorsResponse
    >
  >;
  /**
   * Method to generate report containing
   *             machine and the errors encountered during guest discovery of the machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginExportMachineErrorsAndWait(
    resourceGroupName: string,
    siteName: string,
    body: ExportMachineErrorsRequest,
    options?: ServerSitesControllerExportMachineErrorsOptionalParams,
  ): Promise<ServerSitesControllerExportMachineErrorsResponse>;
  /**
   * Method to get site health summary.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  listHealthSummary(
    resourceGroupName: string,
    siteName: string,
    options?: ServerSitesControllerListHealthSummaryOptionalParams,
  ): Promise<ServerSitesControllerListHealthSummaryResponse>;
  /**
   * Operation to refresh a site
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  beginRefreshSite(
    resourceGroupName: string,
    siteName: string,
    options?: ServerSitesControllerRefreshSiteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ServerSitesControllerRefreshSiteResponse>,
      ServerSitesControllerRefreshSiteResponse
    >
  >;
  /**
   * Operation to refresh a site
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  beginRefreshSiteAndWait(
    resourceGroupName: string,
    siteName: string,
    options?: ServerSitesControllerRefreshSiteOptionalParams,
  ): Promise<ServerSitesControllerRefreshSiteResponse>;
  /**
   * Method to get site usage.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  summary(
    resourceGroupName: string,
    siteName: string,
    options?: ServerSitesControllerSummaryOptionalParams,
  ): Promise<ServerSitesControllerSummaryResponse>;
  /**
   * Method to enable disable dependency map status for machines
   *             in a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginUpdateDependencyMapStatus(
    resourceGroupName: string,
    siteName: string,
    mapRequest: UpdateMachineDepMapStatus,
    options?: ServerSitesControllerUpdateDependencyMapStatusOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ServerSitesControllerUpdateDependencyMapStatusResponse>,
      ServerSitesControllerUpdateDependencyMapStatusResponse
    >
  >;
  /**
   * Method to enable disable dependency map status for machines
   *             in a site.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginUpdateDependencyMapStatusAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: UpdateMachineDepMapStatus,
    options?: ServerSitesControllerUpdateDependencyMapStatusOptionalParams,
  ): Promise<ServerSitesControllerUpdateDependencyMapStatusResponse>;
  /**
   * Operation to update custom properties for servers
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param metaData The content of the action request
   * @param options The options parameters.
   */
  beginUpdateProperties(
    resourceGroupName: string,
    siteName: string,
    metaData: MachineMetadataCollection,
    options?: ServerSitesControllerUpdatePropertiesOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ServerSitesControllerUpdatePropertiesResponse>,
      ServerSitesControllerUpdatePropertiesResponse
    >
  >;
  /**
   * Operation to update custom properties for servers
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param metaData The content of the action request
   * @param options The options parameters.
   */
  beginUpdatePropertiesAndWait(
    resourceGroupName: string,
    siteName: string,
    metaData: MachineMetadataCollection,
    options?: ServerSitesControllerUpdatePropertiesOptionalParams,
  ): Promise<ServerSitesControllerUpdatePropertiesResponse>;
}
