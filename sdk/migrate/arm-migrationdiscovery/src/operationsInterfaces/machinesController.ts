/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  MachineResource,
  MachinesControllerListByVmwareSiteOptionalParams,
  MachinesControllerGetOptionalParams,
  MachinesControllerGetResponse,
  MachineResourceUpdate,
  MachinesControllerUpdateOptionalParams,
  MachinesControllerUpdateResponse,
  MachinesControllerStartOptionalParams,
  MachinesControllerStartResponse,
  MachinesControllerStopOptionalParams,
  MachinesControllerStopResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a MachinesController. */
export interface MachinesController {
  /**
   * List MachineResource resources by VmwareSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param options The options parameters.
   */
  listByVmwareSite(
    resourceGroupName: string,
    siteName: string,
    options?: MachinesControllerListByVmwareSiteOptionalParams,
  ): PagedAsyncIterableIterator<MachineResource>;
  /**
   * Get a MachineResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param machineName Machine name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    siteName: string,
    machineName: string,
    options?: MachinesControllerGetOptionalParams,
  ): Promise<MachinesControllerGetResponse>;
  /**
   * Update a MachineResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param machineName Machine name
   * @param body The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    siteName: string,
    machineName: string,
    body: MachineResourceUpdate,
    options?: MachinesControllerUpdateOptionalParams,
  ): Promise<MachinesControllerUpdateResponse>;
  /**
   * Method to start a machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param machineName Machine name
   * @param options The options parameters.
   */
  beginStart(
    resourceGroupName: string,
    siteName: string,
    machineName: string,
    options?: MachinesControllerStartOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<MachinesControllerStartResponse>,
      MachinesControllerStartResponse
    >
  >;
  /**
   * Method to start a machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param machineName Machine name
   * @param options The options parameters.
   */
  beginStartAndWait(
    resourceGroupName: string,
    siteName: string,
    machineName: string,
    options?: MachinesControllerStartOptionalParams,
  ): Promise<MachinesControllerStartResponse>;
  /**
   * Method to stop a machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param machineName Machine name
   * @param options The options parameters.
   */
  beginStop(
    resourceGroupName: string,
    siteName: string,
    machineName: string,
    options?: MachinesControllerStopOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<MachinesControllerStopResponse>,
      MachinesControllerStopResponse
    >
  >;
  /**
   * Method to stop a machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param machineName Machine name
   * @param options The options parameters.
   */
  beginStopAndWait(
    resourceGroupName: string,
    siteName: string,
    machineName: string,
    options?: MachinesControllerStopOptionalParams,
  ): Promise<MachinesControllerStopResponse>;
}
