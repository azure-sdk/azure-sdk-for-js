/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  SqlDiscoverySiteDataSource,
  SqlDiscoverySiteDataSourceControllerListBySqlSiteOptionalParams,
  SqlDiscoverySiteDataSourceControllerGetOptionalParams,
  SqlDiscoverySiteDataSourceControllerGetResponse,
  SqlDiscoverySiteDataSourceControllerCreateOptionalParams,
  SqlDiscoverySiteDataSourceControllerCreateResponse,
  SqlDiscoverySiteDataSourceControllerDeleteOptionalParams,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlDiscoverySiteDataSourceController. */
export interface SqlDiscoverySiteDataSourceController {
  /**
   * List SqlDiscoverySiteDataSource resources by SqlSite
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param sqlSiteName SQL site name.
   * @param options The options parameters.
   */
  listBySqlSite(
    resourceGroupName: string,
    siteName: string,
    sqlSiteName: string,
    options?: SqlDiscoverySiteDataSourceControllerListBySqlSiteOptionalParams,
  ): PagedAsyncIterableIterator<SqlDiscoverySiteDataSource>;
  /**
   * Get a SqlDiscoverySiteDataSource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param sqlSiteName SQL site name.
   * @param discoverySiteDataSourceName SQL Discovery site data source name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    siteName: string,
    sqlSiteName: string,
    discoverySiteDataSourceName: string,
    options?: SqlDiscoverySiteDataSourceControllerGetOptionalParams,
  ): Promise<SqlDiscoverySiteDataSourceControllerGetResponse>;
  /**
   * Create a SqlDiscoverySiteDataSource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param sqlSiteName SQL site name.
   * @param discoverySiteDataSourceName SQL Discovery site data source name.
   * @param body Resource create parameters.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    siteName: string,
    sqlSiteName: string,
    discoverySiteDataSourceName: string,
    body: SqlDiscoverySiteDataSource,
    options?: SqlDiscoverySiteDataSourceControllerCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SqlDiscoverySiteDataSourceControllerCreateResponse>,
      SqlDiscoverySiteDataSourceControllerCreateResponse
    >
  >;
  /**
   * Create a SqlDiscoverySiteDataSource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param sqlSiteName SQL site name.
   * @param discoverySiteDataSourceName SQL Discovery site data source name.
   * @param body Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    siteName: string,
    sqlSiteName: string,
    discoverySiteDataSourceName: string,
    body: SqlDiscoverySiteDataSource,
    options?: SqlDiscoverySiteDataSourceControllerCreateOptionalParams,
  ): Promise<SqlDiscoverySiteDataSourceControllerCreateResponse>;
  /**
   * Delete a SqlDiscoverySiteDataSource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param sqlSiteName SQL site name.
   * @param discoverySiteDataSourceName SQL Discovery site data source name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    siteName: string,
    sqlSiteName: string,
    discoverySiteDataSourceName: string,
    options?: SqlDiscoverySiteDataSourceControllerDeleteOptionalParams,
  ): Promise<void>;
}
