/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DependencyMapServiceMapextensionsClientGroupMembersRequest,
  ServerDependencyMapControllerClientGroupMembersOptionalParams,
  ServerDependencyMapControllerClientGroupMembersResponse,
  DependencyMapServiceMapextensionsExportDependenciesRequest,
  ServerDependencyMapControllerExportDependenciesOptionalParams,
  ServerDependencyMapControllerExportDependenciesResponse,
  DependencyMapServiceMapextensionsScopeMapRequest,
  ServerDependencyMapControllerGenerateCoarseMapOptionalParams,
  ServerDependencyMapControllerGenerateCoarseMapResponse,
  DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest,
  ServerDependencyMapControllerGenerateDetailedMapOptionalParams,
  ServerDependencyMapControllerGenerateDetailedMapResponse,
  DependencyMapServiceMapextensionsServerGroupMembersRequest,
  ServerDependencyMapControllerServerGroupMembersOptionalParams,
  ServerDependencyMapControllerServerGroupMembersResponse,
} from "../models/index.js";

/** Interface representing a ServerDependencyMapController. */
export interface ServerDependencyMapController {
  /**
   * API to list client group members for the selected client group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginClientGroupMembers(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsClientGroupMembersRequest,
    options?: ServerDependencyMapControllerClientGroupMembersOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ServerDependencyMapControllerClientGroupMembersResponse>,
      ServerDependencyMapControllerClientGroupMembersResponse
    >
  >;
  /**
   * API to list client group members for the selected client group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginClientGroupMembersAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsClientGroupMembersRequest,
    options?: ServerDependencyMapControllerClientGroupMembersOptionalParams,
  ): Promise<ServerDependencyMapControllerClientGroupMembersResponse>;
  /**
   * API to generate report containing agentless dependencies.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param requestBody The content of the action request
   * @param options The options parameters.
   */
  beginExportDependencies(
    resourceGroupName: string,
    siteName: string,
    requestBody: DependencyMapServiceMapextensionsExportDependenciesRequest,
    options?: ServerDependencyMapControllerExportDependenciesOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ServerDependencyMapControllerExportDependenciesResponse>,
      ServerDependencyMapControllerExportDependenciesResponse
    >
  >;
  /**
   * API to generate report containing agentless dependencies.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param requestBody The content of the action request
   * @param options The options parameters.
   */
  beginExportDependenciesAndWait(
    resourceGroupName: string,
    siteName: string,
    requestBody: DependencyMapServiceMapextensionsExportDependenciesRequest,
    options?: ServerDependencyMapControllerExportDependenciesOptionalParams,
  ): Promise<ServerDependencyMapControllerExportDependenciesResponse>;
  /**
   * API to generate coarse map for the list of machines.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginGenerateCoarseMap(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsScopeMapRequest,
    options?: ServerDependencyMapControllerGenerateCoarseMapOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ServerDependencyMapControllerGenerateCoarseMapResponse>,
      ServerDependencyMapControllerGenerateCoarseMapResponse
    >
  >;
  /**
   * API to generate coarse map for the list of machines.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginGenerateCoarseMapAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsScopeMapRequest,
    options?: ServerDependencyMapControllerGenerateCoarseMapOptionalParams,
  ): Promise<ServerDependencyMapControllerGenerateCoarseMapResponse>;
  /**
   * API to generate detailed map for a selected machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginGenerateDetailedMap(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest,
    options?: ServerDependencyMapControllerGenerateDetailedMapOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ServerDependencyMapControllerGenerateDetailedMapResponse>,
      ServerDependencyMapControllerGenerateDetailedMapResponse
    >
  >;
  /**
   * API to generate detailed map for a selected machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginGenerateDetailedMapAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest,
    options?: ServerDependencyMapControllerGenerateDetailedMapOptionalParams,
  ): Promise<ServerDependencyMapControllerGenerateDetailedMapResponse>;
  /**
   * API to list server group members for the selected server group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginServerGroupMembers(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsServerGroupMembersRequest,
    options?: ServerDependencyMapControllerServerGroupMembersOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ServerDependencyMapControllerServerGroupMembersResponse>,
      ServerDependencyMapControllerServerGroupMembersResponse
    >
  >;
  /**
   * API to list server group members for the selected server group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName Site name
   * @param mapRequest The content of the action request
   * @param options The options parameters.
   */
  beginServerGroupMembersAndWait(
    resourceGroupName: string,
    siteName: string,
    mapRequest: DependencyMapServiceMapextensionsServerGroupMembersRequest,
    options?: ServerDependencyMapControllerServerGroupMembersOptionalParams,
  ): Promise<ServerDependencyMapControllerServerGroupMembersResponse>;
}
