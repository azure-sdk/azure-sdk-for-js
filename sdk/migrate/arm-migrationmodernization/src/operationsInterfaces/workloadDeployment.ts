/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  WorkloadDeploymentModel,
  WorkloadDeploymentListOptionalParams,
  WorkloadDeploymentGetOptionalParams,
  WorkloadDeploymentGetResponse,
  WorkloadDeploymentCreateOptionalParams,
  WorkloadDeploymentCreateResponse,
  WorkloadDeploymentDeleteOptionalParams,
  WorkloadDeploymentDeleteResponse,
  WorkloadDeploymentGetSecretConfigurationsOptionalParams,
  WorkloadDeploymentGetSecretConfigurationsResponse,
  WorkloadDeploymentBuildContainerImageOptionalParams,
  WorkloadDeploymentBuildContainerImageResponse,
  WorkloadDeploymentTestMigrateOptionalParams,
  WorkloadDeploymentTestMigrateResponse,
  WorkloadDeploymentTestMigrateCleanupOptionalParams,
  WorkloadDeploymentTestMigrateCleanupResponse,
  WorkloadDeploymentMigrateOptionalParams,
  WorkloadDeploymentMigrateResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WorkloadDeployment. */
export interface WorkloadDeployment {
  /**
   * Gets the list of workload deployments in the given modernizeProject.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param options The options parameters.
   */
  list(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    options?: WorkloadDeploymentListOptionalParams,
  ): PagedAsyncIterableIterator<WorkloadDeploymentModel>;
  /**
   * Gets the details of the workload deployment.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param workloadDeploymentName Workload deployment name.
   * @param options The options parameters.
   */
  get(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    workloadDeploymentName: string,
    options?: WorkloadDeploymentGetOptionalParams,
  ): Promise<WorkloadDeploymentGetResponse>;
  /**
   * Creates the workload deployment.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param workloadDeploymentName Workload deployment name.
   * @param options The options parameters.
   */
  create(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    workloadDeploymentName: string,
    options?: WorkloadDeploymentCreateOptionalParams,
  ): Promise<WorkloadDeploymentCreateResponse>;
  /**
   * Removes the workload deployment.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param workloadDeploymentName Workload deployment name.
   * @param options The options parameters.
   */
  beginDelete(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    workloadDeploymentName: string,
    options?: WorkloadDeploymentDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadDeploymentDeleteResponse>,
      WorkloadDeploymentDeleteResponse
    >
  >;
  /**
   * Removes the workload deployment.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param workloadDeploymentName Workload deployment name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    workloadDeploymentName: string,
    options?: WorkloadDeploymentDeleteOptionalParams,
  ): Promise<WorkloadDeploymentDeleteResponse>;
  /**
   * Gets the secrets of the workload deployment.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param workloadDeploymentName Workload deployment name.
   * @param options The options parameters.
   */
  getSecretConfigurations(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    workloadDeploymentName: string,
    options?: WorkloadDeploymentGetSecretConfigurationsOptionalParams,
  ): Promise<WorkloadDeploymentGetSecretConfigurationsResponse>;
  /**
   * Performs the build container image action on the workload deployment.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param workloadDeploymentName Workload deployment name.
   * @param options The options parameters.
   */
  beginBuildContainerImage(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    workloadDeploymentName: string,
    options?: WorkloadDeploymentBuildContainerImageOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadDeploymentBuildContainerImageResponse>,
      WorkloadDeploymentBuildContainerImageResponse
    >
  >;
  /**
   * Performs the build container image action on the workload deployment.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param workloadDeploymentName Workload deployment name.
   * @param options The options parameters.
   */
  beginBuildContainerImageAndWait(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    workloadDeploymentName: string,
    options?: WorkloadDeploymentBuildContainerImageOptionalParams,
  ): Promise<WorkloadDeploymentBuildContainerImageResponse>;
  /**
   * Performs the test migrate on the workload deployment.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param workloadDeploymentName Workload deployment name.
   * @param options The options parameters.
   */
  beginTestMigrate(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    workloadDeploymentName: string,
    options?: WorkloadDeploymentTestMigrateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadDeploymentTestMigrateResponse>,
      WorkloadDeploymentTestMigrateResponse
    >
  >;
  /**
   * Performs the test migrate on the workload deployment.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param workloadDeploymentName Workload deployment name.
   * @param options The options parameters.
   */
  beginTestMigrateAndWait(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    workloadDeploymentName: string,
    options?: WorkloadDeploymentTestMigrateOptionalParams,
  ): Promise<WorkloadDeploymentTestMigrateResponse>;
  /**
   * Performs the test migrate cleanup on the workload deployment.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param workloadDeploymentName Workload deployment name.
   * @param options The options parameters.
   */
  beginTestMigrateCleanup(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    workloadDeploymentName: string,
    options?: WorkloadDeploymentTestMigrateCleanupOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadDeploymentTestMigrateCleanupResponse>,
      WorkloadDeploymentTestMigrateCleanupResponse
    >
  >;
  /**
   * Performs the test migrate cleanup on the workload deployment.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param workloadDeploymentName Workload deployment name.
   * @param options The options parameters.
   */
  beginTestMigrateCleanupAndWait(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    workloadDeploymentName: string,
    options?: WorkloadDeploymentTestMigrateCleanupOptionalParams,
  ): Promise<WorkloadDeploymentTestMigrateCleanupResponse>;
  /**
   * Performs migrate on the workload deployment.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param workloadDeploymentName Workload deployment name.
   * @param options The options parameters.
   */
  beginMigrate(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    workloadDeploymentName: string,
    options?: WorkloadDeploymentMigrateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<WorkloadDeploymentMigrateResponse>,
      WorkloadDeploymentMigrateResponse
    >
  >;
  /**
   * Performs migrate on the workload deployment.
   * @param subscriptionId Azure Subscription Id in which project was created.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param modernizeProjectName ModernizeProject name.
   * @param workloadDeploymentName Workload deployment name.
   * @param options The options parameters.
   */
  beginMigrateAndWait(
    subscriptionId: string,
    resourceGroupName: string,
    modernizeProjectName: string,
    workloadDeploymentName: string,
    options?: WorkloadDeploymentMigrateOptionalParams,
  ): Promise<WorkloadDeploymentMigrateResponse>;
}
