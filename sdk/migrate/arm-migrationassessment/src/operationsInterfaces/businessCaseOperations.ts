/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  BusinessCase,
  BusinessCaseOperationsListByAssessmentProjectOptionalParams,
  BusinessCaseOperationsGetOptionalParams,
  BusinessCaseOperationsGetResponse,
  BusinessCaseOperationsCreateOptionalParams,
  BusinessCaseOperationsCreateResponse,
  BusinessCaseOperationsDeleteOptionalParams,
  BusinessCaseOperationsCompareSummaryOptionalParams,
  BusinessCaseOperationsCompareSummaryResponse,
  BusinessCaseOperationsGetReportDownloadUrlOptionalParams,
  BusinessCaseOperationsGetReportDownloadUrlResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a BusinessCaseOperations. */
export interface BusinessCaseOperations {
  /**
   * List BusinessCase resources by AssessmentProject
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param options The options parameters.
   */
  listByAssessmentProject(
    resourceGroupName: string,
    projectName: string,
    options?: BusinessCaseOperationsListByAssessmentProjectOptionalParams,
  ): PagedAsyncIterableIterator<BusinessCase>;
  /**
   * Get a BusinessCase
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param businessCaseName Business case ARM name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    projectName: string,
    businessCaseName: string,
    options?: BusinessCaseOperationsGetOptionalParams,
  ): Promise<BusinessCaseOperationsGetResponse>;
  /**
   * Create a BusinessCase
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param businessCaseName Business case ARM name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    projectName: string,
    businessCaseName: string,
    resource: BusinessCase,
    options?: BusinessCaseOperationsCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<BusinessCaseOperationsCreateResponse>,
      BusinessCaseOperationsCreateResponse
    >
  >;
  /**
   * Create a BusinessCase
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param businessCaseName Business case ARM name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    projectName: string,
    businessCaseName: string,
    resource: BusinessCase,
    options?: BusinessCaseOperationsCreateOptionalParams,
  ): Promise<BusinessCaseOperationsCreateResponse>;
  /**
   * Delete a BusinessCase
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param businessCaseName Business case ARM name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    projectName: string,
    businessCaseName: string,
    options?: BusinessCaseOperationsDeleteOptionalParams,
  ): Promise<void>;
  /**
   * A long-running resource action.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param businessCaseName Business case ARM name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginCompareSummary(
    resourceGroupName: string,
    projectName: string,
    businessCaseName: string,
    body: Record<string, unknown>,
    options?: BusinessCaseOperationsCompareSummaryOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<BusinessCaseOperationsCompareSummaryResponse>,
      BusinessCaseOperationsCompareSummaryResponse
    >
  >;
  /**
   * A long-running resource action.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param businessCaseName Business case ARM name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginCompareSummaryAndWait(
    resourceGroupName: string,
    projectName: string,
    businessCaseName: string,
    body: Record<string, unknown>,
    options?: BusinessCaseOperationsCompareSummaryOptionalParams,
  ): Promise<BusinessCaseOperationsCompareSummaryResponse>;
  /**
   * Get the URL for downloading the business case in a report format.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param businessCaseName Business case ARM name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginGetReportDownloadUrl(
    resourceGroupName: string,
    projectName: string,
    businessCaseName: string,
    body: Record<string, unknown>,
    options?: BusinessCaseOperationsGetReportDownloadUrlOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<BusinessCaseOperationsGetReportDownloadUrlResponse>,
      BusinessCaseOperationsGetReportDownloadUrlResponse
    >
  >;
  /**
   * Get the URL for downloading the business case in a report format.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param businessCaseName Business case ARM name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginGetReportDownloadUrlAndWait(
    resourceGroupName: string,
    projectName: string,
    businessCaseName: string,
    body: Record<string, unknown>,
    options?: BusinessCaseOperationsGetReportDownloadUrlOptionalParams,
  ): Promise<BusinessCaseOperationsGetReportDownloadUrlResponse>;
}
