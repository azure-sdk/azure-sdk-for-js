/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const AssessmentProjectListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentProjectListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessmentProject",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateEndpoint: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpoint",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      actionsRequired: {
        serializedName: "actionsRequired",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AzureResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentProjectUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentProjectUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      assessmentSolutionId: {
        serializedName: "properties.assessmentSolutionId",
        type: {
          name: "String",
        },
      },
      projectStatus: {
        serializedName: "properties.projectStatus",
        type: {
          name: "String",
        },
      },
      customerWorkspaceId: {
        serializedName: "properties.customerWorkspaceId",
        type: {
          name: "String",
        },
      },
      customerWorkspaceLocation: {
        serializedName: "properties.customerWorkspaceLocation",
        type: {
          name: "String",
        },
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String",
        },
      },
      customerStorageAccountArmId: {
        serializedName: "properties.customerStorageAccountArmId",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AKSAssessmentOptionsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSAssessmentOptionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AKSAssessmentOptions",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OptionsArmPropertiesBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OptionsArmPropertiesBase",
    modelProperties: {
      edges: {
        serializedName: "edges",
        required: true,
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "Sequence",
                  element: { type: { name: "String" } },
                },
              },
            },
          },
        },
      },
    },
  },
};

export const AKSAssessmentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSAssessmentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AKSAssessment",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentSettings",
    modelProperties: {
      azureLocation: {
        serializedName: "azureLocation",
        required: true,
        type: {
          name: "String",
        },
      },
      environmentType: {
        serializedName: "environmentType",
        required: true,
        type: {
          name: "String",
        },
      },
      licensingProgram: {
        serializedName: "licensingProgram",
        required: true,
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "currency",
        required: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriteria: {
        serializedName: "sizingCriteria",
        required: true,
        type: {
          name: "String",
        },
      },
      performanceData: {
        serializedName: "performanceData",
        type: {
          name: "Composite",
          className: "PerfDataSettings",
        },
      },
      scalingFactor: {
        serializedName: "scalingFactor",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const PerfDataSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PerfDataSettings",
    modelProperties: {
      timeRange: {
        serializedName: "timeRange",
        required: true,
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      percentile: {
        serializedName: "percentile",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentDetails",
    modelProperties: {
      pricesTimestamp: {
        serializedName: "pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        required: true,
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        required: true,
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "status",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentScopeParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentScopeParameters",
    modelProperties: {
      serverGroupId: {
        serializedName: "serverGroupId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MutableArmResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MutableArmResource",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedWebApplicationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedWebApplicationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedWebApplication",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SuitabilityResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SuitabilityResult",
    modelProperties: {
      readiness: {
        serializedName: "readiness",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitability: {
        serializedName: "suitability",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      failedChecks: {
        serializedName: "failedChecks",
        required: true,
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Check",
            },
          },
        },
      },
      suggestedMigrationTool: {
        serializedName: "suggestedMigrationTool",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Check: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Check",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      behavior: {
        serializedName: "behavior",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      cause: {
        serializedName: "cause",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendation: {
        serializedName: "recommendation",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      moreInfo: {
        serializedName: "moreInfo",
        type: {
          name: "Composite",
          className: "MoreInfo",
        },
      },
    },
  },
};

export const MoreInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MoreInfo",
    modelProperties: {
      title: {
        serializedName: "title",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      url: {
        serializedName: "url",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RecommendationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecommendationResult",
    modelProperties: {
      request: {
        serializedName: "request",
        type: {
          name: "Composite",
          className: "ComputeResource",
        },
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Composite",
          className: "ComputeResource",
        },
      },
      osType: {
        serializedName: "osType",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      clusterName: {
        serializedName: "clusterName",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      nodePoolId: {
        serializedName: "nodePoolId",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      nodePoolName: {
        serializedName: "nodePoolName",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      nodePoolArmSkuName: {
        serializedName: "nodePoolArmSkuName",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      approxMonthlyCost: {
        serializedName: "approxMonthlyCost",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ComputeResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComputeResource",
    modelProperties: {
      cores: {
        serializedName: "cores",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      memory: {
        serializedName: "memory",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const WebApp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebApp",
    modelProperties: {
      discoveryArmId: {
        serializedName: "discoveryArmId",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      webServerArmId: {
        serializedName: "webServerArmId",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      webServerDisplayName: {
        serializedName: "webServerDisplayName",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineArmId: {
        serializedName: "machineArmId",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineDisplayName: {
        serializedName: "machineDisplayName",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      webAppType: {
        serializedName: "webAppType",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AKSClusterListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSClusterListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AKSCluster",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Cluster: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Cluster",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      nodePools: {
        serializedName: "nodePools",
        required: true,
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NodePool",
            },
          },
        },
      },
      region: {
        serializedName: "region",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      userNodePoolCount: {
        serializedName: "userNodePoolCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      userNodeCount: {
        serializedName: "userNodeCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      systemNodePoolCount: {
        serializedName: "systemNodePoolCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      systemNodeCount: {
        serializedName: "systemNodeCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      podCount: {
        serializedName: "podCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyCost: {
        serializedName: "monthlyCost",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const NodePool: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NodePool",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      clusterName: {
        serializedName: "clusterName",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      mode: {
        serializedName: "mode",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      osType: {
        serializedName: "osType",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      armSkuName: {
        serializedName: "armSkuName",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      nodeCount: {
        serializedName: "nodeCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      podCount: {
        serializedName: "podCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyCost: {
        serializedName: "monthlyCost",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      podApproxMonthlyCost: {
        serializedName: "podApproxMonthlyCost",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AKSCostDetailListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSCostDetailListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AKSCostDetail",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DownloadUrl: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DownloadUrl",
    modelProperties: {
      assessmentReportUrl: {
        serializedName: "assessmentReportUrl",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      expirationTime: {
        serializedName: "expirationTime",
        required: true,
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AKSSummaryListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSSummaryListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AKSSummary",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AKSAssessmentSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSAssessmentSummary",
    modelProperties: {
      skuSummary: {
        serializedName: "skuSummary",
        required: true,
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "SummaryDetails" } },
        },
      },
      webAppSummary: {
        serializedName: "webAppSummary",
        required: true,
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "SummaryDetails" } },
        },
      },
      webServerSummary: {
        serializedName: "webServerSummary",
        required: true,
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      webAppCount: {
        serializedName: "webAppCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      webServerCount: {
        serializedName: "webServerCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      machineCount: {
        serializedName: "machineCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalMonthlyCost: {
        serializedName: "totalMonthlyCost",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SummaryDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SummaryDetails",
    modelProperties: {
      count: {
        serializedName: "count",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyCost: {
        serializedName: "monthlyCost",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SummaryPropertiesBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SummaryPropertiesBase",
    modelProperties: {
      assessmentName: {
        serializedName: "assessmentName",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      summaryName: {
        serializedName: "summaryName",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitabilityPerTarget: {
        serializedName: "suitabilityPerTarget",
        required: true,
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } },
          },
        },
      },
      monthlyComputeCost: {
        serializedName: "monthlyComputeCost",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      confidenceScore: {
        serializedName: "confidenceScore",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessmentOptionsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentOptionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessmentOptions",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VmFamilyOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VmFamilyOptions",
    modelProperties: {
      familyName: {
        serializedName: "familyName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      targetLocations: {
        serializedName: "targetLocations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      category: {
        serializedName: "category",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const UltraDiskAssessmentOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UltraDiskAssessmentOptions",
    modelProperties: {
      familyName: {
        serializedName: "familyName",
        type: {
          name: "String",
        },
      },
      targetLocations: {
        serializedName: "targetLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AvsAssessmentOptionsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessmentOptionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsAssessmentOptions",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsSkuOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsSkuOptions",
    modelProperties: {
      nodeType: {
        serializedName: "nodeType",
        type: {
          name: "String",
        },
      },
      targetLocations: {
        serializedName: "targetLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AvsExternalStorageOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsExternalStorageOptions",
    modelProperties: {
      storageType: {
        serializedName: "storageType",
        type: {
          name: "String",
        },
      },
      targetLocations: {
        serializedName: "targetLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const BusinessCaseListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessCaseListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BusinessCase",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Settings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Settings",
    modelProperties: {
      azureSettings: {
        serializedName: "azureSettings",
        type: {
          name: "Composite",
          className: "AzureSettings",
        },
      },
      onPremiseSettings: {
        serializedName: "onPremiseSettings",
        type: {
          name: "Composite",
          className: "OnPremiseSettings",
        },
      },
      azureArcSettings: {
        serializedName: "azureArcSettings",
        type: {
          name: "Composite",
          className: "AzureArcSettings",
        },
      },
    },
  },
};

export const AzureSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureSettings",
    modelProperties: {
      targetLocation: {
        serializedName: "targetLocation",
        required: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "discountPercentage",
        type: {
          name: "Number",
        },
      },
      currency: {
        serializedName: "currency",
        required: true,
        type: {
          name: "String",
        },
      },
      businessCaseType: {
        serializedName: "businessCaseType",
        type: {
          name: "String",
        },
      },
      workloadDiscoverySource: {
        serializedName: "workloadDiscoverySource",
        type: {
          name: "String",
        },
      },
      performanceDataStartTime: {
        serializedName: "performanceDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      performanceDataEndTime: {
        serializedName: "performanceDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      comfortFactor: {
        defaultValue: 1,
        serializedName: "comfortFactor",
        type: {
          name: "Number",
        },
      },
      performanceUtilizationPercentile: {
        defaultValue: 95,
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "performanceUtilizationPercentile",
        type: {
          name: "Number",
        },
      },
      perYearMigrationCompletionPercentage: {
        serializedName: "perYearMigrationCompletionPercentage",
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      infrastructureGrowthRate: {
        defaultValue: 5,
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "infrastructureGrowthRate",
        type: {
          name: "Number",
        },
      },
      wacc: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "wacc",
        type: {
          name: "Number",
        },
      },
      networkCostPercentage: {
        defaultValue: 5,
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "networkCostPercentage",
        type: {
          name: "Number",
        },
      },
      iaasLaborCostPercentage: {
        defaultValue: 75,
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "iaasLaborCostPercentage",
        type: {
          name: "Number",
        },
      },
      paasLaborCostPercentage: {
        defaultValue: 60,
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "paasLaborCostPercentage",
        type: {
          name: "Number",
        },
      },
      avsLaborCostPercentage: {
        defaultValue: 75,
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "avsLaborCostPercentage",
        type: {
          name: "Number",
        },
      },
      savingsOption: {
        serializedName: "savingsOption",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OnPremiseSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OnPremiseSettings",
    modelProperties: {
      computeSettings: {
        serializedName: "computeSettings",
        type: {
          name: "Composite",
          className: "ComputeSettings",
        },
      },
      storageSettings: {
        serializedName: "storageSettings",
        type: {
          name: "Composite",
          className: "StorageSettings",
        },
      },
      networkSettings: {
        serializedName: "networkSettings",
        type: {
          name: "Composite",
          className: "NetworkSettings",
        },
      },
      facilitySettings: {
        serializedName: "facilitySettings",
        type: {
          name: "Composite",
          className: "FacilitySettings",
        },
      },
      laborSettings: {
        serializedName: "laborSettings",
        type: {
          name: "Composite",
          className: "LaborSettings",
        },
      },
      securitySettings: {
        serializedName: "securitySettings",
        type: {
          name: "Composite",
          className: "SecuritySettings",
        },
      },
      managementSettings: {
        serializedName: "managementSettings",
        type: {
          name: "Composite",
          className: "ManagementSettings",
        },
      },
    },
  },
};

export const ComputeSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComputeSettings",
    modelProperties: {
      hyperthreadCoreToMemoryRatio: {
        serializedName: "hyperthreadCoreToMemoryRatio",
        required: true,
        type: {
          name: "Number",
        },
      },
      price: {
        serializedName: "price",
        required: true,
        type: {
          name: "Number",
        },
      },
      sqlServerLicensing: {
        serializedName: "sqlServerLicensing",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlServerLicensingSettings",
            },
          },
        },
      },
      windowsServerLicensing: {
        serializedName: "windowsServerLicensing",
        type: {
          name: "Composite",
          className: "WindowsServerLicensingSettings",
        },
      },
      rhelLinuxServerLicensing: {
        serializedName: "rhelLinuxServerLicensing",
        type: {
          name: "Composite",
          className: "LinuxServerLicensingSettings",
        },
      },
      suseLinuxServerLicensing: {
        serializedName: "suseLinuxServerLicensing",
        type: {
          name: "Composite",
          className: "LinuxServerLicensingSettings",
        },
      },
      virtualizationSoftwareSettings: {
        serializedName: "virtualizationSoftwareSettings",
        type: {
          name: "Composite",
          className: "VirtualizationSoftwareSettings",
        },
      },
    },
  },
};

export const SqlServerLicensingSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlServerLicensingSettings",
    modelProperties: {
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String",
        },
      },
      licenseCost: {
        serializedName: "licenseCost",
        required: true,
        type: {
          name: "Number",
        },
      },
      softwareAssuranceCost: {
        serializedName: "softwareAssuranceCost",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const WindowsServerLicensingSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WindowsServerLicensingSettings",
    modelProperties: {
      licenseCost: {
        serializedName: "licenseCost",
        required: true,
        type: {
          name: "Number",
        },
      },
      softwareAssuranceCost: {
        serializedName: "softwareAssuranceCost",
        required: true,
        type: {
          name: "Number",
        },
      },
      licensesPerCore: {
        serializedName: "licensesPerCore",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LinuxServerLicensingSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LinuxServerLicensingSettings",
    modelProperties: {
      licenseCost: {
        serializedName: "licenseCost",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const VirtualizationSoftwareSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualizationSoftwareSettings",
    modelProperties: {
      vMwareCloudFoundationLicenseCost: {
        serializedName: "vMwareCloudFoundationLicenseCost",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const StorageSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageSettings",
    modelProperties: {
      costPerGbPerMonth: {
        serializedName: "costPerGbPerMonth",
        required: true,
        type: {
          name: "Number",
        },
      },
      maintainanceCostPercentageToAcquisitionCost: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "maintainanceCostPercentageToAcquisitionCost",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const NetworkSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkSettings",
    modelProperties: {
      hardwareSoftwareCostPercentage: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "hardwareSoftwareCostPercentage",
        required: true,
        type: {
          name: "Number",
        },
      },
      maintenanceCostPercentage: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "maintenanceCostPercentage",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const FacilitySettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FacilitySettings",
    modelProperties: {
      facilitiesCostPerKwh: {
        serializedName: "facilitiesCostPerKwh",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LaborSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LaborSettings",
    modelProperties: {
      physicalServersPerAdmin: {
        constraints: {
          InclusiveMinimum: 1,
        },
        serializedName: "physicalServersPerAdmin",
        required: true,
        type: {
          name: "Number",
        },
      },
      virtualMachinesPerAdmin: {
        constraints: {
          InclusiveMinimum: 1,
        },
        serializedName: "virtualMachinesPerAdmin",
        required: true,
        type: {
          name: "Number",
        },
      },
      hourlyAdminCost: {
        serializedName: "hourlyAdminCost",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SecuritySettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecuritySettings",
    modelProperties: {
      serverSecurityCostPerServerPerYear: {
        serializedName: "serverSecurityCostPerServerPerYear",
        required: true,
        type: {
          name: "Number",
        },
      },
      sqlServerSecurityCostPerServerPerYear: {
        serializedName: "sqlServerSecurityCostPerServerPerYear",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ManagementSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagementSettings",
    modelProperties: {
      hypervVirtualizationManagementSettings: {
        serializedName: "hypervVirtualizationManagementSettings",
        type: {
          name: "Composite",
          className: "HypervVirtualizationManagementSettings",
        },
      },
      thirdPartyManagementSettings: {
        serializedName: "thirdPartyManagementSettings",
        type: {
          name: "Composite",
          className: "ThirdPartyManagementSettings",
        },
      },
      otherManagementCostsSettings: {
        serializedName: "otherManagementCostsSettings",
        type: {
          name: "Composite",
          className: "OtherManagementCostsSettings",
        },
      },
    },
  },
};

export const HypervVirtualizationManagementSettings: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "HypervVirtualizationManagementSettings",
      modelProperties: {
        numberOfPhysicalCoresPerLicense: {
          constraints: {
            InclusiveMinimum: 1,
          },
          serializedName: "numberOfPhysicalCoresPerLicense",
          required: true,
          type: {
            name: "Number",
          },
        },
        softwareAssuranceCost: {
          serializedName: "softwareAssuranceCost",
          required: true,
          type: {
            name: "Number",
          },
        },
        licenseAndSupportList: {
          serializedName: "licenseAndSupportList",
          required: true,
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "HypervLicense",
              },
            },
          },
        },
      },
    },
  };

export const HypervLicense: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HypervLicense",
    modelProperties: {
      licenseCost: {
        serializedName: "licenseCost",
        required: true,
        type: {
          name: "Number",
        },
      },
      licenseType: {
        serializedName: "licenseType",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ThirdPartyManagementSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ThirdPartyManagementSettings",
    modelProperties: {
      licenseCost: {
        serializedName: "licenseCost",
        required: true,
        type: {
          name: "Number",
        },
      },
      supportCost: {
        serializedName: "supportCost",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const OtherManagementCostsSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OtherManagementCostsSettings",
    modelProperties: {
      monitoringCostPerServerPerYear: {
        serializedName: "monitoringCostPerServerPerYear",
        required: true,
        type: {
          name: "Number",
        },
      },
      patchingCostPerServerPerYear: {
        serializedName: "patchingCostPerServerPerYear",
        required: true,
        type: {
          name: "Number",
        },
      },
      dataProtectionCostPerServerPerYear: {
        serializedName: "dataProtectionCostPerServerPerYear",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AzureArcSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureArcSettings",
    modelProperties: {
      azureArcState: {
        serializedName: "azureArcState",
        required: true,
        type: {
          name: "String",
        },
      },
      laborCostPercentage: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0,
        },
        serializedName: "laborCostPercentage",
        type: {
          name: "Number",
        },
      },
      managementSettings: {
        serializedName: "managementSettings",
        type: {
          name: "Composite",
          className: "AzureArcManagementSettings",
        },
      },
    },
  },
};

export const AzureArcManagementSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureArcManagementSettings",
    modelProperties: {
      monitoringSettings: {
        serializedName: "monitoringSettings",
        type: {
          name: "Composite",
          className: "AzureArcMonitoringSettings",
        },
      },
    },
  },
};

export const AzureArcMonitoringSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureArcMonitoringSettings",
    modelProperties: {
      logsVolumeInGB: {
        serializedName: "logsVolumeInGB",
        required: true,
        type: {
          name: "Number",
        },
      },
      alertRulesCount: {
        serializedName: "alertRulesCount",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ReportDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReportDetails",
    modelProperties: {
      reportType: {
        serializedName: "reportType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      reportStatus: {
        serializedName: "reportStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureResourceProperties2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceProperties2",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsSummaryListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsSummaryListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsSummary",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureAvsSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureAvsSummary",
    modelProperties: {
      yearOnYearEstimates: {
        serializedName: "yearOnYearEstimates",
        type: {
          name: "Composite",
          className: "YearOnYearEstimates",
        },
      },
      avsNodeSummary: {
        serializedName: "avsNodeSummary",
        type: {
          name: "Composite",
          className: "AvsNodeSummary",
        },
      },
      avsCostDetails: {
        serializedName: "avsCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
    },
  },
};

export const YearOnYearEstimates: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "YearOnYearEstimates",
    modelProperties: {
      onPremisesCost: {
        serializedName: "onPremisesCost",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      azureCost: {
        serializedName: "azureCost",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      savings: {
        serializedName: "savings",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      onPremisesCapexCost: {
        serializedName: "onPremisesCapexCost",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      onPremisesOpexCost: {
        serializedName: "onPremisesOpexCost",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      azureCapexCost: {
        serializedName: "azureCapexCost",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      azureOpexCost: {
        serializedName: "azureOpexCost",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      paybackPeriod: {
        serializedName: "paybackPeriod",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      azureArcEnabledOnPremisesCost: {
        serializedName: "azureArcEnabledOnPremisesCost",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "YearOnYearCost",
            },
          },
        },
      },
      futureCost: {
        serializedName: "futureCost",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "YearOnYearCost",
            },
          },
        },
      },
      futureAzureArcEnabledOnPremisesEsuCost: {
        serializedName: "futureAzureArcEnabledOnPremisesEsuCost",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "YearOnYearCost",
            },
          },
        },
      },
      futureOnPremisesEsuCost: {
        serializedName: "futureOnPremisesEsuCost",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "YearOnYearCost",
            },
          },
        },
      },
    },
  },
};

export const YearOnYearCost: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "YearOnYearCost",
    modelProperties: {
      year: {
        serializedName: "year",
        required: true,
        type: {
          name: "String",
        },
      },
      cost: {
        serializedName: "cost",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AvsNodeSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsNodeSummary",
    modelProperties: {
      serversSuitableForMigration: {
        serializedName: "serversSuitableForMigration",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalNumberOfServers: {
        serializedName: "totalNumberOfServers",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cores: {
        serializedName: "cores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      memoryGb: {
        serializedName: "memoryGb",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      avsNodeCostDetails: {
        serializedName: "avsNodeCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      estimatedCost: {
        serializedName: "estimatedCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      osLicensingCost: {
        serializedName: "osLicensingCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      estimatedCostByRecommendedOffer: {
        serializedName: "estimatedCostByRecommendedOffer",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EstimatedCostByOffer",
            },
          },
        },
      },
      recommendedAvsNodeTypeSummary: {
        serializedName: "recommendedAvsNodeTypeSummary",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecommendedAvsNodeTypeSummary",
            },
          },
        },
      },
      estimatedExternalStorage: {
        serializedName: "estimatedExternalStorage",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EstimatedExternalStorage",
            },
          },
        },
      },
      estimatedNetwork: {
        serializedName: "estimatedNetwork",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EstimatedNetwork",
            },
          },
        },
      },
      estimatedCostWithVcfByol: {
        serializedName: "estimatedCostWithVcfByol",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      errors: {
        serializedName: "errors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetailAutoGenerated",
            },
          },
        },
      },
    },
  },
};

export const CostDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CostDetails",
    modelProperties: {
      storageCost: {
        serializedName: "storageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      computeCost: {
        serializedName: "computeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      itLaborCost: {
        serializedName: "itLaborCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      networkCost: {
        serializedName: "networkCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      ahubSavings: {
        serializedName: "ahubSavings",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      linuxAhubSavings: {
        serializedName: "linuxAhubSavings",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      securityCost: {
        serializedName: "securityCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      managementCostDetails: {
        serializedName: "managementCostDetails",
        type: {
          name: "Composite",
          className: "ManagementCostDetails",
        },
      },
      esuSavings: {
        serializedName: "esuSavings",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      facilitiesCost: {
        serializedName: "facilitiesCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ManagementCostDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagementCostDetails",
    modelProperties: {
      managementCost: {
        serializedName: "managementCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      managementCostComponents: {
        serializedName: "managementCostComponents",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagementCostComponent",
            },
          },
        },
      },
    },
  },
};

export const ManagementCostComponent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagementCostComponent",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const EstimatedCostByOffer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EstimatedCostByOffer",
    modelProperties: {
      offerName: {
        serializedName: "offerName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      cost: {
        serializedName: "cost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const RecommendedAvsNodeTypeSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecommendedAvsNodeTypeSummary",
    modelProperties: {
      avsNodeType: {
        serializedName: "avsNodeType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      numberOfNodes: {
        serializedName: "numberOfNodes",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      failuresToTolerateAndRaidLevel: {
        serializedName: "failuresToTolerateAndRaidLevel",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EstimatedExternalStorage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EstimatedExternalStorage",
    modelProperties: {
      storageType: {
        serializedName: "storageType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      totalStorageInGB: {
        serializedName: "totalStorageInGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      storageUtilization: {
        serializedName: "storageUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalStorageCost: {
        serializedName: "totalStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const EstimatedNetwork: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EstimatedNetwork",
    modelProperties: {
      skuType: {
        serializedName: "skuType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      cost: {
        serializedName: "cost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ErrorDetailAutoGenerated: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetailAutoGenerated",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OnPremisesIaasSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OnPremisesIaasSummary",
    modelProperties: {
      servers: {
        serializedName: "servers",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cores: {
        serializedName: "cores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      memoryGb: {
        serializedName: "memoryGb",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cpuUtilization: {
        serializedName: "cpuUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      memoryUtilization: {
        serializedName: "memoryUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      storageUtilization: {
        serializedName: "storageUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      onPremisesIaasCostDetails: {
        serializedName: "onPremisesIaasCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      onPremisesIaasCostForDecommissioned: {
        serializedName: "onPremisesIaasCostForDecommissioned",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      osLicensingDetails: {
        serializedName: "osLicensingDetails",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IaasOsLicensingDetails",
            },
          },
        },
      },
      distributionByOperatingSystem: {
        serializedName: "distributionByOperatingSystem",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributionByOperatingSystem",
            },
          },
        },
      },
      onPremisesUtilizationData: {
        serializedName: "onPremisesUtilizationData",
        type: {
          name: "Composite",
          className: "UtilizationData",
        },
      },
      distributionByVirtualization: {
        serializedName: "distributionByVirtualization",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributionByVirtualization",
            },
          },
        },
      },
      iaasOsSupportStatusDistribution: {
        serializedName: "iaasOsSupportStatusDistribution",
        type: {
          name: "Composite",
          className: "SupportStatusDistribution",
        },
      },
      iaasSqlSupportStatusDistribution: {
        serializedName: "iaasSqlSupportStatusDistribution",
        type: {
          name: "Composite",
          className: "SupportStatusDistribution",
        },
      },
      osServicePackInsight: {
        serializedName: "osServicePackInsight",
        type: {
          name: "Composite",
          className: "ServicePackInsight",
        },
      },
      sqlServicePackInsight: {
        serializedName: "sqlServicePackInsight",
        type: {
          name: "Composite",
          className: "ServicePackInsight",
        },
      },
      distributionByOperatingSystemVersion: {
        serializedName: "distributionByOperatingSystemVersion",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributionByType",
            },
          },
        },
      },
      distributionBySqlVersion: {
        serializedName: "distributionBySqlVersion",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributionByType",
            },
          },
        },
      },
      distributionBySqlEdition: {
        serializedName: "distributionBySqlEdition",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributionByType",
            },
          },
        },
      },
    },
  },
};

export const IaasOsLicensingDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IaasOsLicensingDetails",
    modelProperties: {
      osType: {
        serializedName: "osType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      totalCost: {
        serializedName: "totalCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      decomissionCost: {
        serializedName: "decomissionCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const DistributionByOperatingSystem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionByOperatingSystem",
    modelProperties: {
      osClassificationType: {
        serializedName: "osClassificationType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      count: {
        serializedName: "count",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const UtilizationData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UtilizationData",
    modelProperties: {
      numberOfActiveEntities: {
        serializedName: "numberOfActiveEntities",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfInactiveEntities: {
        serializedName: "numberOfInactiveEntities",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfDecommisionEntities: {
        serializedName: "numberOfDecommisionEntities",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfUnknownEntities: {
        serializedName: "numberOfUnknownEntities",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const DistributionByVirtualization: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionByVirtualization",
    modelProperties: {
      virtualizationType: {
        serializedName: "virtualizationType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      count: {
        serializedName: "count",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SupportStatusDistribution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SupportStatusDistribution",
    modelProperties: {
      unknownSupport: {
        serializedName: "unknownSupport",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      mainStream: {
        serializedName: "mainStream",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      extended: {
        serializedName: "extended",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      outOfSupport: {
        serializedName: "outOfSupport",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ServicePackInsight: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServicePackInsight",
    modelProperties: {
      unknownServicePack: {
        serializedName: "unknownServicePack",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      patched: {
        serializedName: "patched",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      unpatched: {
        serializedName: "unpatched",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const DistributionByType: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionByType",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      count: {
        serializedName: "count",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const CompareSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CompareSummary",
    modelProperties: {
      azurePaasCostDetails: {
        serializedName: "azurePaasCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      azureIaasCostDetails: {
        serializedName: "azureIaasCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      azureAvsCostDetails: {
        serializedName: "azureAvsCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      onPremisesPaasCostDetails: {
        serializedName: "onPremisesPaasCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      onPremisesIaasCostDetails: {
        serializedName: "onPremisesIaasCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      onPremisesAvsCostDetails: {
        serializedName: "onPremisesAvsCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      onPremisesPaasDecommissionedCostDetails: {
        serializedName: "onPremisesPaasDecommissionedCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      onPremisesIaasDecommissionedCostDetails: {
        serializedName: "onPremisesIaasDecommissionedCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      onPremisesAvsDecommissionedCostDetails: {
        serializedName: "onPremisesAvsDecommissionedCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      futureCostDetails: {
        serializedName: "futureCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      azureArcEnabledOnPremisesCostDetails: {
        serializedName: "azureArcEnabledOnPremisesCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      futureAzureArcEnabledOnPremisesCostDetails: {
        serializedName: "futureAzureArcEnabledOnPremisesCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
    },
  },
};

export const EvaluatedAvsMachineListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EvaluatedAvsMachineListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EvaluatedAvsMachine",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EvaluatedMachineListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EvaluatedMachineListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EvaluatedMachine",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EvaluatedSqlEntityListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EvaluatedSqlEntityListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EvaluatedSqlEntity",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EvaluatedWebAppListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EvaluatedWebAppListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EvaluatedWebApp",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ReportDownloadUrl: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReportDownloadUrl",
    modelProperties: {
      businessCaseReportUrl: {
        serializedName: "businessCaseReportUrl",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      expirationTime: {
        serializedName: "expirationTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const IaasSummaryListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IaasSummaryListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IaasSummary",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureIaasSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureIaasSummary",
    modelProperties: {
      yearOnYearEstimates: {
        serializedName: "yearOnYearEstimates",
        type: {
          name: "Composite",
          className: "YearOnYearEstimates",
        },
      },
      azureIaasVmSummary: {
        serializedName: "azureIaasVmSummary",
        type: {
          name: "Composite",
          className: "AzureIaasVmSummary",
        },
      },
      azureIaasSqlSummary: {
        serializedName: "azureIaasSqlSummary",
        type: {
          name: "Composite",
          className: "AzureIaasSqlSummary",
        },
      },
      azureIaasCostDetails: {
        serializedName: "azureIaasCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
    },
  },
};

export const AzureIaasVmSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureIaasVmSummary",
    modelProperties: {
      serversSuitableForMigration: {
        serializedName: "serversSuitableForMigration",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalNumberOfServers: {
        serializedName: "totalNumberOfServers",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cores: {
        serializedName: "cores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      memoryGb: {
        serializedName: "memoryGb",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      azureVmCostDetails: {
        serializedName: "azureVmCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      estimatedCost: {
        serializedName: "estimatedCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      osLicensingCost: {
        serializedName: "osLicensingCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      estimatedCostByRecommendedOffer: {
        serializedName: "estimatedCostByRecommendedOffer",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EstimatedCostByOffer",
            },
          },
        },
      },
      recommendedVmFamilySummary: {
        serializedName: "recommendedVmFamilySummary",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecommendedVmFamilySummary",
            },
          },
        },
      },
      costByStorageType: {
        serializedName: "costByStorageType",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostByStorageType",
            },
          },
        },
      },
    },
  },
};

export const RecommendedVmFamilySummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecommendedVmFamilySummary",
    modelProperties: {
      azureVmFamily: {
        serializedName: "azureVmFamily",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      numberOfMachines: {
        serializedName: "numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const CostByStorageType: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CostByStorageType",
    modelProperties: {
      storageType: {
        serializedName: "storageType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      cost: {
        serializedName: "cost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AzureIaasSqlSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureIaasSqlSummary",
    modelProperties: {
      totalSqlEntities: {
        serializedName: "totalSqlEntities",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitableSqlEntities: {
        serializedName: "suitableSqlEntities",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      azureSqlCostDetails: {
        serializedName: "azureSqlCostDetails",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      estimatedCost: {
        serializedName: "estimatedCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      osLicensingCost: {
        serializedName: "osLicensingCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      estimatedCostByRecommendedOffer: {
        serializedName: "estimatedCostByRecommendedOffer",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EstimatedCostByOffer",
            },
          },
        },
      },
      recommendedVmFamilySummary: {
        serializedName: "recommendedVmFamilySummary",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecommendedVmFamilySummary",
            },
          },
        },
      },
      costByStorageType: {
        serializedName: "costByStorageType",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostByStorageType",
            },
          },
        },
      },
    },
  },
};

export const OverviewSummaryListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OverviewSummaryListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OverviewSummary",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ServersDiscovered: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServersDiscovered",
    modelProperties: {
      vmWare: {
        serializedName: "vmWare",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      hyperV: {
        serializedName: "hyperV",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      physical: {
        serializedName: "physical",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      notApplicable: {
        serializedName: "notApplicable",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const IaasOsDistribution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IaasOsDistribution",
    modelProperties: {
      windows: {
        serializedName: "windows",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      linux: {
        serializedName: "linux",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      other: {
        serializedName: "other",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const PaasDistribution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PaasDistribution",
    modelProperties: {
      sqlServers: {
        serializedName: "sqlServers",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      iisWebServers: {
        serializedName: "iisWebServers",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      webAppDistribution: {
        serializedName: "webAppDistribution",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
    },
  },
};

export const PaasSummaryListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PaasSummaryListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PaasSummary",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzurePaasSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzurePaasSummary",
    modelProperties: {
      totalSqlEntities: {
        serializedName: "totalSqlEntities",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitableSqlEntities: {
        serializedName: "suitableSqlEntities",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalWebApps: {
        serializedName: "totalWebApps",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitableWebApps: {
        serializedName: "suitableWebApps",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cores: {
        serializedName: "cores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      memory: {
        serializedName: "memory",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      storage: {
        serializedName: "storage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      estimatedCostByTarget: {
        serializedName: "estimatedCostByTarget",
        type: {
          name: "Composite",
          className: "EstimatedCostByTarget",
        },
      },
      estimatedSqlServerLicensingCost: {
        serializedName: "estimatedSqlServerLicensingCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      azureSqlSummary: {
        serializedName: "azureSqlSummary",
        type: {
          name: "Composite",
          className: "AzureSqlSummary",
        },
      },
      azureAppServiceSummary: {
        serializedName: "azureAppServiceSummary",
        type: {
          name: "Composite",
          className: "AzureAppServiceSummary",
        },
      },
      azureAppServiceContainerSummary: {
        serializedName: "azureAppServiceContainerSummary",
        type: {
          name: "Composite",
          className: "AzureAppServiceContainerSummary",
        },
      },
      azureKubernetesServiceSummary: {
        serializedName: "azureKubernetesServiceSummary",
        type: {
          name: "Composite",
          className: "AzureKubernetesServiceSummary",
        },
      },
      totalAzurePaasCost: {
        serializedName: "totalAzurePaasCost",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
    },
  },
};

export const EstimatedCostByTarget: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EstimatedCostByTarget",
    modelProperties: {
      azureSqlMiCost: {
        serializedName: "azureSqlMiCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      azureSqlDbCost: {
        serializedName: "azureSqlDbCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      appServiceCost: {
        serializedName: "appServiceCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      appServiceContainerCost: {
        serializedName: "appServiceContainerCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      azureKubernetesServiceCost: {
        serializedName: "azureKubernetesServiceCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AzureSqlSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureSqlSummary",
    modelProperties: {
      estimatedCostByOffer: {
        serializedName: "estimatedCostByOffer",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EstimatedCostByOffer",
            },
          },
        },
      },
      distributionByServiceTier: {
        serializedName: "distributionByServiceTier",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlServiceTier",
            },
          },
        },
      },
      distributionByServiceTierForSqlMi: {
        serializedName: "distributionByServiceTierForSqlMi",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlServiceTier",
            },
          },
        },
      },
      distributionByServiceTierForSqlDb: {
        serializedName: "distributionByServiceTierForSqlDb",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlServiceTier",
            },
          },
        },
      },
    },
  },
};

export const SqlServiceTier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlServiceTier",
    modelProperties: {
      serviceTierName: {
        serializedName: "serviceTierName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serviceTierNumber: {
        serializedName: "serviceTierNumber",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AzureAppServiceSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureAppServiceSummary",
    modelProperties: {
      estimatedCostByOffer: {
        serializedName: "estimatedCostByOffer",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EstimatedCostByOffer",
            },
          },
        },
      },
      distributionBySku: {
        serializedName: "distributionBySku",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AppServiceSku",
            },
          },
        },
      },
      distributionByApp: {
        serializedName: "distributionByApp",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebAppDistribution",
            },
          },
        },
      },
    },
  },
};

export const AppServiceSku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppServiceSku",
    modelProperties: {
      skuName: {
        serializedName: "skuName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      cost: {
        serializedName: "cost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      count: {
        serializedName: "count",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const WebAppDistribution: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppDistribution",
    modelProperties: {
      webAppType: {
        serializedName: "webAppType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      numberOfWebApps: {
        serializedName: "numberOfWebApps",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AzureAppServiceContainerSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureAppServiceContainerSummary",
    modelProperties: {
      estimatedCostByOffer: {
        serializedName: "estimatedCostByOffer",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EstimatedCostByOffer",
            },
          },
        },
      },
      distributionBySku: {
        serializedName: "distributionBySku",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebAppTargetSku",
            },
          },
        },
      },
      distributionByApp: {
        serializedName: "distributionByApp",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebAppDistribution",
            },
          },
        },
      },
    },
  },
};

export const WebAppTargetSku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppTargetSku",
    modelProperties: {
      skuName: {
        serializedName: "skuName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      cost: {
        serializedName: "cost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      count: {
        serializedName: "count",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AzureKubernetesServiceSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureKubernetesServiceSummary",
    modelProperties: {
      estimatedCostByOffer: {
        serializedName: "estimatedCostByOffer",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EstimatedCostByOffer",
            },
          },
        },
      },
      distributionBySku: {
        serializedName: "distributionBySku",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebAppTargetSku",
            },
          },
        },
      },
      distributionByApp: {
        serializedName: "distributionByApp",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebAppDistribution",
            },
          },
        },
      },
    },
  },
};

export const OnPremisesPaasSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OnPremisesPaasSummary",
    modelProperties: {
      totalServers: {
        serializedName: "totalServers",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cpuUtilization: {
        serializedName: "cpuUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      memoryUtilization: {
        serializedName: "memoryUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalOnPremisesPaasCost: {
        serializedName: "totalOnPremisesPaasCost",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      onPremisesPaasCostForDecommisioned: {
        serializedName: "onPremisesPaasCostForDecommisioned",
        type: {
          name: "Composite",
          className: "CostDetails",
        },
      },
      onPremisesPaasLicensingCost: {
        serializedName: "onPremisesPaasLicensingCost",
        type: {
          name: "Composite",
          className: "OnPremisesPaasLicensingCost",
        },
      },
      onPremisesSqlSummary: {
        serializedName: "onPremisesSqlSummary",
        type: {
          name: "Composite",
          className: "OnPremisesSqlSummary",
        },
      },
      onPremisesWebAppSummary: {
        serializedName: "onPremisesWebAppSummary",
        type: {
          name: "Composite",
          className: "OnPremisesWebAppSummary",
        },
      },
      osSupportStatusDistribution: {
        serializedName: "osSupportStatusDistribution",
        type: {
          name: "Composite",
          className: "SupportStatusDistribution",
        },
      },
      sqlSupportStatusDistribution: {
        serializedName: "sqlSupportStatusDistribution",
        type: {
          name: "Composite",
          className: "SupportStatusDistribution",
        },
      },
      osServicePackInsight: {
        serializedName: "osServicePackInsight",
        type: {
          name: "Composite",
          className: "ServicePackInsight",
        },
      },
      sqlServicePackInsight: {
        serializedName: "sqlServicePackInsight",
        type: {
          name: "Composite",
          className: "ServicePackInsight",
        },
      },
    },
  },
};

export const OnPremisesPaasLicensingCost: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OnPremisesPaasLicensingCost",
    modelProperties: {
      version: {
        serializedName: "version",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      totalCost: {
        serializedName: "totalCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      decomissionServerCost: {
        serializedName: "decomissionServerCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const OnPremisesSqlSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OnPremisesSqlSummary",
    modelProperties: {
      sqlInstances: {
        serializedName: "sqlInstances",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      sqlDatabases: {
        serializedName: "sqlDatabases",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      distributionBySqlVersion: {
        serializedName: "distributionBySqlVersion",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlVersionDetails",
            },
          },
        },
      },
      sqlOnPremisesUtilizationData: {
        serializedName: "sqlOnPremisesUtilizationData",
        type: {
          name: "Composite",
          className: "UtilizationData",
        },
      },
      distributionBySqlEdition: {
        serializedName: "distributionBySqlEdition",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DistributionByType",
            },
          },
        },
      },
    },
  },
};

export const SqlVersionDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlVersionDetails",
    modelProperties: {
      sqlVersion: {
        serializedName: "sqlVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      numberOfInstances: {
        serializedName: "numberOfInstances",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const OnPremisesWebAppSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OnPremisesWebAppSummary",
    modelProperties: {
      numberOfWebServers: {
        serializedName: "numberOfWebServers",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfWebApplications: {
        serializedName: "numberOfWebApplications",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfWebAppsPerType: {
        serializedName: "numberOfWebAppsPerType",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
    },
  },
};

export const GroupListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Group",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Assessment",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CostComponent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CostComponent",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "Number",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VmUptime: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VmUptime",
    modelProperties: {
      daysPerMonth: {
        serializedName: "daysPerMonth",
        type: {
          name: "Number",
        },
      },
      hoursPerDay: {
        serializedName: "hoursPerDay",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessedMachineListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedMachineListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedMachine",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      runAsAccountId: {
        serializedName: "runAsAccountId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      applianceName: {
        serializedName: "applianceName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      summaryMessage: {
        serializedName: "summaryMessage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      agentScenario: {
        serializedName: "agentScenario",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      possibleCauses: {
        serializedName: "possibleCauses",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedAction: {
        serializedName: "recommendedAction",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      severity: {
        serializedName: "severity",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      messageParameters: {
        serializedName: "messageParameters",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      updatedTimeStamp: {
        serializedName: "updatedTimeStamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      impactedAssessmentType: {
        serializedName: "impactedAssessmentType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedDisk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedDisk",
    modelProperties: {
      suitability: {
        serializedName: "suitability",
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "suitabilityExplanation",
        type: {
          name: "String",
        },
      },
      suitabilityDetail: {
        serializedName: "suitabilityDetail",
        type: {
          name: "String",
        },
      },
      recommendedDiskSize: {
        serializedName: "recommendedDiskSize",
        type: {
          name: "String",
        },
      },
      recommendedDiskType: {
        serializedName: "recommendedDiskType",
        type: {
          name: "String",
        },
      },
      gigabytesForRecommendedDiskSize: {
        serializedName: "gigabytesForRecommendedDiskSize",
        type: {
          name: "Number",
        },
      },
      recommendDiskThroughputInMbps: {
        serializedName: "recommendDiskThroughputInMbps",
        type: {
          name: "Number",
        },
      },
      recommendedDiskIops: {
        serializedName: "recommendedDiskIops",
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        type: {
          name: "Number",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      gigabytesProvisioned: {
        serializedName: "gigabytesProvisioned",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfRead: {
        serializedName: "megabytesPerSecondOfRead",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfWrite: {
        serializedName: "megabytesPerSecondOfWrite",
        type: {
          name: "Number",
        },
      },
      numberOfReadOperationsPerSecond: {
        serializedName: "numberOfReadOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
      numberOfWriteOperationsPerSecond: {
        serializedName: "numberOfWriteOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ProcessorInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProcessorInfo",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      numberOfSockets: {
        serializedName: "numberOfSockets",
        type: {
          name: "Number",
        },
      },
      numberOfCoresPerSocket: {
        serializedName: "numberOfCoresPerSocket",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ProductSupportStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductSupportStatus",
    modelProperties: {
      currentVersion: {
        serializedName: "currentVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      servicePackStatus: {
        serializedName: "servicePackStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      esuStatus: {
        serializedName: "esuStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      supportStatus: {
        serializedName: "supportStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      eta: {
        serializedName: "eta",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      currentEsuYear: {
        serializedName: "currentEsuYear",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      mainstreamEndDate: {
        serializedName: "mainstreamEndDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      extendedSupportEndDate: {
        serializedName: "extendedSupportEndDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      extendedSecurityUpdateYear1EndDate: {
        serializedName: "extendedSecurityUpdateYear1EndDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      extendedSecurityUpdateYear2EndDate: {
        serializedName: "extendedSecurityUpdateYear2EndDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      extendedSecurityUpdateYear3EndDate: {
        serializedName: "extendedSecurityUpdateYear3EndDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AssessedNetworkAdapter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedNetworkAdapter",
    modelProperties: {
      suitability: {
        serializedName: "suitability",
        type: {
          name: "String",
        },
      },
      suitabilityDetail: {
        serializedName: "suitabilityDetail",
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "suitabilityExplanation",
        type: {
          name: "String",
        },
      },
      monthlyBandwidthCosts: {
        serializedName: "monthlyBandwidthCosts",
        type: {
          name: "Number",
        },
      },
      netGigabytesTransmittedPerMonth: {
        serializedName: "netGigabytesTransmittedPerMonth",
        type: {
          name: "Number",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      macAddress: {
        serializedName: "macAddress",
        type: {
          name: "String",
        },
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      megabytesPerSecondReceived: {
        serializedName: "megabytesPerSecondReceived",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondTransmitted: {
        serializedName: "megabytesPerSecondTransmitted",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AvsAssessmentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessmentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsAssessment",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsEstimatedNode: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsEstimatedNode",
    modelProperties: {
      monthlyPrice: {
        serializedName: "monthlyPrice",
        type: {
          name: "Number",
        },
      },
      nodeType: {
        serializedName: "nodeType",
        type: {
          name: "String",
        },
      },
      nodeNumber: {
        serializedName: "nodeNumber",
        type: {
          name: "Number",
        },
      },
      cpuUtilization: {
        serializedName: "cpuUtilization",
        type: {
          name: "Number",
        },
      },
      ramUtilization: {
        serializedName: "ramUtilization",
        type: {
          name: "Number",
        },
      },
      storageUtilization: {
        serializedName: "storageUtilization",
        type: {
          name: "Number",
        },
      },
      totalCpu: {
        serializedName: "totalCpu",
        type: {
          name: "Number",
        },
      },
      totalRam: {
        serializedName: "totalRam",
        type: {
          name: "Number",
        },
      },
      totalStorage: {
        serializedName: "totalStorage",
        type: {
          name: "Number",
        },
      },
      pricingModel: {
        serializedName: "pricingModel",
        type: {
          name: "String",
        },
      },
      fttRaidLevel: {
        serializedName: "fttRaidLevel",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsEstimatedExternalStorage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsEstimatedExternalStorage",
    modelProperties: {
      monthlyPrice: {
        serializedName: "monthlyPrice",
        type: {
          name: "Number",
        },
      },
      storageType: {
        serializedName: "storageType",
        type: {
          name: "String",
        },
      },
      totalStorageInGB: {
        serializedName: "totalStorageInGB",
        type: {
          name: "Number",
        },
      },
      storageUtilization: {
        serializedName: "storageUtilization",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AvsEstimatedNetwork: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsEstimatedNetwork",
    modelProperties: {
      monthlyPrice: {
        serializedName: "monthlyPrice",
        type: {
          name: "Number",
        },
      },
      networkType: {
        serializedName: "networkType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsAssessedMachineListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessedMachineListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsAssessedMachine",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsAssessedDisk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessedDisk",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      gigabytesProvisioned: {
        serializedName: "gigabytesProvisioned",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfRead: {
        serializedName: "megabytesPerSecondOfRead",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfWrite: {
        serializedName: "megabytesPerSecondOfWrite",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfReadOperationsPerSecond: {
        serializedName: "numberOfReadOperationsPerSecond",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfWriteOperationsPerSecond: {
        serializedName: "numberOfWriteOperationsPerSecond",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      assessedExternalStorageType: {
        serializedName: "assessedExternalStorageType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      estimatedDiskSizeInGB: {
        serializedName: "estimatedDiskSizeInGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitabilityDetail: {
        serializedName: "suitabilityDetail",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsAssessedNetworkAdapter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessedNetworkAdapter",
    modelProperties: {
      macAddress: {
        serializedName: "macAddress",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      megabytesPerSecondReceived: {
        serializedName: "megabytesPerSecondReceived",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondTransmitted: {
        serializedName: "megabytesPerSecondTransmitted",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SqlAssessmentV2ListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2ListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlAssessmentV2",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EntityUptime: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EntityUptime",
    modelProperties: {
      daysPerMonth: {
        serializedName: "daysPerMonth",
        type: {
          name: "Number",
        },
      },
      hoursPerDay: {
        serializedName: "hoursPerDay",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SqlMiSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlMiSettings",
    modelProperties: {
      azureSqlServiceTier: {
        serializedName: "azureSqlServiceTier",
        type: {
          name: "String",
        },
      },
      azureSqlInstanceType: {
        serializedName: "azureSqlInstanceType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlDbSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlDbSettings",
    modelProperties: {
      azureSqlServiceTier: {
        serializedName: "azureSqlServiceTier",
        type: {
          name: "String",
        },
      },
      azureSqlDataBaseType: {
        serializedName: "azureSqlDataBaseType",
        type: {
          name: "String",
        },
      },
      azureSqlComputeTier: {
        serializedName: "azureSqlComputeTier",
        type: {
          name: "String",
        },
      },
      azureSqlPurchaseModel: {
        serializedName: "azureSqlPurchaseModel",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlVmSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlVmSettings",
    modelProperties: {
      instanceSeries: {
        serializedName: "instanceSeries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AssessedSqlDatabaseV2ListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlDatabaseV2ListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedSqlDatabaseV2",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentV2PaasSuitabilityData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2PaasSuitabilityData",
    modelProperties: {
      azureSqlSku: {
        serializedName: "azureSqlSku",
        type: {
          name: "Composite",
          className: "AzureSqlPaasSkuDTO",
        },
      },
      replicaAzureSqlSku: {
        serializedName: "replicaAzureSqlSku",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureSqlPaasSkuDTO",
            },
          },
        },
      },
      sharedResources: {
        serializedName: "sharedResources",
        type: {
          name: "Composite",
          className: "SharedResourcesDTO",
        },
      },
      monthlyComputeCost: {
        serializedName: "monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      costComponents: {
        serializedName: "costComponents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      securitySuitability: {
        serializedName: "securitySuitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      shouldProvisionReplicas: {
        serializedName: "shouldProvisionReplicas",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      skuReplicationMode: {
        serializedName: "skuReplicationMode",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrationGuidelines: {
        serializedName: "migrationGuidelines",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlMigrationGuideline",
            },
          },
        },
      },
      recommendationReasonings: {
        serializedName: "recommendationReasonings",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlRecommendationReasoning",
            },
          },
        },
      },
      migrationTargetPlatform: {
        serializedName: "migrationTargetPlatform",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitability: {
        serializedName: "suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrationIssues: {
        serializedName: "migrationIssues",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlAssessmentMigrationIssue",
            },
          },
        },
      },
    },
  },
};

export const AzureSqlPaasSkuDTO: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureSqlPaasSkuDTO",
    modelProperties: {
      azureSqlServiceTier: {
        serializedName: "azureSqlServiceTier",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureSqlComputeTier: {
        serializedName: "azureSqlComputeTier",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureSqlHardwareGeneration: {
        serializedName: "azureSqlHardwareGeneration",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      storageMaxSizeInMB: {
        serializedName: "storageMaxSizeInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      predictedDataSizeInMB: {
        serializedName: "predictedDataSizeInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      predictedLogSizeInMB: {
        serializedName: "predictedLogSizeInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cores: {
        serializedName: "cores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      azureSqlTargetType: {
        serializedName: "azureSqlTargetType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SharedResourcesDTO: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedResourcesDTO",
    modelProperties: {
      sharedDataDisks: {
        serializedName: "sharedDataDisks",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureManagedDiskSkuDTO",
            },
          },
        },
      },
      sharedLogDisks: {
        serializedName: "sharedLogDisks",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureManagedDiskSkuDTO",
            },
          },
        },
      },
      sharedTempDbDisks: {
        serializedName: "sharedTempDbDisks",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureManagedDiskSkuDTO",
            },
          },
        },
      },
      numberOfMounts: {
        serializedName: "numberOfMounts",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      quorumWitness: {
        serializedName: "quorumWitness",
        type: {
          name: "Composite",
          className: "AzureQuorumWitnessDTO",
        },
      },
    },
  },
};

export const AzureManagedDiskSkuDTO: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureManagedDiskSkuDTO",
    modelProperties: {
      diskType: {
        serializedName: "diskType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      diskSize: {
        serializedName: "diskSize",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      diskRedundancy: {
        serializedName: "diskRedundancy",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      storageCost: {
        serializedName: "storageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      recommendedSizeInGib: {
        serializedName: "recommendedSizeInGib",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      recommendedThroughputInMbps: {
        serializedName: "recommendedThroughputInMbps",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      recommendedIops: {
        serializedName: "recommendedIops",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AzureQuorumWitnessDTO: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureQuorumWitnessDTO",
    modelProperties: {
      quorumWitnessType: {
        serializedName: "quorumWitnessType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlMigrationGuideline: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlMigrationGuideline",
    modelProperties: {
      guidelineId: {
        serializedName: "guidelineId",
        type: {
          name: "String",
        },
      },
      migrationGuidelineCategory: {
        serializedName: "migrationGuidelineCategory",
        type: {
          name: "String",
        },
      },
      migrationGuidelineContext: {
        serializedName: "migrationGuidelineContext",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MigrationGuidelineContext",
            },
          },
        },
      },
    },
  },
};

export const MigrationGuidelineContext: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrationGuidelineContext",
    modelProperties: {
      contextKey: {
        serializedName: "contextKey",
        type: {
          name: "String",
        },
      },
      contextValue: {
        serializedName: "contextValue",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlRecommendationReasoning: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlRecommendationReasoning",
    modelProperties: {
      reasoningId: {
        serializedName: "reasoningId",
        type: {
          name: "String",
        },
      },
      reasoningString: {
        serializedName: "reasoningString",
        type: {
          name: "String",
        },
      },
      reasoningCategory: {
        serializedName: "reasoningCategory",
        type: {
          name: "String",
        },
      },
      contextParameters: {
        serializedName: "contextParameters",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlRecommendationReasoningContext",
            },
          },
        },
      },
    },
  },
};

export const SqlRecommendationReasoningContext: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlRecommendationReasoningContext",
    modelProperties: {
      contextKey: {
        serializedName: "contextKey",
        type: {
          name: "String",
        },
      },
      contextValue: {
        serializedName: "contextValue",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentMigrationIssue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentMigrationIssue",
    modelProperties: {
      issueId: {
        serializedName: "issueId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      issueCategory: {
        serializedName: "issueCategory",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      impactedObjects: {
        serializedName: "impactedObjects",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImpactedAssessmentObject",
            },
          },
        },
      },
    },
  },
};

export const ImpactedAssessmentObject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImpactedAssessmentObject",
    modelProperties: {
      objectName: {
        serializedName: "objectName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      objectType: {
        serializedName: "objectType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAvailabilityGroupDataOverview: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAvailabilityGroupDataOverview",
    modelProperties: {
      availabilityGroupId: {
        serializedName: "availabilityGroupId",
        type: {
          name: "String",
        },
      },
      availabilityGroupName: {
        serializedName: "availabilityGroupName",
        type: {
          name: "String",
        },
      },
      sqlAvailabilityGroupSdsArmId: {
        serializedName: "sqlAvailabilityGroupSdsArmId",
        type: {
          name: "String",
        },
      },
      sqlAvailabilityGroupEntityId: {
        serializedName: "sqlAvailabilityGroupEntityId",
        type: {
          name: "String",
        },
      },
      sqlAvailabilityReplicaId: {
        serializedName: "sqlAvailabilityReplicaId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedSqlInstanceV2ListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlInstanceV2ListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedSqlInstanceV2",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentV2IaasSuitabilityData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2IaasSuitabilityData",
    modelProperties: {
      azureSqlSku: {
        serializedName: "azureSqlSku",
        type: {
          name: "Composite",
          className: "AzureSqlIaasSkuDTO",
        },
      },
      replicaAzureSqlSku: {
        serializedName: "replicaAzureSqlSku",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureSqlIaasSkuDTO",
            },
          },
        },
      },
      sharedResources: {
        serializedName: "sharedResources",
        type: {
          name: "Composite",
          className: "SharedResourcesDTO",
        },
      },
      monthlyComputeCost: {
        serializedName: "monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      costComponents: {
        serializedName: "costComponents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      securitySuitability: {
        serializedName: "securitySuitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      shouldProvisionReplicas: {
        serializedName: "shouldProvisionReplicas",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      skuReplicationMode: {
        serializedName: "skuReplicationMode",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrationGuidelines: {
        serializedName: "migrationGuidelines",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlMigrationGuideline",
            },
          },
        },
      },
      recommendationReasonings: {
        serializedName: "recommendationReasonings",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlRecommendationReasoning",
            },
          },
        },
      },
      migrationTargetPlatform: {
        serializedName: "migrationTargetPlatform",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitability: {
        serializedName: "suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrationIssues: {
        serializedName: "migrationIssues",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlAssessmentMigrationIssue",
            },
          },
        },
      },
    },
  },
};

export const AzureSqlIaasSkuDTO: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureSqlIaasSkuDTO",
    modelProperties: {
      virtualMachineSize: {
        serializedName: "virtualMachineSize",
        type: {
          name: "Composite",
          className: "AzureVirtualMachineSkuDTO",
        },
      },
      dataDiskSizes: {
        serializedName: "dataDiskSizes",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureManagedDiskSkuDTO",
            },
          },
        },
      },
      logDiskSizes: {
        serializedName: "logDiskSizes",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureManagedDiskSkuDTO",
            },
          },
        },
      },
      azureSqlTargetType: {
        serializedName: "azureSqlTargetType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureVirtualMachineSkuDTO: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureVirtualMachineSkuDTO",
    modelProperties: {
      azureVmFamily: {
        serializedName: "azureVmFamily",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      cores: {
        serializedName: "cores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      azureSkuName: {
        serializedName: "azureSkuName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      availableCores: {
        serializedName: "availableCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      maxNetworkInterfaces: {
        serializedName: "maxNetworkInterfaces",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessedSqlInstanceStorageDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlInstanceStorageDetails",
    modelProperties: {
      storageType: {
        serializedName: "storageType",
        type: {
          name: "String",
        },
      },
      diskSizeInMB: {
        serializedName: "diskSizeInMB",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfRead: {
        serializedName: "megabytesPerSecondOfRead",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfWrite: {
        serializedName: "megabytesPerSecondOfWrite",
        type: {
          name: "Number",
        },
      },
      numberOfReadOperationsPerSecond: {
        serializedName: "numberOfReadOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
      numberOfWriteOperationsPerSecond: {
        serializedName: "numberOfWriteOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SqlFCIMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlFCIMetadata",
    modelProperties: {
      state: {
        serializedName: "state",
        type: {
          name: "String",
        },
      },
      isMultiSubnet: {
        serializedName: "isMultiSubnet",
        type: {
          name: "Boolean",
        },
      },
      fciSharedDiskCount: {
        serializedName: "fciSharedDiskCount",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SqlAvailabilityReplicaSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAvailabilityReplicaSummary",
    modelProperties: {
      numberOfSynchronousReadReplicas: {
        serializedName: "numberOfSynchronousReadReplicas",
        type: {
          name: "Number",
        },
      },
      numberOfSynchronousNonReadReplicas: {
        serializedName: "numberOfSynchronousNonReadReplicas",
        type: {
          name: "Number",
        },
      },
      numberOfAsynchronousReadReplicas: {
        serializedName: "numberOfAsynchronousReadReplicas",
        type: {
          name: "Number",
        },
      },
      numberOfAsynchronousNonReadReplicas: {
        serializedName: "numberOfAsynchronousNonReadReplicas",
        type: {
          name: "Number",
        },
      },
      numberOfPrimaryReplicas: {
        serializedName: "numberOfPrimaryReplicas",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessedSqlInstanceDiskDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlInstanceDiskDetails",
    modelProperties: {
      diskId: {
        serializedName: "diskId",
        type: {
          name: "String",
        },
      },
      diskSizeInMB: {
        serializedName: "diskSizeInMB",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfRead: {
        serializedName: "megabytesPerSecondOfRead",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfWrite: {
        serializedName: "megabytesPerSecondOfWrite",
        type: {
          name: "Number",
        },
      },
      numberOfReadOperationsPerSecond: {
        serializedName: "numberOfReadOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
      numberOfWriteOperationsPerSecond: {
        serializedName: "numberOfWriteOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessedSqlInstanceDatabaseSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlInstanceDatabaseSummary",
    modelProperties: {
      numberOfUserDatabases: {
        serializedName: "numberOfUserDatabases",
        type: {
          name: "Number",
        },
      },
      totalDatabaseSizeInMB: {
        serializedName: "totalDatabaseSizeInMB",
        type: {
          name: "Number",
        },
      },
      largestDatabaseSizeInMB: {
        serializedName: "largestDatabaseSizeInMB",
        type: {
          name: "Number",
        },
      },
      totalDiscoveredUserDatabases: {
        serializedName: "totalDiscoveredUserDatabases",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessedSqlMachineListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlMachineListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedSqlMachine",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedSqlInstanceSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlInstanceSummary",
    modelProperties: {
      instanceId: {
        serializedName: "instanceId",
        type: {
          name: "String",
        },
      },
      instanceName: {
        serializedName: "instanceName",
        type: {
          name: "String",
        },
      },
      sqlInstanceSdsArmId: {
        serializedName: "sqlInstanceSdsArmId",
        type: {
          name: "String",
        },
      },
      sqlInstanceEntityId: {
        serializedName: "sqlInstanceEntityId",
        type: {
          name: "String",
        },
      },
      sqlEdition: {
        serializedName: "sqlEdition",
        type: {
          name: "String",
        },
      },
      sqlVersion: {
        serializedName: "sqlVersion",
        type: {
          name: "String",
        },
      },
      isClustered: {
        serializedName: "isClustered",
        type: {
          name: "Boolean",
        },
      },
      isHighAvailabilityEnabled: {
        serializedName: "isHighAvailabilityEnabled",
        type: {
          name: "Boolean",
        },
      },
      sqlFciState: {
        serializedName: "sqlFciState",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedDiskData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedDiskData",
    modelProperties: {
      suitability: {
        serializedName: "suitability",
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "suitabilityExplanation",
        type: {
          name: "String",
        },
      },
      suitabilityDetail: {
        serializedName: "suitabilityDetail",
        type: {
          name: "String",
        },
      },
      recommendedDiskSize: {
        serializedName: "recommendedDiskSize",
        type: {
          name: "String",
        },
      },
      recommendedDiskType: {
        serializedName: "recommendedDiskType",
        type: {
          name: "String",
        },
      },
      recommendedDiskSizeGigabytes: {
        serializedName: "recommendedDiskSizeGigabytes",
        type: {
          name: "Number",
        },
      },
      recommendDiskThroughputInMbps: {
        serializedName: "recommendDiskThroughputInMbps",
        type: {
          name: "Number",
        },
      },
      recommendedDiskIops: {
        serializedName: "recommendedDiskIops",
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        type: {
          name: "Number",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      gigabytesProvisioned: {
        serializedName: "gigabytesProvisioned",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfRead: {
        serializedName: "megabytesPerSecondOfRead",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfWrite: {
        serializedName: "megabytesPerSecondOfWrite",
        type: {
          name: "Number",
        },
      },
      numberOfReadOperationsPerSecond: {
        serializedName: "numberOfReadOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
      numberOfWriteOperationsPerSecond: {
        serializedName: "numberOfWriteOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SqlAssessedNetworkAdapter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessedNetworkAdapter",
    modelProperties: {
      suitability: {
        serializedName: "suitability",
        type: {
          name: "String",
        },
      },
      suitabilityDetail: {
        serializedName: "suitabilityDetail",
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "suitabilityExplanation",
        type: {
          name: "String",
        },
      },
      monthlyBandwidthCosts: {
        serializedName: "monthlyBandwidthCosts",
        type: {
          name: "Number",
        },
      },
      netGigabytesTransmittedPerMonth: {
        serializedName: "netGigabytesTransmittedPerMonth",
        type: {
          name: "Number",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      macAddress: {
        serializedName: "macAddress",
        type: {
          name: "String",
        },
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      megabytesPerSecondReceived: {
        serializedName: "megabytesPerSecondReceived",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondTransmitted: {
        serializedName: "megabytesPerSecondTransmitted",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessedSqlRecommendedEntityListResult: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AssessedSqlRecommendedEntityListResult",
      modelProperties: {
        value: {
          serializedName: "value",
          required: true,
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "AssessedSqlRecommendedEntity",
              },
            },
          },
        },
        nextLink: {
          serializedName: "nextLink",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const SqlAssessmentV2SummaryListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2SummaryListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlAssessmentV2Summary",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentV2SummaryData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2SummaryData",
    modelProperties: {
      suitabilitySummary: {
        serializedName: "suitabilitySummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      monthlyComputeCost: {
        serializedName: "monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyLicenseCost: {
        serializedName: "monthlyLicenseCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      confidenceScore: {
        serializedName: "confidenceScore",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlySecurityCost: {
        serializedName: "monthlySecurityCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const UpdateGroupBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateGroupBody",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupBodyProperties",
        },
      },
    },
  },
};

export const GroupBodyProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupBodyProperties",
    modelProperties: {
      operationType: {
        serializedName: "operationType",
        type: {
          name: "String",
        },
      },
      machines: {
        serializedName: "machines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const WebAppAssessmentV2ListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppAssessmentV2ListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebAppAssessmentV2",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AppSvcNativeSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppSvcNativeSettings",
    modelProperties: {
      isolationRequired: {
        serializedName: "isolationRequired",
        required: true,
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const AppSvcContainerSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppSvcContainerSettings",
    modelProperties: {
      isolationRequired: {
        serializedName: "isolationRequired",
        required: true,
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const DiscoveredEntityLightSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiscoveredEntityLightSummary",
    modelProperties: {
      numberOfServers: {
        serializedName: "numberOfServers",
        required: true,
        type: {
          name: "Number",
        },
      },
      numberOfWebApps: {
        serializedName: "numberOfWebApps",
        required: true,
        type: {
          name: "Number",
        },
      },
      numberOfMachines: {
        serializedName: "numberOfMachines",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessedWebAppV2ListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedWebAppV2ListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedWebAppV2",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TargetSpecificResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TargetSpecificResult",
    modelProperties: {
      assessmentResult: {
        serializedName: "assessmentResult",
        type: {
          name: "Composite",
          className: "AssessmentResult",
        },
      },
      migrationIssues: {
        serializedName: "migrationIssues",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebAppMigrationIssues",
            },
          },
        },
      },
    },
  },
};

export const AssessmentResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentResult",
    modelProperties: {
      appServicePlanName: {
        serializedName: "appServicePlanName",
        required: true,
        type: {
          name: "String",
        },
      },
      suitability: {
        serializedName: "suitability",
        required: true,
        type: {
          name: "String",
        },
      },
      securitySuitability: {
        serializedName: "securitySuitability",
        required: true,
        type: {
          name: "String",
        },
      },
      webAppSkuName: {
        serializedName: "webAppSkuName",
        required: true,
        type: {
          name: "String",
        },
      },
      webAppSkuSize: {
        serializedName: "webAppSkuSize",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WebAppMigrationIssues: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppMigrationIssues",
    modelProperties: {
      issueId: {
        serializedName: "issueId",
        required: true,
        type: {
          name: "String",
        },
      },
      issueCategory: {
        serializedName: "issueCategory",
        required: true,
        type: {
          name: "String",
        },
      },
      issueDescriptionList: {
        serializedName: "issueDescriptionList",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const WebAppAssessmentV2SummaryListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppAssessmentV2SummaryListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebAppAssessmentV2Summary",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DiscoveredEntitiesSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiscoveredEntitiesSummary",
    modelProperties: {
      numberOfServers: {
        serializedName: "numberOfServers",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfWebApps: {
        serializedName: "numberOfWebApps",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfMachines: {
        serializedName: "numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      webServerSummary: {
        serializedName: "webServerSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      webAppSummary: {
        serializedName: "webAppSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
    },
  },
};

export const TargetSpecificSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TargetSpecificSummary",
    modelProperties: {
      readinessSummary: {
        serializedName: "readinessSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      recommendationResultSkuDetails: {
        serializedName: "recommendationResultSkuDetails",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "WebAppSkuDetails" } },
        },
      },
    },
  },
};

export const WebAppSkuDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppSkuDetails",
    modelProperties: {
      totalMonthlyCost: {
        serializedName: "totalMonthlyCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlySecurityCost: {
        serializedName: "monthlySecurityCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      skuName: {
        serializedName: "skuName",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      skuSize: {
        serializedName: "skuSize",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      appServicePlanCount: {
        serializedName: "appServicePlanCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const WebAppServicePlanV2ListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppServicePlanV2ListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebAppServicePlanV2",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const HypervCollectorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HypervCollectorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HypervCollector",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CollectorAgentPropertiesBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorAgentPropertiesBase",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
      lastHeartbeatUtc: {
        serializedName: "lastHeartbeatUtc",
        type: {
          name: "DateTime",
        },
      },
      spnDetails: {
        serializedName: "spnDetails",
        type: {
          name: "Composite",
          className: "CollectorAgentSpnPropertiesBase",
        },
      },
    },
  },
};

export const CollectorAgentSpnPropertiesBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorAgentSpnPropertiesBase",
    modelProperties: {
      authority: {
        serializedName: "authority",
        type: {
          name: "String",
        },
      },
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "String",
        },
      },
      audience: {
        serializedName: "audience",
        type: {
          name: "String",
        },
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ImportCollectorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportCollectorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImportCollector",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MachineListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Machine",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkloadSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadSummary",
    modelProperties: {
      oracleInstances: {
        serializedName: "oracleInstances",
        type: {
          name: "Number",
        },
      },
      springApps: {
        serializedName: "springApps",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const Disk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Disk",
    modelProperties: {
      gigabytesAllocated: {
        serializedName: "gigabytesAllocated",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NetworkAdapter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkAdapter",
    modelProperties: {
      macAddress: {
        serializedName: "macAddress",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateEndpointConnectionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateLinkResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentProjectSummaryListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentProjectSummaryListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessmentProjectSummary",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorSummary",
    modelProperties: {
      assessmentType: {
        serializedName: "assessmentType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      count: {
        serializedName: "count",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ServerCollectorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerCollectorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerCollector",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentOptionsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentOptionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlAssessmentOptions",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlPaaSTargetOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlPaaSTargetOptions",
    modelProperties: {
      computeTier: {
        serializedName: "computeTier",
        type: {
          name: "String",
        },
      },
      hardwareGeneration: {
        serializedName: "hardwareGeneration",
        type: {
          name: "String",
        },
      },
      targetType: {
        serializedName: "targetType",
        type: {
          name: "String",
        },
      },
      serviceTier: {
        serializedName: "serviceTier",
        type: {
          name: "String",
        },
      },
      targetLocations: {
        serializedName: "targetLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const SqlCollectorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlCollectorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlCollector",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VmwareCollectorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VmwareCollectorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VmwareCollector",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WebAppAssessmentOptionsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppAssessmentOptionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebAppAssessmentOptions",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WebAppTargetOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppTargetOptions",
    modelProperties: {
      webAppTier: {
        serializedName: "webAppTier",
        type: {
          name: "String",
        },
      },
      targetLocations: {
        serializedName: "targetLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const WebAppCollectorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppCollectorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebAppCollector",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceId",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VsphereLicenseBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VsphereLicenseBase",
    modelProperties: {
      licenseCost: {
        serializedName: "licenseCost",
        required: true,
        type: {
          name: "Number",
        },
      },
      basicSupportCost: {
        serializedName: "basicSupportCost",
        required: true,
        type: {
          name: "Number",
        },
      },
      productionSupportCost: {
        serializedName: "productionSupportCost",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const VsphereManagementSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VsphereManagementSettings",
    modelProperties: {
      licenseAndSupportList: {
        serializedName: "licenseAndSupportList",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VsphereManagementLicense",
            },
          },
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProjectProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectProperties",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      serviceEndpoint: {
        serializedName: "serviceEndpoint",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentSolutionId: {
        serializedName: "assessmentSolutionId",
        type: {
          name: "String",
        },
      },
      projectStatus: {
        serializedName: "projectStatus",
        type: {
          name: "String",
        },
      },
      customerWorkspaceId: {
        serializedName: "customerWorkspaceId",
        type: {
          name: "String",
        },
      },
      customerWorkspaceLocation: {
        serializedName: "customerWorkspaceLocation",
        type: {
          name: "String",
        },
      },
      publicNetworkAccess: {
        serializedName: "publicNetworkAccess",
        type: {
          name: "String",
        },
      },
      privateEndpointConnections: {
        serializedName: "privateEndpointConnections",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection",
            },
          },
        },
      },
      customerStorageAccountArmId: {
        serializedName: "customerStorageAccountArmId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupProperties",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      groupStatus: {
        serializedName: "groupStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineCount: {
        serializedName: "machineCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      assessments: {
        serializedName: "assessments",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      supportedAssessmentTypes: {
        serializedName: "supportedAssessmentTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      areAssessmentsRunning: {
        serializedName: "areAssessmentsRunning",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      groupType: {
        serializedName: "groupType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MachineAssessmentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineAssessmentProperties",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      assessmentErrorSummary: {
        serializedName: "assessmentErrorSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      monthlyUltraStorageCost: {
        serializedName: "monthlyUltraStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      costComponents: {
        serializedName: "costComponents",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      eaSubscriptionId: {
        serializedName: "eaSubscriptionId",
        type: {
          name: "String",
        },
      },
      azurePricingTier: {
        serializedName: "azurePricingTier",
        type: {
          name: "String",
        },
      },
      azureStorageRedundancy: {
        serializedName: "azureStorageRedundancy",
        type: {
          name: "String",
        },
      },
      reservedInstance: {
        serializedName: "reservedInstance",
        type: {
          name: "String",
        },
      },
      azureHybridUseBenefit: {
        serializedName: "azureHybridUseBenefit",
        type: {
          name: "String",
        },
      },
      linuxAzureHybridUseBenefit: {
        serializedName: "linuxAzureHybridUseBenefit",
        type: {
          name: "String",
        },
      },
      azureDiskTypes: {
        serializedName: "azureDiskTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      azureVmFamilies: {
        serializedName: "azureVmFamilies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      distributionBySupportStatus: {
        serializedName: "distributionBySupportStatus",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionByServicePackInsight: {
        serializedName: "distributionByServicePackInsight",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionByOsName: {
        serializedName: "distributionByOsName",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      monthlyComputeCost: {
        serializedName: "monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyBandwidthCost: {
        serializedName: "monthlyBandwidthCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyPremiumStorageCost: {
        serializedName: "monthlyPremiumStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStandardSsdStorageCost: {
        serializedName: "monthlyStandardSsdStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitabilitySummary: {
        serializedName: "suitabilitySummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      numberOfMachines: {
        serializedName: "numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      vmUptime: {
        serializedName: "vmUptime",
        type: {
          name: "Composite",
          className: "VmUptime",
        },
      },
      groupType: {
        serializedName: "groupType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "assessmentType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsAssessmentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessmentProperties",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      assessmentErrorSummary: {
        serializedName: "assessmentErrorSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      failuresToTolerateAndRaidLevel: {
        serializedName: "failuresToTolerateAndRaidLevel",
        type: {
          name: "String",
        },
      },
      failuresToTolerateAndRaidLevelList: {
        serializedName: "failuresToTolerateAndRaidLevelList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      vcpuOversubscription: {
        serializedName: "vcpuOversubscription",
        type: {
          name: "Number",
        },
      },
      nodeType: {
        serializedName: "nodeType",
        type: {
          name: "String",
        },
      },
      nodeTypes: {
        serializedName: "nodeTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      externalStorageTypes: {
        serializedName: "externalStorageTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      avsAssessmentScenario: {
        serializedName: "avsAssessmentScenario",
        type: {
          name: "String",
        },
      },
      isVcfByolEnabled: {
        serializedName: "isVcfByolEnabled",
        type: {
          name: "Boolean",
        },
      },
      costComponents: {
        serializedName: "costComponents",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      reservedInstance: {
        serializedName: "reservedInstance",
        type: {
          name: "String",
        },
      },
      totalMonthlyCost: {
        serializedName: "totalMonthlyCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitability: {
        serializedName: "suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "suitabilityExplanation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      numberOfNodes: {
        serializedName: "numberOfNodes",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cpuUtilization: {
        serializedName: "cpuUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      ramUtilization: {
        serializedName: "ramUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      storageUtilization: {
        serializedName: "storageUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalCpuCores: {
        serializedName: "totalCpuCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalRamInGB: {
        serializedName: "totalRamInGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalStorageInGB: {
        serializedName: "totalStorageInGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      avsEstimatedNodes: {
        serializedName: "avsEstimatedNodes",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsEstimatedNode",
            },
          },
        },
      },
      avsEstimatedExternalStorages: {
        serializedName: "avsEstimatedExternalStorages",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsEstimatedExternalStorage",
            },
          },
        },
      },
      avsEstimatedNetworks: {
        serializedName: "avsEstimatedNetworks",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsEstimatedNetwork",
            },
          },
        },
      },
      cpuHeadroom: {
        serializedName: "cpuHeadroom",
        type: {
          name: "Number",
        },
      },
      numberOfMachines: {
        serializedName: "numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitabilitySummary: {
        serializedName: "suitabilitySummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      memOvercommit: {
        serializedName: "memOvercommit",
        type: {
          name: "Number",
        },
      },
      dedupeCompression: {
        serializedName: "dedupeCompression",
        type: {
          name: "Number",
        },
      },
      limitingFactor: {
        serializedName: "limitingFactor",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isStretchClusterEnabled: {
        serializedName: "isStretchClusterEnabled",
        type: {
          name: "Boolean",
        },
      },
      groupType: {
        serializedName: "groupType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "assessmentType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentV2Properties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2Properties",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      osLicense: {
        serializedName: "osLicense",
        type: {
          name: "String",
        },
      },
      environmentType: {
        serializedName: "environmentType",
        type: {
          name: "String",
        },
      },
      entityUptime: {
        serializedName: "entityUptime",
        type: {
          name: "Composite",
          className: "EntityUptime",
        },
      },
      optimizationLogic: {
        serializedName: "optimizationLogic",
        type: {
          name: "String",
        },
      },
      reservedInstanceForVm: {
        serializedName: "reservedInstanceForVm",
        type: {
          name: "String",
        },
      },
      azureOfferCodeForVm: {
        serializedName: "azureOfferCodeForVm",
        type: {
          name: "String",
        },
      },
      eaSubscriptionId: {
        serializedName: "eaSubscriptionId",
        type: {
          name: "String",
        },
      },
      azureSqlManagedInstanceSettings: {
        serializedName: "azureSqlManagedInstanceSettings",
        type: {
          name: "Composite",
          className: "SqlMiSettings",
        },
      },
      azureSqlDatabaseSettings: {
        serializedName: "azureSqlDatabaseSettings",
        type: {
          name: "Composite",
          className: "SqlDbSettings",
        },
      },
      azureSqlVmSettings: {
        serializedName: "azureSqlVmSettings",
        type: {
          name: "Composite",
          className: "SqlVmSettings",
        },
      },
      multiSubnetIntent: {
        serializedName: "multiSubnetIntent",
        type: {
          name: "String",
        },
      },
      asyncCommitModeIntent: {
        serializedName: "asyncCommitModeIntent",
        type: {
          name: "String",
        },
      },
      isInternetAccessAvailable: {
        serializedName: "isInternetAccessAvailable",
        type: {
          name: "Boolean",
        },
      },
      disasterRecoveryLocation: {
        serializedName: "disasterRecoveryLocation",
        type: {
          name: "String",
        },
      },
      enableHadrAssessment: {
        serializedName: "enableHadrAssessment",
        type: {
          name: "Boolean",
        },
      },
      azureSecurityOfferingType: {
        serializedName: "azureSecurityOfferingType",
        type: {
          name: "String",
        },
      },
      reservedInstance: {
        serializedName: "reservedInstance",
        type: {
          name: "String",
        },
      },
      sqlServerLicense: {
        serializedName: "sqlServerLicense",
        type: {
          name: "String",
        },
      },
      groupType: {
        serializedName: "groupType",
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "assessmentType",
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "confidenceRatingInPercentage",
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CollectorPropertiesBaseWithAgent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorPropertiesBaseWithAgent",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      agentProperties: {
        serializedName: "agentProperties",
        type: {
          name: "Composite",
          className: "CollectorAgentPropertiesBase",
        },
      },
      discoverySiteId: {
        serializedName: "discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const CollectorPropertiesBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorPropertiesBase",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      discoverySiteId: {
        serializedName: "discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AKSAssessmentOptionsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSAssessmentOptionsProperties",
    modelProperties: {
      ...OptionsArmPropertiesBase.type.modelProperties,
    },
  },
};

export const AKSAssessmentSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSAssessmentSettings",
    modelProperties: {
      ...AssessmentSettings.type.modelProperties,
      category: {
        serializedName: "category",
        required: true,
        type: {
          name: "String",
        },
      },
      savingsOptions: {
        serializedName: "savingsOptions",
        required: true,
        type: {
          name: "String",
        },
      },
      consolidation: {
        serializedName: "consolidation",
        required: true,
        type: {
          name: "String",
        },
      },
      pricingTier: {
        serializedName: "pricingTier",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AKSAssessmentDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSAssessmentDetails",
    modelProperties: {
      ...AssessmentDetails.type.modelProperties,
      webAppCount: {
        serializedName: "webAppCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      webServerCount: {
        serializedName: "webServerCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      machineCount: {
        serializedName: "machineCount",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalMonthlyCost: {
        serializedName: "totalMonthlyCost",
        required: true,
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessmentPropertiesBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentPropertiesBase",
    modelProperties: {
      ...MutableArmResource.type.modelProperties,
      scope: {
        serializedName: "scope",
        type: {
          name: "Composite",
          className: "AssessmentScopeParameters",
        },
      },
    },
  },
};

export const AssessedWebApp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedWebApp",
    modelProperties: {
      ...WebApp.type.modelProperties,
      suitabilityResult: {
        serializedName: "suitabilityResult",
        type: {
          name: "Composite",
          className: "SuitabilityResult",
        },
      },
      recommendationResult: {
        serializedName: "recommendationResult",
        type: {
          name: "Composite",
          className: "RecommendationResult",
        },
      },
    },
  },
};

export const AKSClusterProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSClusterProperties",
    modelProperties: {
      ...Cluster.type.modelProperties,
    },
  },
};

export const AKSCostDetailProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSCostDetailProperties",
    modelProperties: {
      ...NodePool.type.modelProperties,
    },
  },
};

export const AKSSummaryProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSSummaryProperties",
    modelProperties: {
      ...SummaryPropertiesBase.type.modelProperties,
      aksAssessmentSummary: {
        serializedName: "aksAssessmentSummary",
        type: {
          name: "Composite",
          className: "AKSAssessmentSummary",
        },
      },
    },
  },
};

export const BusinessCaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessCaseProperties",
    modelProperties: {
      ...AzureResourceProperties2.type.modelProperties,
      settings: {
        serializedName: "settings",
        type: {
          name: "Composite",
          className: "Settings",
        },
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      reportStatusDetails: {
        serializedName: "reportStatusDetails",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReportDetails",
            },
          },
        },
      },
    },
  },
};

export const WebAppAssessmentV2Properties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppAssessmentV2Properties",
    modelProperties: {
      ...AzureResourceProperties2.type.modelProperties,
      environmentType: {
        serializedName: "environmentType",
        type: {
          name: "String",
        },
      },
      entityUptime: {
        serializedName: "entityUptime",
        type: {
          name: "Composite",
          className: "EntityUptime",
        },
      },
      eaSubscriptionId: {
        serializedName: "eaSubscriptionId",
        type: {
          name: "String",
        },
      },
      appSvcNativeSettings: {
        serializedName: "appSvcNativeSettings",
        type: {
          name: "Composite",
          className: "AppSvcNativeSettings",
        },
      },
      appSvcContainerSettings: {
        serializedName: "appSvcContainerSettings",
        type: {
          name: "Composite",
          className: "AppSvcContainerSettings",
        },
      },
      discoveredEntityLightSummary: {
        serializedName: "discoveredEntityLightSummary",
        type: {
          name: "Composite",
          className: "DiscoveredEntityLightSummary",
        },
      },
      azureSecurityOfferingType: {
        serializedName: "azureSecurityOfferingType",
        type: {
          name: "String",
        },
      },
      reservedInstance: {
        serializedName: "reservedInstance",
        type: {
          name: "String",
        },
      },
      groupType: {
        serializedName: "groupType",
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "assessmentType",
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "confidenceRatingInPercentage",
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WebAppCollectorPropertiesBaseWithAgent: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "WebAppCollectorPropertiesBaseWithAgent",
      modelProperties: {
        ...AzureResourceProperties2.type.modelProperties,
        agentProperties: {
          serializedName: "agentProperties",
          type: {
            name: "Composite",
            className: "CollectorAgentPropertiesBase",
          },
        },
        discoverySiteId: {
          serializedName: "discoverySiteId",
          type: {
            name: "String",
          },
        },
        createdTimestamp: {
          serializedName: "createdTimestamp",
          readOnly: true,
          type: {
            name: "DateTime",
          },
        },
        updatedTimestamp: {
          serializedName: "updatedTimestamp",
          readOnly: true,
          type: {
            name: "DateTime",
          },
        },
      },
    },
  };

export const VsphereLicense: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VsphereLicense",
    modelProperties: {
      ...VsphereLicenseBase.type.modelProperties,
      licenseType: {
        serializedName: "licenseType",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VsphereManagementLicense: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VsphereManagementLicense",
    modelProperties: {
      ...VsphereLicenseBase.type.modelProperties,
      licenseType: {
        serializedName: "licenseType",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateEndpointConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      groupIds: {
        serializedName: "properties.groupIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      privateEndpoint: {
        serializedName: "properties.privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpoint",
        },
      },
      privateLinkServiceConnectionState: {
        serializedName: "properties.privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionState",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AKSAssessmentOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSAssessmentOptions",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      eTag: {
        serializedName: "eTag",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      edges: {
        serializedName: "properties.edges",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "Sequence",
                  element: { type: { name: "String" } },
                },
              },
            },
          },
        },
      },
    },
  },
};

export const AKSAssessment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSAssessment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      eTag: {
        serializedName: "eTag",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      scope: {
        serializedName: "properties.scope",
        type: {
          name: "Composite",
          className: "AssessmentScopeParameters",
        },
      },
      settings: {
        serializedName: "properties.settings",
        type: {
          name: "Composite",
          className: "AKSAssessmentSettings",
        },
      },
      details: {
        serializedName: "properties.details",
        type: {
          name: "Composite",
          className: "AKSAssessmentDetails",
        },
      },
    },
  },
};

export const AssessedWebApplication: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedWebApplication",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      eTag: {
        serializedName: "eTag",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discoveryArmId: {
        serializedName: "properties.discoveryArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      webServerArmId: {
        serializedName: "properties.webServerArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      webServerDisplayName: {
        serializedName: "properties.webServerDisplayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineArmId: {
        serializedName: "properties.machineArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineDisplayName: {
        serializedName: "properties.machineDisplayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      webAppType: {
        serializedName: "properties.webAppType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitabilityResult: {
        serializedName: "properties.suitabilityResult",
        type: {
          name: "Composite",
          className: "SuitabilityResult",
        },
      },
      recommendationResult: {
        serializedName: "properties.recommendationResult",
        type: {
          name: "Composite",
          className: "RecommendationResult",
        },
      },
    },
  },
};

export const AKSCluster: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSCluster",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      eTag: {
        serializedName: "eTag",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      namePropertiesName: {
        serializedName: "properties.name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      nodePools: {
        serializedName: "properties.nodePools",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NodePool",
            },
          },
        },
      },
      region: {
        serializedName: "properties.region",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      userNodePoolCount: {
        serializedName: "properties.userNodePoolCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      userNodeCount: {
        serializedName: "properties.userNodeCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      systemNodePoolCount: {
        serializedName: "properties.systemNodePoolCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      systemNodeCount: {
        serializedName: "properties.systemNodeCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      podCount: {
        serializedName: "properties.podCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyCost: {
        serializedName: "properties.monthlyCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AKSCostDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSCostDetail",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      eTag: {
        serializedName: "eTag",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      idPropertiesId: {
        serializedName: "properties.id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      namePropertiesName: {
        serializedName: "properties.name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      clusterName: {
        serializedName: "properties.clusterName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      mode: {
        serializedName: "properties.mode",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      osType: {
        serializedName: "properties.osType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      armSkuName: {
        serializedName: "properties.armSkuName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      nodeCount: {
        serializedName: "properties.nodeCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      podCount: {
        serializedName: "properties.podCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyCost: {
        serializedName: "properties.monthlyCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      podApproxMonthlyCost: {
        serializedName: "properties.podApproxMonthlyCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AKSSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSSummary",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      eTag: {
        serializedName: "eTag",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentName: {
        serializedName: "properties.assessmentName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      summaryName: {
        serializedName: "properties.summaryName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitabilityPerTarget: {
        serializedName: "properties.suitabilityPerTarget",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Dictionary", value: { type: { name: "Number" } } },
          },
        },
      },
      monthlyComputeCost: {
        serializedName: "properties.monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "properties.monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      confidenceScore: {
        serializedName: "properties.confidenceScore",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      aksAssessmentSummary: {
        serializedName: "properties.aksAssessmentSummary",
        type: {
          name: "Composite",
          className: "AKSAssessmentSummary",
        },
      },
    },
  },
};

export const AssessmentOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentOptions",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      vmFamilies: {
        serializedName: "properties.vmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VmFamilyOptions",
            },
          },
        },
      },
      reservedInstanceVmFamilies: {
        serializedName: "properties.reservedInstanceVmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedLocations: {
        serializedName: "properties.reservedInstanceSupportedLocations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedCurrencies: {
        serializedName: "properties.reservedInstanceSupportedCurrencies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedOffers: {
        serializedName: "properties.reservedInstanceSupportedOffers",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      ultraDiskVmFamilies: {
        serializedName: "properties.ultraDiskVmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UltraDiskAssessmentOptions",
            },
          },
        },
      },
      premiumDiskVmFamilies: {
        serializedName: "properties.premiumDiskVmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      savingsPlanVmFamilies: {
        serializedName: "properties.savingsPlanVmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      savingsPlanSupportedLocations: {
        serializedName: "properties.savingsPlanSupportedLocations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      premiumV2DiskSupportedLocations: {
        serializedName: "properties.premiumV2DiskSupportedLocations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AvsAssessmentOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessmentOptions",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      avsNodes: {
        serializedName: "properties.avsNodes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsSkuOptions",
            },
          },
        },
      },
      avsExternalStorageTypes: {
        serializedName: "properties.avsExternalStorageTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsExternalStorageOptions",
            },
          },
        },
      },
      failuresToTolerateAndRaidLevelValues: {
        serializedName: "properties.failuresToTolerateAndRaidLevelValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceAvsNodes: {
        serializedName: "properties.reservedInstanceAvsNodes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedLocations: {
        serializedName: "properties.reservedInstanceSupportedLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedCurrencies: {
        serializedName: "properties.reservedInstanceSupportedCurrencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedOffers: {
        serializedName: "properties.reservedInstanceSupportedOffers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const BusinessCase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessCase",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      settings: {
        serializedName: "properties.settings",
        type: {
          name: "Composite",
          className: "Settings",
        },
      },
      state: {
        serializedName: "properties.state",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      reportStatusDetails: {
        serializedName: "properties.reportStatusDetails",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReportDetails",
            },
          },
        },
      },
    },
  },
};

export const AvsSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsSummary",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      azureAvsSummary: {
        serializedName: "properties.azureAvsSummary",
        type: {
          name: "Composite",
          className: "AzureAvsSummary",
        },
      },
      onPremisesAvsSummary: {
        serializedName: "properties.onPremisesAvsSummary",
        type: {
          name: "Composite",
          className: "OnPremisesIaasSummary",
        },
      },
    },
  },
};

export const EvaluatedAvsMachine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EvaluatedAvsMachine",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      machineId: {
        serializedName: "properties.machineId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverName: {
        serializedName: "properties.serverName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      virtualizationType: {
        serializedName: "properties.virtualizationType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      activityState: {
        serializedName: "properties.activityState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemName: {
        serializedName: "properties.operatingSystemName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedAzureTarget: {
        serializedName: "properties.recommendedAzureTarget",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      qualifyingOffer: {
        serializedName: "properties.qualifyingOffer",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      readyForMigration: {
        serializedName: "properties.readyForMigration",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      supportStatus: {
        serializedName: "properties.supportStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EvaluatedMachine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EvaluatedMachine",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      machineId: {
        serializedName: "properties.machineId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverName: {
        serializedName: "properties.serverName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      virtualizationType: {
        serializedName: "properties.virtualizationType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      activityState: {
        serializedName: "properties.activityState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemName: {
        serializedName: "properties.operatingSystemName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedAzureTarget: {
        serializedName: "properties.recommendedAzureTarget",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      qualifyingOffer: {
        serializedName: "properties.qualifyingOffer",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      readyForMigration: {
        serializedName: "properties.readyForMigration",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      supportStatus: {
        serializedName: "properties.supportStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EvaluatedSqlEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EvaluatedSqlEntity",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      serverName: {
        serializedName: "properties.serverName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      activityState: {
        serializedName: "properties.activityState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlVersion: {
        serializedName: "properties.sqlVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlEdition: {
        serializedName: "properties.sqlEdition",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedAzureTarget: {
        serializedName: "properties.recommendedAzureTarget",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      qualifyingOffer: {
        serializedName: "properties.qualifyingOffer",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      readyForMigration: {
        serializedName: "properties.readyForMigration",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      virtualizationType: {
        serializedName: "properties.virtualizationType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      dbCount: {
        serializedName: "properties.dbCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      supportStatus: {
        serializedName: "properties.supportStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EvaluatedWebApp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EvaluatedWebApp",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      recommendedAzureTarget: {
        serializedName: "properties.recommendedAzureTarget",
        type: {
          name: "String",
        },
      },
      recommendedAzureSkuName: {
        serializedName: "properties.recommendedAzureSkuName",
        type: {
          name: "String",
        },
      },
      recommendedAzureSkuSize: {
        serializedName: "properties.recommendedAzureSkuSize",
        type: {
          name: "String",
        },
      },
      serverName: {
        serializedName: "properties.serverName",
        type: {
          name: "String",
        },
      },
      workload: {
        serializedName: "properties.workload",
        type: {
          name: "String",
        },
      },
      activityState: {
        serializedName: "properties.activityState",
        type: {
          name: "String",
        },
      },
      readyForMigration: {
        serializedName: "properties.readyForMigration",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IaasSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IaasSummary",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      azureIaasSummary: {
        serializedName: "properties.azureIaasSummary",
        type: {
          name: "Composite",
          className: "AzureIaasSummary",
        },
      },
      onPremisesIaasSummary: {
        serializedName: "properties.onPremisesIaasSummary",
        type: {
          name: "Composite",
          className: "OnPremisesIaasSummary",
        },
      },
    },
  },
};

export const OverviewSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OverviewSummary",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      totalAzureCost: {
        serializedName: "properties.totalAzureCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalAzureIaasCost: {
        serializedName: "properties.totalAzureIaasCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalAzurePaasCost: {
        serializedName: "properties.totalAzurePaasCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalAzureAvsCost: {
        serializedName: "properties.totalAzureAvsCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      windowsAhubSavings: {
        serializedName: "properties.windowsAhubSavings",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      linuxAhubSavings: {
        serializedName: "properties.linuxAhubSavings",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      sqlAhubSavings: {
        serializedName: "properties.sqlAhubSavings",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalOnPremisesCost: {
        serializedName: "properties.totalOnPremisesCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      esuSavingsFor4Years: {
        serializedName: "properties.esuSavingsFor4years",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      managementCostSavings: {
        serializedName: "properties.managementCostSavings",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      securityCostSavings: {
        serializedName: "properties.securityCostSavings",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      yearOnYearEstimates: {
        serializedName: "properties.yearOnYearEstimates",
        type: {
          name: "Composite",
          className: "YearOnYearEstimates",
        },
      },
      serversDiscovered: {
        serializedName: "properties.serversDiscovered",
        type: {
          name: "Composite",
          className: "ServersDiscovered",
        },
      },
      utilizationData: {
        serializedName: "properties.utilizationData",
        type: {
          name: "Composite",
          className: "UtilizationData",
        },
      },
      iaasOsDistribution: {
        serializedName: "properties.iaasOsDistribution",
        type: {
          name: "Composite",
          className: "IaasOsDistribution",
        },
      },
      osSupportStatusDistribution: {
        serializedName: "properties.osSupportStatusDistribution",
        type: {
          name: "Composite",
          className: "SupportStatusDistribution",
        },
      },
      sqlSupportStatusDistribution: {
        serializedName: "properties.sqlSupportStatusDistribution",
        type: {
          name: "Composite",
          className: "SupportStatusDistribution",
        },
      },
      paasDistribution: {
        serializedName: "properties.paasDistribution",
        type: {
          name: "Composite",
          className: "PaasDistribution",
        },
      },
      azureArcEnabledOnPremisesCost: {
        serializedName: "properties.azureArcEnabledOnPremisesCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      futureCostIncludingAzureArc: {
        serializedName: "properties.futureCostIncludingAzureArc",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      futureEsuSavingsFor4YearsIncludingAzureArc: {
        serializedName: "properties.futureEsuSavingsFor4YearsIncludingAzureArc",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      futureManagementCostSavingsIncludingAzureArc: {
        serializedName:
          "properties.futureManagementCostSavingsIncludingAzureArc",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      futureSecurityCostSavingsIncludingAzureArc: {
        serializedName: "properties.futureSecurityCostSavingsIncludingAzureArc",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      azureArcServicesCost: {
        serializedName: "properties.azureArcServicesCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      futureAzureIaasCost: {
        serializedName: "properties.futureAzureIaasCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      futureAzurePaasCost: {
        serializedName: "properties.futureAzurePaasCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      futureAzureArcEnabledOnPremisesCost: {
        serializedName: "properties.futureAzureArcEnabledOnPremisesCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      futureAzureArcServicesCost: {
        serializedName: "properties.futureAzureArcServicesCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const PaasSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PaasSummary",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      azure: {
        serializedName: "properties.azure",
        type: {
          name: "Composite",
          className: "AzurePaasSummary",
        },
      },
      onPremises: {
        serializedName: "properties.onPremises",
        type: {
          name: "Composite",
          className: "OnPremisesPaasSummary",
        },
      },
    },
  },
};

export const Group: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Group",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      groupStatus: {
        serializedName: "properties.groupStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineCount: {
        serializedName: "properties.machineCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      assessments: {
        serializedName: "properties.assessments",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      supportedAssessmentTypes: {
        serializedName: "properties.supportedAssessmentTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      areAssessmentsRunning: {
        serializedName: "properties.areAssessmentsRunning",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      groupType: {
        serializedName: "properties.groupType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Assessment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Assessment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      assessmentErrorSummary: {
        serializedName: "properties.assessmentErrorSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      monthlyUltraStorageCost: {
        serializedName: "properties.monthlyUltraStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      costComponents: {
        serializedName: "properties.costComponents",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      eaSubscriptionId: {
        serializedName: "properties.eaSubscriptionId",
        type: {
          name: "String",
        },
      },
      azurePricingTier: {
        serializedName: "properties.azurePricingTier",
        type: {
          name: "String",
        },
      },
      azureStorageRedundancy: {
        serializedName: "properties.azureStorageRedundancy",
        type: {
          name: "String",
        },
      },
      reservedInstance: {
        serializedName: "properties.reservedInstance",
        type: {
          name: "String",
        },
      },
      azureHybridUseBenefit: {
        serializedName: "properties.azureHybridUseBenefit",
        type: {
          name: "String",
        },
      },
      linuxAzureHybridUseBenefit: {
        serializedName: "properties.linuxAzureHybridUseBenefit",
        type: {
          name: "String",
        },
      },
      azureDiskTypes: {
        serializedName: "properties.azureDiskTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      azureVmFamilies: {
        serializedName: "properties.azureVmFamilies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      distributionBySupportStatus: {
        serializedName: "properties.distributionBySupportStatus",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionByServicePackInsight: {
        serializedName: "properties.distributionByServicePackInsight",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionByOsName: {
        serializedName: "properties.distributionByOsName",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      monthlyComputeCost: {
        serializedName: "properties.monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyBandwidthCost: {
        serializedName: "properties.monthlyBandwidthCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "properties.monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyPremiumStorageCost: {
        serializedName: "properties.monthlyPremiumStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStandardSsdStorageCost: {
        serializedName: "properties.monthlyStandardSsdStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitabilitySummary: {
        serializedName: "properties.suitabilitySummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      numberOfMachines: {
        serializedName: "properties.numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      vmUptime: {
        serializedName: "properties.vmUptime",
        type: {
          name: "Composite",
          className: "VmUptime",
        },
      },
      groupType: {
        serializedName: "properties.groupType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "properties.assessmentType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "properties.azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "properties.azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "properties.currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "properties.scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "properties.percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "properties.timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "properties.perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "properties.perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "properties.stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "properties.discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "properties.pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "properties.schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedMachine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedMachine",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      errors: {
        serializedName: "properties.errors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorModel",
            },
          },
        },
      },
      disks: {
        serializedName: "properties.disks",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "AssessedDisk" } },
        },
      },
      monthlyUltraStorageCost: {
        serializedName: "properties.monthlyUltraStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      hostProcessor: {
        serializedName: "properties.hostProcessor",
        type: {
          name: "Composite",
          className: "ProcessorInfo",
        },
      },
      costComponents: {
        serializedName: "properties.costComponents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      productSupportStatus: {
        serializedName: "properties.productSupportStatus",
        type: {
          name: "Composite",
          className: "ProductSupportStatus",
        },
      },
      monthlyBandwidthCost: {
        serializedName: "properties.monthlyBandwidthCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "properties.monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyPremiumStorageCost: {
        serializedName: "properties.monthlyPremiumStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStandardSsdStorageCost: {
        serializedName: "properties.monthlyStandardSsdStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      networkAdapters: {
        serializedName: "properties.networkAdapters",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "AssessedNetworkAdapter" },
          },
        },
      },
      recommendedSize: {
        serializedName: "properties.recommendedSize",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      numberOfCoresForRecommendedSize: {
        serializedName: "properties.numberOfCoresForRecommendedSize",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      megabytesOfMemoryForRecommendedSize: {
        serializedName: "properties.megabytesOfMemoryForRecommendedSize",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyComputeCostForRecommendedSize: {
        serializedName: "properties.monthlyComputeCostForRecommendedSize",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitabilityExplanation: {
        serializedName: "properties.suitabilityExplanation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitabilityDetail: {
        serializedName: "properties.suitabilityDetail",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      typePropertiesType: {
        serializedName: "properties.type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      bootType: {
        serializedName: "properties.bootType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemType: {
        serializedName: "properties.operatingSystemType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemName: {
        serializedName: "properties.operatingSystemName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemVersion: {
        serializedName: "properties.operatingSystemVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemArchitecture: {
        serializedName: "properties.operatingSystemArchitecture",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterMachineArmId: {
        serializedName: "properties.datacenterMachineArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerArmId: {
        serializedName: "properties.datacenterManagementServerArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerName: {
        serializedName: "properties.datacenterManagementServerName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      megabytesOfMemory: {
        serializedName: "properties.megabytesOfMemory",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfCores: {
        serializedName: "properties.numberOfCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageCoresUtilization: {
        serializedName: "properties.percentageCoresUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageMemoryUtilization: {
        serializedName: "properties.percentageMemoryUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitability: {
        serializedName: "properties.suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsAssessment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      assessmentErrorSummary: {
        serializedName: "properties.assessmentErrorSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      failuresToTolerateAndRaidLevel: {
        serializedName: "properties.failuresToTolerateAndRaidLevel",
        type: {
          name: "String",
        },
      },
      failuresToTolerateAndRaidLevelList: {
        serializedName: "properties.failuresToTolerateAndRaidLevelList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      vcpuOversubscription: {
        serializedName: "properties.vcpuOversubscription",
        type: {
          name: "Number",
        },
      },
      nodeType: {
        serializedName: "properties.nodeType",
        type: {
          name: "String",
        },
      },
      nodeTypes: {
        serializedName: "properties.nodeTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      externalStorageTypes: {
        serializedName: "properties.externalStorageTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      avsAssessmentScenario: {
        serializedName: "properties.avsAssessmentScenario",
        type: {
          name: "String",
        },
      },
      isVcfByolEnabled: {
        serializedName: "properties.isVcfByolEnabled",
        type: {
          name: "Boolean",
        },
      },
      costComponents: {
        serializedName: "properties.costComponents",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      reservedInstance: {
        serializedName: "properties.reservedInstance",
        type: {
          name: "String",
        },
      },
      totalMonthlyCost: {
        serializedName: "properties.totalMonthlyCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitability: {
        serializedName: "properties.suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "properties.suitabilityExplanation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      numberOfNodes: {
        serializedName: "properties.numberOfNodes",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cpuUtilization: {
        serializedName: "properties.cpuUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      ramUtilization: {
        serializedName: "properties.ramUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      storageUtilization: {
        serializedName: "properties.storageUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalCpuCores: {
        serializedName: "properties.totalCpuCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalRamInGB: {
        serializedName: "properties.totalRamInGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalStorageInGB: {
        serializedName: "properties.totalStorageInGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      avsEstimatedNodes: {
        serializedName: "properties.avsEstimatedNodes",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsEstimatedNode",
            },
          },
        },
      },
      avsEstimatedExternalStorages: {
        serializedName: "properties.avsEstimatedExternalStorages",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsEstimatedExternalStorage",
            },
          },
        },
      },
      avsEstimatedNetworks: {
        serializedName: "properties.avsEstimatedNetworks",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsEstimatedNetwork",
            },
          },
        },
      },
      cpuHeadroom: {
        serializedName: "properties.cpuHeadroom",
        type: {
          name: "Number",
        },
      },
      numberOfMachines: {
        serializedName: "properties.numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitabilitySummary: {
        serializedName: "properties.suitabilitySummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      memOvercommit: {
        serializedName: "properties.memOvercommit",
        type: {
          name: "Number",
        },
      },
      dedupeCompression: {
        serializedName: "properties.dedupeCompression",
        type: {
          name: "Number",
        },
      },
      limitingFactor: {
        serializedName: "properties.limitingFactor",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isStretchClusterEnabled: {
        serializedName: "properties.isStretchClusterEnabled",
        type: {
          name: "Boolean",
        },
      },
      groupType: {
        serializedName: "properties.groupType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "properties.assessmentType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "properties.azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "properties.azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "properties.currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "properties.scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "properties.percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "properties.timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "properties.perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "properties.perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "properties.stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "properties.discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "properties.pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "properties.schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsAssessedMachine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessedMachine",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      errors: {
        serializedName: "properties.errors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorModel",
            },
          },
        },
      },
      disks: {
        serializedName: "properties.disks",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "AvsAssessedDisk" } },
        },
      },
      networkAdapters: {
        serializedName: "properties.networkAdapters",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "AvsAssessedNetworkAdapter" },
          },
        },
      },
      storageInUseGB: {
        serializedName: "properties.storageInUseGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitabilityExplanation: {
        serializedName: "properties.suitabilityExplanation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitabilityDetail: {
        serializedName: "properties.suitabilityDetail",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      typePropertiesType: {
        serializedName: "properties.type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      bootType: {
        serializedName: "properties.bootType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemType: {
        serializedName: "properties.operatingSystemType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemName: {
        serializedName: "properties.operatingSystemName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemVersion: {
        serializedName: "properties.operatingSystemVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemArchitecture: {
        serializedName: "properties.operatingSystemArchitecture",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterMachineArmId: {
        serializedName: "properties.datacenterMachineArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerArmId: {
        serializedName: "properties.datacenterManagementServerArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerName: {
        serializedName: "properties.datacenterManagementServerName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      megabytesOfMemory: {
        serializedName: "properties.megabytesOfMemory",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfCores: {
        serializedName: "properties.numberOfCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageCoresUtilization: {
        serializedName: "properties.percentageCoresUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageMemoryUtilization: {
        serializedName: "properties.percentageMemoryUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitability: {
        serializedName: "properties.suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentV2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      osLicense: {
        serializedName: "properties.osLicense",
        type: {
          name: "String",
        },
      },
      environmentType: {
        serializedName: "properties.environmentType",
        type: {
          name: "String",
        },
      },
      entityUptime: {
        serializedName: "properties.entityUptime",
        type: {
          name: "Composite",
          className: "EntityUptime",
        },
      },
      optimizationLogic: {
        serializedName: "properties.optimizationLogic",
        type: {
          name: "String",
        },
      },
      reservedInstanceForVm: {
        serializedName: "properties.reservedInstanceForVm",
        type: {
          name: "String",
        },
      },
      azureOfferCodeForVm: {
        serializedName: "properties.azureOfferCodeForVm",
        type: {
          name: "String",
        },
      },
      eaSubscriptionId: {
        serializedName: "properties.eaSubscriptionId",
        type: {
          name: "String",
        },
      },
      azureSqlManagedInstanceSettings: {
        serializedName: "properties.azureSqlManagedInstanceSettings",
        type: {
          name: "Composite",
          className: "SqlMiSettings",
        },
      },
      azureSqlDatabaseSettings: {
        serializedName: "properties.azureSqlDatabaseSettings",
        type: {
          name: "Composite",
          className: "SqlDbSettings",
        },
      },
      azureSqlVmSettings: {
        serializedName: "properties.azureSqlVmSettings",
        type: {
          name: "Composite",
          className: "SqlVmSettings",
        },
      },
      multiSubnetIntent: {
        serializedName: "properties.multiSubnetIntent",
        type: {
          name: "String",
        },
      },
      asyncCommitModeIntent: {
        serializedName: "properties.asyncCommitModeIntent",
        type: {
          name: "String",
        },
      },
      isInternetAccessAvailable: {
        serializedName: "properties.isInternetAccessAvailable",
        type: {
          name: "Boolean",
        },
      },
      disasterRecoveryLocation: {
        serializedName: "properties.disasterRecoveryLocation",
        type: {
          name: "String",
        },
      },
      enableHadrAssessment: {
        serializedName: "properties.enableHadrAssessment",
        type: {
          name: "Boolean",
        },
      },
      azureSecurityOfferingType: {
        serializedName: "properties.azureSecurityOfferingType",
        type: {
          name: "String",
        },
      },
      reservedInstance: {
        serializedName: "properties.reservedInstance",
        type: {
          name: "String",
        },
      },
      sqlServerLicense: {
        serializedName: "properties.sqlServerLicense",
        type: {
          name: "String",
        },
      },
      groupType: {
        serializedName: "properties.groupType",
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "properties.assessmentType",
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "properties.azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "properties.azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "properties.currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "properties.scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "properties.percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "properties.timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "properties.perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "properties.perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "properties.stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "properties.discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "properties.pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "properties.schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedSqlDatabaseV2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlDatabaseV2",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      recommendedAzureSqlTargetType: {
        serializedName: "properties.recommendedAzureSqlTargetType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedSuitability: {
        serializedName: "properties.recommendedSuitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      bufferCacheSizeInMB: {
        serializedName: "properties.bufferCacheSizeInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      productSupportStatus: {
        serializedName: "properties.productSupportStatus",
        type: {
          name: "Composite",
          className: "ProductSupportStatus",
        },
      },
      azureSqlMISuitabilityDetails: {
        serializedName: "properties.azureSqlMISuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2PaasSuitabilityData",
        },
      },
      azureSqlDBSuitabilityDetails: {
        serializedName: "properties.azureSqlDBSuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2PaasSuitabilityData",
        },
      },
      isDatabaseHighlyAvailable: {
        serializedName: "properties.isDatabaseHighlyAvailable",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      linkedAvailabilityGroupOverview: {
        serializedName: "properties.linkedAvailabilityGroupOverview",
        type: {
          name: "Composite",
          className: "SqlAvailabilityGroupDataOverview",
        },
      },
      machineArmId: {
        serializedName: "properties.machineArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessedSqlInstanceArmId: {
        serializedName: "properties.assessedSqlInstanceArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineName: {
        serializedName: "properties.machineName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      instanceName: {
        serializedName: "properties.instanceName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      databaseName: {
        serializedName: "properties.databaseName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      databaseSizeInMB: {
        serializedName: "properties.databaseSizeInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      compatibilityLevel: {
        serializedName: "properties.compatibilityLevel",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlDatabaseSdsArmId: {
        serializedName: "properties.sqlDatabaseSdsArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      percentageCoresUtilization: {
        serializedName: "properties.percentageCoresUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfRead: {
        serializedName: "properties.megabytesPerSecondOfRead",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfWrite: {
        serializedName: "properties.megabytesPerSecondOfWrite",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfReadOperationsPerSecond: {
        serializedName: "properties.numberOfReadOperationsPerSecond",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfWriteOperationsPerSecond: {
        serializedName: "properties.numberOfWriteOperationsPerSecond",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AssessedSqlInstanceV2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlInstanceV2",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      memoryInUseInMB: {
        serializedName: "properties.memoryInUseInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      hasScanOccurred: {
        serializedName: "properties.hasScanOccurred",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      recommendedAzureSqlTargetType: {
        serializedName: "properties.recommendedAzureSqlTargetType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedSuitability: {
        serializedName: "properties.recommendedSuitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureSqlMISuitabilityDetails: {
        serializedName: "properties.azureSqlMISuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2PaasSuitabilityData",
        },
      },
      azureSqlDBSuitabilityDetails: {
        serializedName: "properties.azureSqlDBSuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2PaasSuitabilityData",
        },
      },
      azureSqlVMSuitabilityDetails: {
        serializedName: "properties.azureSqlVMSuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2IaasSuitabilityData",
        },
      },
      storageTypeBasedDetails: {
        serializedName: "properties.storageTypeBasedDetails",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedSqlInstanceStorageDetails",
            },
          },
        },
      },
      productSupportStatus: {
        serializedName: "properties.productSupportStatus",
        type: {
          name: "Composite",
          className: "ProductSupportStatus",
        },
      },
      fciMetadata: {
        serializedName: "properties.fciMetadata",
        type: {
          name: "Composite",
          className: "SqlFCIMetadata",
        },
      },
      availabilityReplicaSummary: {
        serializedName: "properties.availabilityReplicaSummary",
        type: {
          name: "Composite",
          className: "SqlAvailabilityReplicaSummary",
        },
      },
      isClustered: {
        serializedName: "properties.isClustered",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      isHighAvailabilityEnabled: {
        serializedName: "properties.isHighAvailabilityEnabled",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      recommendedTargetReasonings: {
        serializedName: "properties.recommendedTargetReasonings",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlRecommendationReasoning",
            },
          },
        },
      },
      machineArmId: {
        serializedName: "properties.machineArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineName: {
        serializedName: "properties.machineName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      instanceName: {
        serializedName: "properties.instanceName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlInstanceSdsArmId: {
        serializedName: "properties.sqlInstanceSdsArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlEdition: {
        serializedName: "properties.sqlEdition",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlVersion: {
        serializedName: "properties.sqlVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      numberOfCoresAllocated: {
        serializedName: "properties.numberOfCoresAllocated",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageCoresUtilization: {
        serializedName: "properties.percentageCoresUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      logicalDisks: {
        serializedName: "properties.logicalDisks",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedSqlInstanceDiskDetails",
            },
          },
        },
      },
      databaseSummary: {
        serializedName: "properties.databaseSummary",
        type: {
          name: "Composite",
          className: "AssessedSqlInstanceDatabaseSummary",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AssessedSqlMachine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlMachine",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      biosGuid: {
        serializedName: "properties.biosGuid",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      fqdn: {
        serializedName: "properties.fqdn",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlInstances: {
        serializedName: "properties.sqlInstances",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedSqlInstanceSummary",
            },
          },
        },
      },
      suitabilityDetail: {
        serializedName: "properties.suitabilityDetail",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "properties.suitabilityExplanation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedVmSize: {
        serializedName: "properties.recommendedVmSize",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedVmFamily: {
        serializedName: "properties.recommendedVmFamily",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      productSupportStatus: {
        serializedName: "properties.productSupportStatus",
        type: {
          name: "Composite",
          className: "ProductSupportStatus",
        },
      },
      recommendedVmSizeNumberOfCores: {
        serializedName: "properties.recommendedVmSizeNumberOfCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      recommendedVmSizeMegabytesOfMemory: {
        serializedName: "properties.recommendedVmSizeMegabytesOfMemory",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyComputeCost: {
        serializedName: "properties.monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      disks: {
        serializedName: "properties.disks",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "AssessedDiskData" } },
        },
      },
      networkAdapters: {
        serializedName: "properties.networkAdapters",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "SqlAssessedNetworkAdapter" },
          },
        },
      },
      monthlyBandwidthCost: {
        serializedName: "properties.monthlyBandwidthCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "properties.monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      costComponents: {
        serializedName: "properties.costComponents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      securitySuitability: {
        serializedName: "properties.securitySuitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrationGuidelines: {
        serializedName: "properties.migrationGuidelines",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlMigrationGuideline",
            },
          },
        },
      },
      bootType: {
        serializedName: "properties.bootType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemType: {
        serializedName: "properties.operatingSystemType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemName: {
        serializedName: "properties.operatingSystemName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemVersion: {
        serializedName: "properties.operatingSystemVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemArchitecture: {
        serializedName: "properties.operatingSystemArchitecture",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      typePropertiesType: {
        serializedName: "properties.type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterMachineArmId: {
        serializedName: "properties.datacenterMachineArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerArmId: {
        serializedName: "properties.datacenterManagementServerArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerName: {
        serializedName: "properties.datacenterManagementServerName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      megabytesOfMemory: {
        serializedName: "properties.megabytesOfMemory",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfCores: {
        serializedName: "properties.numberOfCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageCoresUtilization: {
        serializedName: "properties.percentageCoresUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageMemoryUtilization: {
        serializedName: "properties.percentageMemoryUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitability: {
        serializedName: "properties.suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedSqlRecommendedEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlRecommendedEntity",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      machineName: {
        serializedName: "properties.machineName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      instanceName: {
        serializedName: "properties.instanceName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      productSupportStatus: {
        serializedName: "properties.productSupportStatus",
        type: {
          name: "Composite",
          className: "ProductSupportStatus",
        },
      },
      dbCount: {
        serializedName: "properties.dbCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      discoveredDBCount: {
        serializedName: "properties.discoveredDBCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      hasScanOccurred: {
        serializedName: "properties.hasScanOccurred",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      recommendedAzureSqlTargetType: {
        serializedName: "properties.recommendedAzureSqlTargetType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedSuitability: {
        serializedName: "properties.recommendedSuitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureSqlMISuitabilityDetails: {
        serializedName: "properties.azureSqlMISuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2PaasSuitabilityData",
        },
      },
      azureSqlDBSuitabilityDetails: {
        serializedName: "properties.azureSqlDBSuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2PaasSuitabilityData",
        },
      },
      azureSqlVMSuitabilityDetails: {
        serializedName: "properties.azureSqlVMSuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2IaasSuitabilityData",
        },
      },
      assessedSqlEntityArmId: {
        serializedName: "properties.assessedSqlEntityArmId",
        type: {
          name: "String",
        },
      },
      isClustered: {
        serializedName: "properties.isClustered",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      isHighAvailabilityEnabled: {
        serializedName: "properties.isHighAvailabilityEnabled",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      sqlEdition: {
        serializedName: "properties.sqlEdition",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlVersion: {
        serializedName: "properties.sqlVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentV2Summary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2Summary",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      assessmentSummary: {
        serializedName: "properties.assessmentSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "SqlAssessmentV2SummaryData",
            },
          },
        },
      },
      distributionBySupportStatus: {
        serializedName: "properties.distributionBySupportStatus",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionByServicePackInsight: {
        serializedName: "properties.distributionByServicePackInsight",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionBySqlVersion: {
        serializedName: "properties.distributionBySqlVersion",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionBySqlEdition: {
        serializedName: "properties.distributionBySqlEdition",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      instanceDistributionBySizingCriterion: {
        serializedName: "properties.instanceDistributionBySizingCriterion",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      databaseDistributionBySizingCriterion: {
        serializedName: "properties.databaseDistributionBySizingCriterion",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      numberOfMachines: {
        serializedName: "properties.numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfSqlInstances: {
        serializedName: "properties.numberOfSqlInstances",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfSuccessfullyDiscoveredSqlInstances: {
        serializedName: "properties.numberOfSuccessfullyDiscoveredSqlInstances",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfSqlDatabases: {
        serializedName: "properties.numberOfSqlDatabases",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfFciInstances: {
        serializedName: "properties.numberOfFciInstances",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfSqlAvailabilityGroups: {
        serializedName: "properties.numberOfSqlAvailabilityGroups",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const WebAppAssessmentV2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppAssessmentV2",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      environmentType: {
        serializedName: "properties.environmentType",
        type: {
          name: "String",
        },
      },
      entityUptime: {
        serializedName: "properties.entityUptime",
        type: {
          name: "Composite",
          className: "EntityUptime",
        },
      },
      eaSubscriptionId: {
        serializedName: "properties.eaSubscriptionId",
        type: {
          name: "String",
        },
      },
      appSvcNativeSettings: {
        serializedName: "properties.appSvcNativeSettings",
        type: {
          name: "Composite",
          className: "AppSvcNativeSettings",
        },
      },
      appSvcContainerSettings: {
        serializedName: "properties.appSvcContainerSettings",
        type: {
          name: "Composite",
          className: "AppSvcContainerSettings",
        },
      },
      discoveredEntityLightSummary: {
        serializedName: "properties.discoveredEntityLightSummary",
        type: {
          name: "Composite",
          className: "DiscoveredEntityLightSummary",
        },
      },
      azureSecurityOfferingType: {
        serializedName: "properties.azureSecurityOfferingType",
        type: {
          name: "String",
        },
      },
      reservedInstance: {
        serializedName: "properties.reservedInstance",
        type: {
          name: "String",
        },
      },
      groupType: {
        serializedName: "properties.groupType",
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "properties.assessmentType",
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "properties.azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "properties.azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "properties.currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "properties.scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "properties.percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "properties.timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "properties.perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "properties.perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "properties.stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "properties.discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "properties.pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "properties.schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedWebAppV2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedWebAppV2",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      webAppType: {
        serializedName: "properties.webAppType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      targetSpecificResult: {
        serializedName: "properties.targetSpecificResult",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "TargetSpecificResult" },
          },
        },
      },
      appServicePlanName: {
        serializedName: "properties.appServicePlanName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineName: {
        serializedName: "properties.machineName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverArmId: {
        serializedName: "properties.serverArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      webServerName: {
        serializedName: "properties.webServerName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      webAppName: {
        serializedName: "properties.webAppName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discoveredWebAppId: {
        serializedName: "properties.discoveredWebAppId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discoveredMachineId: {
        serializedName: "properties.discoveredMachineId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const WebAppAssessmentV2Summary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppAssessmentV2Summary",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      assessmentSummary: {
        serializedName: "properties.assessmentSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "DiscoveredEntitiesSummary" },
          },
        },
      },
      targetSpecificSummary: {
        serializedName: "properties.targetSpecificSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "TargetSpecificSummary" },
          },
        },
      },
    },
  },
};

export const WebAppServicePlanV2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppServicePlanV2",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      webAppType: {
        serializedName: "properties.webAppType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      webAppTargetType: {
        serializedName: "properties.webAppTargetType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      webAppServicePlanName: {
        serializedName: "properties.webAppServicePlanName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      numberOfWebApps: {
        serializedName: "properties.numberOfWebApps",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyCost: {
        serializedName: "properties.monthlyCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      storage: {
        serializedName: "properties.storage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      scaleOutInstances: {
        serializedName: "properties.scaleOutInstances",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cores: {
        serializedName: "properties.cores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      ram: {
        serializedName: "properties.ram",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      webAppSkuName: {
        serializedName: "properties.webAppSkuName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      webAppSkuSize: {
        serializedName: "properties.webAppSkuSize",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      costComponents: {
        serializedName: "properties.costComponents",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
    },
  },
};

export const HypervCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HypervCollector",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      agentProperties: {
        serializedName: "properties.agentProperties",
        type: {
          name: "Composite",
          className: "CollectorAgentPropertiesBase",
        },
      },
      discoverySiteId: {
        serializedName: "properties.discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ImportCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportCollector",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      discoverySiteId: {
        serializedName: "properties.discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const Machine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Machine",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      workloadSummary: {
        serializedName: "properties.workloadSummary",
        type: {
          name: "Composite",
          className: "WorkloadSummary",
        },
      },
      errors: {
        serializedName: "properties.errors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorModel",
            },
          },
        },
      },
      hostProcessor: {
        serializedName: "properties.hostProcessor",
        type: {
          name: "Composite",
          className: "ProcessorInfo",
        },
      },
      productSupportStatus: {
        serializedName: "properties.productSupportStatus",
        type: {
          name: "Composite",
          className: "ProductSupportStatus",
        },
      },
      discoveryMachineArmId: {
        serializedName: "properties.discoveryMachineArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerArmId: {
        serializedName: "properties.datacenterManagementServerArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerName: {
        serializedName: "properties.datacenterManagementServerName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      bootType: {
        serializedName: "properties.bootType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      megabytesOfMemory: {
        serializedName: "properties.megabytesOfMemory",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfCores: {
        serializedName: "properties.numberOfCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      operatingSystemType: {
        serializedName: "properties.operatingSystemType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemName: {
        serializedName: "properties.operatingSystemName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemVersion: {
        serializedName: "properties.operatingSystemVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      disks: {
        serializedName: "properties.disks",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "Disk" } },
        },
      },
      groups: {
        serializedName: "properties.groups",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      networkAdapters: {
        serializedName: "properties.networkAdapters",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "NetworkAdapter" } },
        },
      },
      sqlInstances: {
        serializedName: "properties.sqlInstances",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      webApplications: {
        serializedName: "properties.webApplications",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const PrivateLinkResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      groupId: {
        serializedName: "properties.groupId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      requiredMembers: {
        serializedName: "properties.requiredMembers",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      requiredZoneNames: {
        serializedName: "properties.requiredZoneNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AssessmentProjectSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentProjectSummary",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      errorSummaryAffectedEntities: {
        serializedName: "properties.errorSummaryAffectedEntities",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorSummary",
            },
          },
        },
      },
      numberOfPrivateEndpointConnections: {
        serializedName: "properties.numberOfPrivateEndpointConnections",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfGroups: {
        serializedName: "properties.numberOfGroups",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfMachines: {
        serializedName: "properties.numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfImportMachines: {
        serializedName: "properties.numberOfImportMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfAssessments: {
        serializedName: "properties.numberOfAssessments",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      lastAssessmentTimestamp: {
        serializedName: "properties.lastAssessmentTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ServerCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerCollector",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      agentProperties: {
        serializedName: "properties.agentProperties",
        type: {
          name: "Composite",
          className: "CollectorAgentPropertiesBase",
        },
      },
      discoverySiteId: {
        serializedName: "properties.discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const SqlAssessmentOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentOptions",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      vmFamilies: {
        serializedName: "properties.vmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VmFamilyOptions",
            },
          },
        },
      },
      reservedInstanceVmFamilies: {
        serializedName: "properties.reservedInstanceVmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      premiumDiskVmFamilies: {
        serializedName: "properties.premiumDiskVmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      savingsPlanVmFamilies: {
        serializedName: "properties.savingsPlanVmFamilies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      savingsPlanSupportedLocations: {
        serializedName: "properties.savingsPlanSupportedLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      savingsPlanSupportedLocationsForPaas: {
        serializedName: "properties.savingsPlanSupportedLocationsForPaas",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedLocationsForIaas: {
        serializedName: "properties.reservedInstanceSupportedLocationsForIaas",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      savingsPlanSupportedOffers: {
        serializedName: "properties.savingsPlanSupportedOffers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      sqlSkus: {
        serializedName: "properties.sqlSkus",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlPaaSTargetOptions",
            },
          },
        },
      },
      reservedInstanceSqlTargets: {
        serializedName: "properties.reservedInstanceSqlTargets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedLocations: {
        serializedName: "properties.reservedInstanceSupportedLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedCurrencies: {
        serializedName: "properties.reservedInstanceSupportedCurrencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedOffers: {
        serializedName: "properties.reservedInstanceSupportedOffers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      supportedOffers: {
        serializedName: "properties.supportedOffers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const SqlCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlCollector",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      agentProperties: {
        serializedName: "properties.agentProperties",
        type: {
          name: "Composite",
          className: "CollectorAgentPropertiesBase",
        },
      },
      discoverySiteId: {
        serializedName: "properties.discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const VmwareCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VmwareCollector",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      agentProperties: {
        serializedName: "properties.agentProperties",
        type: {
          name: "Composite",
          className: "CollectorAgentPropertiesBase",
        },
      },
      discoverySiteId: {
        serializedName: "properties.discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const WebAppAssessmentOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppAssessmentOptions",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      webAppSkus: {
        serializedName: "properties.webAppSkus",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebAppTargetOptions",
            },
          },
        },
      },
      savingsPlanSupportedLocations: {
        serializedName: "properties.savingsPlanSupportedLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedLocations: {
        serializedName: "properties.reservedInstanceSupportedLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedCurrencies: {
        serializedName: "properties.reservedInstanceSupportedCurrencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedOffers: {
        serializedName: "properties.reservedInstanceSupportedOffers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedWebAppTiers: {
        serializedName: "properties.reservedInstanceSupportedWebAppTiers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      savingsPlanSupportedWebAppTiers: {
        serializedName: "properties.savingsPlanSupportedWebAppTiers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const WebAppCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebAppCollector",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      agentProperties: {
        serializedName: "properties.agentProperties",
        type: {
          name: "Composite",
          className: "CollectorAgentPropertiesBase",
        },
      },
      discoverySiteId: {
        serializedName: "properties.discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AssessmentProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentProject",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      serviceEndpoint: {
        serializedName: "properties.serviceEndpoint",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentSolutionId: {
        serializedName: "properties.assessmentSolutionId",
        type: {
          name: "String",
        },
      },
      projectStatus: {
        serializedName: "properties.projectStatus",
        type: {
          name: "String",
        },
      },
      customerWorkspaceId: {
        serializedName: "properties.customerWorkspaceId",
        type: {
          name: "String",
        },
      },
      customerWorkspaceLocation: {
        serializedName: "properties.customerWorkspaceLocation",
        type: {
          name: "String",
        },
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String",
        },
      },
      privateEndpointConnections: {
        serializedName: "properties.privateEndpointConnections",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection",
            },
          },
        },
      },
      customerStorageAccountArmId: {
        serializedName: "properties.customerStorageAccountArmId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AKSAssessmentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AKSAssessmentProperties",
    modelProperties: {
      ...AssessmentPropertiesBase.type.modelProperties,
      settings: {
        serializedName: "settings",
        type: {
          name: "Composite",
          className: "AKSAssessmentSettings",
        },
      },
      details: {
        serializedName: "details",
        type: {
          name: "Composite",
          className: "AKSAssessmentDetails",
        },
      },
    },
  },
};

export const AssessedWebApplicationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedWebApplicationProperties",
    modelProperties: {
      ...AssessedWebApp.type.modelProperties,
    },
  },
};

export const AssessmentProjectsOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AssessmentProjectsOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const AssessmentProjectsOperationsUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AssessmentProjectsOperationsUpdateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const AksAssessmentOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AksAssessmentOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const AksAssessmentOperationsDownloadUrlHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AksAssessmentOperationsDownloadUrlHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const BusinessCaseOperationsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BusinessCaseOperationsCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const BusinessCaseOperationsCompareSummaryHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "BusinessCaseOperationsCompareSummaryHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const BusinessCaseOperationsGetReportDownloadUrlHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "BusinessCaseOperationsGetReportDownloadUrlHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const GroupsOperationsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupsOperationsCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GroupsOperationsUpdateMachinesHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GroupsOperationsUpdateMachinesHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const AssessmentsOperationsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentsOperationsCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessmentsOperationsDownloadUrlHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AssessmentsOperationsDownloadUrlHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const AvsAssessmentsOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AvsAssessmentsOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const AvsAssessmentsOperationsDownloadUrlHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AvsAssessmentsOperationsDownloadUrlHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const SqlAssessmentV2OperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SqlAssessmentV2OperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const SqlAssessmentV2OperationsDownloadUrlHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SqlAssessmentV2OperationsDownloadUrlHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const WebAppAssessmentV2OperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "WebAppAssessmentV2OperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const WebAppAssessmentV2OperationsDownloadUrlHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "WebAppAssessmentV2OperationsDownloadUrlHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const HypervCollectorsOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "HypervCollectorsOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const ImportCollectorsOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ImportCollectorsOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const PrivateEndpointConnectionOperationsUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "PrivateEndpointConnectionOperationsUpdateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const ServerCollectorsOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ServerCollectorsOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const SqlCollectorOperationsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlCollectorOperationsCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const VmwareCollectorsOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VmwareCollectorsOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const WebAppCollectorOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "WebAppCollectorOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };
