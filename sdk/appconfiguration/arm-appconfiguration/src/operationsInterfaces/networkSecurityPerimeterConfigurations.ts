/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  NetworkSecurityPerimeterConfiguration,
  NetworkSecurityPerimeterConfigurationsListByConfigurationStoreOptionalParams,
  NetworkSecurityPerimeterConfigurationsGetOptionalParams,
  NetworkSecurityPerimeterConfigurationsGetResponse,
  NetworkSecurityPerimeterConfigurationsReconcileOptionalParams,
  NetworkSecurityPerimeterConfigurationsReconcileResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a NetworkSecurityPerimeterConfigurations. */
export interface NetworkSecurityPerimeterConfigurations {
  /**
   * Lists all network security perimeter configurations for a configuration store.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param configStoreName The name of the configuration store.
   * @param options The options parameters.
   */
  listByConfigurationStore(
    resourceGroupName: string,
    configStoreName: string,
    options?: NetworkSecurityPerimeterConfigurationsListByConfigurationStoreOptionalParams
  ): PagedAsyncIterableIterator<NetworkSecurityPerimeterConfiguration>;
  /**
   * Gets the specified network security perimeter configurations associated with the configuration
   * store.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param configStoreName The name of the configuration store.
   * @param nspConfigurationName Network security perimeter configuration name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    configStoreName: string,
    nspConfigurationName: string,
    options?: NetworkSecurityPerimeterConfigurationsGetOptionalParams
  ): Promise<NetworkSecurityPerimeterConfigurationsGetResponse>;
  /**
   * Reconcile network security perimeter configuration for the configuration store.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param configStoreName The name of the configuration store.
   * @param nspConfigurationName Network security perimeter configuration name
   * @param options The options parameters.
   */
  beginReconcile(
    resourceGroupName: string,
    configStoreName: string,
    nspConfigurationName: string,
    options?: NetworkSecurityPerimeterConfigurationsReconcileOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkSecurityPerimeterConfigurationsReconcileResponse>,
      NetworkSecurityPerimeterConfigurationsReconcileResponse
    >
  >;
  /**
   * Reconcile network security perimeter configuration for the configuration store.
   * @param resourceGroupName The name of the resource group to which the container registry belongs.
   * @param configStoreName The name of the configuration store.
   * @param nspConfigurationName Network security perimeter configuration name
   * @param options The options parameters.
   */
  beginReconcileAndWait(
    resourceGroupName: string,
    configStoreName: string,
    nspConfigurationName: string,
    options?: NetworkSecurityPerimeterConfigurationsReconcileOptionalParams
  ): Promise<NetworkSecurityPerimeterConfigurationsReconcileResponse>;
}
