/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Experimentation,
  ExperimentationListOptionalParams,
  ExperimentationGetOptionalParams,
  ExperimentationGetResponse,
  ExperimentationCreateOptionalParams,
  ExperimentationCreateResponse,
  ExperimentationDeleteOptionalParams,
  ExperimentationDeleteResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ExperimentationOperations. */
export interface ExperimentationOperations {
  /**
   * Lists experimentation for a given configuration store.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configStoreName The name of the configuration store.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    configStoreName: string,
    options?: ExperimentationListOptionalParams,
  ): PagedAsyncIterableIterator<Experimentation>;
  /**
   * Gets the properties of the experimentation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configStoreName The name of the configuration store.
   * @param experimentationName The name of the experimentation.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    configStoreName: string,
    experimentationName: string,
    options?: ExperimentationGetOptionalParams,
  ): Promise<ExperimentationGetResponse>;
  /**
   * Creates the experimentation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configStoreName The name of the configuration store.
   * @param experimentationName The name of the experimentation.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    configStoreName: string,
    experimentationName: string,
    options?: ExperimentationCreateOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<ExperimentationCreateResponse>, ExperimentationCreateResponse>
  >;
  /**
   * Creates the experimentation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configStoreName The name of the configuration store.
   * @param experimentationName The name of the experimentation.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    configStoreName: string,
    experimentationName: string,
    options?: ExperimentationCreateOptionalParams,
  ): Promise<ExperimentationCreateResponse>;
  /**
   * Deletes the experimentation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configStoreName The name of the configuration store.
   * @param experimentationName The name of the experimentation.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    configStoreName: string,
    experimentationName: string,
    options?: ExperimentationDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<ExperimentationDeleteResponse>, ExperimentationDeleteResponse>
  >;
  /**
   * Deletes the experimentation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param configStoreName The name of the configuration store.
   * @param experimentationName The name of the experimentation.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    configStoreName: string,
    experimentationName: string,
    options?: ExperimentationDeleteOptionalParams,
  ): Promise<ExperimentationDeleteResponse>;
}
