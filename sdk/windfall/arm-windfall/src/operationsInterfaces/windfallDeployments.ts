/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  WindfallDeployment,
  WindfallDeploymentsListBySubscriptionOptionalParams,
  WindfallDeploymentsListByResourceGroupOptionalParams,
  WindfallDeploymentsGetOptionalParams,
  WindfallDeploymentsGetResponse,
  WindfallDeploymentsCreateOrUpdateOptionalParams,
  WindfallDeploymentsCreateOrUpdateResponse,
  WindfallDeploymentsDeleteOptionalParams,
  WindfallDeploymentUpdate,
  WindfallDeploymentsUpdateOptionalParams,
  WindfallDeploymentsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a WindfallDeployments. */
export interface WindfallDeployments {
  /**
   * List WindfallDeployment resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: WindfallDeploymentsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<WindfallDeployment>;
  /**
   * List WindfallDeployment resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: WindfallDeploymentsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<WindfallDeployment>;
  /**
   * Get a WindfallDeployment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param windfallDeploymentName Unique identifier for this Windfall deployment
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    windfallDeploymentName: string,
    options?: WindfallDeploymentsGetOptionalParams
  ): Promise<WindfallDeploymentsGetResponse>;
  /**
   * Create a WindfallDeployment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param windfallDeploymentName Unique identifier for this Windfall deployment
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    windfallDeploymentName: string,
    resource: WindfallDeployment,
    options?: WindfallDeploymentsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<WindfallDeploymentsCreateOrUpdateResponse>,
      WindfallDeploymentsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a WindfallDeployment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param windfallDeploymentName Unique identifier for this Windfall deployment
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    windfallDeploymentName: string,
    resource: WindfallDeployment,
    options?: WindfallDeploymentsCreateOrUpdateOptionalParams
  ): Promise<WindfallDeploymentsCreateOrUpdateResponse>;
  /**
   * Delete a WindfallDeployment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param windfallDeploymentName Unique identifier for this Windfall deployment
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    windfallDeploymentName: string,
    options?: WindfallDeploymentsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete a WindfallDeployment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param windfallDeploymentName Unique identifier for this Windfall deployment
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    windfallDeploymentName: string,
    options?: WindfallDeploymentsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Update a WindfallDeployment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param windfallDeploymentName Unique identifier for this Windfall deployment
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    windfallDeploymentName: string,
    properties: WindfallDeploymentUpdate,
    options?: WindfallDeploymentsUpdateOptionalParams
  ): Promise<WindfallDeploymentsUpdateResponse>;
}
