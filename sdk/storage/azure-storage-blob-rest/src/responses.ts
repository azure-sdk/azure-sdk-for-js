// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import type { RawHttpHeaders } from "@azure/core-rest-pipeline";
import type { HttpResponse } from "@azure-rest/core-client";
import type {
  StorageErrorOutput,
  StorageServicePropertiesOutput,
  StorageServiceStatsOutput,
  ListContainersSegmentResponseOutput,
  UserDelegationKeyOutput,
  SkuNameOutput,
  AccountKindOutput,
  FilterBlobSegmentOutput,
  LeaseStateOutput,
  LeaseStatusOutput,
  PublicAccessTypeOutput,
  SignedIdentifierOutput,
  ListBlobsFlatSegmentResponseOutput,
  ListBlobsHierarchySegmentResponseOutput,
  BlobTypeOutput,
  CopyStatusOutput,
  BlobImmutabilityPolicyModeOutput,
  AccessTierOutput,
  ArchiveStatusOutput,
  RehydratePriorityOutput,
  BlobTagsOutput,
  PageListOutput,
  BlockListOutput,
} from "./outputModels.js";

/** The request has been accepted for processing, but processing has not yet completed. */
export interface SetProperties202Response extends HttpResponse {
  status: "202";
}

export interface SetPropertiesDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface GetProperties200Headers {
  /** Content-Type header */
  "content-type": "application/xml";
}

/** The request has succeeded. */
export interface GetProperties200Response extends HttpResponse {
  status: "200";
  body: StorageServicePropertiesOutput;
  headers: RawHttpHeaders & GetProperties200Headers;
}

export interface GetPropertiesDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface GetStatistics200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Content-Type header */
  "content-type": "application/xml";
}

/** The request has succeeded. */
export interface GetStatistics200Response extends HttpResponse {
  status: "200";
  body: StorageServiceStatsOutput;
  headers: RawHttpHeaders & GetStatistics200Headers;
}

export interface GetStatisticsDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ListContainersSegment200Headers {
  /** Content-Type header */
  "content-type": "application/xml";
}

/** The request has succeeded. */
export interface ListContainersSegment200Response extends HttpResponse {
  status: "200";
  body: ListContainersSegmentResponseOutput;
  headers: RawHttpHeaders & ListContainersSegment200Headers;
}

export interface ListContainersSegmentDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface GetUserDelegationKey200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Content-Type header */
  "content-type": "application/xml";
}

/** The request has succeeded. */
export interface GetUserDelegationKey200Response extends HttpResponse {
  status: "200";
  body: UserDelegationKeyOutput;
  headers: RawHttpHeaders & GetUserDelegationKey200Headers;
}

export interface GetUserDelegationKeyDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface GetAccountInfo200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Identifies the sku name of the account */
  "x-ms-sku-name"?: SkuNameOutput;
  /** Identifies the account kind */
  "x-ms-account-kind"?: AccountKindOutput;
  /** Version 2019-07-07 and newer. Indicates if the account has a hierarchical namespace enabled. */
  "x-ms-is-hns-enabled"?: boolean;
}

/** The request has succeeded. */
export interface GetAccountInfo200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & GetAccountInfo200Headers;
}

export interface GetAccountInfoDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface SubmitBatch200Headers {
  /** An opaque, globally-unique, server-generated string identifier for the request. */
  "x-ms-request-id"?: string;
  /** An opaque, globally-unique, client-generated string identifier for the request. */
  "x-ms-client-request-id"?: string;
  /** The media type of the body of the response. For batch requests, this is multipart/mixed; boundary=batchresponse_GUID */
  "content-type": "multipart/mixed";
}

/** The request has succeeded. */
export interface SubmitBatch200Response extends HttpResponse {
  status: "200";
  body: string;
  headers: RawHttpHeaders & SubmitBatch200Headers;
}

export interface SubmitBatchDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface FilterBlobs200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Content-Type header */
  "content-type": "application/xml";
}

/** The request has succeeded. */
export interface FilterBlobs200Response extends HttpResponse {
  status: "200";
  body: FilterBlobSegmentOutput;
  headers: RawHttpHeaders & FilterBlobs200Headers;
}

export interface FilterBlobsDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerCreate201Response extends HttpResponse {
  status: "201";
}

export interface ContainerCreateDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerGetProperties200Headers {
  /** The metadata headers. */
  "x-ms-meta"?: Record<string, string>;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. */
  "x-ms-lease-duration"?: number;
  /** Lease state of the blob. */
  "x-ms-lease-state"?: LeaseStateOutput;
  /** The lease status of the blob. */
  "x-ms-lease-status"?: LeaseStatusOutput;
  /** The public access setting for the container. */
  "x-ms-blob-public-access"?: PublicAccessTypeOutput;
  /** Indicates whether the container has an immutability policy set on it. */
  "x-ms-has-immutability-policy"?: boolean;
  /** Indicates whether the container has a legal hold. */
  "x-ms-has-legal-hold"?: boolean;
  /** The default encryption scope for the container. */
  "x-ms-default-encryption-scope"?: string;
  /** If a blob has a lease and the lease is of infinite duration then the value of this header is set to true, otherwise it is set to false. */
  "x-ms-deny-encryption-scope-override"?: boolean;
  /** Indicates whether version level worm is enabled on a container */
  "x-ms-immutable-storage-with-versioning-enabled"?: boolean;
}

/** The request has succeeded. */
export interface ContainerGetProperties200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerGetProperties200Headers;
}

export interface ContainerGetPropertiesDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

/** The request has been accepted for processing, but processing has not yet completed. */
export interface ContainerDelete202Response extends HttpResponse {
  status: "202";
}

export interface ContainerDeleteDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerSetMetadata200Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded. */
export interface ContainerSetMetadata200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerSetMetadata200Headers;
}

export interface ContainerSetMetadataDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerGetAccessPolicy200Headers {
  /** The public access setting for the container. */
  "x-ms-blob-public-access"?: PublicAccessTypeOutput;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Content-Type header */
  "content-type": "application/xml";
}

/** The request has succeeded. */
export interface ContainerGetAccessPolicy200Response extends HttpResponse {
  status: "200";
  body: Array<SignedIdentifierOutput>;
  headers: RawHttpHeaders & ContainerGetAccessPolicy200Headers;
}

export interface ContainerGetAccessPolicyDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerSetAccessPolicy200Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded. */
export interface ContainerSetAccessPolicy200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerSetAccessPolicy200Headers;
}

export interface ContainerSetAccessPolicyDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerRestore201Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerRestore201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerRestore201Headers;
}

export interface ContainerRestoreDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerRename200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded. */
export interface ContainerRename200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerRename200Headers;
}

export interface ContainerRenameDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerSubmitBatch202Headers {
  /** An opaque, globally-unique, server-generated string identifier for the request. */
  "x-ms-request-id"?: string;
  /** Required. The value of this header must be multipart/mixed with a batch boundary. Example header value: multipart/mixed; boundary=batch_<GUID> */
  "content-type": "multipart/mixed";
}

/** The request has been accepted for processing, but processing has not yet completed. */
export interface ContainerSubmitBatch202Response extends HttpResponse {
  status: "202";
  body: string;
  headers: RawHttpHeaders & ContainerSubmitBatch202Headers;
}

export interface ContainerSubmitBatchDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerFilterBlobs200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Content-Type header */
  "content-type": "application/xml";
}

/** The request has succeeded. */
export interface ContainerFilterBlobs200Response extends HttpResponse {
  status: "200";
  body: FilterBlobSegmentOutput;
  headers: RawHttpHeaders & ContainerFilterBlobs200Headers;
}

export interface ContainerFilterBlobsDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerAcquireLease201Headers {
  /** Uniquely identifies a blobs' lease */
  "x-ms-lease-id"?: string;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerAcquireLease201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerAcquireLease201Headers;
}

export interface ContainerAcquireLeaseDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerReleaseLease200Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded. */
export interface ContainerReleaseLease200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerReleaseLease200Headers;
}

export interface ContainerReleaseLeaseDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerRenewLease200Headers {
  /** Uniquely identifies a blobs' lease */
  "x-ms-lease-id"?: string;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded. */
export interface ContainerRenewLease200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerRenewLease200Headers;
}

export interface ContainerRenewLeaseDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBreakLease202Headers {
  /** Approximate time remaining in the lease period, in seconds. */
  "x-ms-lease-time"?: number;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** Uniquely identifies a blobs' lease */
  "x-ms-lease-id"?: string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has been accepted for processing, but processing has not yet completed. */
export interface ContainerBreakLease202Response extends HttpResponse {
  status: "202";
  headers: RawHttpHeaders & ContainerBreakLease202Headers;
}

export interface ContainerBreakLeaseDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerChangeLease200Headers {
  /** Uniquely identifies a blobs' lease */
  "x-ms-lease-id"?: string;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded. */
export interface ContainerChangeLease200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerChangeLease200Headers;
}

export interface ContainerChangeLeaseDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerListBlobFlatSegment200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Content-Type header */
  "content-type": "application/xml";
}

/** The request has succeeded. */
export interface ContainerListBlobFlatSegment200Response extends HttpResponse {
  status: "200";
  body: ListBlobsFlatSegmentResponseOutput;
  headers: RawHttpHeaders & ContainerListBlobFlatSegment200Headers;
}

export interface ContainerListBlobFlatSegmentDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerListBlobHierarchySegment200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Content-Type header */
  "content-type": "application/xml";
}

/** The request has succeeded. */
export interface ContainerListBlobHierarchySegment200Response extends HttpResponse {
  status: "200";
  body: ListBlobsHierarchySegmentResponseOutput;
  headers: RawHttpHeaders & ContainerListBlobHierarchySegment200Headers;
}

export interface ContainerListBlobHierarchySegmentDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerGetAccountInfo200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Identifies the sku name of the account */
  "x-ms-sku-name"?: SkuNameOutput;
  /** Identifies the account kind */
  "x-ms-account-kind"?: AccountKindOutput;
  /** Version 2019-07-07 and newer. Indicates if the account has a hierarchical namespace enabled. */
  "x-ms-is-hns-enabled"?: boolean;
}

/** The request has succeeded. */
export interface ContainerGetAccountInfo200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerGetAccountInfo200Headers;
}

export interface ContainerGetAccountInfoDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobDownload200Headers {
  /** The metadata headers. */
  "x-ms-meta"?: Record<string, string>;
  /** Optional. Only valid when Object Replication is enabled for the storage container and on the source blob of the replication. When retrieving this header, it will return the header with the policy id and rule id (e.g. x-ms-or-policyid_ruleid), and the value will be the status of the replication (e.g. complete, failed). */
  "x-ms-or"?: Record<string, string>;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** Returns the date and time the blob was created. */
  "x-ms-creation-time": string;
  /** Optional. Only valid when Object Replication is enabled for the storage container and on the destination blob of the replication. */
  "x-ms-or-policy-id"?: string;
  /** The number of bytes present in the response body. */
  "content-length": number;
  /** Indicates the range of bytes returned in the event that the client requested a subset of the blob by setting the 'Range' request header. */
  "content-range": string;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This header returns the value that was specified for the Content-Encoding request header */
  "content-encoding": string;
  /** This header is returned if it was previously specified for the blob. */
  "cache-control": string;
  /** This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified. */
  "content-disposition": string;
  /** This header returns the value that was specified for the Content-Language request header. */
  "content-language": string;
  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs. */
  "x-ms-blob-sequence-number": number;
  /** The type of the blob. */
  "x-ms-blob-type"?: BlobTypeOutput;
  /** Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */
  "x-ms-copy-completion-time"?: string;
  /** Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */
  "x-ms-copy-status-description"?: string;
  /** String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy. */
  "x-ms-copy-id"?: string;
  /** Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */
  "x-ms-copy-progress"?: string;
  /** State of the copy operation identified by x-ms-copy-id. */
  "x-ms-copy-status": CopyStatusOutput;
  /** URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */
  "x-ms-copy-source"?: string;
  /** Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. */
  "x-ms-lease-duration"?: number;
  /** Lease state of the blob. */
  "x-ms-lease-state"?: LeaseStateOutput;
  /** The lease status of the blob. */
  "x-ms-lease-status"?: LeaseStatusOutput;
  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */
  "x-ms-version-id": string;
  /** The value of this header indicates whether version of this blob is a current version, see also x-ms-version-id header. */
  "x-ms-is-current-version"?: boolean;
  /** The number of committed blocks present in the blob. This header is returned only for append blobs. */
  "x-ms-blob-committed-block-count"?: number;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-blob-content-md5"?: string;
  /** The number of tags associated with the blob */
  "x-ms-tag-count"?: number;
  /** If this blob has been sealed */
  "x-ms-blob-sealed"?: boolean;
  /** UTC date/time value generated by the service that indicates the time at which the blob was last read or written to */
  "x-ms-last-access-time"?: string;
  /** UTC date/time value generated by the service that indicates the time at which the blob immutability policy will expire. */
  "x-ms-immutability-policy-until-date"?: string;
  /** Indicates the immutability policy mode of the blob. */
  "x-ms-immutability-policy-mode": BlobImmutabilityPolicyModeOutput;
  /** Specifies the legal hold status to set on the blob. */
  "x-ms-legal-hold": boolean;
  /** The media type of the body of the response. */
  "content-type": "application/octet-stream";
}

/** The request has succeeded. */
export interface ContainerBlobDownload200Response extends HttpResponse {
  status: "200";
  /** Value may contain any sequence of octets */
  body: Uint8Array;
  headers: RawHttpHeaders & ContainerBlobDownload200Headers;
}

export interface ContainerBlobDownload206Headers {
  /** The metadata headers. */
  "x-ms-meta"?: Record<string, string>;
  /** Optional. Only valid when Object Replication is enabled for the storage container and on the source blob of the replication. When retrieving this header, it will return the header with the policy id and rule id (e.g. x-ms-or-policyid_ruleid), and the value will be the status of the replication (e.g. complete, failed). */
  "x-ms-or"?: Record<string, string>;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** Returns the date and time the blob was created. */
  "x-ms-creation-time": string;
  /** Optional. Only valid when Object Replication is enabled for the storage container and on the destination blob of the replication. */
  "x-ms-or-policy-id"?: string;
  /** The number of bytes present in the response body. */
  "content-length": number;
  /** Indicates the range of bytes returned in the event that the client requested a subset of the blob by setting the 'Range' request header. */
  "content-range": string;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This header returns the value that was specified for the Content-Encoding request header */
  "content-encoding": string;
  /** This header is returned if it was previously specified for the blob. */
  "cache-control": string;
  /** This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified. */
  "content-disposition": string;
  /** This header returns the value that was specified for the Content-Language request header. */
  "content-language": string;
  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs. */
  "x-ms-blob-sequence-number": number;
  /** The type of the blob. */
  "x-ms-blob-type"?: BlobTypeOutput;
  /** This response header is returned so that the client can check for the integrity of the copied content. */
  "x-ms-content-crc64": string;
  /** Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */
  "x-ms-copy-completion-time"?: string;
  /** Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */
  "x-ms-copy-status-description"?: string;
  /** String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy. */
  "x-ms-copy-id"?: string;
  /** Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */
  "x-ms-copy-progress"?: string;
  /** State of the copy operation identified by x-ms-copy-id. */
  "x-ms-copy-status": CopyStatusOutput;
  /** URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */
  "x-ms-copy-source"?: string;
  /** Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. */
  "x-ms-lease-duration"?: number;
  /** Lease state of the blob. */
  "x-ms-lease-state"?: LeaseStateOutput;
  /** The lease status of the blob. */
  "x-ms-lease-status"?: LeaseStatusOutput;
  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */
  "x-ms-version-id": string;
  /** The value of this header indicates whether version of this blob is a current version, see also x-ms-version-id header. */
  "x-ms-is-current-version"?: boolean;
  /** Indicates that the service supports requests for partial blob content. */
  "accept-ranges"?: string;
  /** The number of committed blocks present in the blob. This header is returned only for append blobs. */
  "x-ms-blob-committed-block-count"?: number;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-blob-content-md5"?: string;
  /** The number of tags associated with the blob */
  "x-ms-tag-count"?: number;
  /** If this blob has been sealed */
  "x-ms-blob-sealed"?: boolean;
  /** UTC date/time value generated by the service that indicates the time at which the blob was last read or written to */
  "x-ms-last-access-time"?: string;
  /** UTC date/time value generated by the service that indicates the time at which the blob immutability policy will expire. */
  "x-ms-immutability-policy-until-date"?: string;
  /** Indicates the immutability policy mode of the blob. */
  "x-ms-immutability-policy-mode": BlobImmutabilityPolicyModeOutput;
  /** Specifies the legal hold status to set on the blob. */
  "x-ms-legal-hold": boolean;
  /** The media type of the body of the response. */
  "content-type": "application/octet-stream";
}

/** Successful */
export interface ContainerBlobDownload206Response extends HttpResponse {
  status: "206";
  /** Value may contain any sequence of octets */
  body: Uint8Array;
  headers: RawHttpHeaders & ContainerBlobDownload206Headers;
}

export interface ContainerBlobDownloadDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobGetProperties200Headers {
  /** The metadata headers. */
  "x-ms-meta"?: Record<string, string>;
  /** Optional. Only valid when Object Replication is enabled for the storage container and on the source blob of the replication. When retrieving this header, it will return the header with the policy id and rule id (e.g. x-ms-or-policyid_ruleid), and the value will be the status of the replication (e.g. complete, failed). */
  "x-ms-or"?: Record<string, string>;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** Returns the date and time the blob was created. */
  "x-ms-creation-time": string;
  /** Optional. Only valid when Object Replication is enabled for the storage container and on the destination blob of the replication. */
  "x-ms-or-policy-id"?: string;
  /** The type of the blob. */
  "x-ms-blob-type"?: BlobTypeOutput;
  /** Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */
  "x-ms-copy-completion-time"?: string;
  /** Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */
  "x-ms-copy-status-description"?: string;
  /** String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy. */
  "x-ms-copy-id"?: string;
  /** Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */
  "x-ms-copy-progress"?: string;
  /** State of the copy operation identified by x-ms-copy-id. */
  "x-ms-copy-status": CopyStatusOutput;
  /** URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */
  "x-ms-copy-source"?: string;
  /** Included if the blob is incremental copy blob. */
  "x-ms-incremental-copy"?: boolean;
  /** Included if the blob is incremental copy blob or incremental copy snapshot, if x-ms-copy-status is success. Snapshot time of the last successful incremental copy snapshot for this blob. */
  "x-ms-copy-destination-snapshot"?: string;
  /** Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. */
  "x-ms-lease-duration"?: number;
  /** Lease state of the blob. */
  "x-ms-lease-state"?: LeaseStateOutput;
  /** The lease status of the blob. */
  "x-ms-lease-status"?: LeaseStatusOutput;
  /** The number of bytes present in the response body. */
  "content-length": number;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This header returns the value that was specified for the Content-Encoding request header */
  "content-encoding": string;
  /** This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified. */
  "content-disposition": string;
  /** This header returns the value that was specified for the Content-Language request header. */
  "content-language": string;
  /** This header is returned if it was previously specified for the blob. */
  "cache-control": string;
  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs. */
  "x-ms-blob-sequence-number": number;
  /** The number of committed blocks present in the blob. This header is returned only for append blobs. */
  "x-ms-blob-committed-block-count"?: number;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
  /** The tier to be set on the blob. */
  "x-ms-access-tier"?: AccessTierOutput;
  /** For page blobs on a premium storage account only. If the access tier is not explicitly set on the blob, the tier is inferred based on its content length and this header will be returned with true value. */
  "x-ms-access-tier-inferred"?: boolean;
  /** For blob storage LRS accounts, valid values are rehydrate-pending-to-hot/rehydrate-pending-to-cool. If the blob is being rehydrated and is not complete then this header is returned indicating that rehydrate is pending and also tells the destination tier. */
  "x-ms-archive-status"?: ArchiveStatusOutput;
  /** The time the tier was changed on the object. This is only returned if the tier on the block blob was ever set. */
  "x-ms-access-tier-change-time"?: string;
  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */
  "x-ms-version-id": string;
  /** The value of this header indicates whether version of this blob is a current version, see also x-ms-version-id header. */
  "x-ms-is-current-version"?: boolean;
  /** The number of tags associated with the blob */
  "x-ms-tag-count"?: number;
  /** The time this blob will expire. */
  "x-ms-expiry-time"?: string;
  /** If this blob has been sealed */
  "x-ms-blob-sealed"?: boolean;
  /** If an object is in rehydrate pending state then this header is returned with priority of rehydrate. Valid values are High and Standard. */
  "x-ms-rehydrate-priority"?: RehydratePriorityOutput;
  /** UTC date/time value generated by the service that indicates the time at which the blob was last read or written to */
  "x-ms-last-access-time"?: string;
  /** UTC date/time value generated by the service that indicates the time at which the blob immutability policy will expire. */
  "x-ms-immutability-policy-until-date"?: string;
  /** Indicates the immutability policy mode of the blob. */
  "x-ms-immutability-policy-mode": BlobImmutabilityPolicyModeOutput;
  /** Specifies the legal hold status to set on the blob. */
  "x-ms-legal-hold": boolean;
}

/** The request has succeeded. */
export interface ContainerBlobGetProperties200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobGetProperties200Headers;
}

export interface ContainerBlobGetPropertiesDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

/** The request has been accepted for processing, but processing has not yet completed. */
export interface ContainerBlobDelete202Response extends HttpResponse {
  status: "202";
}

export interface ContainerBlobDeleteDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobUndelete200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded. */
export interface ContainerBlobUndelete200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobUndelete200Headers;
}

export interface ContainerBlobUndeleteDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobSetExpiry200Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded. */
export interface ContainerBlobSetExpiry200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobSetExpiry200Headers;
}

export interface ContainerBlobSetExpiryDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobSetHttpHeaders200Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs. */
  "x-ms-blob-sequence-number": number;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded. */
export interface ContainerBlobSetHttpHeaders200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobSetHttpHeaders200Headers;
}

export interface ContainerBlobSetHttpHeadersDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobSetImmutabilityPolicy200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** UTC date/time value generated by the service that indicates the time at which the blob immutability policy will expire. */
  "x-ms-immutability-policy-until-date"?: string;
  /** Indicates the immutability policy mode of the blob. */
  "x-ms-immutability-policy-mode": BlobImmutabilityPolicyModeOutput;
}

/** The request has succeeded. */
export interface ContainerBlobSetImmutabilityPolicy200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobSetImmutabilityPolicy200Headers;
}

export interface ContainerBlobSetImmutabilityPolicyDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobDeleteImmutabilityPolicy200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded. */
export interface ContainerBlobDeleteImmutabilityPolicy200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobDeleteImmutabilityPolicy200Headers;
}

export interface ContainerBlobDeleteImmutabilityPolicyDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobSetLegalHold200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Specifies the legal hold status to set on the blob. */
  "x-ms-legal-hold": boolean;
}

/** The request has succeeded. */
export interface ContainerBlobSetLegalHold200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobSetLegalHold200Headers;
}

export interface ContainerBlobSetLegalHoldDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobSetMetadata200Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */
  "x-ms-version-id": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
}

/** The request has succeeded. */
export interface ContainerBlobSetMetadata200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobSetMetadata200Headers;
}

export interface ContainerBlobSetMetadataDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobAcquireLease201Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Uniquely identifies a blobs' lease */
  "x-ms-lease-id"?: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobAcquireLease201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobAcquireLease201Headers;
}

export interface ContainerBlobAcquireLeaseDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobReleaseLease200Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded. */
export interface ContainerBlobReleaseLease200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobReleaseLease200Headers;
}

export interface ContainerBlobReleaseLeaseDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobRenewLease200Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Uniquely identifies a blobs' lease */
  "x-ms-lease-id"?: string;
}

/** The request has succeeded. */
export interface ContainerBlobRenewLease200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobRenewLease200Headers;
}

export interface ContainerBlobRenewLeaseDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobChangeLease200Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Uniquely identifies a blobs' lease */
  "x-ms-lease-id"?: string;
}

/** The request has succeeded. */
export interface ContainerBlobChangeLease200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobChangeLease200Headers;
}

export interface ContainerBlobChangeLeaseDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobBreakLease202Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Approximate time remaining in the lease period, in seconds. */
  "x-ms-lease-time"?: number;
}

/** The request has been accepted for processing, but processing has not yet completed. */
export interface ContainerBlobBreakLease202Response extends HttpResponse {
  status: "202";
  headers: RawHttpHeaders & ContainerBlobBreakLease202Headers;
}

export interface ContainerBlobBreakLeaseDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobCreateSnapshot201Headers {
  /** Uniquely identifies the snapshot and indicates the snapshot version. It may be used in subsequent requests to access the snapshot. */
  "x-ms-snapshot"?: string;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */
  "x-ms-version-id": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobCreateSnapshot201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobCreateSnapshot201Headers;
}

export interface ContainerBlobCreateSnapshotDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobStartCopyFromUrl202Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */
  "x-ms-version-id": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy. */
  "x-ms-copy-id"?: string;
  /** State of the copy operation identified by x-ms-copy-id. */
  "x-ms-copy-status": CopyStatusOutput;
}

/** The request has been accepted for processing, but processing has not yet completed. */
export interface ContainerBlobStartCopyFromUrl202Response extends HttpResponse {
  status: "202";
  headers: RawHttpHeaders & ContainerBlobStartCopyFromUrl202Headers;
}

export interface ContainerBlobStartCopyFromUrlDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobCopyFromUrl202Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */
  "x-ms-version-id": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy. */
  "x-ms-copy-id"?: string;
  /** State of the copy operation identified by x-ms-copy-id. */
  "x-ms-copy-status": CopyStatusOutput;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This response header is returned so that the client can check for the integrity of the copied content. */
  "x-ms-content-crc64": string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
}

/** The request has been accepted for processing, but processing has not yet completed. */
export interface ContainerBlobCopyFromUrl202Response extends HttpResponse {
  status: "202";
  headers: RawHttpHeaders & ContainerBlobCopyFromUrl202Headers;
}

export interface ContainerBlobCopyFromUrlDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobAbortCopyFromUrl204Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** There is no content to send for this request, but the headers may be useful. */
export interface ContainerBlobAbortCopyFromUrl204Response extends HttpResponse {
  status: "204";
  headers: RawHttpHeaders & ContainerBlobAbortCopyFromUrl204Headers;
}

export interface ContainerBlobAbortCopyFromUrlDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

/** The request has succeeded. */
export interface ContainerBlobSetTier200Response extends HttpResponse {
  status: "200";
}

/** The request has been accepted for processing, but processing has not yet completed. */
export interface ContainerBlobSetTier202Response extends HttpResponse {
  status: "202";
}

export interface ContainerBlobSetTierDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobGetAccountInfo200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Identifies the account kind */
  "x-ms-account-kind"?: AccountKindOutput;
  /** Identifies the sku name of the account */
  "x-ms-sku-name"?: SkuNameOutput;
  /** Version 2019-07-07 and newer. Indicates if the account has a hierarchical namespace enabled. */
  "x-ms-is-hns-enabled"?: boolean;
}

/** The request has succeeded. */
export interface ContainerBlobGetAccountInfo200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobGetAccountInfo200Headers;
}

export interface ContainerBlobGetAccountInfoDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobGetTags200Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Content-Type header */
  "content-type": "application/xml";
}

/** The request has succeeded. */
export interface ContainerBlobGetTags200Response extends HttpResponse {
  status: "200";
  body: BlobTagsOutput;
  headers: RawHttpHeaders & ContainerBlobGetTags200Headers;
}

export interface ContainerBlobGetTagsDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobSetTags204Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** There is no content to send for this request, but the headers may be useful. */
export interface ContainerBlobSetTags204Response extends HttpResponse {
  status: "204";
  headers: RawHttpHeaders & ContainerBlobSetTags204Headers;
}

export interface ContainerBlobSetTagsDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobPageBlobCreate201Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */
  "x-ms-version-id": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobPageBlobCreate201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobPageBlobCreate201Headers;
}

export interface ContainerBlobPageBlobCreateDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobPageBlobUploadPages201Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This response header is returned so that the client can check for the integrity of the copied content. */
  "x-ms-content-crc64": string;
  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs. */
  "x-ms-blob-sequence-number": number;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
  /** Indicates the response body contains a structured message and specifies the message schema version and properties. */
  "x-ms-structured-body"?: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobPageBlobUploadPages201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobPageBlobUploadPages201Headers;
}

export interface ContainerBlobPageBlobUploadPagesDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobPageBlobClearPages201Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This response header is returned so that the client can check for the integrity of the copied content. */
  "x-ms-content-crc64": string;
  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs. */
  "x-ms-blob-sequence-number": number;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobPageBlobClearPages201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobPageBlobClearPages201Headers;
}

export interface ContainerBlobPageBlobClearPagesDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobPageBlobUploadPagesFromUrl201Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This response header is returned so that the client can check for the integrity of the copied content. */
  "x-ms-content-crc64": string;
  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs. */
  "x-ms-blob-sequence-number": number;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobPageBlobUploadPagesFromUrl201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobPageBlobUploadPagesFromUrl201Headers;
}

export interface ContainerBlobPageBlobUploadPagesFromUrlDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobPageBlobGetPageRanges200Headers {
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** This header specifies the maximum size for the page blob, up to 1 TB. The page blob size must be aligned to a 512-byte boundary. */
  "x-ms-blob-content-length": number;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Content-Type header */
  "content-type": "application/xml";
}

/** The request has succeeded. */
export interface ContainerBlobPageBlobGetPageRanges200Response extends HttpResponse {
  status: "200";
  body: PageListOutput;
  headers: RawHttpHeaders & ContainerBlobPageBlobGetPageRanges200Headers;
}

export interface ContainerBlobPageBlobGetPageRangesDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobPageBlobGetPageRangesDiff200Headers {
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** This header specifies the maximum size for the page blob, up to 1 TB. The page blob size must be aligned to a 512-byte boundary. */
  "x-ms-blob-content-length": number;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** Content-Type header */
  "content-type": "application/xml";
}

/** The request has succeeded. */
export interface ContainerBlobPageBlobGetPageRangesDiff200Response extends HttpResponse {
  status: "200";
  body: PageListOutput;
  headers: RawHttpHeaders & ContainerBlobPageBlobGetPageRangesDiff200Headers;
}

export interface ContainerBlobPageBlobGetPageRangesDiffDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobPageBlobResize200Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs. */
  "x-ms-blob-sequence-number": number;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded. */
export interface ContainerBlobPageBlobResize200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobPageBlobResize200Headers;
}

export interface ContainerBlobPageBlobResizeDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobPageBlobUpdateSequenceNumber200Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs. */
  "x-ms-blob-sequence-number": number;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
}

/** The request has succeeded. */
export interface ContainerBlobPageBlobUpdateSequenceNumber200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobPageBlobUpdateSequenceNumber200Headers;
}

export interface ContainerBlobPageBlobUpdateSequenceNumberDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobPageBlobCopyIncremental202Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy. */
  "x-ms-copy-id"?: string;
  /** State of the copy operation identified by x-ms-copy-id. */
  "x-ms-copy-status": CopyStatusOutput;
}

/** The request has been accepted for processing, but processing has not yet completed. */
export interface ContainerBlobPageBlobCopyIncremental202Response extends HttpResponse {
  status: "202";
  headers: RawHttpHeaders & ContainerBlobPageBlobCopyIncremental202Headers;
}

export interface ContainerBlobPageBlobCopyIncrementalDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobAppendBlobCreate201Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */
  "x-ms-version-id": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobAppendBlobCreate201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobAppendBlobCreate201Headers;
}

export interface ContainerBlobAppendBlobCreateDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobAppendBlobAppendBlock201Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This response header is returned so that the client can check for the integrity of the copied content. */
  "x-ms-content-crc64": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** This response header is returned only for append operations. It returns the offset at which the block was committed, in bytes. */
  "x-ms-blob-append-offset"?: string;
  /** The number of committed blocks present in the blob. This header is returned only for append blobs. */
  "x-ms-blob-committed-block-count"?: number;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
  /** Indicates the response body contains a structured message and specifies the message schema version and properties. */
  "x-ms-structured-body"?: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobAppendBlobAppendBlock201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobAppendBlobAppendBlock201Headers;
}

export interface ContainerBlobAppendBlobAppendBlockDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobAppendBlobAppendBlockFromUrl201Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This response header is returned so that the client can check for the integrity of the copied content. */
  "x-ms-content-crc64": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** This response header is returned only for append operations. It returns the offset at which the block was committed, in bytes. */
  "x-ms-blob-append-offset"?: string;
  /** The number of committed blocks present in the blob. This header is returned only for append blobs. */
  "x-ms-blob-committed-block-count"?: number;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobAppendBlobAppendBlockFromUrl201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobAppendBlobAppendBlockFromUrl201Headers;
}

export interface ContainerBlobAppendBlobAppendBlockFromUrlDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobAppendBlobSeal200Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** If this blob has been sealed */
  "x-ms-blob-sealed"?: boolean;
}

/** The request has succeeded. */
export interface ContainerBlobAppendBlobSeal200Response extends HttpResponse {
  status: "200";
  headers: RawHttpHeaders & ContainerBlobAppendBlobSeal200Headers;
}

export interface ContainerBlobAppendBlobSealDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobBlockBlobUpload201Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */
  "x-ms-version-id": string;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobBlockBlobUpload201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobBlockBlobUpload201Headers;
}

export interface ContainerBlobBlockBlobUploadDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobBlockBlobPutBlobFromUrl201Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */
  "x-ms-version-id": string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobBlockBlobPutBlobFromUrl201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobBlockBlobPutBlobFromUrl201Headers;
}

export interface ContainerBlobBlockBlobPutBlobFromUrlDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobBlockBlobStageBlock201Headers {
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This response header is returned so that the client can check for the integrity of the copied content. */
  "x-ms-content-crc64": string;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobBlockBlobStageBlock201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobBlockBlobStageBlock201Headers;
}

export interface ContainerBlobBlockBlobStageBlockDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobBlockBlobStageBlockFromUrl201Headers {
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This response header is returned so that the client can check for the integrity of the copied content. */
  "x-ms-content-crc64": string;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobBlockBlobStageBlockFromUrl201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobBlockBlobStageBlockFromUrl201Headers;
}

export interface ContainerBlobBlockBlobStageBlockFromUrlDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobBlockBlobCommitBlockList201Headers {
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This response header is returned so that the client can check for the integrity of the copied content. */
  "x-ms-content-crc64": string;
  /** A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob. */
  "x-ms-version-id": string;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
}

/** The request has succeeded and a new resource has been created as a result. */
export interface ContainerBlobBlockBlobCommitBlockList201Response extends HttpResponse {
  status: "201";
  headers: RawHttpHeaders & ContainerBlobBlockBlobCommitBlockList201Headers;
}

export interface ContainerBlobBlockBlobCommitBlockListDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobBlockBlobGetBlockList200Headers {
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** This header specifies the maximum size for the page blob, up to 1 TB. The page blob size must be aligned to a 512-byte boundary. */
  "x-ms-blob-content-length": number;
  /** Content-Type header */
  "content-type": "application/xml";
}

/** The request has succeeded. */
export interface ContainerBlobBlockBlobGetBlockList200Response extends HttpResponse {
  status: "200";
  body: BlockListOutput;
  headers: RawHttpHeaders & ContainerBlobBlockBlobGetBlockList200Headers;
}

export interface ContainerBlobBlockBlobGetBlockListDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}

export interface ContainerBlobBlockBlobQuery200Headers {
  /** The metadata headers. */
  "x-ms-meta"?: Record<string, string>;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** The number of bytes present in the response body. */
  "content-length": number;
  /** Indicates the range of bytes returned in the event that the client requested a subset of the blob by setting the 'Range' request header. */
  "content-range": string;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This header returns the value that was specified for the Content-Encoding request header */
  "content-encoding": string;
  /** This header is returned if it was previously specified for the blob. */
  "cache-control": string;
  /** This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified. */
  "content-disposition": string;
  /** This header returns the value that was specified for the Content-Language request header. */
  "content-language": string;
  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs. */
  "x-ms-blob-sequence-number": number;
  /** The type of the blob. */
  "x-ms-blob-type"?: BlobTypeOutput;
  /** This response header is returned so that the client can check for the integrity of the copied content. */
  "x-ms-content-crc64": string;
  /** Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */
  "x-ms-copy-completion-time"?: string;
  /** Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */
  "x-ms-copy-status-description"?: string;
  /** String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy. */
  "x-ms-copy-id"?: string;
  /** Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */
  "x-ms-copy-progress"?: string;
  /** URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */
  "x-ms-copy-source"?: string;
  /** State of the copy operation identified by x-ms-copy-id. */
  "x-ms-copy-status": CopyStatusOutput;
  /** Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. */
  "x-ms-lease-duration"?: number;
  /** Lease state of the blob. */
  "x-ms-lease-state"?: LeaseStateOutput;
  /** The lease status of the blob. */
  "x-ms-lease-status"?: LeaseStatusOutput;
  /** Indicates that the service supports requests for partial blob content. */
  "accept-ranges"?: string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** The number of committed blocks present in the blob. This header is returned only for append blobs. */
  "x-ms-blob-committed-block-count"?: number;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-blob-content-md5"?: string;
  /** Content-Type header */
  "content-type": "application/octet-stream";
}

/** The request has succeeded. */
export interface ContainerBlobBlockBlobQuery200Response extends HttpResponse {
  status: "200";
  /** Value may contain any sequence of octets */
  body: Uint8Array;
  headers: RawHttpHeaders & ContainerBlobBlockBlobQuery200Headers;
}

export interface ContainerBlobBlockBlobQuery206Headers {
  /** The metadata headers. */
  "x-ms-meta"?: Record<string, string>;
  /** The date/time that the container was last modified. */
  "last-modified": string;
  /** The number of bytes present in the response body. */
  "content-length": number;
  /** Indicates the range of bytes returned in the event that the client requested a subset of the blob by setting the 'Range' request header. */
  "content-range": string;
  /** The ETag contains a value that you can use to perform operations conditionally. */
  etag: string;
  /** If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity. */
  "content-md5": string;
  /** This header returns the value that was specified for the Content-Encoding request header */
  "content-encoding": string;
  /** This header is returned if it was previously specified for the blob. */
  "cache-control": string;
  /** This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified. */
  "content-disposition": string;
  /** This header returns the value that was specified for the Content-Language request header. */
  "content-language": string;
  /** The current sequence number for a page blob. This header is not returned for block blobs or append blobs. */
  "x-ms-blob-sequence-number": number;
  /** The type of the blob. */
  "x-ms-blob-type"?: BlobTypeOutput;
  /** This response header is returned so that the client can check for the integrity of the copied content. */
  "x-ms-content-crc64": string;
  /** Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */
  "x-ms-copy-completion-time"?: string;
  /** Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */
  "x-ms-copy-status-description"?: string;
  /** String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy. */
  "x-ms-copy-id"?: string;
  /** Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List */
  "x-ms-copy-progress"?: string;
  /** URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List. */
  "x-ms-copy-source"?: string;
  /** State of the copy operation identified by x-ms-copy-id. */
  "x-ms-copy-status": CopyStatusOutput;
  /** Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. */
  "x-ms-lease-duration"?: number;
  /** Lease state of the blob. */
  "x-ms-lease-state"?: LeaseStateOutput;
  /** The lease status of the blob. */
  "x-ms-lease-status"?: LeaseStatusOutput;
  /** Indicates that the service supports requests for partial blob content. */
  "accept-ranges"?: string;
  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
  date: string;
  /** The number of committed blocks present in the blob. This header is returned only for append blobs. */
  "x-ms-blob-committed-block-count"?: number;
  /** The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. */
  "x-ms-request-server-encrypted"?: boolean;
  /** The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key. */
  "x-ms-encryption-key-sha256"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-encryption-scope"?: string;
  /** If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range */
  "x-ms-blob-content-md5"?: string;
  /** Content-Type header */
  "content-type": "application/octet-stream";
}

/** Successful */
export interface ContainerBlobBlockBlobQuery206Response extends HttpResponse {
  status: "206";
  /** Value may contain any sequence of octets */
  body: Uint8Array;
  headers: RawHttpHeaders & ContainerBlobBlockBlobQuery206Headers;
}

export interface ContainerBlobBlockBlobQueryDefaultResponse extends HttpResponse {
  status: string;
  body: StorageErrorOutput;
}
