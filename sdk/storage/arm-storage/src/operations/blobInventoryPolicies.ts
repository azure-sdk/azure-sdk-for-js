/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BlobInventoryPolicies } from "../operationsInterfaces/index.js";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
import { StorageManagementClient } from "../storageManagementClient.js";
import {
  BlobInventoryPoliciesListOptionalParams,
  BlobInventoryPoliciesListResponse,
  BlobInventoryPolicyName,
  BlobInventoryPoliciesGetOptionalParams,
  BlobInventoryPoliciesGetResponse,
  BlobInventoryPolicy,
  BlobInventoryPoliciesCreateOrUpdateOptionalParams,
  BlobInventoryPoliciesCreateOrUpdateResponse,
  BlobInventoryPoliciesDeleteOptionalParams,
} from "../models/index.js";

/** Class containing BlobInventoryPolicies operations. */
export class BlobInventoryPoliciesImpl implements BlobInventoryPolicies {
  private readonly client: StorageManagementClient;

  /**
   * Initialize a new instance of the class BlobInventoryPolicies class.
   * @param client Reference to the service client
   */
  constructor(client: StorageManagementClient) {
    this.client = client;
  }

  /**
   * Gets the blob inventory policy associated with the specified storage account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the storage account within the specified resource group. Storage
   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters
   *                    only.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: BlobInventoryPoliciesListOptionalParams,
  ): Promise<BlobInventoryPoliciesListResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, accountName, options },
      listOperationSpec,
    );
  }

  /**
   * Gets the blob inventory policy associated with the specified storage account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the storage account within the specified resource group. Storage
   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters
   *                    only.
   * @param blobInventoryPolicyName The name of the storage account blob inventory policy. It should
   *                                always be 'default'
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    blobInventoryPolicyName: BlobInventoryPolicyName,
    options?: BlobInventoryPoliciesGetOptionalParams,
  ): Promise<BlobInventoryPoliciesGetResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, accountName, blobInventoryPolicyName, options },
      getOperationSpec,
    );
  }

  /**
   * Sets the blob inventory policy to the specified storage account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the storage account within the specified resource group. Storage
   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters
   *                    only.
   * @param blobInventoryPolicyName The name of the storage account blob inventory policy. It should
   *                                always be 'default'
   * @param properties The blob inventory policy set to a storage account.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    accountName: string,
    blobInventoryPolicyName: BlobInventoryPolicyName,
    properties: BlobInventoryPolicy,
    options?: BlobInventoryPoliciesCreateOrUpdateOptionalParams,
  ): Promise<BlobInventoryPoliciesCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        blobInventoryPolicyName,
        properties,
        options,
      },
      createOrUpdateOperationSpec,
    );
  }

  /**
   * Deletes the blob inventory policy associated with the specified storage account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of the storage account within the specified resource group. Storage
   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters
   *                    only.
   * @param blobInventoryPolicyName The name of the storage account blob inventory policy. It should
   *                                always be 'default'
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    accountName: string,
    blobInventoryPolicyName: BlobInventoryPolicyName,
    options?: BlobInventoryPoliciesDeleteOptionalParams,
  ): Promise<void> {
    return this.client.sendOperationRequest(
      { resourceGroupName, accountName, blobInventoryPolicyName, options },
      deleteOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ListBlobInventoryPolicy,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName1,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
const getOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.BlobInventoryPolicy,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName1,
    Parameters.blobInventoryPolicyName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
const createOrUpdateOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.BlobInventoryPolicy,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  requestBody: Parameters.properties,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName1,
    Parameters.blobInventoryPolicyName,
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer,
};
const deleteOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}",
  httpMethod: "DELETE",
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName1,
    Parameters.blobInventoryPolicyName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
