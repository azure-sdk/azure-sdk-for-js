/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { StandbyPoolOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AzureMachineLearningServices } from "../azureMachineLearningServices";
import {
  StandbyPoolProperties,
  StandbyPoolCreateOptionalParams,
  StandbyPoolCreateOrUpdateOptionalParams,
  StandbyPoolDeleteOptionalParams,
  StandbyPoolDeleteResponse,
  StandbyPoolGetOptionalParams,
  StandbyPoolGetResponse,
  StandbyPoolListOptionalParams
} from "../models";

/** Class containing StandbyPoolOperations operations. */
export class StandbyPoolOperationsImpl implements StandbyPoolOperations {
  private readonly client: AzureMachineLearningServices;

  /**
   * Initialize a new instance of the class StandbyPoolOperations class.
   * @param client Reference to the service client
   */
  constructor(client: AzureMachineLearningServices) {
    this.client = client;
  }

  /**
   * Creates a standby pool associated with the workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Azure Machine Learning Workspace Name
   * @param standbyPoolName Name of Standby Pool
   * @param body The parameters for creating or updating the standby pool.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    workspaceName: string,
    standbyPoolName: string,
    body: StandbyPoolProperties,
    options?: StandbyPoolCreateOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      { resourceGroupName, workspaceName, standbyPoolName, body, options },
      createOperationSpec
    );
  }

  /**
   * Create or update a standby pool associated with the workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Azure Machine Learning Workspace Name
   * @param standbyPoolName Name of Standby Pool
   * @param body The parameters for creating or updating the standby pool.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    workspaceName: string,
    standbyPoolName: string,
    body: StandbyPoolProperties,
    options?: StandbyPoolCreateOrUpdateOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      { resourceGroupName, workspaceName, standbyPoolName, body, options },
      createOrUpdateOperationSpec
    );
  }

  /**
   * Delete a standby pool associated with the workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Azure Machine Learning Workspace Name
   * @param standbyPoolName Name of Standby Pool
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    workspaceName: string,
    standbyPoolName: string,
    options?: StandbyPoolDeleteOptionalParams
  ): Promise<StandbyPoolDeleteResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, workspaceName, standbyPoolName, options },
      deleteOperationSpec
    );
  }

  /**
   * Get a specific standby pool associated with the workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Azure Machine Learning Workspace Name
   * @param standbyPoolName Name of Standby Pool
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workspaceName: string,
    standbyPoolName: string,
    options?: StandbyPoolGetOptionalParams
  ): Promise<StandbyPoolGetResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, workspaceName, standbyPoolName, options },
      getOperationSpec
    );
  }

  /**
   * List all standby pools associated with the workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName Azure Machine Learning Workspace Name
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workspaceName: string,
    options?: StandbyPoolListOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      { resourceGroupName, workspaceName, options },
      listOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const createOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/standbypools/{standbyPoolName}",
  httpMethod: "PUT",
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.ErrorResponseAutoGenerated
    }
  },
  requestBody: Parameters.body49,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.standbyPoolName
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
const createOrUpdateOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/standbypools/{standbyPoolName}",
  httpMethod: "PATCH",
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.ErrorResponseAutoGenerated
    }
  },
  requestBody: Parameters.body49,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.standbyPoolName
  ],
  headerParameters: [
    Parameters.accept,
    Parameters.contentType,
    Parameters.ifMatch,
    Parameters.ifNoneMatch
  ],
  mediaType: "json",
  serializer
};
const deleteOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/standbypools/{standbyPoolName}",
  httpMethod: "DELETE",
  responses: {
    200: {
      bodyMapper: Mappers.StandbyPool
    },
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponseAutoGenerated
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.standbyPoolName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/standbypools/{standbyPoolName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.StandbyPool
    },
    404: {},
    default: {
      bodyMapper: Mappers.ErrorResponseAutoGenerated
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.standbyPoolName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const listOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/standbypools",
  httpMethod: "GET",
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.ErrorResponseAutoGenerated
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
