/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Maintenance,
  MaintenancesListOptionalParams,
  MaintenancesGetOptionalParams,
  MaintenancesGetResponse,
  MaintenancesInitiateChecksOptionalParams,
  MaintenancesInitiateChecksResponse,
  MaintenanceReschedule,
  MaintenancesRescheduleOptionalParams,
  MaintenancesRescheduleResponse,
  MaintenanceSchedule,
  MaintenancesScheduleOptionalParams,
  MaintenancesScheduleResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Maintenances. */
export interface Maintenances {
  /**
   * List Maintenance resources by subscription ID
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    privateCloudName: string,
    options?: MaintenancesListOptionalParams,
  ): PagedAsyncIterableIterator<Maintenance>;
  /**
   * Get a Maintenance
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param maintenanceName Name of the maintenance
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    privateCloudName: string,
    maintenanceName: string,
    options?: MaintenancesGetOptionalParams,
  ): Promise<MaintenancesGetResponse>;
  /**
   * Initiate maintenance readiness checks
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param maintenanceName Name of the maintenance
   * @param options The options parameters.
   */
  initiateChecks(
    resourceGroupName: string,
    privateCloudName: string,
    maintenanceName: string,
    options?: MaintenancesInitiateChecksOptionalParams,
  ): Promise<MaintenancesInitiateChecksResponse>;
  /**
   * Reschedule a maintenance
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param maintenanceName Name of the maintenance
   * @param body The content of the action request
   * @param options The options parameters.
   */
  reschedule(
    resourceGroupName: string,
    privateCloudName: string,
    maintenanceName: string,
    body: MaintenanceReschedule,
    options?: MaintenancesRescheduleOptionalParams,
  ): Promise<MaintenancesRescheduleResponse>;
  /**
   * Schedule a maintenance
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param maintenanceName Name of the maintenance
   * @param body The content of the action request
   * @param options The options parameters.
   */
  schedule(
    resourceGroupName: string,
    privateCloudName: string,
    maintenanceName: string,
    body: MaintenanceSchedule,
    options?: MaintenancesScheduleOptionalParams,
  ): Promise<MaintenancesScheduleResponse>;
}
