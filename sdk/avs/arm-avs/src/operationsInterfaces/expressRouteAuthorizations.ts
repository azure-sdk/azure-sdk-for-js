/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ExpressRouteAuthorization,
  ExpressRouteAuthorizationsListByPrivateCloudOptionalParams,
  ExpressRouteAuthorizationsGetOptionalParams,
  ExpressRouteAuthorizationsGetResponse,
  ExpressRouteAuthorizationsCreateOrUpdateOptionalParams,
  ExpressRouteAuthorizationsCreateOrUpdateResponse,
  ExpressRouteAuthorizationsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ExpressRouteAuthorizations. */
export interface ExpressRouteAuthorizations {
  /**
   * List ExpressRoute Circuit Authorizations in a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  listByPrivateCloud(
    resourceGroupName: string,
    privateCloudName: string,
    options?: ExpressRouteAuthorizationsListByPrivateCloudOptionalParams
  ): PagedAsyncIterableIterator<ExpressRouteAuthorization>;
  /**
   * Get an ExpressRoute Circuit Authorization by name in a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param authorizationName Name of the ExpressRoute Circuit Authorization in the private cloud
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    privateCloudName: string,
    authorizationName: string,
    options?: ExpressRouteAuthorizationsGetOptionalParams
  ): Promise<ExpressRouteAuthorizationsGetResponse>;
  /**
   * Create or update an ExpressRoute Circuit Authorization in a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param authorizationName Name of the ExpressRoute Circuit Authorization in the private cloud
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    privateCloudName: string,
    authorizationName: string,
    resource: ExpressRouteAuthorization,
    options?: ExpressRouteAuthorizationsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ExpressRouteAuthorizationsCreateOrUpdateResponse>,
      ExpressRouteAuthorizationsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update an ExpressRoute Circuit Authorization in a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param authorizationName Name of the ExpressRoute Circuit Authorization in the private cloud
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    authorizationName: string,
    resource: ExpressRouteAuthorization,
    options?: ExpressRouteAuthorizationsCreateOrUpdateOptionalParams
  ): Promise<ExpressRouteAuthorizationsCreateOrUpdateResponse>;
  /**
   * Delete an ExpressRoute Circuit Authorization in a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param authorizationName Name of the ExpressRoute Circuit Authorization in the private cloud
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    privateCloudName: string,
    authorizationName: string,
    options?: ExpressRouteAuthorizationsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete an ExpressRoute Circuit Authorization in a private cloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param authorizationName Name of the ExpressRoute Circuit Authorization in the private cloud
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    authorizationName: string,
    options?: ExpressRouteAuthorizationsDeleteOptionalParams
  ): Promise<void>;
}
