/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  PureStoragePolicy,
  PureStoragePoliciesListOptionalParams,
  PureStoragePoliciesGetOptionalParams,
  PureStoragePoliciesGetResponse,
  PureStoragePoliciesCreateOrUpdateOptionalParams,
  PureStoragePoliciesCreateOrUpdateResponse,
  PureStoragePoliciesDeleteOptionalParams,
  PureStoragePoliciesDeleteResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PureStoragePolicies. */
export interface PureStoragePolicies {
  /**
   * List PureStoragePolicy resources by PrivateCloud
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    privateCloudName: string,
    options?: PureStoragePoliciesListOptionalParams,
  ): PagedAsyncIterableIterator<PureStoragePolicy>;
  /**
   * Get a PureStoragePolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param storagePolicyName Name of the storage policy.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    privateCloudName: string,
    storagePolicyName: string,
    options?: PureStoragePoliciesGetOptionalParams,
  ): Promise<PureStoragePoliciesGetResponse>;
  /**
   * Create a PureStoragePolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param storagePolicyName Name of the storage policy.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    privateCloudName: string,
    storagePolicyName: string,
    resource: PureStoragePolicy,
    options?: PureStoragePoliciesCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<PureStoragePoliciesCreateOrUpdateResponse>,
      PureStoragePoliciesCreateOrUpdateResponse
    >
  >;
  /**
   * Create a PureStoragePolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param storagePolicyName Name of the storage policy.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    storagePolicyName: string,
    resource: PureStoragePolicy,
    options?: PureStoragePoliciesCreateOrUpdateOptionalParams,
  ): Promise<PureStoragePoliciesCreateOrUpdateResponse>;
  /**
   * Delete a PureStoragePolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param storagePolicyName Name of the storage policy.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    privateCloudName: string,
    storagePolicyName: string,
    options?: PureStoragePoliciesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<PureStoragePoliciesDeleteResponse>,
      PureStoragePoliciesDeleteResponse
    >
  >;
  /**
   * Delete a PureStoragePolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param storagePolicyName Name of the storage policy.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    privateCloudName: string,
    storagePolicyName: string,
    options?: PureStoragePoliciesDeleteOptionalParams,
  ): Promise<PureStoragePoliciesDeleteResponse>;
}
