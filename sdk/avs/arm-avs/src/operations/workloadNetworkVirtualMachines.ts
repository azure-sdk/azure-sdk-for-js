/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator, PageSettings } from "@azure/core-paging";
import { setContinuationToken } from "../pagingHelper";
import { WorkloadNetworkVirtualMachines } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AzureVMwareSolutionAPI } from "../azureVMwareSolutionAPI";
import {
  WorkloadNetworkVirtualMachine,
  WorkloadNetworkVirtualMachinesListByPrivateCloudNextOptionalParams,
  WorkloadNetworkVirtualMachinesListByPrivateCloudOptionalParams,
  WorkloadNetworkVirtualMachinesListByPrivateCloudResponse,
  WorkloadNetworkVirtualMachinesGetVirtualMachineOptionalParams,
  WorkloadNetworkVirtualMachinesGetVirtualMachineResponse,
  WorkloadNetworkVirtualMachinesListByPrivateCloudNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing WorkloadNetworkVirtualMachines operations. */
export class WorkloadNetworkVirtualMachinesImpl
  implements WorkloadNetworkVirtualMachines {
  private readonly client: AzureVMwareSolutionAPI;

  /**
   * Initialize a new instance of the class WorkloadNetworkVirtualMachines class.
   * @param client Reference to the service client
   */
  constructor(client: AzureVMwareSolutionAPI) {
    this.client = client;
  }

  /**
   * List of virtual machines in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  public listByPrivateCloud(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworkVirtualMachinesListByPrivateCloudOptionalParams
  ): PagedAsyncIterableIterator<WorkloadNetworkVirtualMachine> {
    const iter = this.listByPrivateCloudPagingAll(
      resourceGroupName,
      privateCloudName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.listByPrivateCloudPagingPage(
          resourceGroupName,
          privateCloudName,
          options,
          settings
        );
      }
    };
  }

  private async *listByPrivateCloudPagingPage(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworkVirtualMachinesListByPrivateCloudOptionalParams,
    settings?: PageSettings
  ): AsyncIterableIterator<WorkloadNetworkVirtualMachine[]> {
    let result: WorkloadNetworkVirtualMachinesListByPrivateCloudResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._listByPrivateCloud(
        resourceGroupName,
        privateCloudName,
        options
      );
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._listByPrivateCloudNext(
        resourceGroupName,
        privateCloudName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *listByPrivateCloudPagingAll(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworkVirtualMachinesListByPrivateCloudOptionalParams
  ): AsyncIterableIterator<WorkloadNetworkVirtualMachine> {
    for await (const page of this.listByPrivateCloudPagingPage(
      resourceGroupName,
      privateCloudName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * List of virtual machines in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param options The options parameters.
   */
  private _listByPrivateCloud(
    resourceGroupName: string,
    privateCloudName: string,
    options?: WorkloadNetworkVirtualMachinesListByPrivateCloudOptionalParams
  ): Promise<WorkloadNetworkVirtualMachinesListByPrivateCloudResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, privateCloudName, options },
      listByPrivateCloudOperationSpec
    );
  }

  /**
   * Get a virtual machine by id in a private cloud workload network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param virtualMachineId Virtual Machine identifier
   * @param options The options parameters.
   */
  getVirtualMachine(
    resourceGroupName: string,
    privateCloudName: string,
    virtualMachineId: string,
    options?: WorkloadNetworkVirtualMachinesGetVirtualMachineOptionalParams
  ): Promise<WorkloadNetworkVirtualMachinesGetVirtualMachineResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, privateCloudName, virtualMachineId, options },
      getVirtualMachineOperationSpec
    );
  }

  /**
   * ListByPrivateCloudNext
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param privateCloudName Name of the private cloud
   * @param nextLink The nextLink from the previous successful call to the ListByPrivateCloud method.
   * @param options The options parameters.
   */
  private _listByPrivateCloudNext(
    resourceGroupName: string,
    privateCloudName: string,
    nextLink: string,
    options?: WorkloadNetworkVirtualMachinesListByPrivateCloudNextOptionalParams
  ): Promise<WorkloadNetworkVirtualMachinesListByPrivateCloudNextResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, privateCloudName, nextLink, options },
      listByPrivateCloudNextOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listByPrivateCloudOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/virtualMachines",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkVirtualMachineListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId1,
    Parameters.resourceGroupName,
    Parameters.privateCloudName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getVirtualMachineOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/virtualMachines/{virtualMachineId}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkVirtualMachine
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId1,
    Parameters.resourceGroupName,
    Parameters.privateCloudName,
    Parameters.virtualMachineId
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const listByPrivateCloudNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.WorkloadNetworkVirtualMachineListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  urlParameters: [
    Parameters.$host,
    Parameters.nextLink,
    Parameters.subscriptionId1,
    Parameters.resourceGroupName,
    Parameters.privateCloudName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
