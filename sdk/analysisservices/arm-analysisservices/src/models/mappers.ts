/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const AnalysisServicesServerListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisServicesServerListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AnalysisServicesServer"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureResourceManagerResourceSku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceManagerResourceSku",
    modelProperties: {
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const Sku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "Enum",
          allowedValues: ["Free", "Basic", "Standard", "Premium", "Development"]
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AnalysisServicesServerUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisServicesServerUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      sku: {
        serializedName: "properties.sku",
        type: {
          name: "Composite",
          className: "AzureResourceManagerResourceSkuUpdate"
        }
      }
    }
  }
};

export const AzureResourceManagerResourceSkuUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceManagerResourceSkuUpdate",
    modelProperties: {
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const GatewayListStatusLive: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayListStatusLive",
    modelProperties: {
      status: {
        defaultValue: 0,
        isConstant: true,
        serializedName: "status",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SkuEnumerationForExistingResourceResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SkuEnumerationForExistingResourceResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SkuDetailsForExistingResource"
            }
          }
        }
      }
    }
  }
};

export const SkuDetailsForExistingResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SkuDetailsForExistingResource",
    modelProperties: {
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "AzureResourceManagerResourceSku"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureCoreFoundationsErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureCoreFoundationsErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "AzureCoreFoundationsError"
        }
      }
    }
  }
};

export const AzureCoreFoundationsError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureCoreFoundationsError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureCoreFoundationsError"
            }
          }
        }
      },
      innererror: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "AzureCoreFoundationsInnerError"
        }
      }
    }
  }
};

export const AzureCoreFoundationsInnerError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureCoreFoundationsInnerError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      innererror: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "AzureCoreFoundationsInnerError"
        }
      }
    }
  }
};

export const CheckServerNameAvailabilityParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CheckServerNameAvailabilityParameters",
    modelProperties: {
      name: {
        constraints: {
          Pattern: new RegExp("^[a-z][a-z0-9]*$"),
          MaxLength: 63,
          MinLength: 3
        },
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckServerNameAvailabilityResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CheckServerNameAvailabilityResult",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GatewayDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayDetails",
    modelProperties: {
      gatewayResourceId: {
        serializedName: "gatewayResourceId",
        type: {
          name: "String"
        }
      },
      gatewayObjectId: {
        serializedName: "gatewayObjectId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dmtsClusterUri: {
        serializedName: "dmtsClusterUri",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IPv4FirewallRule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPv4FirewallRule",
    modelProperties: {
      firewallRuleName: {
        serializedName: "firewallRuleName",
        type: {
          name: "String"
        }
      },
      rangeStart: {
        serializedName: "rangeStart",
        type: {
          name: "String"
        }
      },
      rangeEnd: {
        serializedName: "rangeEnd",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IPv4FirewallSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPv4FirewallSettings",
    modelProperties: {
      firewallRules: {
        serializedName: "firewallRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IPv4FirewallRule"
            }
          }
        }
      },
      enablePowerBIService: {
        serializedName: "enablePowerBIService",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const LogSpecifications: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogSpecifications",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      blobDuration: {
        serializedName: "blobDuration",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricDimensions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricDimensions",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricSpecifications: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricSpecifications",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayDescription: {
        serializedName: "displayDescription",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      aggregationType: {
        serializedName: "aggregationType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dimensions: {
        serializedName: "dimensions",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricDimensions"
            }
          }
        }
      }
    }
  }
};

export const OperationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationProperties",
    modelProperties: {
      serviceSpecification: {
        serializedName: "serviceSpecification",
        type: {
          name: "Composite",
          className: "OperationPropertiesServiceSpecification"
        }
      }
    }
  }
};

export const OperationPropertiesServiceSpecification: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationPropertiesServiceSpecification",
    modelProperties: {
      metricSpecifications: {
        serializedName: "metricSpecifications",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricSpecifications"
            }
          }
        }
      },
      logSpecifications: {
        serializedName: "logSpecifications",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogSpecifications"
            }
          }
        }
      }
    }
  }
};

export const OperationStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationStatus",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerAdministrators: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerAdministrators",
    modelProperties: {
      members: {
        serializedName: "members",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnalysisServicesServer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisServicesServer",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      state: {
        serializedName: "properties.state",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      serverFullName: {
        serializedName: "properties.serverFullName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "properties.sku",
        type: {
          name: "Composite",
          className: "AzureResourceManagerResourceSku"
        }
      }
    }
  }
};

export const AnalysisServicesServersCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisServicesServersCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AnalysisServicesServersUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisServicesServersUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnalysisServicesServersDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisServicesServersDeleteHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnalysisServicesServersResumeHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisServicesServersResumeHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnalysisServicesServersListSkusForExistingExceptionHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisServicesServersListSkusForExistingExceptionHeaders",
    modelProperties: {
      xMsErrorCode: {
        serializedName: "x-ms-error-code",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnalysisServicesServersSuspendHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisServicesServersSuspendHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};
