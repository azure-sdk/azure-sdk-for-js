/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response of a AnalysisServicesServer list operation. */
export interface AnalysisServicesServerListResult {
  /** The AnalysisServicesServer items on this page */
  value: AnalysisServicesServer[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The SKU (Stock Keeping Unit) assigned to this resource. */
export interface AzureResourceManagerResourceSku {
  /** The SKU (Stock Keeping Unit) assigned to this resource. */
  sku?: Sku;
}

/** The resource model definition representing SKU */
export interface Sku {
  /** The name of the SKU. Ex - P3. It is typically a letter+number code */
  name: string;
  /** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */
  tier?: SkuTier;
  /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */
  size?: string;
  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */
  family?: string;
  /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */
  capacity?: number;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The type used for update operations of the AnalysisServicesServer. */
export interface AnalysisServicesServerUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The SKU of the Analysis Services resource. */
  sku?: AzureResourceManagerResourceSkuUpdate;
}

/** The SKU (Stock Keeping Unit) assigned to this resource. */
export interface AzureResourceManagerResourceSkuUpdate {
  /** The SKU (Stock Keeping Unit) assigned to this resource. */
  sku?: Sku;
}

/** Status of gateway is live. */
export interface GatewayListStatusLive {
  /** Live message of list gateway. Status: 0 - Live */
  status?: 0;
}

/** An object that represents enumerating SKUs for existing resources. */
export interface SkuEnumerationForExistingResourceResult {
  /** The collection of available SKUs for existing resources. */
  value?: SkuDetailsForExistingResource[];
}

/** An object that represents SKU details for existing resources. */
export interface SkuDetailsForExistingResource {
  /** The SKU in SKU details for existing resources. */
  sku?: AzureResourceManagerResourceSku;
  /** The resource type. */
  resourceType?: string;
}

/** A response containing error details. */
export interface AzureCoreFoundationsErrorResponse {
  /** The error object. */
  error: AzureCoreFoundationsError;
}

/** The error object. */
export interface AzureCoreFoundationsError {
  /** One of a server-defined set of error codes. */
  code: string;
  /** A human-readable representation of the error. */
  message: string;
  /** The target of the error. */
  target?: string;
  /** An array of details about specific errors that led to this reported error. */
  details?: AzureCoreFoundationsError[];
  /** An object containing more specific information than the current object about the error. */
  innererror?: AzureCoreFoundationsInnerError;
}

/** An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses. */
export interface AzureCoreFoundationsInnerError {
  /** One of a server-defined set of error codes. */
  code?: string;
  /** Inner error. */
  innererror?: AzureCoreFoundationsInnerError;
}

/** Details of server name request body. */
export interface CheckServerNameAvailabilityParameters {
  /** Name for checking availability. */
  name?: string;
  /** The resource type of azure analysis services. */
  type?: string;
}

/** The checking result of server name availability. */
export interface CheckServerNameAvailabilityResult {
  /** Indicator of available of the server name. */
  nameAvailable?: boolean;
  /** The reason of unavailability. */
  reason?: string;
  /** The detailed message of the request unavailability. */
  message?: string;
}

/** The gateway details. */
export interface GatewayDetails {
  /** Gateway resource to be associated with the server. */
  gatewayResourceId?: string;
  /**
   * Gateway object id from in the DMTS cluster for the gateway resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly gatewayObjectId?: string;
  /**
   * Uri of the DMTS cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dmtsClusterUri?: string;
}

/** The detail of firewall rule. */
export interface IPv4FirewallRule {
  /** The rule name. */
  firewallRuleName?: string;
  /** The start range of IPv4. */
  rangeStart?: string;
  /** The end range of IPv4. */
  rangeEnd?: string;
}

/** An array of firewall rules. */
export interface IPv4FirewallSettings {
  /** An array of firewall rules. */
  firewallRules?: IPv4FirewallRule[];
  /** The indicator of enabling PBI service. */
  enablePowerBIService?: boolean;
}

/** The log metric specification for exposing performance metrics to shoebox. */
export interface LogSpecifications {
  /**
   * The name of metric.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The displayed name of log.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The blob duration for the log.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly blobDuration?: string;
}

/** Metric dimension. */
export interface MetricDimensions {
  /**
   * Dimension name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Dimension display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
}

/** Available operation metric specification for exposing performance metrics to shoebox. */
export interface MetricSpecifications {
  /**
   * The name of metric.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The displayed name of metric.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
  /**
   * The displayed description of metric.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayDescription?: string;
  /**
   * The unit of the metric.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly unit?: string;
  /**
   * The aggregation type of metric.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly aggregationType?: string;
  /**
   * The dimensions of metric.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dimensions?: MetricDimensions[];
}

/** Additional properties to expose performance metrics to shoebox. */
export interface OperationProperties {
  /** Performance metrics to shoebox. */
  serviceSpecification?: OperationPropertiesServiceSpecification;
}

/** Performance metrics to shoebox. */
export interface OperationPropertiesServiceSpecification {
  /**
   * The metric specifications.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly metricSpecifications?: MetricSpecifications[];
  /**
   * The log specifications.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly logSpecifications?: LogSpecifications[];
}

/** The status of operation. */
export interface OperationStatus {
  /** The operation Id. */
  id?: string;
  /** The operation name. */
  name?: string;
  /** The start time of the operation. */
  startTime?: string;
  /** The end time of the operation. */
  endTime?: string;
  /** The status of the operation. */
  status?: string;
}

/** An array of administrator user identities. */
export interface ServerAdministrators {
  /** An array of administrator user identities. */
  members?: string[];
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** Represents an instance of an Analysis Services resource. */
export interface AnalysisServicesServer extends TrackedResource {
  /**
   * The current state of Analysis Services resource. The state is to indicate more states outside of resource provisioning.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: State;
  /**
   * The current deployment state of Analysis Services resource. The provisioningState is to indicate states for resource provisioning.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The full name of the Analysis Services resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serverFullName?: string;
  /** The SKU of the Analysis Services resource. */
  sku?: AzureResourceManagerResourceSku;
}

/** Defines headers for AnalysisServicesServers_create operation. */
export interface AnalysisServicesServersCreateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for AnalysisServicesServers_update operation. */
export interface AnalysisServicesServersUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for AnalysisServicesServers_delete operation. */
export interface AnalysisServicesServersDeleteHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for AnalysisServicesServers_resume operation. */
export interface AnalysisServicesServersResumeHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for AnalysisServicesServers_listSkusForExisting operation. */
export interface AnalysisServicesServersListSkusForExistingExceptionHeaders {
  /** String error code indicating what went wrong. */
  xMsErrorCode?: string;
}

/** Defines headers for AnalysisServicesServers_suspend operation. */
export interface AnalysisServicesServersSuspendHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link State} that the service accepts. */
export enum KnownState {
  /** Deleting */
  Deleting = "Deleting",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Paused */
  Paused = "Paused",
  /** Suspended */
  Suspended = "Suspended",
  /** Provisioning */
  Provisioning = "Provisioning",
  /** Updating */
  Updating = "Updating",
  /** Suspending */
  Suspending = "Suspending",
  /** Pausing */
  Pausing = "Pausing",
  /** Resuming */
  Resuming = "Resuming",
  /** Preparing */
  Preparing = "Preparing",
  /** Scaling */
  Scaling = "Scaling"
}

/**
 * Defines values for State. \
 * {@link KnownState} can be used interchangeably with State,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Paused** \
 * **Suspended** \
 * **Provisioning** \
 * **Updating** \
 * **Suspending** \
 * **Pausing** \
 * **Resuming** \
 * **Preparing** \
 * **Scaling**
 */
export type State = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Deleting */
  Deleting = "Deleting",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Paused */
  Paused = "Paused",
  /** Suspended */
  Suspended = "Suspended",
  /** Provisioning */
  Provisioning = "Provisioning",
  /** Updating */
  Updating = "Updating",
  /** Suspending */
  Suspending = "Suspending",
  /** Pausing */
  Pausing = "Pausing",
  /** Resuming */
  Resuming = "Resuming",
  /** Preparing */
  Preparing = "Preparing",
  /** Scaling */
  Scaling = "Scaling"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Paused** \
 * **Suspended** \
 * **Provisioning** \
 * **Updating** \
 * **Suspending** \
 * **Pausing** \
 * **Resuming** \
 * **Preparing** \
 * **Scaling**
 */
export type ProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link Versions} that the service accepts. */
export enum KnownVersions {
  /** V20170801 */
  V20170801 = "2017-08-01"
}

/**
 * Defines values for Versions. \
 * {@link KnownVersions} can be used interchangeably with Versions,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **2017-08-01**
 */
export type Versions = string;
/** Defines values for SkuTier. */
export type SkuTier = "Free" | "Basic" | "Standard" | "Premium" | "Development";
/** Defines values for ConnectionMode. */
export type ConnectionMode = "All" | "ReadOnly";

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface AnalysisServicesServersListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type AnalysisServicesServersListByResourceGroupResponse = AnalysisServicesServerListResult;

/** Optional parameters. */
export interface AnalysisServicesServersGetDetailsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getDetails operation. */
export type AnalysisServicesServersGetDetailsResponse = AnalysisServicesServer;

/** Optional parameters. */
export interface AnalysisServicesServersCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type AnalysisServicesServersCreateResponse = AnalysisServicesServer;

/** Optional parameters. */
export interface AnalysisServicesServersUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type AnalysisServicesServersUpdateResponse = AnalysisServicesServer;

/** Optional parameters. */
export interface AnalysisServicesServersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AnalysisServicesServersDissociateGatewayOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the dissociateGateway operation. */
export type AnalysisServicesServersDissociateGatewayResponse = Record<
  string,
  unknown
>;

/** Optional parameters. */
export interface AnalysisServicesServersListGatewayStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listGatewayStatus operation. */
export type AnalysisServicesServersListGatewayStatusResponse = GatewayListStatusLive;

/** Optional parameters. */
export interface AnalysisServicesServersResumeOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the resume operation. */
export type AnalysisServicesServersResumeResponse = Record<string, unknown>;

/** Optional parameters. */
export interface AnalysisServicesServersListSkusForExistingOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSkusForExisting operation. */
export type AnalysisServicesServersListSkusForExistingResponse = SkuEnumerationForExistingResourceResult;

/** Optional parameters. */
export interface AnalysisServicesServersSuspendOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the suspend operation. */
export type AnalysisServicesServersSuspendResponse = Record<string, unknown>;

/** Optional parameters. */
export interface AnalysisServicesServersListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type AnalysisServicesServersListByResourceGroupNextResponse = AnalysisServicesServerListResult;

/** Optional parameters. */
export interface AzureAnalysisServicesOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
