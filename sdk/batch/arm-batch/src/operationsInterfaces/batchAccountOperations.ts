/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  BatchAccount,
  BatchAccountListOptionalParams,
  BatchAccountListByResourceGroupOptionalParams,
  DetectorResponse,
  BatchAccountListDetectorsOptionalParams,
  OutboundEnvironmentEndpoint,
  BatchAccountListOutboundNetworkDependenciesEndpointsOptionalParams,
  BatchAccountSynchronizeAutoStorageKeysOptionalParams,
  BatchAccountRegenerateKeyParameters,
  BatchAccountRegenerateKeyOptionalParams,
  BatchAccountRegenerateKeyResponse,
  BatchAccountGetKeysOptionalParams,
  BatchAccountGetKeysResponse,
  BatchAccountGetDetectorOptionalParams,
  BatchAccountGetDetectorResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a BatchAccountOperations. */
export interface BatchAccountOperations {
  /**
   * Gets information about the Batch accounts associated with the subscription.
   * @param options The options parameters.
   */
  list(
    options?: BatchAccountListOptionalParams,
  ): PagedAsyncIterableIterator<BatchAccount>;
  /**
   * Gets information about the Batch accounts associated with the specified resource group.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: BatchAccountListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<BatchAccount>;
  /**
   * Gets information about the detectors available for a given Batch account.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param options The options parameters.
   */
  listDetectors(
    resourceGroupName: string,
    accountName: string,
    options?: BatchAccountListDetectorsOptionalParams,
  ): PagedAsyncIterableIterator<DetectorResponse>;
  /**
   * Lists the endpoints that a Batch Compute Node under this Batch Account may call as part of Batch
   * service administration. If you are deploying a Pool inside of a virtual network that you specify,
   * you must make sure your network allows outbound access to these endpoints. Failure to allow access
   * to these endpoints may cause Batch to mark the affected nodes as unusable. For more information
   * about creating a pool inside of a virtual network, see
   * https://learn.microsoft.com/azure/batch/batch-virtual-network.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param options The options parameters.
   */
  listOutboundNetworkDependenciesEndpoints(
    resourceGroupName: string,
    accountName: string,
    options?: BatchAccountListOutboundNetworkDependenciesEndpointsOptionalParams,
  ): PagedAsyncIterableIterator<OutboundEnvironmentEndpoint>;
  /**
   * Synchronizes access keys for the auto-storage account configured for the specified Batch account,
   * only if storage key authentication is being used.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param options The options parameters.
   */
  synchronizeAutoStorageKeys(
    resourceGroupName: string,
    accountName: string,
    options?: BatchAccountSynchronizeAutoStorageKeysOptionalParams,
  ): Promise<void>;
  /**
   * This operation applies only to Batch accounts with allowedAuthenticationModes containing
   * 'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its allowedAuthenticationMode,
   * clients cannot use shared keys to authenticate, and must use another allowedAuthenticationModes
   * instead. In this case, regenerating the keys will fail.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param parameters The type of key to regenerate.
   * @param options The options parameters.
   */
  regenerateKey(
    resourceGroupName: string,
    accountName: string,
    parameters: BatchAccountRegenerateKeyParameters,
    options?: BatchAccountRegenerateKeyOptionalParams,
  ): Promise<BatchAccountRegenerateKeyResponse>;
  /**
   * This operation applies only to Batch accounts with allowedAuthenticationModes containing
   * 'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its allowedAuthenticationMode,
   * clients cannot use shared keys to authenticate, and must use another allowedAuthenticationModes
   * instead. In this case, getting the keys will fail.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param options The options parameters.
   */
  getKeys(
    resourceGroupName: string,
    accountName: string,
    options?: BatchAccountGetKeysOptionalParams,
  ): Promise<BatchAccountGetKeysResponse>;
  /**
   * Gets information about the given detector for a given Batch account.
   * @param resourceGroupName The name of the resource group that contains the Batch account.
   * @param accountName The name of the Batch account.
   * @param detectorId The name of the detector.
   * @param options The options parameters.
   */
  getDetector(
    resourceGroupName: string,
    accountName: string,
    detectorId: string,
    options?: BatchAccountGetDetectorOptionalParams,
  ): Promise<BatchAccountGetDetectorResponse>;
}
