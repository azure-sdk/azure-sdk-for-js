/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import {
  ApplicationImpl,
  PoolImpl,
  AccountImpl,
  JobImpl,
  CertificateOperationsImpl,
  FileImpl,
  JobScheduleImpl,
  TaskImpl,
  ComputeNodeOperationsImpl,
  ComputeNodeExtensionImpl
} from "./operations";
import {
  Application,
  Pool,
  Account,
  Job,
  CertificateOperations,
  File,
  JobSchedule,
  Task,
  ComputeNodeOperations,
  ComputeNodeExtension
} from "./operationsInterfaces";
import { BatchServiceClientOptionalParams } from "./models";

export class BatchServiceClient extends coreClient.ServiceClient {
  batchUrl: string;
  apiVersion: string;

  /**
   * Initializes a new instance of the BatchServiceClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param batchUrl The base URL for all Azure Batch service requests.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    batchUrl: string,
    options?: BatchServiceClientOptionalParams
  ) {
    if (credentials === undefined) {
      throw new Error("'credentials' cannot be null");
    }
    if (batchUrl === undefined) {
      throw new Error("'batchUrl' cannot be null");
    }

    // Initializing default values for options
    if (!options) {
      options = {};
    }
    const defaults: BatchServiceClientOptionalParams = {
      requestContentType: "application/json; charset=utf-8",
      credential: credentials
    };

    const packageDetails = `azsdk-js-batch/1.0.0-beta.1`;
    const userAgentPrefix =
      options.userAgentOptions && options.userAgentOptions.userAgentPrefix
        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`
        : `${packageDetails}`;

    if (!options.credentialScopes) {
      options.credentialScopes = ["https://management.azure.com/.default"];
    }
    const optionsWithDefaults = {
      ...defaults,
      ...options,
      userAgentOptions: {
        userAgentPrefix
      },
      baseUri: options.endpoint || "{batchUrl}"
    };
    super(optionsWithDefaults);
    // Parameter assignments
    this.batchUrl = batchUrl;

    // Assigning values to Constant parameters
    this.apiVersion = options.apiVersion || "2021-06-01.14.0";
    this.application = new ApplicationImpl(this);
    this.pool = new PoolImpl(this);
    this.account = new AccountImpl(this);
    this.job = new JobImpl(this);
    this.certificateOperations = new CertificateOperationsImpl(this);
    this.file = new FileImpl(this);
    this.jobSchedule = new JobScheduleImpl(this);
    this.task = new TaskImpl(this);
    this.computeNodeOperations = new ComputeNodeOperationsImpl(this);
    this.computeNodeExtension = new ComputeNodeExtensionImpl(this);
  }

  application: Application;
  pool: Pool;
  account: Account;
  job: Job;
  certificateOperations: CertificateOperations;
  file: File;
  jobSchedule: JobSchedule;
  task: Task;
  computeNodeOperations: ComputeNodeOperations;
  computeNodeExtension: ComputeNodeExtension;
}
