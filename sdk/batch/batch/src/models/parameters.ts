/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  PoolAddParameter as PoolAddParameterMapper,
  PoolPatchParameter as PoolPatchParameterMapper,
  PoolEnableAutoScaleParameter as PoolEnableAutoScaleParameterMapper,
  PoolEvaluateAutoScaleParameter as PoolEvaluateAutoScaleParameterMapper,
  PoolResizeParameter as PoolResizeParameterMapper,
  PoolUpdatePropertiesParameter as PoolUpdatePropertiesParameterMapper,
  NodeRemoveParameter as NodeRemoveParameterMapper,
  JobPatchParameter as JobPatchParameterMapper,
  JobUpdateParameter as JobUpdateParameterMapper,
  JobDisableParameter as JobDisableParameterMapper,
  JobTerminateParameter as JobTerminateParameterMapper,
  JobAddParameter as JobAddParameterMapper,
  CertificateAddParameter as CertificateAddParameterMapper,
  JobSchedulePatchParameter as JobSchedulePatchParameterMapper,
  JobScheduleUpdateParameter as JobScheduleUpdateParameterMapper,
  JobScheduleAddParameter as JobScheduleAddParameterMapper,
  TaskAddParameter as TaskAddParameterMapper,
  TaskAddCollectionParameter as TaskAddCollectionParameterMapper,
  TaskUpdateParameter as TaskUpdateParameterMapper,
  ComputeNodeUser as ComputeNodeUserMapper,
  NodeUpdateUserParameter as NodeUpdateUserParameterMapper,
  NodeRebootParameter as NodeRebootParameterMapper,
  NodeReimageParameter as NodeReimageParameterMapper,
  NodeDisableSchedulingParameter as NodeDisableSchedulingParameterMapper,
  UploadBatchServiceLogsConfiguration as UploadBatchServiceLogsConfigurationMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const batchUrl: OperationURLParameter = {
  parameterPath: "batchUrl",
  mapper: {
    serializedName: "batchUrl",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const maxResults: OperationQueryParameter = {
  parameterPath: ["options", "applicationListOptions", "maxResults"],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout: OperationQueryParameter = {
  parameterPath: ["options", "applicationListOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId: OperationParameter = {
  parameterPath: ["options", "applicationListOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId: OperationParameter = {
  parameterPath: ["options", "applicationListOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate: OperationParameter = {
  parameterPath: ["options", "applicationListOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2021-06-01.14.0",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const applicationId: OperationURLParameter = {
  parameterPath: "applicationId",
  mapper: {
    serializedName: "applicationId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const timeout1: OperationQueryParameter = {
  parameterPath: ["options", "applicationGetOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId1: OperationParameter = {
  parameterPath: ["options", "applicationGetOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId1: OperationParameter = {
  parameterPath: ["options", "applicationGetOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate1: OperationParameter = {
  parameterPath: ["options", "applicationGetOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const startTime: OperationQueryParameter = {
  parameterPath: ["options", "poolListUsageMetricsOptions", "startTime"],
  mapper: {
    serializedName: "starttime",
    type: {
      name: "DateTime"
    }
  }
};

export const endTime: OperationQueryParameter = {
  parameterPath: ["options", "poolListUsageMetricsOptions", "endTime"],
  mapper: {
    serializedName: "endtime",
    type: {
      name: "DateTime"
    }
  }
};

export const filter: OperationQueryParameter = {
  parameterPath: ["options", "poolListUsageMetricsOptions", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const maxResults1: OperationQueryParameter = {
  parameterPath: ["options", "poolListUsageMetricsOptions", "maxResults"],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout2: OperationQueryParameter = {
  parameterPath: ["options", "poolListUsageMetricsOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId2: OperationParameter = {
  parameterPath: ["options", "poolListUsageMetricsOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId2: OperationParameter = {
  parameterPath: [
    "options",
    "poolListUsageMetricsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate2: OperationParameter = {
  parameterPath: ["options", "poolListUsageMetricsOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout3: OperationQueryParameter = {
  parameterPath: ["options", "poolGetAllLifetimeStatisticsOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId3: OperationParameter = {
  parameterPath: [
    "options",
    "poolGetAllLifetimeStatisticsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId3: OperationParameter = {
  parameterPath: [
    "options",
    "poolGetAllLifetimeStatisticsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate3: OperationParameter = {
  parameterPath: ["options", "poolGetAllLifetimeStatisticsOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json; odata=minimalmetadata",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const pool: OperationParameter = {
  parameterPath: "pool",
  mapper: PoolAddParameterMapper
};

export const timeout4: OperationQueryParameter = {
  parameterPath: ["options", "poolAddOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId4: OperationParameter = {
  parameterPath: ["options", "poolAddOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId4: OperationParameter = {
  parameterPath: ["options", "poolAddOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate4: OperationParameter = {
  parameterPath: ["options", "poolAddOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const filter1: OperationQueryParameter = {
  parameterPath: ["options", "poolListOptions", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const select: OperationQueryParameter = {
  parameterPath: ["options", "poolListOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const expand: OperationQueryParameter = {
  parameterPath: ["options", "poolListOptions", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const maxResults2: OperationQueryParameter = {
  parameterPath: ["options", "poolListOptions", "maxResults"],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout5: OperationQueryParameter = {
  parameterPath: ["options", "poolListOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId5: OperationParameter = {
  parameterPath: ["options", "poolListOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId5: OperationParameter = {
  parameterPath: ["options", "poolListOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate5: OperationParameter = {
  parameterPath: ["options", "poolListOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const poolId: OperationURLParameter = {
  parameterPath: "poolId",
  mapper: {
    serializedName: "poolId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const timeout6: OperationQueryParameter = {
  parameterPath: ["options", "poolDeleteOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId6: OperationParameter = {
  parameterPath: ["options", "poolDeleteOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId6: OperationParameter = {
  parameterPath: ["options", "poolDeleteOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate6: OperationParameter = {
  parameterPath: ["options", "poolDeleteOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch: OperationParameter = {
  parameterPath: ["options", "poolDeleteOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch: OperationParameter = {
  parameterPath: ["options", "poolDeleteOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince: OperationParameter = {
  parameterPath: ["options", "poolDeleteOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince: OperationParameter = {
  parameterPath: ["options", "poolDeleteOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout7: OperationQueryParameter = {
  parameterPath: ["options", "poolExistsOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId7: OperationParameter = {
  parameterPath: ["options", "poolExistsOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId7: OperationParameter = {
  parameterPath: ["options", "poolExistsOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate7: OperationParameter = {
  parameterPath: ["options", "poolExistsOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch1: OperationParameter = {
  parameterPath: ["options", "poolExistsOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch1: OperationParameter = {
  parameterPath: ["options", "poolExistsOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince1: OperationParameter = {
  parameterPath: ["options", "poolExistsOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince1: OperationParameter = {
  parameterPath: ["options", "poolExistsOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const select1: OperationQueryParameter = {
  parameterPath: ["options", "poolGetOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const expand1: OperationQueryParameter = {
  parameterPath: ["options", "poolGetOptions", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const timeout8: OperationQueryParameter = {
  parameterPath: ["options", "poolGetOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId8: OperationParameter = {
  parameterPath: ["options", "poolGetOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId8: OperationParameter = {
  parameterPath: ["options", "poolGetOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate8: OperationParameter = {
  parameterPath: ["options", "poolGetOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch2: OperationParameter = {
  parameterPath: ["options", "poolGetOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch2: OperationParameter = {
  parameterPath: ["options", "poolGetOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince2: OperationParameter = {
  parameterPath: ["options", "poolGetOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince2: OperationParameter = {
  parameterPath: ["options", "poolGetOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const poolPatchParameter: OperationParameter = {
  parameterPath: "poolPatchParameter",
  mapper: PoolPatchParameterMapper
};

export const timeout9: OperationQueryParameter = {
  parameterPath: ["options", "poolPatchOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId9: OperationParameter = {
  parameterPath: ["options", "poolPatchOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId9: OperationParameter = {
  parameterPath: ["options", "poolPatchOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate9: OperationParameter = {
  parameterPath: ["options", "poolPatchOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch3: OperationParameter = {
  parameterPath: ["options", "poolPatchOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch3: OperationParameter = {
  parameterPath: ["options", "poolPatchOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince3: OperationParameter = {
  parameterPath: ["options", "poolPatchOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince3: OperationParameter = {
  parameterPath: ["options", "poolPatchOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout10: OperationQueryParameter = {
  parameterPath: ["options", "poolDisableAutoScaleOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId10: OperationParameter = {
  parameterPath: ["options", "poolDisableAutoScaleOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId10: OperationParameter = {
  parameterPath: [
    "options",
    "poolDisableAutoScaleOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate10: OperationParameter = {
  parameterPath: ["options", "poolDisableAutoScaleOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const poolEnableAutoScaleParameter: OperationParameter = {
  parameterPath: "poolEnableAutoScaleParameter",
  mapper: PoolEnableAutoScaleParameterMapper
};

export const timeout11: OperationQueryParameter = {
  parameterPath: ["options", "poolEnableAutoScaleOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId11: OperationParameter = {
  parameterPath: ["options", "poolEnableAutoScaleOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId11: OperationParameter = {
  parameterPath: [
    "options",
    "poolEnableAutoScaleOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate11: OperationParameter = {
  parameterPath: ["options", "poolEnableAutoScaleOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch4: OperationParameter = {
  parameterPath: ["options", "poolEnableAutoScaleOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch4: OperationParameter = {
  parameterPath: ["options", "poolEnableAutoScaleOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince4: OperationParameter = {
  parameterPath: ["options", "poolEnableAutoScaleOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince4: OperationParameter = {
  parameterPath: ["options", "poolEnableAutoScaleOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const poolEvaluateAutoScaleParameter: OperationParameter = {
  parameterPath: "poolEvaluateAutoScaleParameter",
  mapper: PoolEvaluateAutoScaleParameterMapper
};

export const timeout12: OperationQueryParameter = {
  parameterPath: ["options", "poolEvaluateAutoScaleOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId12: OperationParameter = {
  parameterPath: ["options", "poolEvaluateAutoScaleOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId12: OperationParameter = {
  parameterPath: [
    "options",
    "poolEvaluateAutoScaleOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate12: OperationParameter = {
  parameterPath: ["options", "poolEvaluateAutoScaleOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const poolResizeParameter: OperationParameter = {
  parameterPath: "poolResizeParameter",
  mapper: PoolResizeParameterMapper
};

export const timeout13: OperationQueryParameter = {
  parameterPath: ["options", "poolResizeOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId13: OperationParameter = {
  parameterPath: ["options", "poolResizeOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId13: OperationParameter = {
  parameterPath: ["options", "poolResizeOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate13: OperationParameter = {
  parameterPath: ["options", "poolResizeOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch5: OperationParameter = {
  parameterPath: ["options", "poolResizeOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch5: OperationParameter = {
  parameterPath: ["options", "poolResizeOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince5: OperationParameter = {
  parameterPath: ["options", "poolResizeOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince5: OperationParameter = {
  parameterPath: ["options", "poolResizeOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout14: OperationQueryParameter = {
  parameterPath: ["options", "poolStopResizeOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId14: OperationParameter = {
  parameterPath: ["options", "poolStopResizeOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId14: OperationParameter = {
  parameterPath: ["options", "poolStopResizeOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate14: OperationParameter = {
  parameterPath: ["options", "poolStopResizeOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch6: OperationParameter = {
  parameterPath: ["options", "poolStopResizeOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch6: OperationParameter = {
  parameterPath: ["options", "poolStopResizeOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince6: OperationParameter = {
  parameterPath: ["options", "poolStopResizeOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince6: OperationParameter = {
  parameterPath: ["options", "poolStopResizeOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const poolUpdatePropertiesParameter: OperationParameter = {
  parameterPath: "poolUpdatePropertiesParameter",
  mapper: PoolUpdatePropertiesParameterMapper
};

export const timeout15: OperationQueryParameter = {
  parameterPath: ["options", "poolUpdatePropertiesOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId15: OperationParameter = {
  parameterPath: ["options", "poolUpdatePropertiesOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId15: OperationParameter = {
  parameterPath: [
    "options",
    "poolUpdatePropertiesOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate15: OperationParameter = {
  parameterPath: ["options", "poolUpdatePropertiesOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const nodeRemoveParameter: OperationParameter = {
  parameterPath: "nodeRemoveParameter",
  mapper: NodeRemoveParameterMapper
};

export const timeout16: OperationQueryParameter = {
  parameterPath: ["options", "poolRemoveNodesOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId16: OperationParameter = {
  parameterPath: ["options", "poolRemoveNodesOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId16: OperationParameter = {
  parameterPath: ["options", "poolRemoveNodesOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate16: OperationParameter = {
  parameterPath: ["options", "poolRemoveNodesOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch7: OperationParameter = {
  parameterPath: ["options", "poolRemoveNodesOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch7: OperationParameter = {
  parameterPath: ["options", "poolRemoveNodesOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince7: OperationParameter = {
  parameterPath: ["options", "poolRemoveNodesOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince7: OperationParameter = {
  parameterPath: ["options", "poolRemoveNodesOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const filter2: OperationQueryParameter = {
  parameterPath: ["options", "accountListSupportedImagesOptions", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const maxResults3: OperationQueryParameter = {
  parameterPath: ["options", "accountListSupportedImagesOptions", "maxResults"],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout17: OperationQueryParameter = {
  parameterPath: ["options", "accountListSupportedImagesOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId17: OperationParameter = {
  parameterPath: [
    "options",
    "accountListSupportedImagesOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId17: OperationParameter = {
  parameterPath: [
    "options",
    "accountListSupportedImagesOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate17: OperationParameter = {
  parameterPath: ["options", "accountListSupportedImagesOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const filter3: OperationQueryParameter = {
  parameterPath: ["options", "accountListPoolNodeCountsOptions", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const maxResults4: OperationQueryParameter = {
  parameterPath: ["options", "accountListPoolNodeCountsOptions", "maxResults"],
  mapper: {
    defaultValue: 10,
    constraints: {
      InclusiveMaximum: 10,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout18: OperationQueryParameter = {
  parameterPath: ["options", "accountListPoolNodeCountsOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId18: OperationParameter = {
  parameterPath: [
    "options",
    "accountListPoolNodeCountsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId18: OperationParameter = {
  parameterPath: [
    "options",
    "accountListPoolNodeCountsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate18: OperationParameter = {
  parameterPath: ["options", "accountListPoolNodeCountsOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout19: OperationQueryParameter = {
  parameterPath: ["options", "jobGetAllLifetimeStatisticsOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId19: OperationParameter = {
  parameterPath: [
    "options",
    "jobGetAllLifetimeStatisticsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId19: OperationParameter = {
  parameterPath: [
    "options",
    "jobGetAllLifetimeStatisticsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate19: OperationParameter = {
  parameterPath: ["options", "jobGetAllLifetimeStatisticsOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const jobId: OperationURLParameter = {
  parameterPath: "jobId",
  mapper: {
    serializedName: "jobId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const timeout20: OperationQueryParameter = {
  parameterPath: ["options", "jobDeleteOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId20: OperationParameter = {
  parameterPath: ["options", "jobDeleteOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId20: OperationParameter = {
  parameterPath: ["options", "jobDeleteOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate20: OperationParameter = {
  parameterPath: ["options", "jobDeleteOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch8: OperationParameter = {
  parameterPath: ["options", "jobDeleteOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch8: OperationParameter = {
  parameterPath: ["options", "jobDeleteOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince8: OperationParameter = {
  parameterPath: ["options", "jobDeleteOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince8: OperationParameter = {
  parameterPath: ["options", "jobDeleteOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const select2: OperationQueryParameter = {
  parameterPath: ["options", "jobGetOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const expand2: OperationQueryParameter = {
  parameterPath: ["options", "jobGetOptions", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const timeout21: OperationQueryParameter = {
  parameterPath: ["options", "jobGetOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId21: OperationParameter = {
  parameterPath: ["options", "jobGetOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId21: OperationParameter = {
  parameterPath: ["options", "jobGetOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate21: OperationParameter = {
  parameterPath: ["options", "jobGetOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch9: OperationParameter = {
  parameterPath: ["options", "jobGetOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch9: OperationParameter = {
  parameterPath: ["options", "jobGetOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince9: OperationParameter = {
  parameterPath: ["options", "jobGetOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince9: OperationParameter = {
  parameterPath: ["options", "jobGetOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const jobPatchParameter: OperationParameter = {
  parameterPath: "jobPatchParameter",
  mapper: JobPatchParameterMapper
};

export const timeout22: OperationQueryParameter = {
  parameterPath: ["options", "jobPatchOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId22: OperationParameter = {
  parameterPath: ["options", "jobPatchOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId22: OperationParameter = {
  parameterPath: ["options", "jobPatchOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate22: OperationParameter = {
  parameterPath: ["options", "jobPatchOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch10: OperationParameter = {
  parameterPath: ["options", "jobPatchOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch10: OperationParameter = {
  parameterPath: ["options", "jobPatchOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince10: OperationParameter = {
  parameterPath: ["options", "jobPatchOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince10: OperationParameter = {
  parameterPath: ["options", "jobPatchOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const jobUpdateParameter: OperationParameter = {
  parameterPath: "jobUpdateParameter",
  mapper: JobUpdateParameterMapper
};

export const timeout23: OperationQueryParameter = {
  parameterPath: ["options", "jobUpdateOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId23: OperationParameter = {
  parameterPath: ["options", "jobUpdateOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId23: OperationParameter = {
  parameterPath: ["options", "jobUpdateOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate23: OperationParameter = {
  parameterPath: ["options", "jobUpdateOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch11: OperationParameter = {
  parameterPath: ["options", "jobUpdateOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch11: OperationParameter = {
  parameterPath: ["options", "jobUpdateOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince11: OperationParameter = {
  parameterPath: ["options", "jobUpdateOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince11: OperationParameter = {
  parameterPath: ["options", "jobUpdateOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const jobDisableParameter: OperationParameter = {
  parameterPath: "jobDisableParameter",
  mapper: JobDisableParameterMapper
};

export const timeout24: OperationQueryParameter = {
  parameterPath: ["options", "jobDisableOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId24: OperationParameter = {
  parameterPath: ["options", "jobDisableOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId24: OperationParameter = {
  parameterPath: ["options", "jobDisableOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate24: OperationParameter = {
  parameterPath: ["options", "jobDisableOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch12: OperationParameter = {
  parameterPath: ["options", "jobDisableOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch12: OperationParameter = {
  parameterPath: ["options", "jobDisableOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince12: OperationParameter = {
  parameterPath: ["options", "jobDisableOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince12: OperationParameter = {
  parameterPath: ["options", "jobDisableOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout25: OperationQueryParameter = {
  parameterPath: ["options", "jobEnableOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId25: OperationParameter = {
  parameterPath: ["options", "jobEnableOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId25: OperationParameter = {
  parameterPath: ["options", "jobEnableOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate25: OperationParameter = {
  parameterPath: ["options", "jobEnableOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch13: OperationParameter = {
  parameterPath: ["options", "jobEnableOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch13: OperationParameter = {
  parameterPath: ["options", "jobEnableOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince13: OperationParameter = {
  parameterPath: ["options", "jobEnableOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince13: OperationParameter = {
  parameterPath: ["options", "jobEnableOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const jobTerminateParameter: OperationParameter = {
  parameterPath: ["options", "jobTerminateParameter"],
  mapper: JobTerminateParameterMapper
};

export const timeout26: OperationQueryParameter = {
  parameterPath: ["options", "jobTerminateOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId26: OperationParameter = {
  parameterPath: ["options", "jobTerminateOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId26: OperationParameter = {
  parameterPath: ["options", "jobTerminateOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate26: OperationParameter = {
  parameterPath: ["options", "jobTerminateOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch14: OperationParameter = {
  parameterPath: ["options", "jobTerminateOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch14: OperationParameter = {
  parameterPath: ["options", "jobTerminateOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince14: OperationParameter = {
  parameterPath: ["options", "jobTerminateOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince14: OperationParameter = {
  parameterPath: ["options", "jobTerminateOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const job: OperationParameter = {
  parameterPath: "job",
  mapper: JobAddParameterMapper
};

export const timeout27: OperationQueryParameter = {
  parameterPath: ["options", "jobAddOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId27: OperationParameter = {
  parameterPath: ["options", "jobAddOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId27: OperationParameter = {
  parameterPath: ["options", "jobAddOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate27: OperationParameter = {
  parameterPath: ["options", "jobAddOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const filter4: OperationQueryParameter = {
  parameterPath: ["options", "jobListOptions", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const select3: OperationQueryParameter = {
  parameterPath: ["options", "jobListOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const expand3: OperationQueryParameter = {
  parameterPath: ["options", "jobListOptions", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const maxResults5: OperationQueryParameter = {
  parameterPath: ["options", "jobListOptions", "maxResults"],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout28: OperationQueryParameter = {
  parameterPath: ["options", "jobListOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId28: OperationParameter = {
  parameterPath: ["options", "jobListOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId28: OperationParameter = {
  parameterPath: ["options", "jobListOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate28: OperationParameter = {
  parameterPath: ["options", "jobListOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const jobScheduleId: OperationURLParameter = {
  parameterPath: "jobScheduleId",
  mapper: {
    serializedName: "jobScheduleId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const filter5: OperationQueryParameter = {
  parameterPath: ["options", "jobListFromJobScheduleOptions", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const select4: OperationQueryParameter = {
  parameterPath: ["options", "jobListFromJobScheduleOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const expand4: OperationQueryParameter = {
  parameterPath: ["options", "jobListFromJobScheduleOptions", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const maxResults6: OperationQueryParameter = {
  parameterPath: ["options", "jobListFromJobScheduleOptions", "maxResults"],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout29: OperationQueryParameter = {
  parameterPath: ["options", "jobListFromJobScheduleOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId29: OperationParameter = {
  parameterPath: [
    "options",
    "jobListFromJobScheduleOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId29: OperationParameter = {
  parameterPath: [
    "options",
    "jobListFromJobScheduleOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate29: OperationParameter = {
  parameterPath: ["options", "jobListFromJobScheduleOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const filter6: OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const select5: OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "select"
  ],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const maxResults7: OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "maxResults"
  ],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout30: OperationQueryParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "timeout"
  ],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId30: OperationParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId30: OperationParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate30: OperationParameter = {
  parameterPath: [
    "options",
    "jobListPreparationAndReleaseTaskStatusOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout31: OperationQueryParameter = {
  parameterPath: ["options", "jobGetTaskCountsOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId31: OperationParameter = {
  parameterPath: ["options", "jobGetTaskCountsOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId31: OperationParameter = {
  parameterPath: [
    "options",
    "jobGetTaskCountsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate31: OperationParameter = {
  parameterPath: ["options", "jobGetTaskCountsOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const certificate: OperationParameter = {
  parameterPath: "certificate",
  mapper: CertificateAddParameterMapper
};

export const timeout32: OperationQueryParameter = {
  parameterPath: ["options", "certificateAddOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId32: OperationParameter = {
  parameterPath: ["options", "certificateAddOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId32: OperationParameter = {
  parameterPath: ["options", "certificateAddOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate32: OperationParameter = {
  parameterPath: ["options", "certificateAddOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const filter7: OperationQueryParameter = {
  parameterPath: ["options", "certificateListOptions", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const select6: OperationQueryParameter = {
  parameterPath: ["options", "certificateListOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const maxResults8: OperationQueryParameter = {
  parameterPath: ["options", "certificateListOptions", "maxResults"],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout33: OperationQueryParameter = {
  parameterPath: ["options", "certificateListOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId33: OperationParameter = {
  parameterPath: ["options", "certificateListOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId33: OperationParameter = {
  parameterPath: ["options", "certificateListOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate33: OperationParameter = {
  parameterPath: ["options", "certificateListOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const thumbprintAlgorithm: OperationURLParameter = {
  parameterPath: "thumbprintAlgorithm",
  mapper: {
    serializedName: "thumbprintAlgorithm",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const thumbprint: OperationURLParameter = {
  parameterPath: "thumbprint",
  mapper: {
    serializedName: "thumbprint",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const timeout34: OperationQueryParameter = {
  parameterPath: ["options", "certificateCancelDeletionOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId34: OperationParameter = {
  parameterPath: [
    "options",
    "certificateCancelDeletionOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId34: OperationParameter = {
  parameterPath: [
    "options",
    "certificateCancelDeletionOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate34: OperationParameter = {
  parameterPath: ["options", "certificateCancelDeletionOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout35: OperationQueryParameter = {
  parameterPath: ["options", "certificateDeleteOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId35: OperationParameter = {
  parameterPath: ["options", "certificateDeleteOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId35: OperationParameter = {
  parameterPath: [
    "options",
    "certificateDeleteOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate35: OperationParameter = {
  parameterPath: ["options", "certificateDeleteOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const select7: OperationQueryParameter = {
  parameterPath: ["options", "certificateGetOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const timeout36: OperationQueryParameter = {
  parameterPath: ["options", "certificateGetOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId36: OperationParameter = {
  parameterPath: ["options", "certificateGetOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId36: OperationParameter = {
  parameterPath: ["options", "certificateGetOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate36: OperationParameter = {
  parameterPath: ["options", "certificateGetOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const taskId: OperationURLParameter = {
  parameterPath: "taskId",
  mapper: {
    serializedName: "taskId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const filePath: OperationURLParameter = {
  parameterPath: "filePath",
  mapper: {
    serializedName: "filePath",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const recursive: OperationQueryParameter = {
  parameterPath: ["options", "recursive"],
  mapper: {
    serializedName: "recursive",
    type: {
      name: "Boolean"
    }
  }
};

export const timeout37: OperationQueryParameter = {
  parameterPath: ["options", "fileDeleteFromTaskOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId37: OperationParameter = {
  parameterPath: ["options", "fileDeleteFromTaskOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId37: OperationParameter = {
  parameterPath: [
    "options",
    "fileDeleteFromTaskOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate37: OperationParameter = {
  parameterPath: ["options", "fileDeleteFromTaskOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const accept1: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json, application/octet-stream",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const timeout38: OperationQueryParameter = {
  parameterPath: ["options", "fileGetFromTaskOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId38: OperationParameter = {
  parameterPath: ["options", "fileGetFromTaskOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId38: OperationParameter = {
  parameterPath: ["options", "fileGetFromTaskOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate38: OperationParameter = {
  parameterPath: ["options", "fileGetFromTaskOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ocpRange: OperationParameter = {
  parameterPath: ["options", "fileGetFromTaskOptions", "ocpRange"],
  mapper: {
    serializedName: "ocp-range",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince15: OperationParameter = {
  parameterPath: ["options", "fileGetFromTaskOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince15: OperationParameter = {
  parameterPath: ["options", "fileGetFromTaskOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout39: OperationQueryParameter = {
  parameterPath: ["options", "fileGetPropertiesFromTaskOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId39: OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromTaskOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId39: OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromTaskOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate39: OperationParameter = {
  parameterPath: ["options", "fileGetPropertiesFromTaskOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifModifiedSince16: OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromTaskOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince16: OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromTaskOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const nodeId: OperationURLParameter = {
  parameterPath: "nodeId",
  mapper: {
    serializedName: "nodeId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const timeout40: OperationQueryParameter = {
  parameterPath: ["options", "fileDeleteFromComputeNodeOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId40: OperationParameter = {
  parameterPath: [
    "options",
    "fileDeleteFromComputeNodeOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId40: OperationParameter = {
  parameterPath: [
    "options",
    "fileDeleteFromComputeNodeOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate40: OperationParameter = {
  parameterPath: ["options", "fileDeleteFromComputeNodeOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout41: OperationQueryParameter = {
  parameterPath: ["options", "fileGetFromComputeNodeOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId41: OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromComputeNodeOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId41: OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromComputeNodeOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate41: OperationParameter = {
  parameterPath: ["options", "fileGetFromComputeNodeOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ocpRange1: OperationParameter = {
  parameterPath: ["options", "fileGetFromComputeNodeOptions", "ocpRange"],
  mapper: {
    serializedName: "ocp-range",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince17: OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromComputeNodeOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince17: OperationParameter = {
  parameterPath: [
    "options",
    "fileGetFromComputeNodeOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout42: OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromComputeNodeOptions",
    "timeout"
  ],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId42: OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromComputeNodeOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId42: OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromComputeNodeOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate42: OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromComputeNodeOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifModifiedSince18: OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromComputeNodeOptions",
    "ifModifiedSince"
  ],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince18: OperationParameter = {
  parameterPath: [
    "options",
    "fileGetPropertiesFromComputeNodeOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const filter8: OperationQueryParameter = {
  parameterPath: ["options", "fileListFromTaskOptions", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const maxResults9: OperationQueryParameter = {
  parameterPath: ["options", "fileListFromTaskOptions", "maxResults"],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout43: OperationQueryParameter = {
  parameterPath: ["options", "fileListFromTaskOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId43: OperationParameter = {
  parameterPath: ["options", "fileListFromTaskOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId43: OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromTaskOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate43: OperationParameter = {
  parameterPath: ["options", "fileListFromTaskOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const filter9: OperationQueryParameter = {
  parameterPath: ["options", "fileListFromComputeNodeOptions", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const maxResults10: OperationQueryParameter = {
  parameterPath: ["options", "fileListFromComputeNodeOptions", "maxResults"],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout44: OperationQueryParameter = {
  parameterPath: ["options", "fileListFromComputeNodeOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId44: OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromComputeNodeOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId44: OperationParameter = {
  parameterPath: [
    "options",
    "fileListFromComputeNodeOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate44: OperationParameter = {
  parameterPath: ["options", "fileListFromComputeNodeOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout45: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleExistsOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId45: OperationParameter = {
  parameterPath: ["options", "jobScheduleExistsOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId45: OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleExistsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate45: OperationParameter = {
  parameterPath: ["options", "jobScheduleExistsOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch15: OperationParameter = {
  parameterPath: ["options", "jobScheduleExistsOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch15: OperationParameter = {
  parameterPath: ["options", "jobScheduleExistsOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince19: OperationParameter = {
  parameterPath: ["options", "jobScheduleExistsOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince19: OperationParameter = {
  parameterPath: ["options", "jobScheduleExistsOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout46: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleDeleteOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId46: OperationParameter = {
  parameterPath: ["options", "jobScheduleDeleteOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId46: OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDeleteOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate46: OperationParameter = {
  parameterPath: ["options", "jobScheduleDeleteOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch16: OperationParameter = {
  parameterPath: ["options", "jobScheduleDeleteOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch16: OperationParameter = {
  parameterPath: ["options", "jobScheduleDeleteOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince20: OperationParameter = {
  parameterPath: ["options", "jobScheduleDeleteOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince20: OperationParameter = {
  parameterPath: ["options", "jobScheduleDeleteOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const select8: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleGetOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const expand5: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleGetOptions", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const timeout47: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleGetOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId47: OperationParameter = {
  parameterPath: ["options", "jobScheduleGetOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId47: OperationParameter = {
  parameterPath: ["options", "jobScheduleGetOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate47: OperationParameter = {
  parameterPath: ["options", "jobScheduleGetOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch17: OperationParameter = {
  parameterPath: ["options", "jobScheduleGetOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch17: OperationParameter = {
  parameterPath: ["options", "jobScheduleGetOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince21: OperationParameter = {
  parameterPath: ["options", "jobScheduleGetOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince21: OperationParameter = {
  parameterPath: ["options", "jobScheduleGetOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const jobSchedulePatchParameter: OperationParameter = {
  parameterPath: "jobSchedulePatchParameter",
  mapper: JobSchedulePatchParameterMapper
};

export const timeout48: OperationQueryParameter = {
  parameterPath: ["options", "jobSchedulePatchOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId48: OperationParameter = {
  parameterPath: ["options", "jobSchedulePatchOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId48: OperationParameter = {
  parameterPath: [
    "options",
    "jobSchedulePatchOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate48: OperationParameter = {
  parameterPath: ["options", "jobSchedulePatchOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch18: OperationParameter = {
  parameterPath: ["options", "jobSchedulePatchOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch18: OperationParameter = {
  parameterPath: ["options", "jobSchedulePatchOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince22: OperationParameter = {
  parameterPath: ["options", "jobSchedulePatchOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince22: OperationParameter = {
  parameterPath: ["options", "jobSchedulePatchOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const jobScheduleUpdateParameter: OperationParameter = {
  parameterPath: "jobScheduleUpdateParameter",
  mapper: JobScheduleUpdateParameterMapper
};

export const timeout49: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleUpdateOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId49: OperationParameter = {
  parameterPath: ["options", "jobScheduleUpdateOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId49: OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleUpdateOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate49: OperationParameter = {
  parameterPath: ["options", "jobScheduleUpdateOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch19: OperationParameter = {
  parameterPath: ["options", "jobScheduleUpdateOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch19: OperationParameter = {
  parameterPath: ["options", "jobScheduleUpdateOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince23: OperationParameter = {
  parameterPath: ["options", "jobScheduleUpdateOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince23: OperationParameter = {
  parameterPath: ["options", "jobScheduleUpdateOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout50: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleDisableOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId50: OperationParameter = {
  parameterPath: ["options", "jobScheduleDisableOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId50: OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleDisableOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate50: OperationParameter = {
  parameterPath: ["options", "jobScheduleDisableOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch20: OperationParameter = {
  parameterPath: ["options", "jobScheduleDisableOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch20: OperationParameter = {
  parameterPath: ["options", "jobScheduleDisableOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince24: OperationParameter = {
  parameterPath: ["options", "jobScheduleDisableOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince24: OperationParameter = {
  parameterPath: ["options", "jobScheduleDisableOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout51: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleEnableOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId51: OperationParameter = {
  parameterPath: ["options", "jobScheduleEnableOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId51: OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleEnableOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate51: OperationParameter = {
  parameterPath: ["options", "jobScheduleEnableOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch21: OperationParameter = {
  parameterPath: ["options", "jobScheduleEnableOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch21: OperationParameter = {
  parameterPath: ["options", "jobScheduleEnableOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince25: OperationParameter = {
  parameterPath: ["options", "jobScheduleEnableOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince25: OperationParameter = {
  parameterPath: ["options", "jobScheduleEnableOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout52: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleTerminateOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId52: OperationParameter = {
  parameterPath: ["options", "jobScheduleTerminateOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId52: OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleTerminateOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate52: OperationParameter = {
  parameterPath: ["options", "jobScheduleTerminateOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch22: OperationParameter = {
  parameterPath: ["options", "jobScheduleTerminateOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch22: OperationParameter = {
  parameterPath: ["options", "jobScheduleTerminateOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince26: OperationParameter = {
  parameterPath: ["options", "jobScheduleTerminateOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince26: OperationParameter = {
  parameterPath: [
    "options",
    "jobScheduleTerminateOptions",
    "ifUnmodifiedSince"
  ],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const cloudJobSchedule: OperationParameter = {
  parameterPath: "cloudJobSchedule",
  mapper: JobScheduleAddParameterMapper
};

export const timeout53: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleAddOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId53: OperationParameter = {
  parameterPath: ["options", "jobScheduleAddOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId53: OperationParameter = {
  parameterPath: ["options", "jobScheduleAddOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate53: OperationParameter = {
  parameterPath: ["options", "jobScheduleAddOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const filter10: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleListOptions", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const select9: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleListOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const expand6: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleListOptions", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const maxResults11: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleListOptions", "maxResults"],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout54: OperationQueryParameter = {
  parameterPath: ["options", "jobScheduleListOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId54: OperationParameter = {
  parameterPath: ["options", "jobScheduleListOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId54: OperationParameter = {
  parameterPath: ["options", "jobScheduleListOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate54: OperationParameter = {
  parameterPath: ["options", "jobScheduleListOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const task: OperationParameter = {
  parameterPath: "task",
  mapper: TaskAddParameterMapper
};

export const timeout55: OperationQueryParameter = {
  parameterPath: ["options", "taskAddOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId55: OperationParameter = {
  parameterPath: ["options", "taskAddOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId55: OperationParameter = {
  parameterPath: ["options", "taskAddOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate55: OperationParameter = {
  parameterPath: ["options", "taskAddOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const filter11: OperationQueryParameter = {
  parameterPath: ["options", "taskListOptions", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const select10: OperationQueryParameter = {
  parameterPath: ["options", "taskListOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const expand7: OperationQueryParameter = {
  parameterPath: ["options", "taskListOptions", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const maxResults12: OperationQueryParameter = {
  parameterPath: ["options", "taskListOptions", "maxResults"],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout56: OperationQueryParameter = {
  parameterPath: ["options", "taskListOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId56: OperationParameter = {
  parameterPath: ["options", "taskListOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId56: OperationParameter = {
  parameterPath: ["options", "taskListOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate56: OperationParameter = {
  parameterPath: ["options", "taskListOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const taskCollection: OperationParameter = {
  parameterPath: "taskCollection",
  mapper: TaskAddCollectionParameterMapper
};

export const timeout57: OperationQueryParameter = {
  parameterPath: ["options", "taskAddCollectionOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId57: OperationParameter = {
  parameterPath: ["options", "taskAddCollectionOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId57: OperationParameter = {
  parameterPath: [
    "options",
    "taskAddCollectionOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate57: OperationParameter = {
  parameterPath: ["options", "taskAddCollectionOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout58: OperationQueryParameter = {
  parameterPath: ["options", "taskDeleteOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId58: OperationParameter = {
  parameterPath: ["options", "taskDeleteOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId58: OperationParameter = {
  parameterPath: ["options", "taskDeleteOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate58: OperationParameter = {
  parameterPath: ["options", "taskDeleteOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch23: OperationParameter = {
  parameterPath: ["options", "taskDeleteOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch23: OperationParameter = {
  parameterPath: ["options", "taskDeleteOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince27: OperationParameter = {
  parameterPath: ["options", "taskDeleteOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince27: OperationParameter = {
  parameterPath: ["options", "taskDeleteOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const select11: OperationQueryParameter = {
  parameterPath: ["options", "taskGetOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const expand8: OperationQueryParameter = {
  parameterPath: ["options", "taskGetOptions", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const timeout59: OperationQueryParameter = {
  parameterPath: ["options", "taskGetOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId59: OperationParameter = {
  parameterPath: ["options", "taskGetOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId59: OperationParameter = {
  parameterPath: ["options", "taskGetOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate59: OperationParameter = {
  parameterPath: ["options", "taskGetOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch24: OperationParameter = {
  parameterPath: ["options", "taskGetOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch24: OperationParameter = {
  parameterPath: ["options", "taskGetOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince28: OperationParameter = {
  parameterPath: ["options", "taskGetOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince28: OperationParameter = {
  parameterPath: ["options", "taskGetOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const taskUpdateParameter: OperationParameter = {
  parameterPath: "taskUpdateParameter",
  mapper: TaskUpdateParameterMapper
};

export const timeout60: OperationQueryParameter = {
  parameterPath: ["options", "taskUpdateOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId60: OperationParameter = {
  parameterPath: ["options", "taskUpdateOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId60: OperationParameter = {
  parameterPath: ["options", "taskUpdateOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate60: OperationParameter = {
  parameterPath: ["options", "taskUpdateOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch25: OperationParameter = {
  parameterPath: ["options", "taskUpdateOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch25: OperationParameter = {
  parameterPath: ["options", "taskUpdateOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince29: OperationParameter = {
  parameterPath: ["options", "taskUpdateOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince29: OperationParameter = {
  parameterPath: ["options", "taskUpdateOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const select12: OperationQueryParameter = {
  parameterPath: ["options", "taskListSubtasksOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const timeout61: OperationQueryParameter = {
  parameterPath: ["options", "taskListSubtasksOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId61: OperationParameter = {
  parameterPath: ["options", "taskListSubtasksOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId61: OperationParameter = {
  parameterPath: [
    "options",
    "taskListSubtasksOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate61: OperationParameter = {
  parameterPath: ["options", "taskListSubtasksOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout62: OperationQueryParameter = {
  parameterPath: ["options", "taskTerminateOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId62: OperationParameter = {
  parameterPath: ["options", "taskTerminateOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId62: OperationParameter = {
  parameterPath: ["options", "taskTerminateOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate62: OperationParameter = {
  parameterPath: ["options", "taskTerminateOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch26: OperationParameter = {
  parameterPath: ["options", "taskTerminateOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch26: OperationParameter = {
  parameterPath: ["options", "taskTerminateOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince30: OperationParameter = {
  parameterPath: ["options", "taskTerminateOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince30: OperationParameter = {
  parameterPath: ["options", "taskTerminateOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout63: OperationQueryParameter = {
  parameterPath: ["options", "taskReactivateOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId63: OperationParameter = {
  parameterPath: ["options", "taskReactivateOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId63: OperationParameter = {
  parameterPath: ["options", "taskReactivateOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate63: OperationParameter = {
  parameterPath: ["options", "taskReactivateOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifMatch27: OperationParameter = {
  parameterPath: ["options", "taskReactivateOptions", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};

export const ifNoneMatch27: OperationParameter = {
  parameterPath: ["options", "taskReactivateOptions", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String"
    }
  }
};

export const ifModifiedSince31: OperationParameter = {
  parameterPath: ["options", "taskReactivateOptions", "ifModifiedSince"],
  mapper: {
    serializedName: "If-Modified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const ifUnmodifiedSince31: OperationParameter = {
  parameterPath: ["options", "taskReactivateOptions", "ifUnmodifiedSince"],
  mapper: {
    serializedName: "If-Unmodified-Since",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const user: OperationParameter = {
  parameterPath: "user",
  mapper: ComputeNodeUserMapper
};

export const timeout64: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeAddUserOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId64: OperationParameter = {
  parameterPath: ["options", "computeNodeAddUserOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId64: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeAddUserOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate64: OperationParameter = {
  parameterPath: ["options", "computeNodeAddUserOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const userName: OperationURLParameter = {
  parameterPath: "userName",
  mapper: {
    serializedName: "userName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const timeout65: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeDeleteUserOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId65: OperationParameter = {
  parameterPath: ["options", "computeNodeDeleteUserOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId65: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeDeleteUserOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate65: OperationParameter = {
  parameterPath: ["options", "computeNodeDeleteUserOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const nodeUpdateUserParameter: OperationParameter = {
  parameterPath: "nodeUpdateUserParameter",
  mapper: NodeUpdateUserParameterMapper
};

export const timeout66: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeUpdateUserOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId66: OperationParameter = {
  parameterPath: ["options", "computeNodeUpdateUserOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId66: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeUpdateUserOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate66: OperationParameter = {
  parameterPath: ["options", "computeNodeUpdateUserOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const select13: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeGetOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const timeout67: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeGetOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId67: OperationParameter = {
  parameterPath: ["options", "computeNodeGetOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId67: OperationParameter = {
  parameterPath: ["options", "computeNodeGetOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate67: OperationParameter = {
  parameterPath: ["options", "computeNodeGetOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const nodeRebootParameter: OperationParameter = {
  parameterPath: ["options", "nodeRebootParameter"],
  mapper: NodeRebootParameterMapper
};

export const timeout68: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeRebootOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId68: OperationParameter = {
  parameterPath: ["options", "computeNodeRebootOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId68: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeRebootOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate68: OperationParameter = {
  parameterPath: ["options", "computeNodeRebootOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const nodeReimageParameter: OperationParameter = {
  parameterPath: ["options", "nodeReimageParameter"],
  mapper: NodeReimageParameterMapper
};

export const timeout69: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeReimageOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId69: OperationParameter = {
  parameterPath: ["options", "computeNodeReimageOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId69: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeReimageOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate69: OperationParameter = {
  parameterPath: ["options", "computeNodeReimageOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const nodeDisableSchedulingParameter: OperationParameter = {
  parameterPath: ["options", "nodeDisableSchedulingParameter"],
  mapper: NodeDisableSchedulingParameterMapper
};

export const timeout70: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeDisableSchedulingOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId70: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeDisableSchedulingOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId70: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeDisableSchedulingOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate70: OperationParameter = {
  parameterPath: ["options", "computeNodeDisableSchedulingOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout71: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeEnableSchedulingOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId71: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeEnableSchedulingOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId71: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeEnableSchedulingOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate71: OperationParameter = {
  parameterPath: ["options", "computeNodeEnableSchedulingOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout72: OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteLoginSettingsOptions",
    "timeout"
  ],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId72: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteLoginSettingsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId72: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteLoginSettingsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate72: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteLoginSettingsOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const timeout73: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeGetRemoteDesktopOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId73: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteDesktopOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId73: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeGetRemoteDesktopOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate73: OperationParameter = {
  parameterPath: ["options", "computeNodeGetRemoteDesktopOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const uploadBatchServiceLogsConfiguration: OperationParameter = {
  parameterPath: "uploadBatchServiceLogsConfiguration",
  mapper: UploadBatchServiceLogsConfigurationMapper
};

export const timeout74: OperationQueryParameter = {
  parameterPath: [
    "options",
    "computeNodeUploadBatchServiceLogsOptions",
    "timeout"
  ],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId74: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeUploadBatchServiceLogsOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId74: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeUploadBatchServiceLogsOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate74: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeUploadBatchServiceLogsOptions",
    "ocpDate"
  ],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const filter12: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeListOptions", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const select14: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeListOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const maxResults13: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeListOptions", "maxResults"],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout75: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeListOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId75: OperationParameter = {
  parameterPath: ["options", "computeNodeListOptions", "clientRequestId"],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId75: OperationParameter = {
  parameterPath: ["options", "computeNodeListOptions", "returnClientRequestId"],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate75: OperationParameter = {
  parameterPath: ["options", "computeNodeListOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const extensionName: OperationURLParameter = {
  parameterPath: "extensionName",
  mapper: {
    serializedName: "extensionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const select15: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeExtensionGetOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const timeout76: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeExtensionGetOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId76: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeExtensionGetOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId76: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeExtensionGetOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate76: OperationParameter = {
  parameterPath: ["options", "computeNodeExtensionGetOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};

export const select16: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeExtensionListOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const maxResults14: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeExtensionListOptions", "maxResults"],
  mapper: {
    defaultValue: 1000,
    constraints: {
      InclusiveMaximum: 1000,
      InclusiveMinimum: 1
    },
    serializedName: "maxresults",
    type: {
      name: "Number"
    }
  }
};

export const timeout77: OperationQueryParameter = {
  parameterPath: ["options", "computeNodeExtensionListOptions", "timeout"],
  mapper: {
    defaultValue: 30,
    serializedName: "timeout",
    type: {
      name: "Number"
    }
  }
};

export const clientRequestId77: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeExtensionListOptions",
    "clientRequestId"
  ],
  mapper: {
    serializedName: "client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const returnClientRequestId77: OperationParameter = {
  parameterPath: [
    "options",
    "computeNodeExtensionListOptions",
    "returnClientRequestId"
  ],
  mapper: {
    defaultValue: false,
    serializedName: "return-client-request-id",
    type: {
      name: "Boolean"
    }
  }
};

export const ocpDate77: OperationParameter = {
  parameterPath: ["options", "computeNodeExtensionListOptions", "ocpDate"],
  mapper: {
    serializedName: "ocp-date",
    type: {
      name: "DateTimeRfc1123"
    }
  }
};
