/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Query results. */
export interface PolicyEventsQueryResults {
  /** OData context string; used by OData clients to resolve type information based on metadata. */
  odataContext?: string;
  /** OData entity count; represents the number of policy event records returned. */
  odataCount?: number;
  /** Odata next link; URL to get the next set of results. */
  odataNextLink?: string;
  /** Query results. */
  value?: PolicyEvent[];
}

/** Policy event record. */
export interface PolicyEvent {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  /** OData entity ID; always set to null since policy event records do not have an entity ID. */
  odataId?: string;
  /** OData context string; used by OData clients to resolve type information based on metadata. */
  odataContext?: string;
  /** Timestamp for the policy event record. */
  timestamp?: Date;
  /** Resource ID. */
  resourceId?: string;
  /** Policy assignment ID. */
  policyAssignmentId?: string;
  /** Policy definition ID. */
  policyDefinitionId?: string;
  /** Effective parameters for the policy assignment. */
  effectiveParameters?: string;
  /** Flag which states whether the resource is compliant against the policy assignment it was evaluated against. */
  isCompliant?: boolean;
  /** Subscription ID. */
  subscriptionId?: string;
  /** Resource type. */
  resourceType?: string;
  /** Resource location. */
  resourceLocation?: string;
  /** Resource group name. */
  resourceGroup?: string;
  /** List of resource tags. */
  resourceTags?: string;
  /** Policy assignment name. */
  policyAssignmentName?: string;
  /** Policy assignment owner. */
  policyAssignmentOwner?: string;
  /** Policy assignment parameters. */
  policyAssignmentParameters?: string;
  /** Policy assignment scope. */
  policyAssignmentScope?: string;
  /** Policy definition name. */
  policyDefinitionName?: string;
  /** Policy definition action, i.e. effect. */
  policyDefinitionAction?: string;
  /** Policy definition category. */
  policyDefinitionCategory?: string;
  /** Policy set definition ID, if the policy assignment is for a policy set. */
  policySetDefinitionId?: string;
  /** Policy set definition name, if the policy assignment is for a policy set. */
  policySetDefinitionName?: string;
  /** Policy set definition owner, if the policy assignment is for a policy set. */
  policySetDefinitionOwner?: string;
  /** Policy set definition category, if the policy assignment is for a policy set. */
  policySetDefinitionCategory?: string;
  /** Policy set definition parameters, if the policy assignment is for a policy set. */
  policySetDefinitionParameters?: string;
  /** Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under. */
  managementGroupIds?: string;
  /** Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set. */
  policyDefinitionReferenceId?: string;
  /** Compliance state of the resource. */
  complianceState?: string;
  /** Tenant ID for the policy event record. */
  tenantId?: string;
  /** Principal object ID for the user who initiated the resource operation that triggered the policy event. */
  principalOid?: string;
  /** Components events records populated only when URL contains $expand=components clause. */
  components?: ComponentEventDetails[];
}

/** Component event details. */
export interface ComponentEventDetails {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  /** Component Id. */
  id?: string;
  /** Component type. */
  type?: string;
  /** Component name. */
  name?: string;
  /** Timestamp for component policy event record. */
  timestamp?: Date;
  /** Tenant ID for the policy event record. */
  tenantId?: string;
  /** Principal object ID for the user who initiated the resource component operation that triggered the policy event. */
  principalOid?: string;
  /** Policy definition action, i.e. effect. */
  policyDefinitionAction?: string;
}

/** Error response. */
export interface QueryFailure {
  /** Error definition. */
  error?: QueryFailureError;
}

/** Error definition. */
export interface QueryFailureError {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Description of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** Query results. */
export interface PolicyStatesQueryResults {
  /** OData context string; used by OData clients to resolve type information based on metadata. */
  odataContext?: string;
  /** OData entity count; represents the number of policy state records returned. */
  odataCount?: number;
  /** Odata next link; URL to get the next set of results. */
  odataNextLink?: string;
  /** Query results. */
  value?: PolicyState[];
}

/** Policy state record. */
export interface PolicyState {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  /** OData entity ID; always set to null since policy state records do not have an entity ID. */
  odataId?: string;
  /** OData context string; used by OData clients to resolve type information based on metadata. */
  odataContext?: string;
  /** Timestamp for the policy state record. */
  timestamp?: Date;
  /** Resource ID. */
  resourceId?: string;
  /** Policy assignment ID. */
  policyAssignmentId?: string;
  /** Policy definition ID. */
  policyDefinitionId?: string;
  /** Effective parameters for the policy assignment. */
  effectiveParameters?: string;
  /** Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead. */
  isCompliant?: boolean;
  /** Subscription ID. */
  subscriptionId?: string;
  /** Resource type. */
  resourceType?: string;
  /** Resource location. */
  resourceLocation?: string;
  /** Resource group name. */
  resourceGroup?: string;
  /** List of resource tags. */
  resourceTags?: string;
  /** Policy assignment name. */
  policyAssignmentName?: string;
  /** Policy assignment owner. */
  policyAssignmentOwner?: string;
  /** Policy assignment parameters. */
  policyAssignmentParameters?: string;
  /** Policy assignment scope. */
  policyAssignmentScope?: string;
  /** Policy definition name. */
  policyDefinitionName?: string;
  /** Policy definition action, i.e. effect. */
  policyDefinitionAction?: string;
  /** Policy definition category. */
  policyDefinitionCategory?: string;
  /** Policy set definition ID, if the policy assignment is for a policy set. */
  policySetDefinitionId?: string;
  /** Policy set definition name, if the policy assignment is for a policy set. */
  policySetDefinitionName?: string;
  /** Policy set definition owner, if the policy assignment is for a policy set. */
  policySetDefinitionOwner?: string;
  /** Policy set definition category, if the policy assignment is for a policy set. */
  policySetDefinitionCategory?: string;
  /** Policy set definition parameters, if the policy assignment is for a policy set. */
  policySetDefinitionParameters?: string;
  /** Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under. */
  managementGroupIds?: string;
  /** Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set. */
  policyDefinitionReferenceId?: string;
  /** Compliance state of the resource. */
  complianceState?: string;
  /** Policy evaluation details. */
  policyEvaluationDetails?: PolicyEvaluationDetails;
  /** Policy definition group names. */
  policyDefinitionGroupNames?: string[];
  /** Components state compliance records populated only when URL contains $expand=components clause. */
  components?: ComponentStateDetails[];
  /**
   * Evaluated policy definition version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly policyDefinitionVersion?: string;
  /**
   * Evaluated policy set definition version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly policySetDefinitionVersion?: string;
  /**
   * Evaluated policy assignment version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly policyAssignmentVersion?: string;
}

/** Policy evaluation details. */
export interface PolicyEvaluationDetails {
  /** Details of the evaluated expressions. */
  evaluatedExpressions?: ExpressionEvaluationDetails[];
  /** Evaluation details of IfNotExists effect. */
  ifNotExistsDetails?: IfNotExistsEvaluationDetails;
}

/** Evaluation details of policy language expressions. */
export interface ExpressionEvaluationDetails {
  /** Evaluation result. */
  result?: string;
  /** Expression evaluated. */
  expression?: string;
  /**
   * The kind of expression that was evaluated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expressionKind?: string;
  /** Property path if the expression is a field or an alias. */
  path?: string;
  /** Value of the expression. */
  expressionValue?: Record<string, unknown>;
  /** Target value to be compared with the expression value. */
  targetValue?: Record<string, unknown>;
  /** Operator to compare the expression value and the target value. */
  operator?: string;
}

/** Evaluation details of IfNotExists effect. */
export interface IfNotExistsEvaluationDetails {
  /** ID of the last evaluated resource for IfNotExists effect. */
  resourceId?: string;
  /** Total number of resources to which the existence condition is applicable. */
  totalResources?: number;
}

/** Component state details. */
export interface ComponentStateDetails {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  /** Component Id. */
  id?: string;
  /** Component type. */
  type?: string;
  /** Component name. */
  name?: string;
  /** Component compliance evaluation timestamp. */
  timestamp?: Date;
  /** Component compliance state. */
  complianceState?: string;
}

/** Summarize action results. */
export interface SummarizeResults {
  /** OData context string; used by OData clients to resolve type information based on metadata. */
  odataContext?: string;
  /** OData entity count; represents the number of summaries returned; always set to 1. */
  odataCount?: number;
  /** Summarize action results. */
  value?: Summary[];
}

/** Summary results. */
export interface Summary {
  /** OData entity ID; always set to null since summaries do not have an entity ID. */
  odataId?: string;
  /** OData context string; used by OData clients to resolve type information based on metadata. */
  odataContext?: string;
  /** Compliance summary for all policy assignments. */
  results?: SummaryResults;
  /** Policy assignments summary. */
  policyAssignments?: PolicyAssignmentSummary[];
}

/** Compliance summary on a particular summary level. */
export interface SummaryResults {
  /** HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly. */
  queryResultsUri?: string;
  /** Number of non-compliant resources. */
  nonCompliantResources?: number;
  /** Number of non-compliant policies. */
  nonCompliantPolicies?: number;
  /** The resources summary at this level. */
  resourceDetails?: ComplianceDetail[];
  /** The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary. */
  policyDetails?: ComplianceDetail[];
  /** The policy definition group summary at this level. */
  policyGroupDetails?: ComplianceDetail[];
}

/** The compliance state rollup. */
export interface ComplianceDetail {
  /** The compliance state. */
  complianceState?: string;
  /** Summarized count value for this compliance state. */
  count?: number;
}

/** Policy assignment summary. */
export interface PolicyAssignmentSummary {
  /** Policy assignment ID. */
  policyAssignmentId?: string;
  /** Policy set definition ID, if the policy assignment is for a policy set. */
  policySetDefinitionId?: string;
  /** Compliance summary for the policy assignment. */
  results?: SummaryResults;
  /** Policy definitions summary. */
  policyDefinitions?: PolicyDefinitionSummary[];
  /** Policy definition group summary. */
  policyGroups?: PolicyGroupSummary[];
}

/** Policy definition summary. */
export interface PolicyDefinitionSummary {
  /** Policy definition ID. */
  policyDefinitionId?: string;
  /** Policy definition reference ID. */
  policyDefinitionReferenceId?: string;
  /** Policy definition group names. */
  policyDefinitionGroupNames?: string[];
  /** Policy effect, i.e. policy definition action. */
  effect?: string;
  /** Compliance summary for the policy definition. */
  results?: SummaryResults;
}

/** Policy definition group summary. */
export interface PolicyGroupSummary {
  /** Policy group name. */
  policyGroupName?: string;
  /** Compliance summary for the policy definition group. */
  results?: SummaryResults;
}

/** List of available operations. */
export interface OperationsListResults {
  /** OData entity count; represents the number of operations returned. */
  odataCount?: number;
  /** List of available operations. */
  value?: Operation[];
}

/** Operation definition. */
export interface Operation {
  /** Operation name. */
  name?: string;
  /** Display metadata associated with the operation. */
  display?: OperationDisplay;
}

/** Display metadata associated with the operation. */
export interface OperationDisplay {
  /** Resource provider name. */
  provider?: string;
  /** Resource name on which the operation is performed. */
  resource?: string;
  /** Operation name. */
  operation?: string;
  /** Operation description. */
  description?: string;
}

/** Parameter group */
export interface QueryOptions {
  /** Maximum number of records to return, paginated for top greater than 1000 */
  top?: number;
  /** Ordering expression using OData notation. One or more comma-separated column names with an optional "desc" (the default) or "asc", e.g. "$orderby=PolicyAssignmentId, ResourceId asc". */
  orderBy?: string;
  /** Select expression using OData notation. Limits the columns on each record to just those requested, e.g. "$select=PolicyAssignmentId, ResourceId". */
  select?: string;
  /** ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day). */
  from?: Date;
  /** ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time. */
  to?: Date;
  /** OData filter expression. */
  filter?: string;
  /** OData apply expression for aggregations. */
  apply?: string;
  /** Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element. */
  skipToken?: string;
  /** The $expand query parameter. For example, to expand components use $expand=components */
  expand?: string;
}

/** Known values of {@link PolicyStatesResource} that the service accepts. */
export enum KnownPolicyStatesResource {
  Default = "default",
  Latest = "latest"
}

/**
 * Defines values for PolicyStatesResource. \
 * {@link KnownPolicyStatesResource} can be used interchangeably with PolicyStatesResource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **default** \
 * **latest**
 */
export type PolicyStatesResource = string;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForManagementGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForManagementGroup operation. */
export type PolicyEventsListQueryResultsForManagementGroupResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForSubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForSubscription operation. */
export type PolicyEventsListQueryResultsForSubscriptionResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForResourceGroup operation. */
export type PolicyEventsListQueryResultsForResourceGroupResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForResourceOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForResource operation. */
export type PolicyEventsListQueryResultsForResourceResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForPolicySetDefinitionOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForPolicySetDefinition operation. */
export type PolicyEventsListQueryResultsForPolicySetDefinitionResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForPolicyDefinitionOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForPolicyDefinition operation. */
export type PolicyEventsListQueryResultsForPolicyDefinitionResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForSubscriptionLevelPolicyAssignment operation. */
export type PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForResourceGroupLevelPolicyAssignment operation. */
export type PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForManagementGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForManagementGroupNext operation. */
export type PolicyEventsListQueryResultsForManagementGroupNextResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForSubscriptionNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForSubscriptionNext operation. */
export type PolicyEventsListQueryResultsForSubscriptionNextResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForResourceGroupNext operation. */
export type PolicyEventsListQueryResultsForResourceGroupNextResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForResourceNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForResourceNext operation. */
export type PolicyEventsListQueryResultsForResourceNextResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForPolicySetDefinitionNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForPolicySetDefinitionNext operation. */
export type PolicyEventsListQueryResultsForPolicySetDefinitionNextResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForPolicyDefinitionNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForPolicyDefinitionNext operation. */
export type PolicyEventsListQueryResultsForPolicyDefinitionNextResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForSubscriptionLevelPolicyAssignmentNext operation. */
export type PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentNextResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForResourceGroupLevelPolicyAssignmentNext operation. */
export type PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentNextResponse = PolicyEventsQueryResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForManagementGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForManagementGroup operation. */
export type PolicyStatesListQueryResultsForManagementGroupResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesSummarizeForManagementGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the summarizeForManagementGroup operation. */
export type PolicyStatesSummarizeForManagementGroupResponse = SummarizeResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForSubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForSubscription operation. */
export type PolicyStatesListQueryResultsForSubscriptionResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesSummarizeForSubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the summarizeForSubscription operation. */
export type PolicyStatesSummarizeForSubscriptionResponse = SummarizeResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForResourceGroup operation. */
export type PolicyStatesListQueryResultsForResourceGroupResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesSummarizeForResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the summarizeForResourceGroup operation. */
export type PolicyStatesSummarizeForResourceGroupResponse = SummarizeResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForResourceOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForResource operation. */
export type PolicyStatesListQueryResultsForResourceResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesSummarizeForResourceOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the summarizeForResource operation. */
export type PolicyStatesSummarizeForResourceResponse = SummarizeResults;

/** Optional parameters. */
export interface PolicyStatesTriggerSubscriptionEvaluationOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PolicyStatesTriggerResourceGroupEvaluationOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForPolicySetDefinitionOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForPolicySetDefinition operation. */
export type PolicyStatesListQueryResultsForPolicySetDefinitionResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesSummarizeForPolicySetDefinitionOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the summarizeForPolicySetDefinition operation. */
export type PolicyStatesSummarizeForPolicySetDefinitionResponse = SummarizeResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForPolicyDefinitionOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForPolicyDefinition operation. */
export type PolicyStatesListQueryResultsForPolicyDefinitionResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesSummarizeForPolicyDefinitionOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the summarizeForPolicyDefinition operation. */
export type PolicyStatesSummarizeForPolicyDefinitionResponse = SummarizeResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForSubscriptionLevelPolicyAssignment operation. */
export type PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the summarizeForSubscriptionLevelPolicyAssignment operation. */
export type PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentResponse = SummarizeResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForResourceGroupLevelPolicyAssignment operation. */
export type PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the summarizeForResourceGroupLevelPolicyAssignment operation. */
export type PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentResponse = SummarizeResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForManagementGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForManagementGroupNext operation. */
export type PolicyStatesListQueryResultsForManagementGroupNextResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForSubscriptionNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForSubscriptionNext operation. */
export type PolicyStatesListQueryResultsForSubscriptionNextResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForResourceGroupNext operation. */
export type PolicyStatesListQueryResultsForResourceGroupNextResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForResourceNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForResourceNext operation. */
export type PolicyStatesListQueryResultsForResourceNextResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForPolicySetDefinitionNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForPolicySetDefinitionNext operation. */
export type PolicyStatesListQueryResultsForPolicySetDefinitionNextResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForPolicyDefinitionNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForPolicyDefinitionNext operation. */
export type PolicyStatesListQueryResultsForPolicyDefinitionNextResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForSubscriptionLevelPolicyAssignmentNext operation. */
export type PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentNextResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listQueryResultsForResourceGroupLevelPolicyAssignmentNext operation. */
export type PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentNextResponse = PolicyStatesQueryResults;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationsListResults;

/** Optional parameters. */
export interface PolicyInsightsClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
