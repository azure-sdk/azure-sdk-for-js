/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** List of deployments for a remediation. */
export interface RemediationDeploymentsListResult {
  /**
   * Array of deployments for the remediation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: RemediationDeployment[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a single deployment created by the remediation. */
export interface RemediationDeployment {
  /**
   * Resource ID of the resource that is being remediated by the deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly remediatedResourceId?: string;
  /**
   * Resource ID of the template deployment that will remediate the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deploymentId?: string;
  /**
   * Status of the remediation deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * Location of the resource that is being remediated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceLocation?: string;
  /**
   * Error encountered while remediated the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly error?: ErrorDefinition;
  /**
   * The time at which the remediation was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdOn?: Date;
  /**
   * The time at which the remediation deployment was last updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedOn?: Date;
}

/** Error definition. */
export interface ErrorDefinition {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Description of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The target of the error.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * Internal error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDefinition[];
  /**
   * Additional scenario specific error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: TypedErrorInfo[];
}

/** Scenario specific error details. */
export interface TypedErrorInfo {
  /**
   * The type of included error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The scenario specific error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: any;
}

/** Error response. */
export interface ErrorResponse {
  /** The error details. */
  error?: ErrorDefinition;
}

/** The remediation definition. */
export interface Remediation {
  /**
   * The ID of the remediation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The type of the remediation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The name of the remediation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The resource ID of the policy assignment that should be remediated. */
  policyAssignmentId?: string;
  /** The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition. */
  policyDefinitionReferenceId?: string;
  /** The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified. */
  resourceDiscoveryMode?: ResourceDiscoveryMode;
  /**
   * The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * The time at which the remediation was created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly createdOn?: Date;
  /**
   * The time at which the remediation was last updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastUpdatedOn?: Date;
  /** The filters that will be applied to determine which resources to remediate. */
  filters?: RemediationFilters;
  /**
   * The deployment status summary for all deployments created by the remediation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deploymentStatus?: RemediationDeploymentSummary;
  /**
   * The remediation status message. Provides additional details regarding the state of the remediation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusMessage?: string;
  /**
   * The remediation correlation Id. Can be used to find events related to the remediation in the activity log.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly correlationId?: string;
  /** Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used. */
  resourceCount?: number;
  /** Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used. */
  parallelDeployments?: number;
  /** The remediation failure threshold settings */
  failureThreshold?: RemediationPropertiesFailureThreshold;
}

/** The filters that will be applied to determine which resources to remediate. */
export interface RemediationFilters {
  /** The resource locations that will be remediated. */
  locations?: string[];
  /** The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided. */
  resourceIds?: string[];
}

/** The deployment status summary for all deployments created by the remediation. */
export interface RemediationDeploymentSummary {
  /**
   * The number of deployments required by the remediation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly totalDeployments?: number;
  /**
   * The number of deployments required by the remediation that have succeeded.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly successfulDeployments?: number;
  /**
   * The number of deployments required by the remediation that have failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly failedDeployments?: number;
}

/** The remediation failure threshold settings */
export interface RemediationPropertiesFailureThreshold {
  /** A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold. */
  percentage?: number;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** List of remediations. */
export interface RemediationListResult {
  /**
   * Array of remediation definitions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Remediation[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Parameter group */
export interface QueryOptions {
  /** Maximum number of records to return. */
  top?: number;
  /** OData filter expression. */
  filter?: string;
}

/** Known values of {@link ResourceDiscoveryMode} that the service accepts. */
export enum KnownResourceDiscoveryMode {
  /** Remediate resources that are already known to be non-compliant. */
  ExistingNonCompliant = "ExistingNonCompliant",
  /** Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode. */
  ReEvaluateCompliance = "ReEvaluateCompliance",
}

/**
 * Defines values for ResourceDiscoveryMode. \
 * {@link KnownResourceDiscoveryMode} can be used interchangeably with ResourceDiscoveryMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ExistingNonCompliant**: Remediate resources that are already known to be non-compliant. \
 * **ReEvaluateCompliance**: Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. The resourceIds filter cannot be used in this mode.
 */
export type ResourceDiscoveryMode = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Optional parameters. */
export interface RemediationsListDeploymentsAtManagementGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listDeploymentsAtManagementGroup operation. */
export type RemediationsListDeploymentsAtManagementGroupResponse =
  RemediationDeploymentsListResult;

/** Optional parameters. */
export interface RemediationsCancelAtManagementGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancelAtManagementGroup operation. */
export type RemediationsCancelAtManagementGroupResponse = Remediation;

/** Optional parameters. */
export interface RemediationsListForManagementGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listForManagementGroup operation. */
export type RemediationsListForManagementGroupResponse = RemediationListResult;

/** Optional parameters. */
export interface RemediationsCreateOrUpdateAtManagementGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdateAtManagementGroup operation. */
export type RemediationsCreateOrUpdateAtManagementGroupResponse = Remediation;

/** Optional parameters. */
export interface RemediationsGetAtManagementGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAtManagementGroup operation. */
export type RemediationsGetAtManagementGroupResponse = Remediation;

/** Optional parameters. */
export interface RemediationsDeleteAtManagementGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteAtManagementGroup operation. */
export type RemediationsDeleteAtManagementGroupResponse = Remediation;

/** Optional parameters. */
export interface RemediationsListDeploymentsAtSubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listDeploymentsAtSubscription operation. */
export type RemediationsListDeploymentsAtSubscriptionResponse =
  RemediationDeploymentsListResult;

/** Optional parameters. */
export interface RemediationsCancelAtSubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancelAtSubscription operation. */
export type RemediationsCancelAtSubscriptionResponse = Remediation;

/** Optional parameters. */
export interface RemediationsListForSubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listForSubscription operation. */
export type RemediationsListForSubscriptionResponse = RemediationListResult;

/** Optional parameters. */
export interface RemediationsCreateOrUpdateAtSubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdateAtSubscription operation. */
export type RemediationsCreateOrUpdateAtSubscriptionResponse = Remediation;

/** Optional parameters. */
export interface RemediationsGetAtSubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAtSubscription operation. */
export type RemediationsGetAtSubscriptionResponse = Remediation;

/** Optional parameters. */
export interface RemediationsDeleteAtSubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteAtSubscription operation. */
export type RemediationsDeleteAtSubscriptionResponse = Remediation;

/** Optional parameters. */
export interface RemediationsListDeploymentsAtResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listDeploymentsAtResourceGroup operation. */
export type RemediationsListDeploymentsAtResourceGroupResponse =
  RemediationDeploymentsListResult;

/** Optional parameters. */
export interface RemediationsCancelAtResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancelAtResourceGroup operation. */
export type RemediationsCancelAtResourceGroupResponse = Remediation;

/** Optional parameters. */
export interface RemediationsListForResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listForResourceGroup operation. */
export type RemediationsListForResourceGroupResponse = RemediationListResult;

/** Optional parameters. */
export interface RemediationsCreateOrUpdateAtResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdateAtResourceGroup operation. */
export type RemediationsCreateOrUpdateAtResourceGroupResponse = Remediation;

/** Optional parameters. */
export interface RemediationsGetAtResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAtResourceGroup operation. */
export type RemediationsGetAtResourceGroupResponse = Remediation;

/** Optional parameters. */
export interface RemediationsDeleteAtResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteAtResourceGroup operation. */
export type RemediationsDeleteAtResourceGroupResponse = Remediation;

/** Optional parameters. */
export interface RemediationsListDeploymentsAtResourceOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listDeploymentsAtResource operation. */
export type RemediationsListDeploymentsAtResourceResponse =
  RemediationDeploymentsListResult;

/** Optional parameters. */
export interface RemediationsCancelAtResourceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancelAtResource operation. */
export type RemediationsCancelAtResourceResponse = Remediation;

/** Optional parameters. */
export interface RemediationsListForResourceOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  queryOptions?: QueryOptions;
}

/** Contains response data for the listForResource operation. */
export type RemediationsListForResourceResponse = RemediationListResult;

/** Optional parameters. */
export interface RemediationsCreateOrUpdateAtResourceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdateAtResource operation. */
export type RemediationsCreateOrUpdateAtResourceResponse = Remediation;

/** Optional parameters. */
export interface RemediationsGetAtResourceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAtResource operation. */
export type RemediationsGetAtResourceResponse = Remediation;

/** Optional parameters. */
export interface RemediationsDeleteAtResourceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the deleteAtResource operation. */
export type RemediationsDeleteAtResourceResponse = Remediation;

/** Optional parameters. */
export interface RemediationsListDeploymentsAtManagementGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listDeploymentsAtManagementGroupNext operation. */
export type RemediationsListDeploymentsAtManagementGroupNextResponse =
  RemediationDeploymentsListResult;

/** Optional parameters. */
export interface RemediationsListForManagementGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listForManagementGroupNext operation. */
export type RemediationsListForManagementGroupNextResponse =
  RemediationListResult;

/** Optional parameters. */
export interface RemediationsListDeploymentsAtSubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listDeploymentsAtSubscriptionNext operation. */
export type RemediationsListDeploymentsAtSubscriptionNextResponse =
  RemediationDeploymentsListResult;

/** Optional parameters. */
export interface RemediationsListForSubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listForSubscriptionNext operation. */
export type RemediationsListForSubscriptionNextResponse = RemediationListResult;

/** Optional parameters. */
export interface RemediationsListDeploymentsAtResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listDeploymentsAtResourceGroupNext operation. */
export type RemediationsListDeploymentsAtResourceGroupNextResponse =
  RemediationDeploymentsListResult;

/** Optional parameters. */
export interface RemediationsListForResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listForResourceGroupNext operation. */
export type RemediationsListForResourceGroupNextResponse =
  RemediationListResult;

/** Optional parameters. */
export interface RemediationsListDeploymentsAtResourceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listDeploymentsAtResourceNext operation. */
export type RemediationsListDeploymentsAtResourceNextResponse =
  RemediationDeploymentsListResult;

/** Optional parameters. */
export interface RemediationsListForResourceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listForResourceNext operation. */
export type RemediationsListForResourceNextResponse = RemediationListResult;

/** Optional parameters. */
export interface PolicyInsightsClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
