/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const policyEventsResource: OperationURLParameter = {
  parameterPath: "policyEventsResource",
  mapper: {
    defaultValue: "default",
    isConstant: true,
    serializedName: "policyEventsResource",
    type: {
      name: "String"
    }
  }
};

export const managementGroupsNamespace: OperationURLParameter = {
  parameterPath: "managementGroupsNamespace",
  mapper: {
    defaultValue: "Microsoft.Management",
    isConstant: true,
    serializedName: "managementGroupsNamespace",
    type: {
      name: "String"
    }
  }
};

export const managementGroupName: OperationURLParameter = {
  parameterPath: "managementGroupName",
  mapper: {
    serializedName: "managementGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2022-06-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const top: OperationQueryParameter = {
  parameterPath: ["options", "queryOptions", "top"],
  mapper: {
    constraints: {
      InclusiveMinimum: 0
    },
    serializedName: "$top",
    type: {
      name: "Number"
    }
  }
};

export const orderBy: OperationQueryParameter = {
  parameterPath: ["options", "queryOptions", "orderBy"],
  mapper: {
    serializedName: "$orderby",
    type: {
      name: "String"
    }
  }
};

export const select: OperationQueryParameter = {
  parameterPath: ["options", "queryOptions", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const fromParam: OperationQueryParameter = {
  parameterPath: ["options", "queryOptions", "from"],
  mapper: {
    serializedName: "$from",
    type: {
      name: "DateTime"
    }
  }
};

export const to: OperationQueryParameter = {
  parameterPath: ["options", "queryOptions", "to"],
  mapper: {
    serializedName: "$to",
    type: {
      name: "DateTime"
    }
  }
};

export const filter: OperationQueryParameter = {
  parameterPath: ["options", "queryOptions", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const apply: OperationQueryParameter = {
  parameterPath: ["options", "queryOptions", "apply"],
  mapper: {
    serializedName: "$apply",
    type: {
      name: "String"
    }
  }
};

export const skipToken: OperationQueryParameter = {
  parameterPath: ["options", "queryOptions", "skipToken"],
  mapper: {
    serializedName: "$skiptoken",
    type: {
      name: "String"
    }
  }
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceId: OperationURLParameter = {
  parameterPath: "resourceId",
  mapper: {
    serializedName: "resourceId",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const expand: OperationQueryParameter = {
  parameterPath: ["options", "queryOptions", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const authorizationNamespace: OperationURLParameter = {
  parameterPath: "authorizationNamespace",
  mapper: {
    defaultValue: "Microsoft.Authorization",
    isConstant: true,
    serializedName: "authorizationNamespace",
    type: {
      name: "String"
    }
  }
};

export const policySetDefinitionName: OperationURLParameter = {
  parameterPath: "policySetDefinitionName",
  mapper: {
    serializedName: "policySetDefinitionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const policyDefinitionName: OperationURLParameter = {
  parameterPath: "policyDefinitionName",
  mapper: {
    serializedName: "policyDefinitionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const policyAssignmentName: OperationURLParameter = {
  parameterPath: "policyAssignmentName",
  mapper: {
    serializedName: "policyAssignmentName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const policyStatesResource: OperationURLParameter = {
  parameterPath: "policyStatesResource",
  mapper: {
    serializedName: "policyStatesResource",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const policyStatesSummaryResource: OperationURLParameter = {
  parameterPath: "policyStatesSummaryResource",
  mapper: {
    defaultValue: "latest",
    isConstant: true,
    serializedName: "policyStatesSummaryResource",
    type: {
      name: "String"
    }
  }
};
