/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const PolicyEventsQueryResults: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyEventsQueryResults",
    modelProperties: {
      odataContext: {
        serializedName: "@odata\\.context",
        type: {
          name: "String"
        }
      },
      odataCount: {
        constraints: {
          InclusiveMinimum: 0
        },
        serializedName: "@odata\\.count",
        type: {
          name: "Number"
        }
      },
      odataNextLink: {
        serializedName: "@odata\\.nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyEvent"
            }
          }
        }
      }
    }
  }
};

export const PolicyEvent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyEvent",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      odataId: {
        serializedName: "@odata\\.id",
        type: {
          name: "String"
        }
      },
      odataContext: {
        serializedName: "@odata\\.context",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      policyAssignmentId: {
        serializedName: "policyAssignmentId",
        type: {
          name: "String"
        }
      },
      policyDefinitionId: {
        serializedName: "policyDefinitionId",
        type: {
          name: "String"
        }
      },
      effectiveParameters: {
        serializedName: "effectiveParameters",
        type: {
          name: "String"
        }
      },
      isCompliant: {
        serializedName: "isCompliant",
        type: {
          name: "Boolean"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      resourceLocation: {
        serializedName: "resourceLocation",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceTags: {
        serializedName: "resourceTags",
        type: {
          name: "String"
        }
      },
      policyAssignmentName: {
        serializedName: "policyAssignmentName",
        type: {
          name: "String"
        }
      },
      policyAssignmentOwner: {
        serializedName: "policyAssignmentOwner",
        type: {
          name: "String"
        }
      },
      policyAssignmentParameters: {
        serializedName: "policyAssignmentParameters",
        type: {
          name: "String"
        }
      },
      policyAssignmentScope: {
        serializedName: "policyAssignmentScope",
        type: {
          name: "String"
        }
      },
      policyDefinitionName: {
        serializedName: "policyDefinitionName",
        type: {
          name: "String"
        }
      },
      policyDefinitionAction: {
        serializedName: "policyDefinitionAction",
        type: {
          name: "String"
        }
      },
      policyDefinitionCategory: {
        serializedName: "policyDefinitionCategory",
        type: {
          name: "String"
        }
      },
      policySetDefinitionId: {
        serializedName: "policySetDefinitionId",
        type: {
          name: "String"
        }
      },
      policySetDefinitionName: {
        serializedName: "policySetDefinitionName",
        type: {
          name: "String"
        }
      },
      policySetDefinitionOwner: {
        serializedName: "policySetDefinitionOwner",
        type: {
          name: "String"
        }
      },
      policySetDefinitionCategory: {
        serializedName: "policySetDefinitionCategory",
        type: {
          name: "String"
        }
      },
      policySetDefinitionParameters: {
        serializedName: "policySetDefinitionParameters",
        type: {
          name: "String"
        }
      },
      managementGroupIds: {
        serializedName: "managementGroupIds",
        type: {
          name: "String"
        }
      },
      policyDefinitionReferenceId: {
        serializedName: "policyDefinitionReferenceId",
        type: {
          name: "String"
        }
      },
      complianceState: {
        serializedName: "complianceState",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      principalOid: {
        serializedName: "principalOid",
        type: {
          name: "String"
        }
      },
      components: {
        serializedName: "components",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComponentEventDetails"
            }
          }
        }
      }
    }
  }
};

export const ComponentEventDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentEventDetails",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      principalOid: {
        serializedName: "principalOid",
        type: {
          name: "String"
        }
      },
      policyDefinitionAction: {
        serializedName: "policyDefinitionAction",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QueryFailure: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QueryFailure",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "QueryFailureError"
        }
      }
    }
  }
};

export const QueryFailureError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "QueryFailureError",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyStatesQueryResults: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyStatesQueryResults",
    modelProperties: {
      odataContext: {
        serializedName: "@odata\\.context",
        type: {
          name: "String"
        }
      },
      odataCount: {
        constraints: {
          InclusiveMinimum: 0
        },
        serializedName: "@odata\\.count",
        type: {
          name: "Number"
        }
      },
      odataNextLink: {
        serializedName: "@odata\\.nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyState"
            }
          }
        }
      }
    }
  }
};

export const PolicyState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyState",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      odataId: {
        serializedName: "@odata\\.id",
        type: {
          name: "String"
        }
      },
      odataContext: {
        serializedName: "@odata\\.context",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      policyAssignmentId: {
        serializedName: "policyAssignmentId",
        type: {
          name: "String"
        }
      },
      policyDefinitionId: {
        serializedName: "policyDefinitionId",
        type: {
          name: "String"
        }
      },
      effectiveParameters: {
        serializedName: "effectiveParameters",
        type: {
          name: "String"
        }
      },
      isCompliant: {
        serializedName: "isCompliant",
        type: {
          name: "Boolean"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      resourceLocation: {
        serializedName: "resourceLocation",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceTags: {
        serializedName: "resourceTags",
        type: {
          name: "String"
        }
      },
      policyAssignmentName: {
        serializedName: "policyAssignmentName",
        type: {
          name: "String"
        }
      },
      policyAssignmentOwner: {
        serializedName: "policyAssignmentOwner",
        type: {
          name: "String"
        }
      },
      policyAssignmentParameters: {
        serializedName: "policyAssignmentParameters",
        type: {
          name: "String"
        }
      },
      policyAssignmentScope: {
        serializedName: "policyAssignmentScope",
        type: {
          name: "String"
        }
      },
      policyDefinitionName: {
        serializedName: "policyDefinitionName",
        type: {
          name: "String"
        }
      },
      policyDefinitionAction: {
        serializedName: "policyDefinitionAction",
        type: {
          name: "String"
        }
      },
      policyDefinitionCategory: {
        serializedName: "policyDefinitionCategory",
        type: {
          name: "String"
        }
      },
      policySetDefinitionId: {
        serializedName: "policySetDefinitionId",
        type: {
          name: "String"
        }
      },
      policySetDefinitionName: {
        serializedName: "policySetDefinitionName",
        type: {
          name: "String"
        }
      },
      policySetDefinitionOwner: {
        serializedName: "policySetDefinitionOwner",
        type: {
          name: "String"
        }
      },
      policySetDefinitionCategory: {
        serializedName: "policySetDefinitionCategory",
        type: {
          name: "String"
        }
      },
      policySetDefinitionParameters: {
        serializedName: "policySetDefinitionParameters",
        type: {
          name: "String"
        }
      },
      managementGroupIds: {
        serializedName: "managementGroupIds",
        type: {
          name: "String"
        }
      },
      policyDefinitionReferenceId: {
        serializedName: "policyDefinitionReferenceId",
        type: {
          name: "String"
        }
      },
      complianceState: {
        serializedName: "complianceState",
        type: {
          name: "String"
        }
      },
      policyEvaluationDetails: {
        serializedName: "policyEvaluationDetails",
        type: {
          name: "Composite",
          className: "PolicyEvaluationDetails"
        }
      },
      policyDefinitionGroupNames: {
        serializedName: "policyDefinitionGroupNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      components: {
        serializedName: "components",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComponentStateDetails"
            }
          }
        }
      },
      policyDefinitionVersion: {
        serializedName: "policyDefinitionVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      policySetDefinitionVersion: {
        serializedName: "policySetDefinitionVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      policyAssignmentVersion: {
        serializedName: "policyAssignmentVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyEvaluationDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyEvaluationDetails",
    modelProperties: {
      evaluatedExpressions: {
        serializedName: "evaluatedExpressions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExpressionEvaluationDetails"
            }
          }
        }
      },
      ifNotExistsDetails: {
        serializedName: "ifNotExistsDetails",
        type: {
          name: "Composite",
          className: "IfNotExistsEvaluationDetails"
        }
      }
    }
  }
};

export const ExpressionEvaluationDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExpressionEvaluationDetails",
    modelProperties: {
      result: {
        serializedName: "result",
        type: {
          name: "String"
        }
      },
      expression: {
        serializedName: "expression",
        type: {
          name: "String"
        }
      },
      expressionKind: {
        serializedName: "expressionKind",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      expressionValue: {
        serializedName: "expressionValue",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      targetValue: {
        serializedName: "targetValue",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      operator: {
        serializedName: "operator",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IfNotExistsEvaluationDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IfNotExistsEvaluationDetails",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      totalResources: {
        serializedName: "totalResources",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ComponentStateDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentStateDetails",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      complianceState: {
        serializedName: "complianceState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SummarizeResults: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SummarizeResults",
    modelProperties: {
      odataContext: {
        serializedName: "@odata\\.context",
        type: {
          name: "String"
        }
      },
      odataCount: {
        constraints: {
          InclusiveMaximum: 1,
          InclusiveMinimum: 1
        },
        serializedName: "@odata\\.count",
        type: {
          name: "Number"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Summary"
            }
          }
        }
      }
    }
  }
};

export const Summary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Summary",
    modelProperties: {
      odataId: {
        serializedName: "@odata\\.id",
        type: {
          name: "String"
        }
      },
      odataContext: {
        serializedName: "@odata\\.context",
        type: {
          name: "String"
        }
      },
      results: {
        serializedName: "results",
        type: {
          name: "Composite",
          className: "SummaryResults"
        }
      },
      policyAssignments: {
        serializedName: "policyAssignments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyAssignmentSummary"
            }
          }
        }
      }
    }
  }
};

export const SummaryResults: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SummaryResults",
    modelProperties: {
      queryResultsUri: {
        serializedName: "queryResultsUri",
        type: {
          name: "String"
        }
      },
      nonCompliantResources: {
        constraints: {
          InclusiveMinimum: 0
        },
        serializedName: "nonCompliantResources",
        type: {
          name: "Number"
        }
      },
      nonCompliantPolicies: {
        constraints: {
          InclusiveMinimum: 0
        },
        serializedName: "nonCompliantPolicies",
        type: {
          name: "Number"
        }
      },
      resourceDetails: {
        serializedName: "resourceDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComplianceDetail"
            }
          }
        }
      },
      policyDetails: {
        serializedName: "policyDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComplianceDetail"
            }
          }
        }
      },
      policyGroupDetails: {
        serializedName: "policyGroupDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComplianceDetail"
            }
          }
        }
      }
    }
  }
};

export const ComplianceDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComplianceDetail",
    modelProperties: {
      complianceState: {
        serializedName: "complianceState",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PolicyAssignmentSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyAssignmentSummary",
    modelProperties: {
      policyAssignmentId: {
        serializedName: "policyAssignmentId",
        type: {
          name: "String"
        }
      },
      policySetDefinitionId: {
        serializedName: "policySetDefinitionId",
        type: {
          name: "String"
        }
      },
      results: {
        serializedName: "results",
        type: {
          name: "Composite",
          className: "SummaryResults"
        }
      },
      policyDefinitions: {
        serializedName: "policyDefinitions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyDefinitionSummary"
            }
          }
        }
      },
      policyGroups: {
        serializedName: "policyGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyGroupSummary"
            }
          }
        }
      }
    }
  }
};

export const PolicyDefinitionSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyDefinitionSummary",
    modelProperties: {
      policyDefinitionId: {
        serializedName: "policyDefinitionId",
        type: {
          name: "String"
        }
      },
      policyDefinitionReferenceId: {
        serializedName: "policyDefinitionReferenceId",
        type: {
          name: "String"
        }
      },
      policyDefinitionGroupNames: {
        serializedName: "policyDefinitionGroupNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      effect: {
        serializedName: "effect",
        type: {
          name: "String"
        }
      },
      results: {
        serializedName: "results",
        type: {
          name: "Composite",
          className: "SummaryResults"
        }
      }
    }
  }
};

export const PolicyGroupSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyGroupSummary",
    modelProperties: {
      policyGroupName: {
        serializedName: "policyGroupName",
        type: {
          name: "String"
        }
      },
      results: {
        serializedName: "results",
        type: {
          name: "Composite",
          className: "SummaryResults"
        }
      }
    }
  }
};

export const OperationsListResults: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationsListResults",
    modelProperties: {
      odataCount: {
        constraints: {
          InclusiveMinimum: 1
        },
        serializedName: "@odata\\.count",
        type: {
          name: "Number"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};
