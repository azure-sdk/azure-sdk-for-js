/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const AppAttachPackageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppAttachPackageList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AppAttachPackage",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AppAttachPackageProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppAttachPackageProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className: "AppAttachPackageInfoProperties",
        },
      },
      hostPoolReferences: {
        serializedName: "hostPoolReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      keyVaultURL: {
        serializedName: "keyVaultURL",
        type: {
          name: "String",
        },
      },
      failHealthCheckOnStagingFailure: {
        serializedName: "failHealthCheckOnStagingFailure",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AppAttachPackageInfoProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppAttachPackageInfoProperties",
    modelProperties: {
      packageAlias: {
        serializedName: "packageAlias",
        type: {
          name: "String",
        },
      },
      imagePath: {
        serializedName: "imagePath",
        type: {
          name: "String",
        },
      },
      packageName: {
        serializedName: "packageName",
        type: {
          name: "String",
        },
      },
      packageFamilyName: {
        serializedName: "packageFamilyName",
        type: {
          name: "String",
        },
      },
      packageFullName: {
        serializedName: "packageFullName",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      packageRelativePath: {
        serializedName: "packageRelativePath",
        type: {
          name: "String",
        },
      },
      isRegularRegistration: {
        serializedName: "isRegularRegistration",
        type: {
          name: "Boolean",
        },
      },
      isActive: {
        serializedName: "isActive",
        type: {
          name: "Boolean",
        },
      },
      packageDependencies: {
        serializedName: "packageDependencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MsixPackageDependencies",
            },
          },
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "DateTime",
        },
      },
      packageApplications: {
        serializedName: "packageApplications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MsixPackageApplications",
            },
          },
        },
      },
      certificateName: {
        serializedName: "certificateName",
        type: {
          name: "String",
        },
      },
      certificateExpiry: {
        serializedName: "certificateExpiry",
        type: {
          name: "DateTime",
        },
      },
      isPackageTimestamped: {
        serializedName: "isPackageTimestamped",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MsixPackageDependencies: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MsixPackageDependencies",
    modelProperties: {
      dependencyName: {
        serializedName: "dependencyName",
        type: {
          name: "String",
        },
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String",
        },
      },
      minVersion: {
        serializedName: "minVersion",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MsixPackageApplications: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MsixPackageApplications",
    modelProperties: {
      appId: {
        serializedName: "appId",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      appUserModelID: {
        serializedName: "appUserModelID",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      iconImageName: {
        serializedName: "iconImageName",
        type: {
          name: "String",
        },
      },
      rawIcon: {
        serializedName: "rawIcon",
        type: {
          name: "ByteArray",
        },
      },
      rawPng: {
        serializedName: "rawPng",
        type: {
          name: "ByteArray",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ApplicationGroupList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationGroupList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationGroup",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApplicationGroupProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationGroupProperties",
    modelProperties: {
      objectId: {
        serializedName: "objectId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      hostPoolArmPath: {
        serializedName: "hostPoolArmPath",
        required: true,
        type: {
          name: "String",
        },
      },
      workspaceArmPath: {
        serializedName: "workspaceArmPath",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      applicationGroupType: {
        serializedName: "applicationGroupType",
        required: true,
        type: {
          name: "String",
        },
      },
      cloudPcResource: {
        serializedName: "cloudPcResource",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      showInFeed: {
        serializedName: "showInFeed",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const HostPoolList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HostPoolList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HostPool",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const HostPoolProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HostPoolProperties",
    modelProperties: {
      objectId: {
        serializedName: "objectId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      hostPoolType: {
        serializedName: "hostPoolType",
        required: true,
        type: {
          name: "String",
        },
      },
      personalDesktopAssignmentType: {
        serializedName: "personalDesktopAssignmentType",
        type: {
          name: "String",
        },
      },
      customRdpProperty: {
        serializedName: "customRdpProperty",
        type: {
          name: "String",
        },
      },
      maxSessionLimit: {
        serializedName: "maxSessionLimit",
        type: {
          name: "Number",
        },
      },
      loadBalancerType: {
        serializedName: "loadBalancerType",
        required: true,
        type: {
          name: "String",
        },
      },
      ring: {
        serializedName: "ring",
        type: {
          name: "Number",
        },
      },
      validationEnvironment: {
        serializedName: "validationEnvironment",
        type: {
          name: "Boolean",
        },
      },
      registrationInfo: {
        serializedName: "registrationInfo",
        type: {
          name: "Composite",
          className: "RegistrationInfo",
        },
      },
      vmTemplate: {
        serializedName: "vmTemplate",
        type: {
          name: "String",
        },
      },
      applicationGroupReferences: {
        serializedName: "applicationGroupReferences",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      appAttachPackageReferences: {
        serializedName: "appAttachPackageReferences",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      ssoadfsAuthority: {
        serializedName: "ssoadfsAuthority",
        type: {
          name: "String",
        },
      },
      ssoClientId: {
        serializedName: "ssoClientId",
        type: {
          name: "String",
        },
      },
      ssoClientSecretKeyVaultPath: {
        serializedName: "ssoClientSecretKeyVaultPath",
        type: {
          name: "String",
        },
      },
      ssoSecretType: {
        serializedName: "ssoSecretType",
        type: {
          name: "String",
        },
      },
      preferredAppGroupType: {
        serializedName: "preferredAppGroupType",
        required: true,
        type: {
          name: "String",
        },
      },
      startVMOnConnect: {
        serializedName: "startVMOnConnect",
        type: {
          name: "Boolean",
        },
      },
      cloudPcResource: {
        serializedName: "cloudPcResource",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      publicNetworkAccess: {
        serializedName: "publicNetworkAccess",
        type: {
          name: "String",
        },
      },
      agentUpdate: {
        serializedName: "agentUpdate",
        type: {
          name: "Composite",
          className: "AgentUpdateProperties",
        },
      },
      privateEndpointConnections: {
        serializedName: "privateEndpointConnections",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection",
            },
          },
        },
      },
      managedPrivateUDP: {
        serializedName: "managedPrivateUDP",
        type: {
          name: "String",
        },
      },
      directUDP: {
        serializedName: "directUDP",
        type: {
          name: "String",
        },
      },
      publicUDP: {
        serializedName: "publicUDP",
        type: {
          name: "String",
        },
      },
      relayUDP: {
        serializedName: "relayUDP",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RegistrationInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegistrationInfo",
    modelProperties: {
      expirationTime: {
        serializedName: "expirationTime",
        type: {
          name: "DateTime",
        },
      },
      token: {
        serializedName: "token",
        type: {
          name: "String",
        },
      },
      registrationTokenOperation: {
        serializedName: "registrationTokenOperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AgentUpdateProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgentUpdateProperties",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
      useSessionHostLocalTime: {
        serializedName: "useSessionHostLocalTime",
        type: {
          name: "Boolean",
        },
      },
      maintenanceWindowTimeZone: {
        serializedName: "maintenanceWindowTimeZone",
        type: {
          name: "String",
        },
      },
      maintenanceWindows: {
        serializedName: "maintenanceWindows",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MaintenanceWindowProperties",
            },
          },
        },
      },
    },
  },
};

export const MaintenanceWindowProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MaintenanceWindowProperties",
    modelProperties: {
      hour: {
        serializedName: "hour",
        type: {
          name: "Number",
        },
      },
      dayOfWeek: {
        serializedName: "dayOfWeek",
        type: {
          name: "Enum",
          allowedValues: [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday",
          ],
        },
      },
    },
  },
};

export const PrivateEndpointConnectionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionProperties",
    modelProperties: {
      groupIds: {
        serializedName: "groupIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      privateEndpoint: {
        serializedName: "privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpoint",
        },
      },
      privateLinkServiceConnectionState: {
        serializedName: "privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionState",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateEndpoint: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpoint",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      actionsRequired: {
        serializedName: "actionsRequired",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceAutoGenerated: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceAutoGenerated",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const MsixPackageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MsixPackageList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MsixPackage",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MsixPackageProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MsixPackageProperties",
    modelProperties: {
      imagePath: {
        serializedName: "imagePath",
        type: {
          name: "String",
        },
      },
      packageName: {
        serializedName: "packageName",
        type: {
          name: "String",
        },
      },
      packageFamilyName: {
        serializedName: "packageFamilyName",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      packageRelativePath: {
        serializedName: "packageRelativePath",
        type: {
          name: "String",
        },
      },
      isRegularRegistration: {
        serializedName: "isRegularRegistration",
        type: {
          name: "Boolean",
        },
      },
      isActive: {
        serializedName: "isActive",
        type: {
          name: "Boolean",
        },
      },
      packageDependencies: {
        serializedName: "packageDependencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MsixPackageDependencies",
            },
          },
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "DateTime",
        },
      },
      packageApplications: {
        serializedName: "packageApplications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MsixPackageApplications",
            },
          },
        },
      },
    },
  },
};

export const MsixPackagePatchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MsixPackagePatchProperties",
    modelProperties: {
      isActive: {
        serializedName: "isActive",
        type: {
          name: "Boolean",
        },
      },
      isRegularRegistration: {
        serializedName: "isRegularRegistration",
        type: {
          name: "Boolean",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ScalingPlanList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingPlanList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScalingPlan",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ScalingPlanProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingPlanProperties",
    modelProperties: {
      objectId: {
        serializedName: "objectId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      timeZone: {
        serializedName: "timeZone",
        required: true,
        type: {
          name: "String",
        },
      },
      hostPoolType: {
        defaultValue: "Pooled",
        serializedName: "hostPoolType",
        type: {
          name: "String",
        },
      },
      exclusionTag: {
        serializedName: "exclusionTag",
        type: {
          name: "String",
        },
      },
      schedules: {
        serializedName: "schedules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScalingSchedule",
            },
          },
        },
      },
      hostPoolReferences: {
        serializedName: "hostPoolReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScalingHostPoolReference",
            },
          },
        },
      },
    },
  },
};

export const ScalingSchedule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingSchedule",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      daysOfWeek: {
        serializedName: "daysOfWeek",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      rampUpStartTime: {
        serializedName: "rampUpStartTime",
        type: {
          name: "Composite",
          className: "Time",
        },
      },
      rampUpLoadBalancingAlgorithm: {
        serializedName: "rampUpLoadBalancingAlgorithm",
        type: {
          name: "String",
        },
      },
      rampUpMinimumHostsPct: {
        constraints: {
          InclusiveMaximum: 100,
        },
        serializedName: "rampUpMinimumHostsPct",
        type: {
          name: "Number",
        },
      },
      rampUpCapacityThresholdPct: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1,
        },
        serializedName: "rampUpCapacityThresholdPct",
        type: {
          name: "Number",
        },
      },
      peakStartTime: {
        serializedName: "peakStartTime",
        type: {
          name: "Composite",
          className: "Time",
        },
      },
      peakLoadBalancingAlgorithm: {
        serializedName: "peakLoadBalancingAlgorithm",
        type: {
          name: "String",
        },
      },
      rampDownStartTime: {
        serializedName: "rampDownStartTime",
        type: {
          name: "Composite",
          className: "Time",
        },
      },
      rampDownLoadBalancingAlgorithm: {
        serializedName: "rampDownLoadBalancingAlgorithm",
        type: {
          name: "String",
        },
      },
      rampDownMinimumHostsPct: {
        constraints: {
          InclusiveMaximum: 100,
        },
        serializedName: "rampDownMinimumHostsPct",
        type: {
          name: "Number",
        },
      },
      rampDownCapacityThresholdPct: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1,
        },
        serializedName: "rampDownCapacityThresholdPct",
        type: {
          name: "Number",
        },
      },
      rampDownForceLogoffUsers: {
        serializedName: "rampDownForceLogoffUsers",
        type: {
          name: "Boolean",
        },
      },
      rampDownStopHostsWhen: {
        serializedName: "rampDownStopHostsWhen",
        type: {
          name: "String",
        },
      },
      rampDownWaitTimeMinutes: {
        serializedName: "rampDownWaitTimeMinutes",
        type: {
          name: "Number",
        },
      },
      rampDownNotificationMessage: {
        serializedName: "rampDownNotificationMessage",
        type: {
          name: "String",
        },
      },
      offPeakStartTime: {
        serializedName: "offPeakStartTime",
        type: {
          name: "Composite",
          className: "Time",
        },
      },
      offPeakLoadBalancingAlgorithm: {
        serializedName: "offPeakLoadBalancingAlgorithm",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Time: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Time",
    modelProperties: {
      hour: {
        constraints: {
          InclusiveMaximum: 23,
        },
        serializedName: "hour",
        required: true,
        type: {
          name: "Number",
        },
      },
      minute: {
        constraints: {
          InclusiveMaximum: 59,
        },
        serializedName: "minute",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ScalingHostPoolReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingHostPoolReference",
    modelProperties: {
      hostPoolArmPath: {
        serializedName: "hostPoolArmPath",
        type: {
          name: "String",
        },
      },
      scalingPlanEnabled: {
        serializedName: "scalingPlanEnabled",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const WorkspaceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkspaceList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Workspace",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkspaceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkspaceProperties",
    modelProperties: {
      objectId: {
        serializedName: "objectId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      applicationGroupReferences: {
        serializedName: "applicationGroupReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      cloudPcResource: {
        serializedName: "cloudPcResource",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      publicNetworkAccess: {
        serializedName: "publicNetworkAccess",
        type: {
          name: "String",
        },
      },
      privateEndpointConnections: {
        serializedName: "privateEndpointConnections",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection",
            },
          },
        },
      },
    },
  },
};

export const AppAttachPackagePatchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppAttachPackagePatchProperties",
    modelProperties: {
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className: "AppAttachPackageInfoProperties",
        },
      },
      hostPoolReferences: {
        serializedName: "hostPoolReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      keyVaultURL: {
        serializedName: "keyVaultURL",
        type: {
          name: "String",
        },
      },
      failHealthCheckOnStagingFailure: {
        serializedName: "failHealthCheckOnStagingFailure",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApplicationGroupPatchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationGroupPatchProperties",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      showInFeed: {
        serializedName: "showInFeed",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const ApplicationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Application",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApplicationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationProperties",
    modelProperties: {
      objectId: {
        serializedName: "objectId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      filePath: {
        serializedName: "filePath",
        type: {
          name: "String",
        },
      },
      msixPackageFamilyName: {
        serializedName: "msixPackageFamilyName",
        type: {
          name: "String",
        },
      },
      msixPackageApplicationId: {
        serializedName: "msixPackageApplicationId",
        type: {
          name: "String",
        },
      },
      applicationType: {
        serializedName: "applicationType",
        type: {
          name: "String",
        },
      },
      commandLineSetting: {
        serializedName: "commandLineSetting",
        required: true,
        type: {
          name: "String",
        },
      },
      commandLineArguments: {
        serializedName: "commandLineArguments",
        type: {
          name: "String",
        },
      },
      showInPortal: {
        serializedName: "showInPortal",
        type: {
          name: "Boolean",
        },
      },
      iconPath: {
        serializedName: "iconPath",
        type: {
          name: "String",
        },
      },
      iconIndex: {
        serializedName: "iconIndex",
        type: {
          name: "Number",
        },
      },
      iconHash: {
        serializedName: "iconHash",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      iconContent: {
        serializedName: "iconContent",
        readOnly: true,
        type: {
          name: "ByteArray",
        },
      },
    },
  },
};

export const ApplicationPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationPatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ApplicationPatchProperties",
        },
      },
    },
  },
};

export const ApplicationPatchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationPatchProperties",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      filePath: {
        serializedName: "filePath",
        type: {
          name: "String",
        },
      },
      commandLineSetting: {
        serializedName: "commandLineSetting",
        type: {
          name: "String",
        },
      },
      commandLineArguments: {
        serializedName: "commandLineArguments",
        type: {
          name: "String",
        },
      },
      showInPortal: {
        serializedName: "showInPortal",
        type: {
          name: "Boolean",
        },
      },
      iconPath: {
        serializedName: "iconPath",
        type: {
          name: "String",
        },
      },
      iconIndex: {
        serializedName: "iconIndex",
        type: {
          name: "Number",
        },
      },
      msixPackageFamilyName: {
        serializedName: "msixPackageFamilyName",
        type: {
          name: "String",
        },
      },
      msixPackageApplicationId: {
        serializedName: "msixPackageApplicationId",
        type: {
          name: "String",
        },
      },
      applicationType: {
        serializedName: "applicationType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DesktopList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DesktopList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Desktop",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DesktopProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DesktopProperties",
    modelProperties: {
      objectId: {
        serializedName: "objectId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      iconHash: {
        serializedName: "iconHash",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      iconContent: {
        serializedName: "iconContent",
        readOnly: true,
        type: {
          name: "ByteArray",
        },
      },
    },
  },
};

export const DesktopPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DesktopPatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DesktopPatchProperties",
        },
      },
    },
  },
};

export const DesktopPatchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DesktopPatchProperties",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StartMenuItemList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartMenuItemList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StartMenuItem",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StartMenuItemProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartMenuItemProperties",
    modelProperties: {
      appAlias: {
        serializedName: "appAlias",
        type: {
          name: "String",
        },
      },
      filePath: {
        serializedName: "filePath",
        type: {
          name: "String",
        },
      },
      commandLineArguments: {
        serializedName: "commandLineArguments",
        type: {
          name: "String",
        },
      },
      iconPath: {
        serializedName: "iconPath",
        type: {
          name: "String",
        },
      },
      iconIndex: {
        serializedName: "iconIndex",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const HostPoolPatchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HostPoolPatchProperties",
    modelProperties: {
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      customRdpProperty: {
        serializedName: "customRdpProperty",
        type: {
          name: "String",
        },
      },
      maxSessionLimit: {
        serializedName: "maxSessionLimit",
        type: {
          name: "Number",
        },
      },
      personalDesktopAssignmentType: {
        serializedName: "personalDesktopAssignmentType",
        type: {
          name: "String",
        },
      },
      loadBalancerType: {
        serializedName: "loadBalancerType",
        type: {
          name: "String",
        },
      },
      ring: {
        serializedName: "ring",
        type: {
          name: "Number",
        },
      },
      validationEnvironment: {
        serializedName: "validationEnvironment",
        type: {
          name: "Boolean",
        },
      },
      registrationInfo: {
        serializedName: "registrationInfo",
        type: {
          name: "Composite",
          className: "RegistrationInfoPatch",
        },
      },
      vmTemplate: {
        serializedName: "vmTemplate",
        type: {
          name: "String",
        },
      },
      ssoadfsAuthority: {
        serializedName: "ssoadfsAuthority",
        type: {
          name: "String",
        },
      },
      ssoClientId: {
        serializedName: "ssoClientId",
        type: {
          name: "String",
        },
      },
      ssoClientSecretKeyVaultPath: {
        serializedName: "ssoClientSecretKeyVaultPath",
        type: {
          name: "String",
        },
      },
      ssoSecretType: {
        serializedName: "ssoSecretType",
        type: {
          name: "String",
        },
      },
      preferredAppGroupType: {
        serializedName: "preferredAppGroupType",
        type: {
          name: "String",
        },
      },
      startVMOnConnect: {
        serializedName: "startVMOnConnect",
        type: {
          name: "Boolean",
        },
      },
      publicNetworkAccess: {
        serializedName: "publicNetworkAccess",
        type: {
          name: "String",
        },
      },
      agentUpdate: {
        serializedName: "agentUpdate",
        type: {
          name: "Composite",
          className: "AgentUpdatePatchProperties",
        },
      },
      managedPrivateUDP: {
        serializedName: "managedPrivateUDP",
        type: {
          name: "String",
        },
      },
      directUDP: {
        serializedName: "directUDP",
        type: {
          name: "String",
        },
      },
      publicUDP: {
        serializedName: "publicUDP",
        type: {
          name: "String",
        },
      },
      relayUDP: {
        serializedName: "relayUDP",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RegistrationInfoPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegistrationInfoPatch",
    modelProperties: {
      expirationTime: {
        serializedName: "expirationTime",
        type: {
          name: "DateTime",
        },
      },
      registrationTokenOperation: {
        serializedName: "registrationTokenOperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AgentUpdatePatchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgentUpdatePatchProperties",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
      useSessionHostLocalTime: {
        serializedName: "useSessionHostLocalTime",
        type: {
          name: "Boolean",
        },
      },
      maintenanceWindowTimeZone: {
        serializedName: "maintenanceWindowTimeZone",
        type: {
          name: "String",
        },
      },
      maintenanceWindows: {
        serializedName: "maintenanceWindows",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MaintenanceWindowPatchProperties",
            },
          },
        },
      },
    },
  },
};

export const MaintenanceWindowPatchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MaintenanceWindowPatchProperties",
    modelProperties: {
      hour: {
        serializedName: "hour",
        type: {
          name: "Number",
        },
      },
      dayOfWeek: {
        serializedName: "dayOfWeek",
        type: {
          name: "Enum",
          allowedValues: [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday",
          ],
        },
      },
    },
  },
};

export const MsixImageURI: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MsixImageURI",
    modelProperties: {
      uri: {
        serializedName: "uri",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ExpandMsixImageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExpandMsixImageList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExpandMsixImage",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ExpandMsixImageProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExpandMsixImageProperties",
    modelProperties: {
      packageAlias: {
        serializedName: "packageAlias",
        type: {
          name: "String",
        },
      },
      imagePath: {
        serializedName: "imagePath",
        type: {
          name: "String",
        },
      },
      packageName: {
        serializedName: "packageName",
        type: {
          name: "String",
        },
      },
      packageFamilyName: {
        serializedName: "packageFamilyName",
        type: {
          name: "String",
        },
      },
      packageFullName: {
        serializedName: "packageFullName",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      packageRelativePath: {
        serializedName: "packageRelativePath",
        type: {
          name: "String",
        },
      },
      isRegularRegistration: {
        serializedName: "isRegularRegistration",
        type: {
          name: "Boolean",
        },
      },
      isActive: {
        serializedName: "isActive",
        type: {
          name: "Boolean",
        },
      },
      packageDependencies: {
        serializedName: "packageDependencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MsixPackageDependencies",
            },
          },
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "DateTime",
        },
      },
      packageApplications: {
        serializedName: "packageApplications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MsixPackageApplications",
            },
          },
        },
      },
      certificateName: {
        serializedName: "certificateName",
        type: {
          name: "String",
        },
      },
      certificateExpiry: {
        serializedName: "certificateExpiry",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ImportPackageInfoRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportPackageInfoRequest",
    modelProperties: {
      path: {
        serializedName: "path",
        type: {
          name: "String",
        },
      },
      packageArchitecture: {
        serializedName: "packageArchitecture",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RegistrationTokenList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegistrationTokenList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegistrationTokenMinimal",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RegistrationTokenMinimal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegistrationTokenMinimal",
    modelProperties: {
      expirationTime: {
        serializedName: "expirationTime",
        type: {
          name: "DateTime",
        },
      },
      token: {
        serializedName: "token",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateEndpointConnectionOnHostPoolListResultWithSystemData: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "PrivateEndpointConnectionOnHostPoolListResultWithSystemData",
      modelProperties: {
        value: {
          serializedName: "value",
          required: true,
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "PrivateEndpointConnectionOnHostPoolWithSystemData",
              },
            },
          },
        },
        nextLink: {
          serializedName: "nextLink",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const PrivateLinkResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateLinkResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResourceProperties",
    modelProperties: {
      groupId: {
        serializedName: "groupId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      requiredMembers: {
        serializedName: "requiredMembers",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      requiredZoneNames: {
        serializedName: "requiredZoneNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const SessionHostList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SessionHostList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SessionHost",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SessionHostProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SessionHostProperties",
    modelProperties: {
      objectId: {
        serializedName: "objectId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      lastHeartBeat: {
        serializedName: "lastHeartBeat",
        type: {
          name: "DateTime",
        },
      },
      sessions: {
        serializedName: "sessions",
        type: {
          name: "Number",
        },
      },
      agentVersion: {
        serializedName: "agentVersion",
        type: {
          name: "String",
        },
      },
      allowNewSession: {
        serializedName: "allowNewSession",
        type: {
          name: "Boolean",
        },
      },
      virtualMachineId: {
        serializedName: "virtualMachineId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resourceId: {
        serializedName: "resourceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assignedUser: {
        serializedName: "assignedUser",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      statusTimestamp: {
        serializedName: "statusTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String",
        },
      },
      sxSStackVersion: {
        serializedName: "sxSStackVersion",
        type: {
          name: "String",
        },
      },
      updateState: {
        serializedName: "updateState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      lastUpdateTime: {
        serializedName: "lastUpdateTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updateErrorMessage: {
        serializedName: "updateErrorMessage",
        type: {
          name: "String",
        },
      },
      sessionHostHealthCheckResults: {
        serializedName: "sessionHostHealthCheckResults",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SessionHostHealthCheckReport",
            },
          },
        },
      },
    },
  },
};

export const SessionHostHealthCheckReport: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SessionHostHealthCheckReport",
    modelProperties: {
      healthCheckName: {
        serializedName: "healthCheckName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      healthCheckResult: {
        serializedName: "healthCheckResult",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      additionalFailureDetails: {
        serializedName: "additionalFailureDetails",
        type: {
          name: "Composite",
          className: "SessionHostHealthCheckFailureDetails",
        },
      },
    },
  },
};

export const SessionHostHealthCheckFailureDetails: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SessionHostHealthCheckFailureDetails",
      modelProperties: {
        message: {
          serializedName: "message",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        errorCode: {
          serializedName: "errorCode",
          readOnly: true,
          type: {
            name: "Number",
          },
        },
        lastHealthCheckDateTime: {
          serializedName: "lastHealthCheckDateTime",
          readOnly: true,
          type: {
            name: "DateTime",
          },
        },
      },
    },
  };

export const SessionHostPatchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SessionHostPatchProperties",
    modelProperties: {
      allowNewSession: {
        serializedName: "allowNewSession",
        type: {
          name: "Boolean",
        },
      },
      assignedUser: {
        serializedName: "assignedUser",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UserSessionList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserSessionList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserSession",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UserSessionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserSessionProperties",
    modelProperties: {
      objectId: {
        serializedName: "objectId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      userPrincipalName: {
        serializedName: "userPrincipalName",
        type: {
          name: "String",
        },
      },
      applicationType: {
        serializedName: "applicationType",
        type: {
          name: "String",
        },
      },
      sessionState: {
        serializedName: "sessionState",
        type: {
          name: "String",
        },
      },
      activeDirectoryUserName: {
        serializedName: "activeDirectoryUserName",
        type: {
          name: "String",
        },
      },
      createTime: {
        serializedName: "createTime",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const SendMessage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SendMessage",
    modelProperties: {
      messageTitle: {
        serializedName: "messageTitle",
        type: {
          name: "String",
        },
      },
      messageBody: {
        serializedName: "messageBody",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ScalingPlanPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingPlanPatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ScalingPlanPatchProperties",
        },
      },
    },
  },
};

export const ScalingPlanPatchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingPlanPatchProperties",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      timeZone: {
        serializedName: "timeZone",
        type: {
          name: "String",
        },
      },
      exclusionTag: {
        serializedName: "exclusionTag",
        type: {
          name: "String",
        },
      },
      schedules: {
        serializedName: "schedules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScalingSchedule",
            },
          },
        },
      },
      hostPoolReferences: {
        serializedName: "hostPoolReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScalingHostPoolReference",
            },
          },
        },
      },
    },
  },
};

export const ScalingPlanPersonalScheduleList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingPlanPersonalScheduleList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScalingPlanPersonalSchedule",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ScalingPlanPersonalScheduleProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ScalingPlanPersonalScheduleProperties",
      modelProperties: {
        daysOfWeek: {
          serializedName: "daysOfWeek",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Enum",
                allowedValues: [
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday",
                  "Sunday",
                ],
              },
            },
          },
        },
        rampUpStartTime: {
          serializedName: "rampUpStartTime",
          type: {
            name: "Composite",
            className: "Time",
          },
        },
        rampUpAutoStartHosts: {
          serializedName: "rampUpAutoStartHosts",
          type: {
            name: "String",
          },
        },
        rampUpStartVMOnConnect: {
          serializedName: "rampUpStartVMOnConnect",
          type: {
            name: "String",
          },
        },
        rampUpActionOnDisconnect: {
          serializedName: "rampUpActionOnDisconnect",
          type: {
            name: "String",
          },
        },
        rampUpMinutesToWaitOnDisconnect: {
          serializedName: "rampUpMinutesToWaitOnDisconnect",
          type: {
            name: "Number",
          },
        },
        rampUpActionOnLogoff: {
          serializedName: "rampUpActionOnLogoff",
          type: {
            name: "String",
          },
        },
        rampUpMinutesToWaitOnLogoff: {
          serializedName: "rampUpMinutesToWaitOnLogoff",
          type: {
            name: "Number",
          },
        },
        peakStartTime: {
          serializedName: "peakStartTime",
          type: {
            name: "Composite",
            className: "Time",
          },
        },
        peakStartVMOnConnect: {
          serializedName: "peakStartVMOnConnect",
          type: {
            name: "String",
          },
        },
        peakActionOnDisconnect: {
          serializedName: "peakActionOnDisconnect",
          type: {
            name: "String",
          },
        },
        peakMinutesToWaitOnDisconnect: {
          serializedName: "peakMinutesToWaitOnDisconnect",
          type: {
            name: "Number",
          },
        },
        peakActionOnLogoff: {
          serializedName: "peakActionOnLogoff",
          type: {
            name: "String",
          },
        },
        peakMinutesToWaitOnLogoff: {
          serializedName: "peakMinutesToWaitOnLogoff",
          type: {
            name: "Number",
          },
        },
        rampDownStartTime: {
          serializedName: "rampDownStartTime",
          type: {
            name: "Composite",
            className: "Time",
          },
        },
        rampDownStartVMOnConnect: {
          serializedName: "rampDownStartVMOnConnect",
          type: {
            name: "String",
          },
        },
        rampDownActionOnDisconnect: {
          serializedName: "rampDownActionOnDisconnect",
          type: {
            name: "String",
          },
        },
        rampDownMinutesToWaitOnDisconnect: {
          serializedName: "rampDownMinutesToWaitOnDisconnect",
          type: {
            name: "Number",
          },
        },
        rampDownActionOnLogoff: {
          serializedName: "rampDownActionOnLogoff",
          type: {
            name: "String",
          },
        },
        rampDownMinutesToWaitOnLogoff: {
          serializedName: "rampDownMinutesToWaitOnLogoff",
          type: {
            name: "Number",
          },
        },
        offPeakStartTime: {
          serializedName: "offPeakStartTime",
          type: {
            name: "Composite",
            className: "Time",
          },
        },
        offPeakStartVMOnConnect: {
          serializedName: "offPeakStartVMOnConnect",
          type: {
            name: "String",
          },
        },
        offPeakActionOnDisconnect: {
          serializedName: "offPeakActionOnDisconnect",
          type: {
            name: "String",
          },
        },
        offPeakMinutesToWaitOnDisconnect: {
          serializedName: "offPeakMinutesToWaitOnDisconnect",
          type: {
            name: "Number",
          },
        },
        offPeakActionOnLogoff: {
          serializedName: "offPeakActionOnLogoff",
          type: {
            name: "String",
          },
        },
        offPeakMinutesToWaitOnLogoff: {
          serializedName: "offPeakMinutesToWaitOnLogoff",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const ScalingPlanPersonalSchedulePatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingPlanPersonalSchedulePatch",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ScalingPlanPersonalScheduleProperties",
        },
      },
    },
  },
};

export const ScalingPlanPooledScheduleList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingPlanPooledScheduleList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScalingPlanPooledSchedule",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ScalingPlanPooledScheduleProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingPlanPooledScheduleProperties",
    modelProperties: {
      daysOfWeek: {
        serializedName: "daysOfWeek",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday",
              ],
            },
          },
        },
      },
      rampUpStartTime: {
        serializedName: "rampUpStartTime",
        type: {
          name: "Composite",
          className: "Time",
        },
      },
      rampUpLoadBalancingAlgorithm: {
        serializedName: "rampUpLoadBalancingAlgorithm",
        type: {
          name: "String",
        },
      },
      rampUpMinimumHostsPct: {
        constraints: {
          InclusiveMaximum: 100,
        },
        serializedName: "rampUpMinimumHostsPct",
        type: {
          name: "Number",
        },
      },
      rampUpCapacityThresholdPct: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1,
        },
        serializedName: "rampUpCapacityThresholdPct",
        type: {
          name: "Number",
        },
      },
      peakStartTime: {
        serializedName: "peakStartTime",
        type: {
          name: "Composite",
          className: "Time",
        },
      },
      peakLoadBalancingAlgorithm: {
        serializedName: "peakLoadBalancingAlgorithm",
        type: {
          name: "String",
        },
      },
      rampDownStartTime: {
        serializedName: "rampDownStartTime",
        type: {
          name: "Composite",
          className: "Time",
        },
      },
      rampDownLoadBalancingAlgorithm: {
        serializedName: "rampDownLoadBalancingAlgorithm",
        type: {
          name: "String",
        },
      },
      rampDownMinimumHostsPct: {
        constraints: {
          InclusiveMaximum: 100,
        },
        serializedName: "rampDownMinimumHostsPct",
        type: {
          name: "Number",
        },
      },
      rampDownCapacityThresholdPct: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1,
        },
        serializedName: "rampDownCapacityThresholdPct",
        type: {
          name: "Number",
        },
      },
      rampDownForceLogoffUsers: {
        serializedName: "rampDownForceLogoffUsers",
        type: {
          name: "Boolean",
        },
      },
      rampDownStopHostsWhen: {
        serializedName: "rampDownStopHostsWhen",
        type: {
          name: "String",
        },
      },
      rampDownWaitTimeMinutes: {
        serializedName: "rampDownWaitTimeMinutes",
        type: {
          name: "Number",
        },
      },
      rampDownNotificationMessage: {
        serializedName: "rampDownNotificationMessage",
        type: {
          name: "String",
        },
      },
      offPeakStartTime: {
        serializedName: "offPeakStartTime",
        type: {
          name: "Composite",
          className: "Time",
        },
      },
      offPeakLoadBalancingAlgorithm: {
        serializedName: "offPeakLoadBalancingAlgorithm",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkspacePatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkspacePatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "WorkspacePatchProperties",
        },
      },
    },
  },
};

export const WorkspacePatchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkspacePatchProperties",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      applicationGroupReferences: {
        serializedName: "applicationGroupReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      publicNetworkAccess: {
        serializedName: "publicNetworkAccess",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateEndpointConnectionOnWorkspaceListResultWithSystemData: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "PrivateEndpointConnectionOnWorkspaceListResultWithSystemData",
      modelProperties: {
        value: {
          serializedName: "value",
          required: true,
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "PrivateEndpointConnectionOnHostPoolWithSystemData",
              },
            },
          },
        },
        nextLink: {
          serializedName: "nextLink",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const PrivateEndpointConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      ...ResourceAutoGenerated.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PrivateEndpointConnectionProperties",
        },
      },
    },
  },
};

export const MsixPackagePatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MsixPackagePatch",
    modelProperties: {
      ...ResourceAutoGenerated.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MsixPackagePatchProperties",
        },
      },
    },
  },
};

export const AppAttachPackagePatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppAttachPackagePatch",
    modelProperties: {
      ...ResourceAutoGenerated.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AppAttachPackagePatchProperties",
        },
      },
    },
  },
};

export const ApplicationGroupPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationGroupPatch",
    modelProperties: {
      ...ResourceAutoGenerated.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ApplicationGroupPatchProperties",
        },
      },
    },
  },
};

export const StartMenuItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StartMenuItem",
    modelProperties: {
      ...ResourceAutoGenerated.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "StartMenuItemProperties",
        },
      },
    },
  },
};

export const HostPoolPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HostPoolPatch",
    modelProperties: {
      ...ResourceAutoGenerated.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "HostPoolPatchProperties",
        },
      },
    },
  },
};

export const ExpandMsixImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExpandMsixImage",
    modelProperties: {
      ...ResourceAutoGenerated.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ExpandMsixImageProperties",
        },
      },
    },
  },
};

export const PrivateLinkResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResource",
    modelProperties: {
      ...ResourceAutoGenerated.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PrivateLinkResourceProperties",
        },
      },
    },
  },
};

export const SessionHostPatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SessionHostPatch",
    modelProperties: {
      ...ResourceAutoGenerated.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SessionHostPatchProperties",
        },
      },
    },
  },
};

export const ScalingPlanPooledSchedulePatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingPlanPooledSchedulePatch",
    modelProperties: {
      ...ResourceAutoGenerated.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ScalingPlanPooledScheduleProperties",
        },
      },
    },
  },
};

export const AppAttachPackage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppAttachPackage",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AppAttachPackageProperties",
        },
      },
    },
  },
};

export const ApplicationGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationGroup",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ApplicationGroupProperties",
        },
      },
    },
  },
};

export const HostPool: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HostPool",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "HostPoolProperties",
        },
      },
    },
  },
};

export const ScalingPlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingPlan",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ScalingPlanProperties",
        },
      },
    },
  },
};

export const Workspace: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Workspace",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "WorkspaceProperties",
        },
      },
    },
  },
};

export const MsixPackage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MsixPackage",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MsixPackageProperties",
        },
      },
    },
  },
};

export const Application: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Application",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ApplicationProperties",
        },
      },
    },
  },
};

export const Desktop: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Desktop",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DesktopProperties",
        },
      },
    },
  },
};

export const PrivateEndpointConnectionOnHostPoolWithSystemData: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "PrivateEndpointConnectionOnHostPoolWithSystemData",
      modelProperties: {
        ...ProxyResource.type.modelProperties,
        properties: {
          serializedName: "properties",
          type: {
            name: "Dictionary",
            value: { type: { name: "any" } },
          },
        },
      },
    },
  };

export const SessionHost: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SessionHost",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SessionHostProperties",
        },
      },
    },
  },
};

export const UserSession: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserSession",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "UserSessionProperties",
        },
      },
    },
  },
};

export const ScalingPlanPersonalSchedule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingPlanPersonalSchedule",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ScalingPlanPersonalScheduleProperties",
        },
      },
    },
  },
};

export const ScalingPlanPooledSchedule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingPlanPooledSchedule",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ScalingPlanPooledScheduleProperties",
        },
      },
    },
  },
};

export const PrivateEndpointConnectionOnWorkspaceWithSystemData: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "PrivateEndpointConnectionOnWorkspaceWithSystemData",
      modelProperties: {
        ...ProxyResource.type.modelProperties,
        properties: {
          serializedName: "properties",
          type: {
            name: "Dictionary",
            value: { type: { name: "any" } },
          },
        },
      },
    },
  };
