/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  PrivateEndpointConnectionWithSystemData,
  PrivateEndpointConnectionsListByHostPoolOptionalParams,
  PrivateEndpointConnectionsListByWorkspaceOptionalParams,
  PrivateEndpointConnectionsGetByHostPoolOptionalParams,
  PrivateEndpointConnectionsGetByHostPoolResponse,
  PrivateEndpointConnectionsUpdateByHostPoolOptionalParams,
  PrivateEndpointConnectionsUpdateByHostPoolResponse,
  PrivateEndpointConnectionsDeleteByHostPoolOptionalParams,
  PrivateEndpointConnectionsGetByWorkspaceOptionalParams,
  PrivateEndpointConnectionsGetByWorkspaceResponse,
  PrivateEndpointConnectionsUpdateByWorkspaceOptionalParams,
  PrivateEndpointConnectionsUpdateByWorkspaceResponse,
  PrivateEndpointConnectionsDeleteByWorkspaceOptionalParams,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PrivateEndpointConnections. */
export interface PrivateEndpointConnections {
  /**
   * Get a PrivateEndpointConnectionWithSystemData
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param options The options parameters.
   */
  listByHostPool(
    resourceGroupName: string,
    hostPoolName: string,
    options?: PrivateEndpointConnectionsListByHostPoolOptionalParams,
  ): PagedAsyncIterableIterator<PrivateEndpointConnectionWithSystemData>;
  /**
   * Get a PrivateEndpointConnectionWithSystemData
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param options The options parameters.
   */
  listByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    options?: PrivateEndpointConnectionsListByWorkspaceOptionalParams,
  ): PagedAsyncIterableIterator<PrivateEndpointConnectionWithSystemData>;
  /**
   * Get a PrivateEndpointConnectionWithSystemData
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name parameter for private endpoint
   * @param options The options parameters.
   */
  getByHostPool(
    resourceGroupName: string,
    hostPoolName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionsGetByHostPoolOptionalParams,
  ): Promise<PrivateEndpointConnectionsGetByHostPoolResponse>;
  /**
   * Create a PrivateEndpointConnectionWithSystemData
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name parameter for private endpoint
   * @param connection Resource create parameters.
   * @param options The options parameters.
   */
  updateByHostPool(
    resourceGroupName: string,
    hostPoolName: string,
    privateEndpointConnectionName: string,
    connection: PrivateEndpointConnectionWithSystemData,
    options?: PrivateEndpointConnectionsUpdateByHostPoolOptionalParams,
  ): Promise<PrivateEndpointConnectionsUpdateByHostPoolResponse>;
  /**
   * Delete a PrivateEndpointConnectionWithSystemData
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param privateEndpointConnectionName The name parameter for private endpoint
   * @param options The options parameters.
   */
  deleteByHostPool(
    resourceGroupName: string,
    hostPoolName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionsDeleteByHostPoolOptionalParams,
  ): Promise<void>;
  /**
   * Get a PrivateEndpointConnectionWithSystemData
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name parameter for private endpoint
   * @param options The options parameters.
   */
  getByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionsGetByWorkspaceOptionalParams,
  ): Promise<PrivateEndpointConnectionsGetByWorkspaceResponse>;
  /**
   * Create a PrivateEndpointConnectionWithSystemData
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name parameter for private endpoint
   * @param connection Resource create parameters.
   * @param options The options parameters.
   */
  updateByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    privateEndpointConnectionName: string,
    connection: PrivateEndpointConnectionWithSystemData,
    options?: PrivateEndpointConnectionsUpdateByWorkspaceOptionalParams,
  ): Promise<PrivateEndpointConnectionsUpdateByWorkspaceResponse>;
  /**
   * Delete a PrivateEndpointConnectionWithSystemData
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name parameter for private endpoint
   * @param options The options parameters.
   */
  deleteByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionsDeleteByWorkspaceOptionalParams,
  ): Promise<void>;
}
