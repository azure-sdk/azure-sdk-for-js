/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  HostPool,
  HostPoolsListOptionalParams,
  HostPoolsListByResourceGroupOptionalParams,
  ExpandMsixImage,
  MsixImageURI,
  HostPoolsExpandOptionalParams,
  AppAttachPackage,
  ImportPackageInfoRequest,
  HostPoolsImportAppAttachPackageInfoOptionalParams,
  ScalingPlan,
  HostPoolsListByHostPoolOptionalParams,
  PrivateLinkResource,
  HostPoolsPrivateLinkResourcesListByHostPoolOptionalParams,
  UserSession,
  HostPoolsUserSessionsListByHostPoolOptionalParams,
  HostPoolsGetOptionalParams,
  HostPoolsGetResponse,
  HostPoolsCreateOrUpdateOptionalParams,
  HostPoolsCreateOrUpdateResponse,
  HostPoolPatch,
  HostPoolsUpdateOptionalParams,
  HostPoolsUpdateResponse,
  HostPoolsDeleteOptionalParams,
  HostPoolsListRegistrationTokensOptionalParams,
  HostPoolsListRegistrationTokensResponse,
  HostPoolsRetrieveRegistrationTokenOptionalParams,
  HostPoolsRetrieveRegistrationTokenResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a HostPools. */
export interface HostPools {
  /**
   * List hostPools in subscription.
   * @param options The options parameters.
   */
  list(
    options?: HostPoolsListOptionalParams,
  ): PagedAsyncIterableIterator<HostPool>;
  /**
   * List hostPools.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: HostPoolsListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<HostPool>;
  /**
   * Expands and Lists MSIX packages in an Image, given the Image Path.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param body Object containing URI to MSIX Image
   * @param options The options parameters.
   */
  listExpand(
    resourceGroupName: string,
    hostPoolName: string,
    body: MsixImageURI,
    options?: HostPoolsExpandOptionalParams,
  ): PagedAsyncIterableIterator<ExpandMsixImage>;
  /**
   * Gets information from a package given the path to the package.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param body Object containing URI to package image and other optional properties
   * @param options The options parameters.
   */
  listImportAppAttachPackageInfo(
    resourceGroupName: string,
    hostPoolName: string,
    body: ImportPackageInfoRequest,
    options?: HostPoolsImportAppAttachPackageInfoOptionalParams,
  ): PagedAsyncIterableIterator<AppAttachPackage>;
  /**
   * List scaling plan associated with hostpool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param options The options parameters.
   */
  listByHostPool(
    resourceGroupName: string,
    hostPoolName: string,
    options?: HostPoolsListByHostPoolOptionalParams,
  ): PagedAsyncIterableIterator<ScalingPlan>;
  /**
   * List the private link resources available for this hostpool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param options The options parameters.
   */
  listPrivateLinkResourcesListByHostPool(
    resourceGroupName: string,
    hostPoolName: string,
    options?: HostPoolsPrivateLinkResourcesListByHostPoolOptionalParams,
  ): PagedAsyncIterableIterator<PrivateLinkResource>;
  /**
   * List userSessions.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param options The options parameters.
   */
  listUserSessionsListByHostPool(
    resourceGroupName: string,
    hostPoolName: string,
    options?: HostPoolsUserSessionsListByHostPoolOptionalParams,
  ): PagedAsyncIterableIterator<UserSession>;
  /**
   * Get a host pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    hostPoolName: string,
    options?: HostPoolsGetOptionalParams,
  ): Promise<HostPoolsGetResponse>;
  /**
   * Create or update a host pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param resource Object containing HostPool definitions.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    hostPoolName: string,
    resource: HostPool,
    options?: HostPoolsCreateOrUpdateOptionalParams,
  ): Promise<HostPoolsCreateOrUpdateResponse>;
  /**
   * Update a host pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param properties Object containing HostPool definitions.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    hostPoolName: string,
    properties: HostPoolPatch,
    options?: HostPoolsUpdateOptionalParams,
  ): Promise<HostPoolsUpdateResponse>;
  /**
   * Remove a host pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    hostPoolName: string,
    options?: HostPoolsDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Operation to list the RegistrationTokens associated with the HostPool
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param options The options parameters.
   */
  listRegistrationTokens(
    resourceGroupName: string,
    hostPoolName: string,
    options?: HostPoolsListRegistrationTokensOptionalParams,
  ): Promise<HostPoolsListRegistrationTokensResponse>;
  /**
   * Registration token of the host pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param hostPoolName The name of the host pool within the specified resource group
   * @param options The options parameters.
   */
  retrieveRegistrationToken(
    resourceGroupName: string,
    hostPoolName: string,
    options?: HostPoolsRetrieveRegistrationTokenOptionalParams,
  ): Promise<HostPoolsRetrieveRegistrationTokenResponse>;
}
