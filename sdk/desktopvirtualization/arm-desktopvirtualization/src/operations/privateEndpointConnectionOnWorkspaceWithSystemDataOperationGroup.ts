/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator, PageSettings } from "@azure/core-paging";
import { setContinuationToken } from "../pagingHelper";
import { PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroup } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { DesktopVirtualizationAPIClient } from "../desktopVirtualizationAPIClient";
import {
  PrivateEndpointConnectionOnHostPoolWithSystemData,
  PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupListByWorkspaceNextOptionalParams,
  PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupListByWorkspaceOptionalParams,
  PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupListByWorkspaceResponse,
  PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupGetByWorkspaceOptionalParams,
  PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupGetByWorkspaceResponse,
  PrivateEndpointConnectionOnWorkspaceWithSystemData,
  PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupUpdateByWorkspaceOptionalParams,
  PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupUpdateByWorkspaceResponse,
  PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupDeleteByWorkspaceOptionalParams,
  PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupListByWorkspaceNextResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroup operations. */
export class PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupImpl
  implements PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroup
{
  private readonly client: DesktopVirtualizationAPIClient;

  /**
   * Initialize a new instance of the class PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroup class.
   * @param client Reference to the service client
   */
  constructor(client: DesktopVirtualizationAPIClient) {
    this.client = client;
  }

  /**
   * List private endpoint connections associated with Workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param options The options parameters.
   */
  public listByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    options?: PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupListByWorkspaceOptionalParams,
  ): PagedAsyncIterableIterator<PrivateEndpointConnectionOnHostPoolWithSystemData> {
    const iter = this.listByWorkspacePagingAll(
      resourceGroupName,
      workspaceName,
      options,
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.listByWorkspacePagingPage(
          resourceGroupName,
          workspaceName,
          options,
          settings,
        );
      },
    };
  }

  private async *listByWorkspacePagingPage(
    resourceGroupName: string,
    workspaceName: string,
    options?: PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupListByWorkspaceOptionalParams,
    settings?: PageSettings,
  ): AsyncIterableIterator<
    PrivateEndpointConnectionOnHostPoolWithSystemData[]
  > {
    let result: PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupListByWorkspaceResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._listByWorkspace(
        resourceGroupName,
        workspaceName,
        options,
      );
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._listByWorkspaceNext(
        resourceGroupName,
        workspaceName,
        continuationToken,
        options,
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *listByWorkspacePagingAll(
    resourceGroupName: string,
    workspaceName: string,
    options?: PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupListByWorkspaceOptionalParams,
  ): AsyncIterableIterator<PrivateEndpointConnectionOnHostPoolWithSystemData> {
    for await (const page of this.listByWorkspacePagingPage(
      resourceGroupName,
      workspaceName,
      options,
    )) {
      yield* page;
    }
  }

  /**
   * List private endpoint connections associated with Workspace.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param options The options parameters.
   */
  private _listByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    options?: PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupListByWorkspaceOptionalParams,
  ): Promise<PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupListByWorkspaceResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, workspaceName, options },
      listByWorkspaceOperationSpec,
    );
  }

  /**
   * Get a private endpoint connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
   *                                      Azure resource.
   * @param options The options parameters.
   */
  getByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupGetByWorkspaceOptionalParams,
  ): Promise<PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupGetByWorkspaceResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        privateEndpointConnectionName,
        options,
      },
      getByWorkspaceOperationSpec,
    );
  }

  /**
   * Approve or reject a private endpoint connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
   *                                      Azure resource.
   * @param resource Object containing the updated connection.
   * @param options The options parameters.
   */
  updateByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    privateEndpointConnectionName: string,
    resource: PrivateEndpointConnectionOnWorkspaceWithSystemData,
    options?: PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupUpdateByWorkspaceOptionalParams,
  ): Promise<PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupUpdateByWorkspaceResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        privateEndpointConnectionName,
        resource,
        options,
      },
      updateByWorkspaceOperationSpec,
    );
  }

  /**
   * Remove a connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
   *                                      Azure resource.
   * @param options The options parameters.
   */
  deleteByWorkspace(
    resourceGroupName: string,
    workspaceName: string,
    privateEndpointConnectionName: string,
    options?: PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupDeleteByWorkspaceOptionalParams,
  ): Promise<void> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        privateEndpointConnectionName,
        options,
      },
      deleteByWorkspaceOperationSpec,
    );
  }

  /**
   * ListByWorkspaceNext
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace
   * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.
   * @param options The options parameters.
   */
  private _listByWorkspaceNext(
    resourceGroupName: string,
    workspaceName: string,
    nextLink: string,
    options?: PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupListByWorkspaceNextOptionalParams,
  ): Promise<PrivateEndpointConnectionOnWorkspaceWithSystemDataOperationGroupListByWorkspaceNextResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, workspaceName, nextLink, options },
      listByWorkspaceNextOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listByWorkspaceOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper:
        Mappers.PrivateEndpointConnectionOnWorkspaceListResultWithSystemData,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [
    Parameters.apiVersion,
    Parameters.pageSize,
    Parameters.isDescending,
    Parameters.initialSkip,
  ],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
const getByWorkspaceOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionOnWorkspaceWithSystemData,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.privateEndpointConnectionName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
const updateByWorkspaceOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionOnWorkspaceWithSystemData,
    },
    201: {
      bodyMapper: Mappers.PrivateEndpointConnectionOnWorkspaceWithSystemData,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  requestBody: Parameters.resource10,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.privateEndpointConnectionName,
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer,
};
const deleteByWorkspaceOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}",
  httpMethod: "DELETE",
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.privateEndpointConnectionName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
const listByWorkspaceNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper:
        Mappers.PrivateEndpointConnectionOnWorkspaceListResultWithSystemData,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  urlParameters: [
    Parameters.$host,
    Parameters.nextLink,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
