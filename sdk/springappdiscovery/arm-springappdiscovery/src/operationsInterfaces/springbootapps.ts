/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  SpringbootappsModel,
  SpringbootappsListByResourceGroupOptionalParams,
  SpringbootappsListBySubscriptionOptionalParams,
  SpringbootappsGetOptionalParams,
  SpringbootappsGetResponse,
  SpringbootappsCreateOrUpdateOptionalParams,
  SpringbootappsCreateOrUpdateResponse,
  SpringbootappsDeleteOptionalParams,
  SpringbootappsDeleteResponse,
  SpringbootappsPatch,
  SpringbootappsUpdateOptionalParams,
  SpringbootappsUpdateResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Springbootapps. */
export interface Springbootapps {
  /**
   * List springbootapps resource by resourceGroup
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName The springbootsites name.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    siteName: string,
    options?: SpringbootappsListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<SpringbootappsModel>;
  /**
   * List springbootapps resource by subscription
   * @param siteName The springbootsites name.
   * @param options The options parameters.
   */
  listBySubscription(
    siteName: string,
    options?: SpringbootappsListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<SpringbootappsModel>;
  /**
   * Get a springbootapps resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName The springbootsites name.
   * @param springbootappsName The springbootapps name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    siteName: string,
    springbootappsName: string,
    options?: SpringbootappsGetOptionalParams,
  ): Promise<SpringbootappsGetResponse>;
  /**
   * Create a springbootapps resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName The springbootsites name.
   * @param springbootappsName The springbootapps name.
   * @param springbootapps Create a springbootapps payload.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    siteName: string,
    springbootappsName: string,
    springbootapps: SpringbootappsModel,
    options?: SpringbootappsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SpringbootappsCreateOrUpdateResponse>,
      SpringbootappsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a springbootapps resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName The springbootsites name.
   * @param springbootappsName The springbootapps name.
   * @param springbootapps Create a springbootapps payload.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    siteName: string,
    springbootappsName: string,
    springbootapps: SpringbootappsModel,
    options?: SpringbootappsCreateOrUpdateOptionalParams,
  ): Promise<SpringbootappsCreateOrUpdateResponse>;
  /**
   * Delete a springbootapps resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName The springbootsites name.
   * @param springbootappsName The springbootapps name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    siteName: string,
    springbootappsName: string,
    options?: SpringbootappsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SpringbootappsDeleteResponse>,
      SpringbootappsDeleteResponse
    >
  >;
  /**
   * Delete a springbootapps resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName The springbootsites name.
   * @param springbootappsName The springbootapps name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    siteName: string,
    springbootappsName: string,
    options?: SpringbootappsDeleteOptionalParams,
  ): Promise<SpringbootappsDeleteResponse>;
  /**
   * Update a springbootapps resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param siteName The springbootsites name.
   * @param springbootappsName The springbootapps name.
   * @param springbootapps Update a springbootapps payload.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    siteName: string,
    springbootappsName: string,
    springbootapps: SpringbootappsPatch,
    options?: SpringbootappsUpdateOptionalParams,
  ): Promise<SpringbootappsUpdateResponse>;
}
