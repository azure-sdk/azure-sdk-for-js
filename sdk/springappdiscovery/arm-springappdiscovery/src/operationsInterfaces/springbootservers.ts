/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  SpringbootserversModel,
  SpringbootserversListByResourceGroupOptionalParams,
  SpringbootserversListBySubscriptionOptionalParams,
  SpringbootserversGetOptionalParams,
  SpringbootserversGetResponse,
  SpringbootserversCreateOrUpdateOptionalParams,
  SpringbootserversCreateOrUpdateResponse,
  SpringbootserversDeleteOptionalParams,
  SpringbootserversPatch,
  SpringbootserversUpdateOptionalParams,
  SpringbootserversUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Springbootservers. */
export interface Springbootservers {
  /**
   * List springbootservers resource by resourceGroup
   * @param siteName The springbootsites name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    siteName: string,
    resourceGroupName: string,
    options?: SpringbootserversListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<SpringbootserversModel>;
  /**
   * List springbootservers resource by subscription
   * @param siteName The springbootsites name.
   * @param options The options parameters.
   */
  listBySubscription(
    siteName: string,
    options?: SpringbootserversListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<SpringbootserversModel>;
  /**
   * List springbootservers resource.
   * @param siteName The springbootsites name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param springbootserversName The springbootservers name.
   * @param options The options parameters.
   */
  get(
    siteName: string,
    resourceGroupName: string,
    springbootserversName: string,
    options?: SpringbootserversGetOptionalParams
  ): Promise<SpringbootserversGetResponse>;
  /**
   * Create springbootservers resource.
   * @param siteName The springbootsites name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param springbootserversName The springbootservers name.
   * @param springbootservers Create a springbootservers payload.
   * @param options The options parameters.
   */
  createOrUpdate(
    siteName: string,
    resourceGroupName: string,
    springbootserversName: string,
    springbootservers: SpringbootserversModel,
    options?: SpringbootserversCreateOrUpdateOptionalParams
  ): Promise<SpringbootserversCreateOrUpdateResponse>;
  /**
   * Delete springbootservers resource.
   * @param siteName The springbootsites name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param springbootserversName The springbootservers name.
   * @param options The options parameters.
   */
  beginDelete(
    siteName: string,
    resourceGroupName: string,
    springbootserversName: string,
    options?: SpringbootserversDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete springbootservers resource.
   * @param siteName The springbootsites name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param springbootserversName The springbootservers name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    siteName: string,
    resourceGroupName: string,
    springbootserversName: string,
    options?: SpringbootserversDeleteOptionalParams
  ): Promise<void>;
  /**
   * Update springbootservers resource.
   * @param siteName The springbootsites name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param springbootserversName The springbootservers name.
   * @param springbootservers Update a springbootservers payload.
   * @param options The options parameters.
   */
  update(
    siteName: string,
    resourceGroupName: string,
    springbootserversName: string,
    springbootservers: SpringbootserversPatch,
    options?: SpringbootserversUpdateOptionalParams
  ): Promise<SpringbootserversUpdateResponse>;
}
