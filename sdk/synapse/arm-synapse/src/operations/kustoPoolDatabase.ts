/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { KustoPoolDatabase } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SynapseManagementClient } from "../synapseManagementClient";
import {
  DatabaseInviteFollowerRequest,
  KustoPoolDatabaseInviteFollowerOptionalParams,
  KustoPoolDatabaseInviteFollowerResponse
} from "../models";

/** Class containing KustoPoolDatabase operations. */
export class KustoPoolDatabaseImpl implements KustoPoolDatabase {
  private readonly client: SynapseManagementClient;

  /**
   * Initialize a new instance of the class KustoPoolDatabase class.
   * @param client Reference to the service client
   */
  constructor(client: SynapseManagementClient) {
    this.client = client;
  }

  /**
   * Generates an invitation token that allows attaching a follower database to this database.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workspaceName The name of the workspace.
   * @param kustoPoolName The name of the Kusto pool.
   * @param databaseName The name of the database in the Kusto pool.
   * @param parameters The follower invitation request parameters.
   * @param options The options parameters.
   */
  inviteFollower(
    resourceGroupName: string,
    workspaceName: string,
    kustoPoolName: string,
    databaseName: string,
    parameters: DatabaseInviteFollowerRequest,
    options?: KustoPoolDatabaseInviteFollowerOptionalParams
  ): Promise<KustoPoolDatabaseInviteFollowerResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        kustoPoolName,
        databaseName,
        parameters,
        options
      },
      inviteFollowerOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const inviteFollowerOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/inviteFollower",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.DatabaseInviteFollowerResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  requestBody: Parameters.parameters30,
  queryParameters: [Parameters.apiVersion1],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName,
    Parameters.kustoPoolName1,
    Parameters.databaseName
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
