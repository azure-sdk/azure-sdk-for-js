/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The check availability request body. */
export interface CheckNameAvailabilityRequest {
  /** The name of the resource for which availability needs to be checked. */
  name?: string;
  /** The resource type. */
  type?: string;
}

/** The check availability result. */
export interface CheckNameAvailabilityResponse {
  /** Indicates if the resource name is available. */
  nameAvailable?: boolean;
  /** The reason why the given name is not available. */
  reason?: CheckNameAvailabilityReason;
  /** Detailed reason why the given name is available. */
  message?: string;
}

/** The response of a list Providers operation. */
export interface OfferingsListResult {
  /** The ProviderDescription items on this page */
  value: ProviderDescription[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Information about an offering. A provider offering is an entity that offers Targets to run Azure Quantum Jobs. */
export interface ProviderDescription {
  /** Unique provider's id. */
  id?: string;
  /**
   * Provider's display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** Provider properties. */
  properties?: ProviderProperties;
}

/** Provider properties. */
export interface ProviderProperties {
  /**
   * A description about this provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * Provider type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly providerType?: string;
  /**
   * Company name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly company?: string;
  /**
   * Provider's default endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly defaultEndpoint?: string;
  /** Azure Active Directory info. */
  aad?: ProviderPropertiesAad;
  /** Provider's Managed-Application info */
  managedApplication?: ProviderPropertiesManagedApplication;
  /** The list of targets available from this provider. */
  targets?: TargetDescription[];
  /** The list of skus available from this provider. */
  skus?: SkuDescription[];
  /** The list of quota dimensions from the provider. */
  quotaDimensions?: QuotaDimension[];
  /** The list of pricing dimensions from the provider. */
  pricingDimensions?: PricingDimension[];
}

/** Azure Active Directory info. */
export interface ProviderPropertiesAad {
  /**
   * Provider's application id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly applicationId?: string;
  /**
   * Provider's tenant id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
}

/** Provider's Managed-Application info */
export interface ProviderPropertiesManagedApplication {
  /**
   * Provider's publisher id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly publisherId?: string;
  /**
   * Provider's offer id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly offerId?: string;
}

/** Information about a Target. A target is the component that can process a specific type of Job. */
export interface TargetDescription {
  /** Unique target id. */
  id?: string;
  /** Display name of this target. */
  name?: string;
  /** A description about this target. */
  description?: string;
  /** List of data formats accepted by this target. */
  acceptedDataFormats?: string[];
  /** List of content encodings accepted by this target. */
  acceptedContentEncodings?: string[];
}

/** Information about a specific sku. */
export interface SkuDescription {
  /** Unique sku id. */
  id?: string;
  /** Display name of this sku. */
  name?: string;
  /** Display name of this sku. */
  version?: string;
  /** Description about this sku. */
  description?: string;
  /** Uri to subscribe to the restricted access sku. */
  restrictedAccessUri?: string;
  /** Flag to indicate whether the sku should be automatically added during workspace creation. */
  autoAdd?: boolean;
  /** The list of targets available for this sku. */
  targets?: string[];
  /** The list of quota dimensions for this sku. */
  quotaDimensions?: QuotaDimension[];
  /** The list of pricing details for the sku. */
  pricingDetails?: PricingDetail[];
}

/** Information about a specific quota dimension. */
export interface QuotaDimension {
  /** Unique id of this dimension. */
  id?: string;
  /** The scope of this quota dimension. */
  scope?: string;
  /** The reset period of this quota dimension. */
  period?: string;
  /** The max limit of this dimension. */
  quota?: number;
  /** The display name of this quota dimension. */
  name?: string;
  /** A description about this quota dimension. */
  description?: string;
  /** The standard unit of measurement used for this quota dimension. */
  unit?: string;
  /** The standard unit of measurement used for this quota dimension in plural form. */
  unitPlural?: string;
}

/** Detailed pricing information for an sku. */
export interface PricingDetail {
  /** Unique id for this pricing information. */
  id?: string;
  /** The unit cost of this sku. */
  value?: string;
}

/** Information about pricing dimension. */
export interface PricingDimension {
  /** Unique id of this pricing dimension. */
  id?: string;
  /** The display name of this pricing dimension. */
  name?: string;
}

/** The response of a QuantumWorkspace list operation. */
export interface QuantumWorkspaceListResult {
  /** The QuantumWorkspace items on this page */
  value: QuantumWorkspace[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Properties of a Workspace */
export interface WorkspaceResourceProperties {
  /** List of Providers selected for this Workspace */
  providers?: Provider[];
  /**
   * Whether the current workspace is ready to accept Jobs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly usable?: UsableStatus;
  /**
   * Provisioning status field
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: WorkspaceProvisioningStatus;
  /** ARM Resource Id of the storage account associated with this workspace. */
  storageAccount?: string;
  /**
   * The URI of the workspace endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpointUri?: string;
  /** Indicator of enablement of the Quantum workspace Api keys. */
  apiKeyEnabled?: boolean;
}

/** Information about a Provider. A Provider is an entity that offers Targets to run Azure Quantum Jobs. */
export interface Provider {
  /** Unique id of this provider. */
  providerId?: string;
  /** The sku associated with pricing information for this provider. */
  providerSku?: string;
  /** A Uri identifying the specific instance of this provider. */
  instanceUri?: string;
  /** The provider's marketplace application display name. */
  applicationName?: string;
  /** Provisioning status field */
  provisioningState?: ProviderStatus;
  /** Id to track resource usage for the provider. */
  resourceUsageId?: string;
}

/** Managed service identity (system assigned and/or user assigned identities) */
export interface ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */
  type: ManagedServiceIdentityType;
  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
  userAssignedIdentities?: {
    [propertyName: string]: UserAssignedIdentity | null;
  };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The type used for updating tags in QuantumWorkspace resources. */
export interface QuantumWorkspaceTagsUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Result of list Api keys and connection strings. */
export interface ListKeysResult {
  /** Indicator of enablement of the Quantum workspace Api keys. */
  apiKeyEnabled?: boolean;
  /** The quantum workspace primary api key. */
  primaryKey?: ApiKey;
  /** The quantum workspace secondary api key. */
  secondaryKey?: ApiKey;
  /**
   * The connection string of the primary api key.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly primaryConnectionString?: string;
  /**
   * The connection string of the secondary api key.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly secondaryConnectionString?: string;
}

/** Azure quantum workspace Api key details. */
export interface ApiKey {
  /** The creation time of the api key. */
  createdAt?: Date;
  /**
   * The Api key.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly key?: string;
}

/** List of api keys to be generated. */
export interface ApiKeys {
  /** A list of api key names. */
  keys?: KeyType[];
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource proxy definition object for Quantum Workspace. */
export interface QuantumWorkspace extends TrackedResource {
  /** Gets or sets the properties. Define quantum workspace's specific properties. */
  properties?: WorkspaceResourceProperties;
  /** The managed service identities assigned to this resource. */
  identity?: ManagedServiceIdentity;
}

/** Defines headers for Workspaces_createOrUpdate operation. */
export interface WorkspacesCreateOrUpdateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Workspaces_delete operation. */
export interface WorkspacesDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */
export enum KnownCheckNameAvailabilityReason {
  /** Invalid */
  Invalid = "Invalid",
  /** AlreadyExists */
  AlreadyExists = "AlreadyExists",
}

/**
 * Defines values for CheckNameAvailabilityReason. \
 * {@link KnownCheckNameAvailabilityReason} can be used interchangeably with CheckNameAvailabilityReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export type CheckNameAvailabilityReason = string;

/** Known values of {@link ProviderStatus} that the service accepts. */
export enum KnownProviderStatus {
  /** The provider is successfully provisioned. */
  Succeeded = "Succeeded",
  /** The provider is starting provisioning. */
  Launching = "Launching",
  /** The provider is updating. */
  Updating = "Updating",
  /** The provider is deleting. */
  Deleting = "Deleting",
  /** The provider is deleted. */
  Deleted = "Deleted",
  /** The provider is failed. */
  Failed = "Failed",
}

/**
 * Defines values for ProviderStatus. \
 * {@link KnownProviderStatus} can be used interchangeably with ProviderStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: The provider is successfully provisioned. \
 * **Launching**: The provider is starting provisioning. \
 * **Updating**: The provider is updating. \
 * **Deleting**: The provider is deleting. \
 * **Deleted**: The provider is deleted. \
 * **Failed**: The provider is failed.
 */
export type ProviderStatus = string;

/** Known values of {@link UsableStatus} that the service accepts. */
export enum KnownUsableStatus {
  /** The workspace is usable and can accept jobs. */
  Yes = "Yes",
  /** The workspace is not usable and cannot accept jobs. */
  No = "No",
  /** The workspace is partially usable. */
  Partial = "Partial",
}

/**
 * Defines values for UsableStatus. \
 * {@link KnownUsableStatus} can be used interchangeably with UsableStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Yes**: The workspace is usable and can accept jobs. \
 * **No**: The workspace is not usable and cannot accept jobs. \
 * **Partial**: The workspace is partially usable.
 */
export type UsableStatus = string;

/** Known values of {@link WorkspaceProvisioningStatus} that the service accepts. */
export enum KnownWorkspaceProvisioningStatus {
  /** The Workspace provisioning is succeeded. */
  Succeeded = "Succeeded",
  /** The Workspace provisioning failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** The Workspace is currently starting to provision a provider. */
  ProviderLaunching = "ProviderLaunching",
  /** The Workspace is currently updating a provider. */
  ProviderUpdating = "ProviderUpdating",
  /** The Workspace is currently deleting a provider. */
  ProviderDeleting = "ProviderDeleting",
  /** The Workspace is currently provisioning a provider. */
  ProviderProvisioning = "ProviderProvisioning",
}

/**
 * Defines values for WorkspaceProvisioningStatus. \
 * {@link KnownWorkspaceProvisioningStatus} can be used interchangeably with WorkspaceProvisioningStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: The Workspace provisioning is succeeded. \
 * **Failed**: The Workspace provisioning failed. \
 * **Canceled**: Resource creation was canceled. \
 * **ProviderLaunching**: The Workspace is currently starting to provision a provider. \
 * **ProviderUpdating**: The Workspace is currently updating a provider. \
 * **ProviderDeleting**: The Workspace is currently deleting a provider. \
 * **ProviderProvisioning**: The Workspace is currently provisioning a provider.
 */
export type WorkspaceProvisioningStatus = string;

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned,UserAssigned",
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned,UserAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link KeyType} that the service accepts. */
export enum KnownKeyType {
  /** The primary API key. */
  Primary = "Primary",
  /** The secondary API key. */
  Secondary = "Secondary",
}

/**
 * Defines values for KeyType. \
 * {@link KnownKeyType} can be used interchangeably with KeyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Primary**: The primary API key. \
 * **Secondary**: The secondary API key.
 */
export type KeyType = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface WorkspacesCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type WorkspacesCheckNameAvailabilityResponse =
  CheckNameAvailabilityResponse;

/** Optional parameters. */
export interface WorkspacesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type WorkspacesListBySubscriptionResponse = QuantumWorkspaceListResult;

/** Optional parameters. */
export interface WorkspacesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type WorkspacesListByResourceGroupResponse = QuantumWorkspaceListResult;

/** Optional parameters. */
export interface WorkspacesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkspacesGetResponse = QuantumWorkspace;

/** Optional parameters. */
export interface WorkspacesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type WorkspacesCreateOrUpdateResponse = QuantumWorkspace;

/** Optional parameters. */
export interface WorkspacesUpdateTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateTags operation. */
export type WorkspacesUpdateTagsResponse = QuantumWorkspace;

/** Optional parameters. */
export interface WorkspacesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type WorkspacesDeleteResponse = WorkspacesDeleteHeaders;

/** Optional parameters. */
export interface WorkspacesListKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listKeys operation. */
export type WorkspacesListKeysResponse = ListKeysResult;

/** Optional parameters. */
export interface WorkspacesRegenerateKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface WorkspacesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type WorkspacesListBySubscriptionNextResponse =
  QuantumWorkspaceListResult;

/** Optional parameters. */
export interface WorkspacesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type WorkspacesListByResourceGroupNextResponse =
  QuantumWorkspaceListResult;

/** Optional parameters. */
export interface OfferingsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OfferingsListResponse = OfferingsListResult;

/** Optional parameters. */
export interface OfferingsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OfferingsListNextResponse = OfferingsListResult;

/** Optional parameters. */
export interface AzureQuantumManagementAPIOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
