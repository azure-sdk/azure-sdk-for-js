/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Gate,
  GatesListByFleetOptionalParams,
  GatesGetOptionalParams,
  GatesGetResponse,
  GatePatch,
  GatesUpdateOptionalParams,
  GatesUpdateResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Gates. */
export interface Gates {
  /**
   * List Gate resources by Fleet
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param fleetName The name of the Fleet resource.
   * @param options The options parameters.
   */
  listByFleet(
    resourceGroupName: string,
    fleetName: string,
    options?: GatesListByFleetOptionalParams,
  ): PagedAsyncIterableIterator<Gate>;
  /**
   * Get a Gate
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param fleetName The name of the Fleet resource.
   * @param gateName The name of the Gate resource, a GUID.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    fleetName: string,
    gateName: string,
    options?: GatesGetOptionalParams,
  ): Promise<GatesGetResponse>;
  /**
   * Update a Gate
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param fleetName The name of the Fleet resource.
   * @param gateName The name of the Gate resource, a GUID.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    fleetName: string,
    gateName: string,
    properties: GatePatch,
    options?: GatesUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<GatesUpdateResponse>, GatesUpdateResponse>
  >;
  /**
   * Update a Gate
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param fleetName The name of the Fleet resource.
   * @param gateName The name of the Gate resource, a GUID.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    fleetName: string,
    gateName: string,
    properties: GatePatch,
    options?: GatesUpdateOptionalParams,
  ): Promise<GatesUpdateResponse>;
}
