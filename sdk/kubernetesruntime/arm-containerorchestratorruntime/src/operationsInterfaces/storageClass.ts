/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  StorageClassResource,
  StorageClassListOptionalParams,
  StorageClassGetOptionalParams,
  StorageClassGetResponse,
  StorageClassCreateOrUpdateOptionalParams,
  StorageClassCreateOrUpdateResponse,
  StorageClassResourceUpdate,
  StorageClassUpdateOptionalParams,
  StorageClassUpdateResponse,
  StorageClassDeleteOptionalParams,
  StorageClassDeleteResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a StorageClass. */
export interface StorageClass {
  /**
   * List StorageClassResource resources by parent
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param options The options parameters.
   */
  list(
    resourceUri: string,
    options?: StorageClassListOptionalParams,
  ): PagedAsyncIterableIterator<StorageClassResource>;
  /**
   * Get a StorageClassResource
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param storageClassName The name of the the storage class
   * @param options The options parameters.
   */
  get(
    resourceUri: string,
    storageClassName: string,
    options?: StorageClassGetOptionalParams,
  ): Promise<StorageClassGetResponse>;
  /**
   * Create a StorageClassResource
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param storageClassName The name of the the storage class
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceUri: string,
    storageClassName: string,
    resource: StorageClassResource,
    options?: StorageClassCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<StorageClassCreateOrUpdateResponse>,
      StorageClassCreateOrUpdateResponse
    >
  >;
  /**
   * Create a StorageClassResource
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param storageClassName The name of the the storage class
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceUri: string,
    storageClassName: string,
    resource: StorageClassResource,
    options?: StorageClassCreateOrUpdateOptionalParams,
  ): Promise<StorageClassCreateOrUpdateResponse>;
  /**
   * Update a StorageClassResource
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param storageClassName The name of the the storage class
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceUri: string,
    storageClassName: string,
    properties: StorageClassResourceUpdate,
    options?: StorageClassUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<StorageClassUpdateResponse>,
      StorageClassUpdateResponse
    >
  >;
  /**
   * Update a StorageClassResource
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param storageClassName The name of the the storage class
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceUri: string,
    storageClassName: string,
    properties: StorageClassResourceUpdate,
    options?: StorageClassUpdateOptionalParams,
  ): Promise<StorageClassUpdateResponse>;
  /**
   * Delete a StorageClassResource
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param storageClassName The name of the the storage class
   * @param options The options parameters.
   */
  beginDelete(
    resourceUri: string,
    storageClassName: string,
    options?: StorageClassDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<StorageClassDeleteResponse>,
      StorageClassDeleteResponse
    >
  >;
  /**
   * Delete a StorageClassResource
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param storageClassName The name of the the storage class
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceUri: string,
    storageClassName: string,
    options?: StorageClassDeleteOptionalParams,
  ): Promise<StorageClassDeleteResponse>;
}
