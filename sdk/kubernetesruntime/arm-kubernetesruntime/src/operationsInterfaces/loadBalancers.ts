/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  LoadBalancer,
  LoadBalancersListOptionalParams,
  LoadBalancersGetOptionalParams,
  LoadBalancersGetResponse,
  LoadBalancersCreateOrUpdateOptionalParams,
  LoadBalancersCreateOrUpdateResponse,
  LoadBalancersDeleteOptionalParams,
  LoadBalancersDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a LoadBalancers. */
export interface LoadBalancers {
  /**
   * List LoadBalancer resources by parent
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param options The options parameters.
   */
  list(
    resourceUri: string,
    options?: LoadBalancersListOptionalParams,
  ): PagedAsyncIterableIterator<LoadBalancer>;
  /**
   * Get a LoadBalancer
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param loadBalancerName The name of the LoadBalancer
   * @param options The options parameters.
   */
  get(
    resourceUri: string,
    loadBalancerName: string,
    options?: LoadBalancersGetOptionalParams,
  ): Promise<LoadBalancersGetResponse>;
  /**
   * Create a LoadBalancer
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param loadBalancerName The name of the LoadBalancer
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceUri: string,
    loadBalancerName: string,
    resource: LoadBalancer,
    options?: LoadBalancersCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LoadBalancersCreateOrUpdateResponse>,
      LoadBalancersCreateOrUpdateResponse
    >
  >;
  /**
   * Create a LoadBalancer
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param loadBalancerName The name of the LoadBalancer
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceUri: string,
    loadBalancerName: string,
    resource: LoadBalancer,
    options?: LoadBalancersCreateOrUpdateOptionalParams,
  ): Promise<LoadBalancersCreateOrUpdateResponse>;
  /**
   * Delete a LoadBalancer
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param loadBalancerName The name of the LoadBalancer
   * @param options The options parameters.
   */
  beginDelete(
    resourceUri: string,
    loadBalancerName: string,
    options?: LoadBalancersDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LoadBalancersDeleteResponse>,
      LoadBalancersDeleteResponse
    >
  >;
  /**
   * Delete a LoadBalancer
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param loadBalancerName The name of the LoadBalancer
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceUri: string,
    loadBalancerName: string,
    options?: LoadBalancersDeleteOptionalParams,
  ): Promise<LoadBalancersDeleteResponse>;
}
