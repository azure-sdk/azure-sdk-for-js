/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ServiceResource,
  ServicesListOptionalParams,
  ServicesGetOptionalParams,
  ServicesGetResponse,
  ServicesCreateOrUpdateOptionalParams,
  ServicesCreateOrUpdateResponse,
  ServicesDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Services. */
export interface Services {
  /**
   * List ServiceResource resources by parent
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param options The options parameters.
   */
  list(
    resourceUri: string,
    options?: ServicesListOptionalParams,
  ): PagedAsyncIterableIterator<ServiceResource>;
  /**
   * Get a ServiceResource
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param serviceName The name of the the service
   * @param options The options parameters.
   */
  get(
    resourceUri: string,
    serviceName: string,
    options?: ServicesGetOptionalParams,
  ): Promise<ServicesGetResponse>;
  /**
   * Create a ServiceResource
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param serviceName The name of the the service
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceUri: string,
    serviceName: string,
    resource: ServiceResource,
    options?: ServicesCreateOrUpdateOptionalParams,
  ): Promise<ServicesCreateOrUpdateResponse>;
  /**
   * Delete a ServiceResource
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param serviceName The name of the the service
   * @param options The options parameters.
   */
  delete(
    resourceUri: string,
    serviceName: string,
    options?: ServicesDeleteOptionalParams,
  ): Promise<void>;
}
