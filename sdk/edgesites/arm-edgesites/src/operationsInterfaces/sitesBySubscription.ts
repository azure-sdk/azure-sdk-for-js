/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Site,
  SitesBySubscriptionListOptionalParams,
  SitesBySubscriptionGetOptionalParams,
  SitesBySubscriptionGetResponse,
  SitesBySubscriptionCreateOrUpdateOptionalParams,
  SitesBySubscriptionCreateOrUpdateResponse,
  SiteUpdate,
  SitesBySubscriptionUpdateOptionalParams,
  SitesBySubscriptionUpdateResponse,
  SitesBySubscriptionDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SitesBySubscription. */
export interface SitesBySubscription {
  /**
   * List Site resources by subscription ID
   * @param options The options parameters.
   */
  list(
    options?: SitesBySubscriptionListOptionalParams,
  ): PagedAsyncIterableIterator<Site>;
  /**
   * Get a Site
   * @param siteName Name of Site resource
   * @param options The options parameters.
   */
  get(
    siteName: string,
    options?: SitesBySubscriptionGetOptionalParams,
  ): Promise<SitesBySubscriptionGetResponse>;
  /**
   * Create a Site
   * @param siteName Name of Site resource
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    siteName: string,
    resource: Site,
    options?: SitesBySubscriptionCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SitesBySubscriptionCreateOrUpdateResponse>,
      SitesBySubscriptionCreateOrUpdateResponse
    >
  >;
  /**
   * Create a Site
   * @param siteName Name of Site resource
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    siteName: string,
    resource: Site,
    options?: SitesBySubscriptionCreateOrUpdateOptionalParams,
  ): Promise<SitesBySubscriptionCreateOrUpdateResponse>;
  /**
   * Update a Site
   * @param siteName Name of Site resource
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    siteName: string,
    properties: SiteUpdate,
    options?: SitesBySubscriptionUpdateOptionalParams,
  ): Promise<SitesBySubscriptionUpdateResponse>;
  /**
   * Delete a Site
   * @param siteName Name of Site resource
   * @param options The options parameters.
   */
  delete(
    siteName: string,
    options?: SitesBySubscriptionDeleteOptionalParams,
  ): Promise<void>;
}
