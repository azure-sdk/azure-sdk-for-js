/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  EndpointResource,
  EndpointListBySubscriptionOptionalParams,
  EndpointListByEnclaveResourceOptionalParams,
  EndpointGetOptionalParams,
  EndpointGetResponse,
  EndpointCreateOrUpdateOptionalParams,
  EndpointCreateOrUpdateResponse,
  EndpointResourceUpdate,
  EndpointUpdateOptionalParams,
  EndpointUpdateResponse,
  EndpointDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Endpoint. */
export interface Endpoint {
  /**
   * List EndpointResource resources by subscription ID
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param options The options parameters.
   */
  listBySubscription(
    virtualEnclaveName: string,
    options?: EndpointListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<EndpointResource>;
  /**
   * List EndpointResource resources by EnclaveResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param options The options parameters.
   */
  listByEnclaveResource(
    resourceGroupName: string,
    virtualEnclaveName: string,
    options?: EndpointListByEnclaveResourceOptionalParams,
  ): PagedAsyncIterableIterator<EndpointResource>;
  /**
   * Get a EndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param endpointName The name of the endpointResource Resource
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    virtualEnclaveName: string,
    endpointName: string,
    options?: EndpointGetOptionalParams,
  ): Promise<EndpointGetResponse>;
  /**
   * Create a EndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param endpointName The name of the endpointResource Resource
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    virtualEnclaveName: string,
    endpointName: string,
    resource: EndpointResource,
    options?: EndpointCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<EndpointCreateOrUpdateResponse>,
      EndpointCreateOrUpdateResponse
    >
  >;
  /**
   * Create a EndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param endpointName The name of the endpointResource Resource
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    virtualEnclaveName: string,
    endpointName: string,
    resource: EndpointResource,
    options?: EndpointCreateOrUpdateOptionalParams,
  ): Promise<EndpointCreateOrUpdateResponse>;
  /**
   * Update a EndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param endpointName The name of the endpointResource Resource
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    virtualEnclaveName: string,
    endpointName: string,
    properties: EndpointResourceUpdate,
    options?: EndpointUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<EndpointUpdateResponse>,
      EndpointUpdateResponse
    >
  >;
  /**
   * Update a EndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param endpointName The name of the endpointResource Resource
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    virtualEnclaveName: string,
    endpointName: string,
    properties: EndpointResourceUpdate,
    options?: EndpointUpdateOptionalParams,
  ): Promise<EndpointUpdateResponse>;
  /**
   * Delete a EndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param endpointName The name of the endpointResource Resource
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    virtualEnclaveName: string,
    endpointName: string,
    options?: EndpointDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a EndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param endpointName The name of the endpointResource Resource
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    virtualEnclaveName: string,
    endpointName: string,
    options?: EndpointDeleteOptionalParams,
  ): Promise<void>;
}
