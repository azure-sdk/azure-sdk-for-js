/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  TransitHubResource,
  TransitHubListBySubscriptionOptionalParams,
  TransitHubListByCommunityResourceOptionalParams,
  TransitHubGetOptionalParams,
  TransitHubGetResponse,
  TransitHubCreateOrUpdateOptionalParams,
  TransitHubCreateOrUpdateResponse,
  TransitHubResourceUpdate,
  TransitHubUpdateOptionalParams,
  TransitHubUpdateResponse,
  TransitHubDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a TransitHub. */
export interface TransitHub {
  /**
   * List TransitHubResource resources by subscription ID
   * @param communityName The name of the communityResource Resource
   * @param options The options parameters.
   */
  listBySubscription(
    communityName: string,
    options?: TransitHubListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<TransitHubResource>;
  /**
   * List TransitHubResource resources by CommunityResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param options The options parameters.
   */
  listByCommunityResource(
    resourceGroupName: string,
    communityName: string,
    options?: TransitHubListByCommunityResourceOptionalParams,
  ): PagedAsyncIterableIterator<TransitHubResource>;
  /**
   * Get a TransitHubResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param transitHubName The name of the TransitHub Resource
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    communityName: string,
    transitHubName: string,
    options?: TransitHubGetOptionalParams,
  ): Promise<TransitHubGetResponse>;
  /**
   * Create a TransitHubResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param transitHubName The name of the TransitHub Resource
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    communityName: string,
    transitHubName: string,
    resource: TransitHubResource,
    options?: TransitHubCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TransitHubCreateOrUpdateResponse>,
      TransitHubCreateOrUpdateResponse
    >
  >;
  /**
   * Create a TransitHubResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param transitHubName The name of the TransitHub Resource
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    communityName: string,
    transitHubName: string,
    resource: TransitHubResource,
    options?: TransitHubCreateOrUpdateOptionalParams,
  ): Promise<TransitHubCreateOrUpdateResponse>;
  /**
   * Update a TransitHubResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param transitHubName The name of the TransitHub Resource
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    communityName: string,
    transitHubName: string,
    properties: TransitHubResourceUpdate,
    options?: TransitHubUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<TransitHubUpdateResponse>,
      TransitHubUpdateResponse
    >
  >;
  /**
   * Update a TransitHubResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param transitHubName The name of the TransitHub Resource
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    communityName: string,
    transitHubName: string,
    properties: TransitHubResourceUpdate,
    options?: TransitHubUpdateOptionalParams,
  ): Promise<TransitHubUpdateResponse>;
  /**
   * Delete a TransitHubResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param transitHubName The name of the TransitHub Resource
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    communityName: string,
    transitHubName: string,
    options?: TransitHubDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a TransitHubResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param transitHubName The name of the TransitHub Resource
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    communityName: string,
    transitHubName: string,
    options?: TransitHubDeleteOptionalParams,
  ): Promise<void>;
}
