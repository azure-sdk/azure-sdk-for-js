/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  CommunityEndpointResource,
  CommunityEndpointsListBySubscriptionOptionalParams,
  CommunityEndpointsListByCommunityResourceOptionalParams,
  CommunityEndpointsGetOptionalParams,
  CommunityEndpointsGetResponse,
  CommunityEndpointsCreateOrUpdateOptionalParams,
  CommunityEndpointsCreateOrUpdateResponse,
  CommunityEndpointPatchResource,
  CommunityEndpointsUpdateOptionalParams,
  CommunityEndpointsUpdateResponse,
  CommunityEndpointsDeleteOptionalParams,
  CommunityEndpointsDeleteResponse,
  ApprovalCallbackRequest,
  CommunityEndpointsApprovalCallbackOptionalParams,
  CommunityEndpointsApprovalCallbackResponse,
  ApprovalDeletionCallbackRequest,
  CommunityEndpointsApprovalDeletionCallbackOptionalParams,
  CommunityEndpointsApprovalDeletionCallbackResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a CommunityEndpoints. */
export interface CommunityEndpoints {
  /**
   * List CommunityEndpointResource resources by subscription ID
   * @param communityName The name of the communityResource Resource
   * @param options The options parameters.
   */
  listBySubscription(
    communityName: string,
    options?: CommunityEndpointsListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<CommunityEndpointResource>;
  /**
   * List CommunityEndpointResource resources by CommunityResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param options The options parameters.
   */
  listByCommunityResource(
    resourceGroupName: string,
    communityName: string,
    options?: CommunityEndpointsListByCommunityResourceOptionalParams,
  ): PagedAsyncIterableIterator<CommunityEndpointResource>;
  /**
   * Get a CommunityEndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param communityEndpointName The name of the Community Endpoint Resource
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    communityName: string,
    communityEndpointName: string,
    options?: CommunityEndpointsGetOptionalParams,
  ): Promise<CommunityEndpointsGetResponse>;
  /**
   * Create a CommunityEndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param communityEndpointName The name of the Community Endpoint Resource
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    communityName: string,
    communityEndpointName: string,
    resource: CommunityEndpointResource,
    options?: CommunityEndpointsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<CommunityEndpointsCreateOrUpdateResponse>,
      CommunityEndpointsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a CommunityEndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param communityEndpointName The name of the Community Endpoint Resource
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    communityName: string,
    communityEndpointName: string,
    resource: CommunityEndpointResource,
    options?: CommunityEndpointsCreateOrUpdateOptionalParams,
  ): Promise<CommunityEndpointsCreateOrUpdateResponse>;
  /**
   * Update a CommunityEndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param communityEndpointName The name of the Community Endpoint Resource
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    communityName: string,
    communityEndpointName: string,
    properties: CommunityEndpointPatchResource,
    options?: CommunityEndpointsUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<CommunityEndpointsUpdateResponse>,
      CommunityEndpointsUpdateResponse
    >
  >;
  /**
   * Update a CommunityEndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param communityEndpointName The name of the Community Endpoint Resource
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    communityName: string,
    communityEndpointName: string,
    properties: CommunityEndpointPatchResource,
    options?: CommunityEndpointsUpdateOptionalParams,
  ): Promise<CommunityEndpointsUpdateResponse>;
  /**
   * Delete a CommunityEndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param communityEndpointName The name of the Community Endpoint Resource
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    communityName: string,
    communityEndpointName: string,
    options?: CommunityEndpointsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<CommunityEndpointsDeleteResponse>,
      CommunityEndpointsDeleteResponse
    >
  >;
  /**
   * Delete a CommunityEndpointResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param communityEndpointName The name of the Community Endpoint Resource
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    communityName: string,
    communityEndpointName: string,
    options?: CommunityEndpointsDeleteOptionalParams,
  ): Promise<CommunityEndpointsDeleteResponse>;
  /**
   * Callback that triggers on approval state change.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param communityEndpointName The name of the Community Endpoint Resource
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginApprovalCallback(
    resourceGroupName: string,
    communityName: string,
    communityEndpointName: string,
    body: ApprovalCallbackRequest,
    options?: CommunityEndpointsApprovalCallbackOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<CommunityEndpointsApprovalCallbackResponse>,
      CommunityEndpointsApprovalCallbackResponse
    >
  >;
  /**
   * Callback that triggers on approval state change.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param communityEndpointName The name of the Community Endpoint Resource
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginApprovalCallbackAndWait(
    resourceGroupName: string,
    communityName: string,
    communityEndpointName: string,
    body: ApprovalCallbackRequest,
    options?: CommunityEndpointsApprovalCallbackOptionalParams,
  ): Promise<CommunityEndpointsApprovalCallbackResponse>;
  /**
   * Callback that triggers on approval deletion state change.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param communityEndpointName The name of the Community Endpoint Resource
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginApprovalDeletionCallback(
    resourceGroupName: string,
    communityName: string,
    communityEndpointName: string,
    body: ApprovalDeletionCallbackRequest,
    options?: CommunityEndpointsApprovalDeletionCallbackOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<CommunityEndpointsApprovalDeletionCallbackResponse>,
      CommunityEndpointsApprovalDeletionCallbackResponse
    >
  >;
  /**
   * Callback that triggers on approval deletion state change.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param communityName The name of the communityResource Resource
   * @param communityEndpointName The name of the Community Endpoint Resource
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginApprovalDeletionCallbackAndWait(
    resourceGroupName: string,
    communityName: string,
    communityEndpointName: string,
    body: ApprovalDeletionCallbackRequest,
    options?: CommunityEndpointsApprovalDeletionCallbackOptionalParams,
  ): Promise<CommunityEndpointsApprovalDeletionCallbackResponse>;
}
