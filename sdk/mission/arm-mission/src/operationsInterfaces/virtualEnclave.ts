/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  EnclaveResource,
  VirtualEnclaveListBySubscriptionOptionalParams,
  VirtualEnclaveListByResourceGroupOptionalParams,
  VirtualEnclaveGetOptionalParams,
  VirtualEnclaveGetResponse,
  VirtualEnclaveCreateOrUpdateOptionalParams,
  VirtualEnclaveCreateOrUpdateResponse,
  VirtualEnclavePatchResource,
  VirtualEnclaveUpdateOptionalParams,
  VirtualEnclaveUpdateResponse,
  VirtualEnclaveDeleteOptionalParams,
  VirtualEnclaveDeleteResponse,
  ApprovalCallbackRequest,
  VirtualEnclaveApprovalCallbackOptionalParams,
  VirtualEnclaveApprovalCallbackResponse,
  ApprovalDeletionCallbackRequest,
  VirtualEnclaveApprovalDeletionCallbackOptionalParams,
  VirtualEnclaveApprovalDeletionCallbackResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VirtualEnclave. */
export interface VirtualEnclave {
  /**
   * List EnclaveResource resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: VirtualEnclaveListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<EnclaveResource>;
  /**
   * List EnclaveResource resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: VirtualEnclaveListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<EnclaveResource>;
  /**
   * Get a EnclaveResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    virtualEnclaveName: string,
    options?: VirtualEnclaveGetOptionalParams,
  ): Promise<VirtualEnclaveGetResponse>;
  /**
   * Create a EnclaveResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    virtualEnclaveName: string,
    resource: EnclaveResource,
    options?: VirtualEnclaveCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualEnclaveCreateOrUpdateResponse>,
      VirtualEnclaveCreateOrUpdateResponse
    >
  >;
  /**
   * Create a EnclaveResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    virtualEnclaveName: string,
    resource: EnclaveResource,
    options?: VirtualEnclaveCreateOrUpdateOptionalParams,
  ): Promise<VirtualEnclaveCreateOrUpdateResponse>;
  /**
   * Update a EnclaveResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    virtualEnclaveName: string,
    properties: VirtualEnclavePatchResource,
    options?: VirtualEnclaveUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualEnclaveUpdateResponse>,
      VirtualEnclaveUpdateResponse
    >
  >;
  /**
   * Update a EnclaveResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    virtualEnclaveName: string,
    properties: VirtualEnclavePatchResource,
    options?: VirtualEnclaveUpdateOptionalParams,
  ): Promise<VirtualEnclaveUpdateResponse>;
  /**
   * Delete a EnclaveResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    virtualEnclaveName: string,
    options?: VirtualEnclaveDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualEnclaveDeleteResponse>,
      VirtualEnclaveDeleteResponse
    >
  >;
  /**
   * Delete a EnclaveResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    virtualEnclaveName: string,
    options?: VirtualEnclaveDeleteOptionalParams,
  ): Promise<VirtualEnclaveDeleteResponse>;
  /**
   * Callback that triggers on approval state change.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginApprovalCallback(
    resourceGroupName: string,
    virtualEnclaveName: string,
    body: ApprovalCallbackRequest,
    options?: VirtualEnclaveApprovalCallbackOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualEnclaveApprovalCallbackResponse>,
      VirtualEnclaveApprovalCallbackResponse
    >
  >;
  /**
   * Callback that triggers on approval state change.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginApprovalCallbackAndWait(
    resourceGroupName: string,
    virtualEnclaveName: string,
    body: ApprovalCallbackRequest,
    options?: VirtualEnclaveApprovalCallbackOptionalParams,
  ): Promise<VirtualEnclaveApprovalCallbackResponse>;
  /**
   * Callback that triggers on approval deletion state change.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginApprovalDeletionCallback(
    resourceGroupName: string,
    virtualEnclaveName: string,
    body: ApprovalDeletionCallbackRequest,
    options?: VirtualEnclaveApprovalDeletionCallbackOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualEnclaveApprovalDeletionCallbackResponse>,
      VirtualEnclaveApprovalDeletionCallbackResponse
    >
  >;
  /**
   * Callback that triggers on approval deletion state change.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualEnclaveName The name of the enclaveResource Resource
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginApprovalDeletionCallbackAndWait(
    resourceGroupName: string,
    virtualEnclaveName: string,
    body: ApprovalDeletionCallbackRequest,
    options?: VirtualEnclaveApprovalDeletionCallbackOptionalParams,
  ): Promise<VirtualEnclaveApprovalDeletionCallbackResponse>;
}
