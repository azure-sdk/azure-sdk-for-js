/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  VirtualNetworks,
  VirtualNetworksListOptionalParams,
  VirtualNetworksListAllOptionalParams,
  VirtualNetworksGetOptionalParams,
  VirtualNetworksGetResponse,
  VirtualNetworksCreateOrUpdateOptionalParams,
  VirtualNetworksCreateOrUpdateResponse,
  VirtualNetworksDeleteOptionalParams,
  VirtualNetworksUpdateRequest,
  VirtualNetworksUpdateOptionalParams,
  VirtualNetworksUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VirtualNetworksOperations. */
export interface VirtualNetworksOperations {
  /**
   * Lists all of the virtual networks in the specified resource group. Use the nextLink property in the
   * response to get the next page of virtual networks.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    options?: VirtualNetworksListOptionalParams
  ): PagedAsyncIterableIterator<VirtualNetworks>;
  /**
   * Lists all of the virtual networks in the specified subscription. Use the nextLink property in the
   * response to get the next page of virtual networks.
   * @param options The options parameters.
   */
  listAll(
    options?: VirtualNetworksListAllOptionalParams
  ): PagedAsyncIterableIterator<VirtualNetworks>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Name of the virtual network
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    virtualNetworkName: string,
    options?: VirtualNetworksGetOptionalParams
  ): Promise<VirtualNetworksGetResponse>;
  /**
   * The operation to create or update a virtual network. Please note some properties can be set only
   * during virtual network creation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Name of the virtual network
   * @param virtualNetworks The virtual network resource definition.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    virtualNetworkName: string,
    virtualNetworks: VirtualNetworks,
    options?: VirtualNetworksCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualNetworksCreateOrUpdateResponse>,
      VirtualNetworksCreateOrUpdateResponse
    >
  >;
  /**
   * The operation to create or update a virtual network. Please note some properties can be set only
   * during virtual network creation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Name of the virtual network
   * @param virtualNetworks The virtual network resource definition.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    virtualNetworkName: string,
    virtualNetworks: VirtualNetworks,
    options?: VirtualNetworksCreateOrUpdateOptionalParams
  ): Promise<VirtualNetworksCreateOrUpdateResponse>;
  /**
   * The operation to delete a virtual network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Name of the virtual network
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    virtualNetworkName: string,
    options?: VirtualNetworksDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * The operation to delete a virtual network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Name of the virtual network
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    virtualNetworkName: string,
    options?: VirtualNetworksDeleteOptionalParams
  ): Promise<void>;
  /**
   * The operation to update a virtual network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Name of the virtual network
   * @param virtualNetworks The virtual network resource patch definition.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    virtualNetworkName: string,
    virtualNetworks: VirtualNetworksUpdateRequest,
    options?: VirtualNetworksUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<VirtualNetworksUpdateResponse>,
      VirtualNetworksUpdateResponse
    >
  >;
  /**
   * The operation to update a virtual network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param virtualNetworkName Name of the virtual network
   * @param virtualNetworks The virtual network resource patch definition.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    virtualNetworkName: string,
    virtualNetworks: VirtualNetworksUpdateRequest,
    options?: VirtualNetworksUpdateOptionalParams
  ): Promise<VirtualNetworksUpdateResponse>;
}
