/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  SecurityRule,
  SecurityRulesListByNetworkSecurityGroupOptionalParams,
  SecurityRulesGetOptionalParams,
  SecurityRulesGetResponse,
  SecurityRulesCreateOrUpdateOptionalParams,
  SecurityRulesCreateOrUpdateResponse,
  SecurityRulesDeleteOptionalParams,
  SecurityRulesDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SecurityRules. */
export interface SecurityRules {
  /**
   * Gets all security rules in a Network Security Group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkSecurityGroupName Name of the network security group
   * @param options The options parameters.
   */
  listByNetworkSecurityGroup(
    resourceGroupName: string,
    networkSecurityGroupName: string,
    options?: SecurityRulesListByNetworkSecurityGroupOptionalParams,
  ): PagedAsyncIterableIterator<SecurityRule>;
  /**
   * Gets the specified security rule.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkSecurityGroupName Name of the network security group
   * @param securityRuleName Name of the security rule.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkSecurityGroupName: string,
    securityRuleName: string,
    options?: SecurityRulesGetOptionalParams,
  ): Promise<SecurityRulesGetResponse>;
  /**
   * Creates or updates a security rule in the specified resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkSecurityGroupName Name of the network security group
   * @param securityRuleName Name of the security rule.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    networkSecurityGroupName: string,
    securityRuleName: string,
    resource: SecurityRule,
    options?: SecurityRulesCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SecurityRulesCreateOrUpdateResponse>,
      SecurityRulesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a security rule in the specified resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkSecurityGroupName Name of the network security group
   * @param securityRuleName Name of the security rule.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    networkSecurityGroupName: string,
    securityRuleName: string,
    resource: SecurityRule,
    options?: SecurityRulesCreateOrUpdateOptionalParams,
  ): Promise<SecurityRulesCreateOrUpdateResponse>;
  /**
   * Deletes the specified security rule.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkSecurityGroupName Name of the network security group
   * @param securityRuleName Name of the security rule.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    networkSecurityGroupName: string,
    securityRuleName: string,
    options?: SecurityRulesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SecurityRulesDeleteResponse>,
      SecurityRulesDeleteResponse
    >
  >;
  /**
   * Deletes the specified security rule.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkSecurityGroupName Name of the network security group
   * @param securityRuleName Name of the security rule.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    networkSecurityGroupName: string,
    securityRuleName: string,
    options?: SecurityRulesDeleteOptionalParams,
  ): Promise<SecurityRulesDeleteResponse>;
}
