/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Get } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AzureStackHCIClient } from "../azureStackHCIClient";
import {
  GetNodeConfigurationOptionalParams,
  GetNodeConfigurationResponse
} from "../models";

/** Class containing Get operations. */
export class GetImpl implements Get {
  private readonly client: AzureStackHCIClient;

  /**
   * Initialize a new instance of the class Get class.
   * @param client Reference to the service client
   */
  constructor(client: AzureStackHCIClient) {
    this.client = client;
  }

  /**
   * Validate the Node Configuration Resources
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource to be
   *                    connected.
   * @param nodeConfigurationName The name of the node configuration resource
   * @param options The options parameters.
   */
  nodeConfiguration(
    resourceUri: string,
    nodeConfigurationName: string,
    options?: GetNodeConfigurationOptionalParams
  ): Promise<GetNodeConfigurationResponse> {
    return this.client.sendOperationRequest(
      { resourceUri, nodeConfigurationName, options },
      nodeConfigurationOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const nodeConfigurationOperationSpec: coreClient.OperationSpec = {
  path:
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/nodeConfigurations/{nodeConfigurationName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.NodeConfiguration
    },
    default: {
      bodyMapper: Mappers.ErrorResponseAutoGenerated
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceUri,
    Parameters.nodeConfigurationName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
