/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  VirtualMachineInstance as VirtualMachineInstanceMapper,
  VirtualMachineInstanceUpdateRequest as VirtualMachineInstanceUpdateRequestMapper,
  GuestAgent as GuestAgentMapper,
  GalleryImage as GalleryImageMapper,
  GalleryImageTagsUpdate as GalleryImageTagsUpdateMapper,
  LogicalNetwork as LogicalNetworkMapper,
  LogicalNetworksUpdateRequest as LogicalNetworksUpdateRequestMapper,
  MarketplaceGalleryImage as MarketplaceGalleryImageMapper,
  MarketplaceGalleryImageTagsUpdate as MarketplaceGalleryImageTagsUpdateMapper,
  NetworkInterface as NetworkInterfaceMapper,
  NetworkInterfaceTagsUpdate as NetworkInterfaceTagsUpdateMapper,
  NetworkSecurityGroup as NetworkSecurityGroupMapper,
  NetworkSecurityGroupTagsUpdate as NetworkSecurityGroupTagsUpdateMapper,
  StorageContainer as StorageContainerMapper,
  StorageContainerTagsUpdate as StorageContainerTagsUpdateMapper,
  VirtualHardDisk as VirtualHardDiskMapper,
  VirtualHardDiskTagsUpdate as VirtualHardDiskTagsUpdateMapper,
  SecurityRule as SecurityRuleMapper,
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2024-05-01-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const resourceUri: OperationURLParameter = {
  parameterPath: "resourceUri",
  mapper: {
    serializedName: "resourceUri",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const resource: OperationParameter = {
  parameterPath: "resource",
  mapper: VirtualMachineInstanceMapper,
};

export const properties: OperationParameter = {
  parameterPath: "properties",
  mapper: VirtualMachineInstanceUpdateRequestMapper,
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const resource1: OperationParameter = {
  parameterPath: "resource",
  mapper: GuestAgentMapper,
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "Uuid",
    },
  },
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const galleryImageName: OperationURLParameter = {
  parameterPath: "galleryImageName",
  mapper: {
    constraints: {
      Pattern: new RegExp(
        "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,62}[a-zA-Z0-9]$",
      ),
    },
    serializedName: "galleryImageName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource2: OperationParameter = {
  parameterPath: "resource",
  mapper: GalleryImageMapper,
};

export const properties1: OperationParameter = {
  parameterPath: "properties",
  mapper: GalleryImageTagsUpdateMapper,
};

export const logicalNetworkName: OperationURLParameter = {
  parameterPath: "logicalNetworkName",
  mapper: {
    constraints: {
      Pattern: new RegExp(
        "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,62}[a-zA-Z0-9]$",
      ),
    },
    serializedName: "logicalNetworkName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource3: OperationParameter = {
  parameterPath: "resource",
  mapper: LogicalNetworkMapper,
};

export const properties2: OperationParameter = {
  parameterPath: "properties",
  mapper: LogicalNetworksUpdateRequestMapper,
};

export const marketplaceGalleryImageName: OperationURLParameter = {
  parameterPath: "marketplaceGalleryImageName",
  mapper: {
    constraints: {
      Pattern: new RegExp(
        "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,62}[a-zA-Z0-9]$",
      ),
    },
    serializedName: "marketplaceGalleryImageName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource4: OperationParameter = {
  parameterPath: "resource",
  mapper: MarketplaceGalleryImageMapper,
};

export const properties3: OperationParameter = {
  parameterPath: "properties",
  mapper: MarketplaceGalleryImageTagsUpdateMapper,
};

export const networkInterfaceName: OperationURLParameter = {
  parameterPath: "networkInterfaceName",
  mapper: {
    constraints: {
      Pattern: new RegExp(
        "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,62}[a-zA-Z0-9]$",
      ),
    },
    serializedName: "networkInterfaceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource5: OperationParameter = {
  parameterPath: "resource",
  mapper: NetworkInterfaceMapper,
};

export const properties4: OperationParameter = {
  parameterPath: "properties",
  mapper: NetworkInterfaceTagsUpdateMapper,
};

export const networkSecurityGroupName: OperationURLParameter = {
  parameterPath: "networkSecurityGroupName",
  mapper: {
    constraints: {
      Pattern: new RegExp(
        "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,62}[a-zA-Z0-9]$",
      ),
    },
    serializedName: "networkSecurityGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource6: OperationParameter = {
  parameterPath: "resource",
  mapper: NetworkSecurityGroupMapper,
};

export const properties5: OperationParameter = {
  parameterPath: "properties",
  mapper: NetworkSecurityGroupTagsUpdateMapper,
};

export const storageContainerName: OperationURLParameter = {
  parameterPath: "storageContainerName",
  mapper: {
    constraints: {
      Pattern: new RegExp(
        "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,62}[a-zA-Z0-9]$",
      ),
    },
    serializedName: "storageContainerName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource7: OperationParameter = {
  parameterPath: "resource",
  mapper: StorageContainerMapper,
};

export const properties6: OperationParameter = {
  parameterPath: "properties",
  mapper: StorageContainerTagsUpdateMapper,
};

export const virtualHardDiskName: OperationURLParameter = {
  parameterPath: "virtualHardDiskName",
  mapper: {
    constraints: {
      Pattern: new RegExp(
        "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,62}[a-zA-Z0-9]$",
      ),
    },
    serializedName: "virtualHardDiskName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource8: OperationParameter = {
  parameterPath: "resource",
  mapper: VirtualHardDiskMapper,
};

export const properties7: OperationParameter = {
  parameterPath: "properties",
  mapper: VirtualHardDiskTagsUpdateMapper,
};

export const securityRuleName: OperationURLParameter = {
  parameterPath: "securityRuleName",
  mapper: {
    constraints: {
      Pattern: new RegExp(
        "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,62}[a-zA-Z0-9]$",
      ),
    },
    serializedName: "securityRuleName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource9: OperationParameter = {
  parameterPath: "resource",
  mapper: SecurityRuleMapper,
};
