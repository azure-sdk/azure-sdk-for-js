/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const VirtualMachineInstanceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstanceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineInstance",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VirtualMachineInstancePropertiesHardwareProfile: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstancePropertiesHardwareProfile",
      modelProperties: {
        vmSize: {
          serializedName: "vmSize",
          type: {
            name: "String",
          },
        },
        processors: {
          serializedName: "processors",
          type: {
            name: "Number",
          },
        },
        memoryMB: {
          serializedName: "memoryMB",
          type: {
            name: "Number",
          },
        },
        dynamicMemoryConfig: {
          serializedName: "dynamicMemoryConfig",
          type: {
            name: "Composite",
            className:
              "VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig",
          },
        },
        virtualMachineGPUs: {
          serializedName: "virtualMachineGPUs",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className:
                  "VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU",
              },
            },
          },
        },
      },
    },
  };

export const VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig",
      modelProperties: {
        maximumMemoryMB: {
          serializedName: "maximumMemoryMB",
          type: {
            name: "Number",
          },
        },
        minimumMemoryMB: {
          serializedName: "minimumMemoryMB",
          type: {
            name: "Number",
          },
        },
        targetMemoryBuffer: {
          serializedName: "targetMemoryBuffer",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU",
      modelProperties: {
        assignmentType: {
          serializedName: "assignmentType",
          required: true,
          type: {
            name: "String",
          },
        },
        partitionSizeMB: {
          serializedName: "partitionSizeMB",
          type: {
            name: "Number",
          },
        },
        gpuName: {
          serializedName: "gpuName",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const VirtualMachineInstancePropertiesNetworkProfile: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstancePropertiesNetworkProfile",
      modelProperties: {
        networkInterfaces: {
          serializedName: "networkInterfaces",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "NetworkInterfaceArmReference",
              },
            },
          },
        },
      },
    },
  };

export const NetworkInterfaceArmReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfaceArmReference",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VirtualMachineInstancePropertiesOsProfile: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstancePropertiesOsProfile",
      modelProperties: {
        adminPassword: {
          serializedName: "adminPassword",
          type: {
            name: "String",
          },
        },
        adminUsername: {
          serializedName: "adminUsername",
          type: {
            name: "String",
          },
        },
        computerName: {
          serializedName: "computerName",
          type: {
            name: "String",
          },
        },
        linuxConfiguration: {
          serializedName: "linuxConfiguration",
          type: {
            name: "Composite",
            className:
              "VirtualMachineInstancePropertiesOsProfileLinuxConfiguration",
          },
        },
        windowsConfiguration: {
          serializedName: "windowsConfiguration",
          type: {
            name: "Composite",
            className:
              "VirtualMachineInstancePropertiesOsProfileWindowsConfiguration",
          },
        },
      },
    },
  };

export const VirtualMachineInstancePropertiesOsProfileLinuxConfiguration: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstancePropertiesOsProfileLinuxConfiguration",
      modelProperties: {
        disablePasswordAuthentication: {
          serializedName: "disablePasswordAuthentication",
          type: {
            name: "Boolean",
          },
        },
        ssh: {
          serializedName: "ssh",
          type: {
            name: "Composite",
            className: "SshConfiguration",
          },
        },
        provisionVMAgent: {
          defaultValue: true,
          serializedName: "provisionVMAgent",
          type: {
            name: "Boolean",
          },
        },
        provisionVMConfigAgent: {
          defaultValue: true,
          serializedName: "provisionVMConfigAgent",
          type: {
            name: "Boolean",
          },
        },
      },
    },
  };

export const SshConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SshConfiguration",
    modelProperties: {
      publicKeys: {
        serializedName: "publicKeys",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SshPublicKey",
            },
          },
        },
      },
    },
  },
};

export const SshPublicKey: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SshPublicKey",
    modelProperties: {
      path: {
        serializedName: "path",
        type: {
          name: "String",
        },
      },
      keyData: {
        serializedName: "keyData",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VirtualMachineInstancePropertiesOsProfileWindowsConfiguration: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "VirtualMachineInstancePropertiesOsProfileWindowsConfiguration",
      modelProperties: {
        enableAutomaticUpdates: {
          serializedName: "enableAutomaticUpdates",
          type: {
            name: "Boolean",
          },
        },
        ssh: {
          serializedName: "ssh",
          type: {
            name: "Composite",
            className: "SshConfiguration",
          },
        },
        timeZone: {
          serializedName: "timeZone",
          type: {
            name: "String",
          },
        },
        provisionVMAgent: {
          defaultValue: true,
          serializedName: "provisionVMAgent",
          type: {
            name: "Boolean",
          },
        },
        provisionVMConfigAgent: {
          defaultValue: true,
          serializedName: "provisionVMConfigAgent",
          type: {
            name: "Boolean",
          },
        },
      },
    },
  };

export const VirtualMachineInstancePropertiesSecurityProfile: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstancePropertiesSecurityProfile",
      modelProperties: {
        enableTPM: {
          defaultValue: false,
          serializedName: "enableTPM",
          type: {
            name: "Boolean",
          },
        },
        uefiSettings: {
          serializedName: "uefiSettings",
          type: {
            name: "Composite",
            className:
              "VirtualMachineInstancePropertiesSecurityProfileUefiSettings",
          },
        },
        securityType: {
          serializedName: "securityType",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const VirtualMachineInstancePropertiesSecurityProfileUefiSettings: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstancePropertiesSecurityProfileUefiSettings",
      modelProperties: {
        secureBootEnabled: {
          defaultValue: false,
          serializedName: "secureBootEnabled",
          type: {
            name: "Boolean",
          },
        },
      },
    },
  };

export const VirtualMachineInstancePropertiesStorageProfile: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstancePropertiesStorageProfile",
      modelProperties: {
        dataDisks: {
          serializedName: "dataDisks",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "VirtualHardDiskArmReference",
              },
            },
          },
        },
        imageReference: {
          serializedName: "imageReference",
          type: {
            name: "Composite",
            className: "ImageArmReference",
          },
        },
        osDisk: {
          serializedName: "osDisk",
          type: {
            name: "Composite",
            className: "VirtualMachineInstancePropertiesStorageProfileOsDisk",
          },
        },
        vmConfigStoragePathId: {
          serializedName: "vmConfigStoragePathId",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const VirtualHardDiskArmReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDiskArmReference",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ImageArmReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImageArmReference",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VirtualMachineInstancePropertiesStorageProfileOsDisk: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstancePropertiesStorageProfileOsDisk",
      modelProperties: {
        id: {
          serializedName: "id",
          type: {
            name: "String",
          },
        },
        osType: {
          serializedName: "osType",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const HttpProxyConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HttpProxyConfiguration",
    modelProperties: {
      httpProxy: {
        serializedName: "httpProxy",
        type: {
          name: "String",
        },
      },
      httpsProxy: {
        serializedName: "httpsProxy",
        type: {
          name: "String",
        },
      },
      noProxy: {
        serializedName: "noProxy",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      trustedCa: {
        serializedName: "trustedCa",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VirtualMachineInstanceView: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstanceView",
    modelProperties: {
      vmAgent: {
        serializedName: "vmAgent",
        type: {
          name: "Composite",
          className: "VirtualMachineConfigAgentInstanceView",
        },
      },
    },
  },
};

export const VirtualMachineConfigAgentInstanceView: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineConfigAgentInstanceView",
      modelProperties: {
        vmConfigAgentVersion: {
          serializedName: "vmConfigAgentVersion",
          type: {
            name: "String",
          },
        },
        statuses: {
          serializedName: "statuses",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "InstanceViewStatus",
              },
            },
          },
        },
      },
    },
  };

export const InstanceViewStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstanceViewStatus",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      level: {
        serializedName: "level",
        type: {
          name: "String",
        },
      },
      displayStatus: {
        serializedName: "displayStatus",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
      time: {
        serializedName: "time",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const VirtualMachineInstanceStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstanceStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String",
        },
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String",
        },
      },
      powerState: {
        serializedName: "powerState",
        type: {
          name: "String",
        },
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "VirtualMachineInstanceStatusProvisioningStatus",
        },
      },
    },
  },
};

export const VirtualMachineInstanceStatusProvisioningStatus: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstanceStatusProvisioningStatus",
      modelProperties: {
        operationId: {
          serializedName: "operationId",
          type: {
            name: "String",
          },
        },
        status: {
          serializedName: "status",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const GuestAgentInstallStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestAgentInstallStatus",
    modelProperties: {
      vmUuid: {
        serializedName: "vmUuid",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      lastStatusChange: {
        serializedName: "lastStatusChange",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      agentVersion: {
        serializedName: "agentVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      errorDetails: {
        serializedName: "errorDetails",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const ExtendedLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtendedLocation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ManagedServiceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedServiceIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" },
          },
        },
      },
    },
  },
};

export const UserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const VirtualMachineInstanceUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstanceUpdateRequest",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "VirtualMachineInstanceUpdateProperties",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "Identity",
        },
      },
    },
  },
};

export const VirtualMachineInstanceUpdateProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstanceUpdateProperties",
      modelProperties: {
        hardwareProfile: {
          serializedName: "hardwareProfile",
          type: {
            name: "Composite",
            className: "HardwareProfileUpdate",
          },
        },
        storageProfile: {
          serializedName: "storageProfile",
          type: {
            name: "Composite",
            className: "StorageProfileUpdate",
          },
        },
        networkProfile: {
          serializedName: "networkProfile",
          type: {
            name: "Composite",
            className: "NetworkProfileUpdate",
          },
        },
        osProfile: {
          serializedName: "osProfile",
          type: {
            name: "Composite",
            className: "OsProfileUpdate",
          },
        },
      },
    },
  };

export const HardwareProfileUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HardwareProfileUpdate",
    modelProperties: {
      vmSize: {
        serializedName: "vmSize",
        type: {
          name: "String",
        },
      },
      processors: {
        serializedName: "processors",
        type: {
          name: "Number",
        },
      },
      memoryMB: {
        serializedName: "memoryMB",
        type: {
          name: "Number",
        },
      },
      virtualMachineGPUs: {
        serializedName: "virtualMachineGPUs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU",
            },
          },
        },
      },
    },
  },
};

export const StorageProfileUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageProfileUpdate",
    modelProperties: {
      dataDisks: {
        serializedName: "dataDisks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualHardDiskArmReference",
            },
          },
        },
      },
    },
  },
};

export const NetworkProfileUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkProfileUpdate",
    modelProperties: {
      networkInterfaces: {
        serializedName: "networkInterfaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterfaceArmReference",
            },
          },
        },
      },
    },
  },
};

export const OsProfileUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OsProfileUpdate",
    modelProperties: {
      computerName: {
        serializedName: "computerName",
        type: {
          name: "String",
        },
      },
      linuxConfiguration: {
        serializedName: "linuxConfiguration",
        type: {
          name: "Composite",
          className: "OsProfileUpdateLinuxConfiguration",
        },
      },
      windowsConfiguration: {
        serializedName: "windowsConfiguration",
        type: {
          name: "Composite",
          className: "OsProfileUpdateWindowsConfiguration",
        },
      },
    },
  },
};

export const OsProfileUpdateLinuxConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OsProfileUpdateLinuxConfiguration",
    modelProperties: {
      provisionVMAgent: {
        serializedName: "provisionVMAgent",
        type: {
          name: "Boolean",
        },
      },
      provisionVMConfigAgent: {
        serializedName: "provisionVMConfigAgent",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const OsProfileUpdateWindowsConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OsProfileUpdateWindowsConfiguration",
    modelProperties: {
      provisionVMAgent: {
        serializedName: "provisionVMAgent",
        type: {
          name: "Boolean",
        },
      },
      provisionVMConfigAgent: {
        serializedName: "provisionVMConfigAgent",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const Identity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Identity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        defaultValue: "SystemAssigned",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GuestAgentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestAgentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GuestAgent",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GuestCredential: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestCredential",
    modelProperties: {
      username: {
        serializedName: "username",
        type: {
          name: "String",
        },
      },
      password: {
        serializedName: "password",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const HybridIdentityMetadataListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HybridIdentityMetadataListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HybridIdentityMetadata",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryImageListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImage",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryImageIdentifier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageIdentifier",
    modelProperties: {
      publisher: {
        serializedName: "publisher",
        required: true,
        type: {
          name: "String",
        },
      },
      offer: {
        serializedName: "offer",
        required: true,
        type: {
          name: "String",
        },
      },
      sku: {
        serializedName: "sku",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryImageVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageVersion",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "GalleryImageVersionStorageProfile",
        },
      },
    },
  },
};

export const GalleryImageVersionStorageProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageVersionStorageProfile",
    modelProperties: {
      osDiskImage: {
        serializedName: "osDiskImage",
        type: {
          name: "Composite",
          className: "GalleryOSDiskImage",
        },
      },
    },
  },
};

export const GalleryOSDiskImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryOSDiskImage",
    modelProperties: {
      sizeInMB: {
        serializedName: "sizeInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryImageStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String",
        },
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String",
        },
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "GalleryImageStatusProvisioningStatus",
        },
      },
      downloadStatus: {
        serializedName: "downloadStatus",
        type: {
          name: "Composite",
          className: "GalleryImageStatusDownloadStatus",
        },
      },
      progressPercentage: {
        serializedName: "progressPercentage",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryImageStatusProvisioningStatus: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryImageStatusProvisioningStatus",
      modelProperties: {
        operationId: {
          serializedName: "operationId",
          type: {
            name: "String",
          },
        },
        status: {
          serializedName: "status",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const GalleryImageStatusDownloadStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageStatusDownloadStatus",
    modelProperties: {
      downloadSizeInMB: {
        serializedName: "downloadSizeInMB",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LogicalNetworkListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworkListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogicalNetwork",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LogicalNetworkPropertiesDhcpOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworkPropertiesDhcpOptions",
    modelProperties: {
      dnsServers: {
        serializedName: "dnsServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const Subnet: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Subnet",
    modelProperties: {
      name: {
        constraints: {
          Pattern: new RegExp(
            "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$",
          ),
        },
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      addressPrefix: {
        serializedName: "properties.addressPrefix",
        type: {
          name: "String",
        },
      },
      addressPrefixes: {
        serializedName: "properties.addressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      ipAllocationMethod: {
        serializedName: "properties.ipAllocationMethod",
        type: {
          name: "String",
        },
      },
      ipConfigurationReferences: {
        serializedName: "properties.ipConfigurationReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubnetIpConfigurationReference",
            },
          },
        },
      },
      networkSecurityGroup: {
        serializedName: "properties.networkSecurityGroup",
        type: {
          name: "Composite",
          className: "NetworkSecurityGroupArmReference",
        },
      },
      routeTable: {
        serializedName: "properties.routeTable",
        type: {
          name: "Composite",
          className: "RouteTable",
        },
      },
      ipPools: {
        serializedName: "properties.ipPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IPPool",
            },
          },
        },
      },
      vlan: {
        serializedName: "properties.vlan",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SubnetIpConfigurationReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubnetIpConfigurationReference",
    modelProperties: {
      id: {
        serializedName: "ID",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NetworkSecurityGroupArmReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkSecurityGroupArmReference",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RouteTable: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RouteTable",
    modelProperties: {
      etag: {
        serializedName: "etag",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      routes: {
        serializedName: "properties.routes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Route",
            },
          },
        },
      },
    },
  },
};

export const Route: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Route",
    modelProperties: {
      name: {
        constraints: {
          Pattern: new RegExp(
            "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$",
          ),
        },
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      addressPrefix: {
        serializedName: "properties.addressPrefix",
        type: {
          name: "String",
        },
      },
      nextHopIpAddress: {
        serializedName: "properties.nextHopIpAddress",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IPPool: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPPool",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      ipPoolType: {
        serializedName: "ipPoolType",
        type: {
          name: "String",
        },
      },
      start: {
        serializedName: "start",
        type: {
          name: "String",
        },
      },
      end: {
        serializedName: "end",
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        type: {
          name: "Composite",
          className: "IPPoolInfo",
        },
      },
    },
  },
};

export const IPPoolInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPPoolInfo",
    modelProperties: {
      used: {
        serializedName: "used",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      available: {
        serializedName: "available",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LogicalNetworkStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworkStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String",
        },
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String",
        },
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "LogicalNetworkStatusProvisioningStatus",
        },
      },
    },
  },
};

export const LogicalNetworkStatusProvisioningStatus: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "LogicalNetworkStatusProvisioningStatus",
      modelProperties: {
        operationId: {
          serializedName: "operationId",
          type: {
            name: "String",
          },
        },
        status: {
          serializedName: "status",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const MarketplaceGalleryImageListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceGalleryImageListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MarketplaceGalleryImage",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MarketplaceGalleryImageStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceGalleryImageStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String",
        },
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String",
        },
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "MarketplaceGalleryImageStatusProvisioningStatus",
        },
      },
      downloadStatus: {
        serializedName: "downloadStatus",
        type: {
          name: "Composite",
          className: "MarketplaceGalleryImageStatusDownloadStatus",
        },
      },
      progressPercentage: {
        serializedName: "progressPercentage",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const MarketplaceGalleryImageStatusProvisioningStatus: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "MarketplaceGalleryImageStatusProvisioningStatus",
      modelProperties: {
        operationId: {
          serializedName: "operationId",
          type: {
            name: "String",
          },
        },
        status: {
          serializedName: "status",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const MarketplaceGalleryImageStatusDownloadStatus: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "MarketplaceGalleryImageStatusDownloadStatus",
      modelProperties: {
        downloadSizeInMB: {
          serializedName: "downloadSizeInMB",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const NetworkInterfaceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfaceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterface",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IPConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPConfiguration",
    modelProperties: {
      name: {
        constraints: {
          Pattern: new RegExp(
            "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$",
          ),
        },
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "IPConfigurationProperties",
        },
      },
    },
  },
};

export const IPConfigurationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPConfigurationProperties",
    modelProperties: {
      gateway: {
        serializedName: "gateway",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      prefixLength: {
        serializedName: "prefixLength",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      privateIPAddress: {
        serializedName: "privateIPAddress",
        type: {
          name: "String",
        },
      },
      subnet: {
        serializedName: "subnet",
        type: {
          name: "Composite",
          className: "LogicalNetworkArmReference",
        },
      },
    },
  },
};

export const LogicalNetworkArmReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworkArmReference",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const InterfaceDNSSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InterfaceDNSSettings",
    modelProperties: {
      dnsServers: {
        serializedName: "dnsServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const NetworkInterfaceStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfaceStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String",
        },
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String",
        },
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "NetworkInterfaceStatusProvisioningStatus",
        },
      },
    },
  },
};

export const NetworkInterfaceStatusProvisioningStatus: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "NetworkInterfaceStatusProvisioningStatus",
      modelProperties: {
        operationId: {
          serializedName: "operationId",
          type: {
            name: "String",
          },
        },
        status: {
          serializedName: "status",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const NetworkSecurityGroupListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkSecurityGroupListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkSecurityGroup",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StorageContainerListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainerListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageContainer",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StorageContainerStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainerStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String",
        },
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String",
        },
      },
      availableSizeMB: {
        serializedName: "availableSizeMB",
        type: {
          name: "Number",
        },
      },
      containerSizeMB: {
        serializedName: "containerSizeMB",
        type: {
          name: "Number",
        },
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "StorageContainerStatusProvisioningStatus",
        },
      },
    },
  },
};

export const StorageContainerStatusProvisioningStatus: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "StorageContainerStatusProvisioningStatus",
      modelProperties: {
        operationId: {
          serializedName: "operationId",
          type: {
            name: "String",
          },
        },
        status: {
          serializedName: "status",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const VirtualHardDiskListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDiskListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualHardDisk",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VirtualHardDiskStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDiskStatus",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String",
        },
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String",
        },
      },
      provisioningStatus: {
        serializedName: "provisioningStatus",
        type: {
          name: "Composite",
          className: "VirtualHardDiskStatusProvisioningStatus",
        },
      },
      downloadStatus: {
        serializedName: "downloadStatus",
        type: {
          name: "Composite",
          className: "VirtualHardDiskDownloadStatus",
        },
      },
      uploadStatus: {
        serializedName: "uploadStatus",
        type: {
          name: "Composite",
          className: "VirtualHardDiskUploadStatus",
        },
      },
    },
  },
};

export const VirtualHardDiskStatusProvisioningStatus: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualHardDiskStatusProvisioningStatus",
      modelProperties: {
        operationId: {
          serializedName: "operationId",
          type: {
            name: "String",
          },
        },
        status: {
          serializedName: "status",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const VirtualHardDiskDownloadStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDiskDownloadStatus",
    modelProperties: {
      downloadedSizeInMB: {
        serializedName: "downloadedSizeInMB",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const VirtualHardDiskUploadStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDiskUploadStatus",
    modelProperties: {
      uploadedSizeInMB: {
        serializedName: "uploadedSizeInMB",
        type: {
          name: "Number",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryImageTagsUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageTagsUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const LogicalNetworksUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworksUpdateRequest",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const MarketplaceGalleryImageTagsUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceGalleryImageTagsUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const NetworkInterfaceTagsUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfaceTagsUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const NetworkSecurityGroupTagsUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkSecurityGroupTagsUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const SecurityRuleListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityRuleListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecurityRule",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StorageContainerTagsUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainerTagsUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const VirtualHardDiskTagsUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDiskTagsUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryDiskImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryDiskImage",
    modelProperties: {
      sizeInMB: {
        serializedName: "sizeInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryImagesUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImagesUpdateRequest",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const MarketplaceGalleryImagesUpdateRequest: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "MarketplaceGalleryImagesUpdateRequest",
      modelProperties: {
        tags: {
          serializedName: "tags",
          type: {
            name: "Dictionary",
            value: { type: { name: "String" } },
          },
        },
      },
    },
  };

export const NetworkInterfacesUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfacesUpdateRequest",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const StorageContainerArmReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainerArmReference",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StorageContainersUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainersUpdateRequest",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const TagsObject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TagsObject",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const VirtualHardDiskUploadRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDiskUploadRequest",
    modelProperties: {
      azureManagedDiskUploadUrl: {
        serializedName: "azureManagedDiskUploadUrl",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VirtualHardDiskUploadResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDiskUploadResponse",
    modelProperties: {
      virtualHardDiskId: {
        serializedName: "virtualHardDiskId",
        type: {
          name: "String",
        },
      },
      uploadStatus: {
        serializedName: "uploadStatus",
        type: {
          name: "Composite",
          className: "VirtualHardDiskUploadStatus",
        },
      },
    },
  },
};

export const VirtualHardDisksUpdateRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDisksUpdateRequest",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const VirtualMachineArmReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineArmReference",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VirtualMachineInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstance",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
      hardwareProfile: {
        serializedName: "properties.hardwareProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineInstancePropertiesHardwareProfile",
        },
      },
      networkProfile: {
        serializedName: "properties.networkProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineInstancePropertiesNetworkProfile",
        },
      },
      osProfile: {
        serializedName: "properties.osProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineInstancePropertiesOsProfile",
        },
      },
      securityProfile: {
        serializedName: "properties.securityProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineInstancePropertiesSecurityProfile",
        },
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineInstancePropertiesStorageProfile",
        },
      },
      httpProxyConfig: {
        serializedName: "properties.httpProxyConfig",
        type: {
          name: "Composite",
          className: "HttpProxyConfiguration",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      instanceView: {
        serializedName: "properties.instanceView",
        type: {
          name: "Composite",
          className: "VirtualMachineInstanceView",
        },
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "VirtualMachineInstanceStatus",
        },
      },
      guestAgentInstallStatus: {
        serializedName: "properties.guestAgentInstallStatus",
        type: {
          name: "Composite",
          className: "GuestAgentInstallStatus",
        },
      },
      vmId: {
        serializedName: "properties.vmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resourceUid: {
        serializedName: "properties.resourceUid",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AttestationStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AttestationStatus",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      attestSecureBootEnabled: {
        serializedName: "properties.attestSecureBootEnabled",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      attestationCertValidated: {
        serializedName: "properties.attestationCertValidated",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      bootIntegrityValidated: {
        serializedName: "properties.bootIntegrityValidated",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      linuxKernelVersion: {
        serializedName: "properties.linuxKernelVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      healthStatus: {
        serializedName: "properties.healthStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      timestamp: {
        serializedName: "properties.timestamp",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      errorMessage: {
        serializedName: "properties.errorMessage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GuestAgent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestAgent",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      credentials: {
        serializedName: "properties.credentials",
        type: {
          name: "Composite",
          className: "GuestCredential",
        },
      },
      provisioningAction: {
        serializedName: "properties.provisioningAction",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const HybridIdentityMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HybridIdentityMetadata",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      resourceUid: {
        serializedName: "properties.resourceUid",
        type: {
          name: "String",
        },
      },
      publicKey: {
        serializedName: "properties.publicKey",
        type: {
          name: "String",
        },
      },
      identity: {
        serializedName: "properties.identity",
        type: {
          name: "Composite",
          className: "Identity",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SecurityRule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityRule",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation",
        },
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String",
        },
      },
      protocol: {
        serializedName: "properties.protocol",
        type: {
          name: "String",
        },
      },
      sourceAddressPrefixes: {
        serializedName: "properties.sourceAddressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      destinationAddressPrefixes: {
        serializedName: "properties.destinationAddressPrefixes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      sourcePortRanges: {
        serializedName: "properties.sourcePortRanges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      destinationPortRanges: {
        serializedName: "properties.destinationPortRanges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      access: {
        serializedName: "properties.access",
        type: {
          name: "String",
        },
      },
      priority: {
        serializedName: "properties.priority",
        type: {
          name: "Number",
        },
      },
      direction: {
        serializedName: "properties.direction",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImage",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation",
        },
      },
      containerId: {
        serializedName: "properties.containerId",
        type: {
          name: "String",
        },
      },
      imagePath: {
        serializedName: "properties.imagePath",
        type: {
          name: "String",
        },
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "String",
        },
      },
      cloudInitDataSource: {
        serializedName: "properties.cloudInitDataSource",
        type: {
          name: "String",
        },
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String",
        },
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryImageIdentifier",
        },
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "Composite",
          className: "GalleryImageVersion",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "GalleryImageStatus",
        },
      },
      sourceVirtualMachineId: {
        serializedName: "properties.sourceVirtualMachineId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LogicalNetwork: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetwork",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation",
        },
      },
      dhcpOptions: {
        serializedName: "properties.dhcpOptions",
        type: {
          name: "Composite",
          className: "LogicalNetworkPropertiesDhcpOptions",
        },
      },
      subnets: {
        serializedName: "properties.subnets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Subnet",
            },
          },
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      vmSwitchName: {
        serializedName: "properties.vmSwitchName",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "LogicalNetworkStatus",
        },
      },
    },
  },
};

export const MarketplaceGalleryImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceGalleryImage",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation",
        },
      },
      containerId: {
        serializedName: "properties.containerId",
        type: {
          name: "String",
        },
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "String",
        },
      },
      cloudInitDataSource: {
        serializedName: "properties.cloudInitDataSource",
        type: {
          name: "String",
        },
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String",
        },
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryImageIdentifier",
        },
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "Composite",
          className: "GalleryImageVersion",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "MarketplaceGalleryImageStatus",
        },
      },
    },
  },
};

export const NetworkInterface: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterface",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation",
        },
      },
      ipConfigurations: {
        serializedName: "properties.ipConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IPConfiguration",
            },
          },
        },
      },
      macAddress: {
        serializedName: "properties.macAddress",
        type: {
          name: "String",
        },
      },
      dnsSettings: {
        serializedName: "properties.dnsSettings",
        type: {
          name: "Composite",
          className: "InterfaceDNSSettings",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "NetworkInterfaceStatus",
        },
      },
      networkSecurityGroup: {
        serializedName: "properties.networkSecurityGroup",
        type: {
          name: "Composite",
          className: "NetworkSecurityGroupArmReference",
        },
      },
    },
  },
};

export const NetworkSecurityGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkSecurityGroup",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation",
        },
      },
      eTag: {
        serializedName: "eTag",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      networkInterfaces: {
        serializedName: "properties.networkInterfaces",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterfaceArmReference",
            },
          },
        },
      },
      subnets: {
        serializedName: "properties.subnets",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogicalNetworkArmReference",
            },
          },
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const StorageContainer: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainer",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation",
        },
      },
      path: {
        serializedName: "properties.path",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "StorageContainerStatus",
        },
      },
    },
  },
};

export const VirtualHardDisk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDisk",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "ExtendedLocation",
        },
      },
      blockSizeBytes: {
        serializedName: "properties.blockSizeBytes",
        type: {
          name: "Number",
        },
      },
      diskSizeGB: {
        serializedName: "properties.diskSizeGB",
        type: {
          name: "Number",
        },
      },
      dynamic: {
        serializedName: "properties.dynamic",
        type: {
          name: "Boolean",
        },
      },
      logicalSectorBytes: {
        serializedName: "properties.logicalSectorBytes",
        type: {
          name: "Number",
        },
      },
      physicalSectorBytes: {
        serializedName: "properties.physicalSectorBytes",
        type: {
          name: "Number",
        },
      },
      downloadUrl: {
        serializedName: "properties.downloadUrl",
        type: {
          name: "String",
        },
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String",
        },
      },
      diskFileFormat: {
        serializedName: "properties.diskFileFormat",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      containerId: {
        serializedName: "properties.containerId",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "Composite",
          className: "VirtualHardDiskStatus",
        },
      },
    },
  },
};

export const VirtualMachineInstancesCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstancesCreateOrUpdateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const VirtualMachineInstancesUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstancesUpdateHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const VirtualMachineInstancesDeleteHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstancesDeleteHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const VirtualMachineInstancesPauseHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancesPauseHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const VirtualMachineInstancesRestartHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualMachineInstancesRestartHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const VirtualMachineInstancesSaveHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancesSaveHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const VirtualMachineInstancesStartHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancesStartHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const VirtualMachineInstancesStopHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualMachineInstancesStopHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GuestAgentsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestAgentsCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GuestAgentsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GuestAgentsDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryImagesCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImagesCreateOrUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryImagesUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImagesUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryImagesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImagesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LogicalNetworksCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "LogicalNetworksCreateOrUpdateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const LogicalNetworksUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworksUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LogicalNetworksDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicalNetworksDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const MarketplaceGalleryImagesCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "MarketplaceGalleryImagesCreateOrUpdateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const MarketplaceGalleryImagesUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "MarketplaceGalleryImagesUpdateHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const MarketplaceGalleryImagesDeleteHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "MarketplaceGalleryImagesDeleteHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const NetworkInterfacesCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "NetworkInterfacesCreateOrUpdateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const NetworkInterfacesUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfacesUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const NetworkInterfacesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkInterfacesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const NetworkSecurityGroupsCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "NetworkSecurityGroupsCreateOrUpdateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const NetworkSecurityGroupsUpdateTagsHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "NetworkSecurityGroupsUpdateTagsHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const NetworkSecurityGroupsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkSecurityGroupsDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const StorageContainersCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "StorageContainersCreateOrUpdateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const StorageContainersUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainersUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const StorageContainersDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StorageContainersDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const VirtualHardDisksCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VirtualHardDisksCreateOrUpdateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const VirtualHardDisksUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDisksUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const VirtualHardDisksDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VirtualHardDisksDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SecurityRulesCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityRulesCreateOrUpdateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SecurityRulesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SecurityRulesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};
