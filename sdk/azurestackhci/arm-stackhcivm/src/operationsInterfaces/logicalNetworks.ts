/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  LogicalNetwork,
  LogicalNetworksListAllOptionalParams,
  LogicalNetworksListByResourceGroupOptionalParams,
  LogicalNetworksGetOptionalParams,
  LogicalNetworksGetResponse,
  LogicalNetworksCreateOrUpdateOptionalParams,
  LogicalNetworksCreateOrUpdateResponse,
  LogicalNetworksUpdateRequest,
  LogicalNetworksUpdateOptionalParams,
  LogicalNetworksUpdateResponse,
  LogicalNetworksDeleteOptionalParams,
  LogicalNetworksDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a LogicalNetworks. */
export interface LogicalNetworks {
  /**
   * Lists all of the logical networks in the specified subscription. Use the nextLink property in the
   * response to get the next page of logical networks.
   * @param options The options parameters.
   */
  listAll(
    options?: LogicalNetworksListAllOptionalParams,
  ): PagedAsyncIterableIterator<LogicalNetwork>;
  /**
   * Lists all of the logical networks in the specified resource group. Use the nextLink property in the
   * response to get the next page of logical networks.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: LogicalNetworksListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<LogicalNetwork>;
  /**
   * The operation to get a logical network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param logicalNetworkName Name of the logical network
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    logicalNetworkName: string,
    options?: LogicalNetworksGetOptionalParams,
  ): Promise<LogicalNetworksGetResponse>;
  /**
   * The operation to create or update a logical network. Please note some properties can be set only
   * during logical network creation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param logicalNetworkName Name of the logical network
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    logicalNetworkName: string,
    resource: LogicalNetwork,
    options?: LogicalNetworksCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LogicalNetworksCreateOrUpdateResponse>,
      LogicalNetworksCreateOrUpdateResponse
    >
  >;
  /**
   * The operation to create or update a logical network. Please note some properties can be set only
   * during logical network creation.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param logicalNetworkName Name of the logical network
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    logicalNetworkName: string,
    resource: LogicalNetwork,
    options?: LogicalNetworksCreateOrUpdateOptionalParams,
  ): Promise<LogicalNetworksCreateOrUpdateResponse>;
  /**
   * The operation to update a logical network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param logicalNetworkName Name of the logical network
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    logicalNetworkName: string,
    properties: LogicalNetworksUpdateRequest,
    options?: LogicalNetworksUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LogicalNetworksUpdateResponse>,
      LogicalNetworksUpdateResponse
    >
  >;
  /**
   * The operation to update a logical network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param logicalNetworkName Name of the logical network
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    logicalNetworkName: string,
    properties: LogicalNetworksUpdateRequest,
    options?: LogicalNetworksUpdateOptionalParams,
  ): Promise<LogicalNetworksUpdateResponse>;
  /**
   * The operation to delete a logical network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param logicalNetworkName Name of the logical network
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    logicalNetworkName: string,
    options?: LogicalNetworksDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LogicalNetworksDeleteResponse>,
      LogicalNetworksDeleteResponse
    >
  >;
  /**
   * The operation to delete a logical network.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param logicalNetworkName Name of the logical network
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    logicalNetworkName: string,
    options?: LogicalNetworksDeleteOptionalParams,
  ): Promise<LogicalNetworksDeleteResponse>;
}
