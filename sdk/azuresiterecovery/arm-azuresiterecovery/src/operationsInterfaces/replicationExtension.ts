/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ReplicationExtensionModel,
  ReplicationExtensionListOptionalParams,
  ReplicationExtensionGetOptionalParams,
  ReplicationExtensionGetResponse,
  ReplicationExtensionCreateOptionalParams,
  ReplicationExtensionCreateResponse,
  ReplicationExtensionDeleteOptionalParams,
  ReplicationExtensionDeleteResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ReplicationExtension. */
export interface ReplicationExtension {
  /**
   * Gets the list of replication extensions in the given vault.
   * @param subscriptionId The subscription Id.
   * @param resourceGroupName Resource group name.
   * @param vaultName Vault name.
   * @param options The options parameters.
   */
  list(
    subscriptionId: string,
    resourceGroupName: string,
    vaultName: string,
    options?: ReplicationExtensionListOptionalParams
  ): PagedAsyncIterableIterator<ReplicationExtensionModel>;
  /**
   * Gets the details of the replication extension.
   * @param subscriptionId The subscription Id.
   * @param resourceGroupName Resource group name.
   * @param vaultName Vault name.
   * @param replicationExtensionName Replication extension name.
   * @param options The options parameters.
   */
  get(
    subscriptionId: string,
    resourceGroupName: string,
    vaultName: string,
    replicationExtensionName: string,
    options?: ReplicationExtensionGetOptionalParams
  ): Promise<ReplicationExtensionGetResponse>;
  /**
   * Creates the replication extension in the given vault.
   * @param subscriptionId The subscription Id.
   * @param resourceGroupName Resource group name.
   * @param vaultName Vault name.
   * @param replicationExtensionName Replication extension name.
   * @param options The options parameters.
   */
  beginCreate(
    subscriptionId: string,
    resourceGroupName: string,
    vaultName: string,
    replicationExtensionName: string,
    options?: ReplicationExtensionCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ReplicationExtensionCreateResponse>,
      ReplicationExtensionCreateResponse
    >
  >;
  /**
   * Creates the replication extension in the given vault.
   * @param subscriptionId The subscription Id.
   * @param resourceGroupName Resource group name.
   * @param vaultName Vault name.
   * @param replicationExtensionName Replication extension name.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    subscriptionId: string,
    resourceGroupName: string,
    vaultName: string,
    replicationExtensionName: string,
    options?: ReplicationExtensionCreateOptionalParams
  ): Promise<ReplicationExtensionCreateResponse>;
  /**
   * Deletes the replication extension in the given vault.
   * @param subscriptionId The subscription Id.
   * @param resourceGroupName Resource group name.
   * @param vaultName Vault Name.
   * @param replicationExtensionName Replication extension name.
   * @param options The options parameters.
   */
  beginDelete(
    subscriptionId: string,
    resourceGroupName: string,
    vaultName: string,
    replicationExtensionName: string,
    options?: ReplicationExtensionDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ReplicationExtensionDeleteResponse>,
      ReplicationExtensionDeleteResponse
    >
  >;
  /**
   * Deletes the replication extension in the given vault.
   * @param subscriptionId The subscription Id.
   * @param resourceGroupName Resource group name.
   * @param vaultName Vault Name.
   * @param replicationExtensionName Replication extension name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    subscriptionId: string,
    resourceGroupName: string,
    vaultName: string,
    replicationExtensionName: string,
    options?: ReplicationExtensionDeleteOptionalParams
  ): Promise<ReplicationExtensionDeleteResponse>;
}
