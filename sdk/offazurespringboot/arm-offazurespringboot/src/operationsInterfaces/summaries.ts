/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Summary,
  SummariesListBySiteOptionalParams,
  SummariesGetOptionalParams,
  SummariesGetResponse,
  SummariesCreateOrUpdateOptionalParams,
  SummariesCreateOrUpdateResponse,
  SummariesDeleteOptionalParams,
  SummariesResourcePatch,
  SummariesUpdateOptionalParams,
  SummariesUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Summaries. */
export interface Summaries {
  /**
   * Lists the Summaries resource in springbootsites.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listBySite(
    resourceGroupName: string,
    options?: SummariesListBySiteOptionalParams
  ): PagedAsyncIterableIterator<Summary>;
  /**
   * Gets the Summaries resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    options?: SummariesGetOptionalParams
  ): Promise<SummariesGetResponse>;
  /**
   * Puts the Summaries resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param body The Summary of discovered springbootsites
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    body: Summary,
    options?: SummariesCreateOrUpdateOptionalParams
  ): Promise<SummariesCreateOrUpdateResponse>;
  /**
   * Deletes the Summaries resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    options?: SummariesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Patch the Summaries resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param body Patch payload.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    body: SummariesResourcePatch,
    options?: SummariesUpdateOptionalParams
  ): Promise<SummariesUpdateResponse>;
}
