/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** List of operations */
export interface OperationsList {
  /** List of operations */
  value?: Operation[];
  /**
   * URL to get the next page if any
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A REST API operation */
export interface Operation {
  /**
   * Name of the operation being performed on this object
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Contains the localized display information for this operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly display?: OperationDisplay;
  /**
   * The intended executor of the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: OperationOrigin;
}

/** Contains the localized display information for this operation */
export interface OperationDisplay {
  /**
   * Localized friendly form of the resource provider name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * Localized friendly form of the resource type related to this operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * Localized friendly name for the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * Localized friendly description for the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** A paged list of SCOM monitoring instances */
export interface MonitoringInstanceList {
  /**
   * The items on the page
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: MonitoringInstance[];
  /**
   * URL to get the next page if any
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The properties of a SCOM instance resource */
export interface MonitoringInstanceProperties {
  /**
   * SCOM product version to be installed on instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productVersion?: string;
  /** Virtual Network subnet id on which Aquila instance will be provisioned */
  vNetSubnetId?: string;
  /**
   * List of management server endpoints
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managementEndpoints?: ManagementServerProperties[];
  /** Database instance on which SCOM Operational and Warehouse database will be stored */
  databaseInstance?: DatabaseInstanceProperties;
  /** Domain controller details */
  domainController?: DomainControllerProperties;
  /** Domain user which will be used to join VMs to domain and login to VMs */
  domainUserCredentials?: DomainUserCredentials;
  /** Gmsa Details for load balancer and vmss */
  gmsaDetails?: GmsaDetails;
  /** The properties to enable Azure Hybrid benefit for various SCOM infrastructure license */
  azureHybridBenefit?: AzureHybridBenefitProperties;
  /**
   * Gets or sets the provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * Gets status of current and latest SCOM managed instance Operations
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationsStatus?: ManagedInstanceOperationStatus[];
}

/** The properties of management server */
export interface ManagementServerProperties {
  /**
   * Management server Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serverName?: string;
  /**
   * Azure VM Resource Id of the Management server
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmResId?: string;
  /**
   * Management server Fully Qualified Domain Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fqdn?: string;
  /**
   * Represent whether the Server is a Management Server and/or Web Console Server
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serverRoles?: string;
  /**
   * Management server health state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthState?: string;
}

/** The properties of database instance */
export interface DatabaseInstanceProperties {
  /** Resource Id of existing database instance */
  databaseInstanceId?: string;
  /**
   * Fully qualified domain name of existing database instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly databaseFqdn?: string;
  /**
   * Name of warehouse database on database instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dwDatabaseName?: string;
  /**
   * Resource Id of operational database on database instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationalDatabaseId?: string;
  /**
   * Resource Id of warehouse database on database instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dwDatabaseId?: string;
}

/** The properties of domain controller to which SCOM and SQL servers join for AuthN/AuthZ */
export interface DomainControllerProperties {
  /** Fully qualified domain name */
  domainName?: string;
  /** IP address of DNS server */
  dnsServer?: string;
  /** Organizational Unit path in which the SCOM servers will be present */
  ouPath?: string;
}

/** Get Domain user name and password from key vault */
export interface DomainUserCredentials {
  /** Key vault url to get the domain username and password */
  keyVaultUrl?: string;
  /** Domain user name secret */
  userNameSecret?: string;
  /** Domain Password secret */
  passwordSecret?: string;
}

/** Gmsa Details */
export interface GmsaDetails {
  /** Frontend IP configuration for Load Balancer, which should be an available IP in customer VNet */
  loadBalancerIP?: string;
  /** gMSA account under which context all Management Server services will run */
  gmsaAccount?: string;
  /** OnPrem AD Computer Group where we will join VMs for ease of management */
  managementServerGroupName?: string;
  /** Frontend DNS name for Load Balancer which will be used by Agents to initiate communication */
  dnsName?: string;
}

/** The properties to maximize savings by using Azure Hybrid Benefit */
export interface AzureHybridBenefitProperties {
  /** SCOM license type. Maximize savings by using license you already own */
  scomLicenseType?: HybridLicenseType;
  /** Specifies that the image or disk that is being used was licensed on-premises. <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) */
  windowsServerLicenseType?: HybridLicenseType;
  /** SQL Server license type. Maximize savings by using Azure Hybrid Benefit for SQL Server with license you already own */
  sqlServerLicenseType?: HybridLicenseType;
}

/** Gets status of current and latest SCOM managed instance Operation */
export interface ManagedInstanceOperationStatus {
  /**
   * Operation Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationName?: string;
  /**
   * Operation status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationState?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Azure Active Directory identity configuration for a resource. */
export interface ManagedIdentity {
  /** The identity type */
  type?: ManagedIdentityType;
  /**
   * System Assigned Identity ObjectId.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The Azure Active Directory tenant id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** The resource ids of the user assigned identities to use */
  userAssignedIdentities?: { [propertyName: string]: UserIdentity };
}

/** Azure Active Directory identity configuration for a resource. */
export interface UserIdentity {
  /**
   * The Azure Active Directory principal id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The Azure Active Directory client id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Object containing updates for patch operations. */
export interface MonitoringInstancePatch {
  /** The Azure Active Directory identity of the SCOM instance */
  identity?: ManagedIdentity;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Properties for Scaling */
export interface ScalingProperties {
  /** Required management server count */
  serverCount?: number;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** A SCOM instance resource */
export interface MonitoringInstance extends TrackedResource {
  /** The properties of a SCOM instance resource */
  properties?: MonitoringInstanceProperties;
  /**
   * The system data.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The Azure Active Directory identity of the SCOM instance */
  identity?: ManagedIdentity;
}

/** Known values of {@link OperationOrigin} that the service accepts. */
export enum KnownOperationOrigin {
  /** NotSpecified */
  NotSpecified = "NotSpecified",
  /** User */
  User = "user",
  /** System */
  System = "system"
}

/**
 * Defines values for OperationOrigin. \
 * {@link KnownOperationOrigin} can be used interchangeably with OperationOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **NotSpecified** \
 * **user** \
 * **system**
 */
export type OperationOrigin = string;

/** Known values of {@link HybridLicenseType} that the service accepts. */
export enum KnownHybridLicenseType {
  /** None */
  None = "None",
  /** AzureHybridBenefit */
  AzureHybridBenefit = "AzureHybridBenefit"
}

/**
 * Defines values for HybridLicenseType. \
 * {@link KnownHybridLicenseType} can be used interchangeably with HybridLicenseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **AzureHybridBenefit**
 */
export type HybridLicenseType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link ManagedIdentityType} that the service accepts. */
export enum KnownManagedIdentityType {
  /** None */
  None = "None",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned,UserAssigned"
}

/**
 * Defines values for ManagedIdentityType. \
 * {@link KnownManagedIdentityType} can be used interchangeably with ManagedIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **UserAssigned** \
 * **SystemAssigned** \
 * **SystemAssigned,UserAssigned**
 */
export type ManagedIdentityType = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationsList;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationsList;

/** Optional parameters. */
export interface InstancesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type InstancesListByResourceGroupResponse = MonitoringInstanceList;

/** Optional parameters. */
export interface InstancesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type InstancesListBySubscriptionResponse = MonitoringInstanceList;

/** Optional parameters. */
export interface InstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type InstancesGetResponse = MonitoringInstance;

/** Optional parameters. */
export interface InstancesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Validation mode for the SCOM monitoring instance */
  validationMode?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type InstancesCreateOrUpdateResponse = MonitoringInstance;

/** Optional parameters. */
export interface InstancesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** SCOM monitoring instance properties update */
  monitoringInstance?: MonitoringInstancePatch;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type InstancesUpdateResponse = MonitoringInstance;

/** Optional parameters. */
export interface InstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface InstancesScaleOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface InstancesPatchServersOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface InstancesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type InstancesListByResourceGroupNextResponse = MonitoringInstanceList;

/** Optional parameters. */
export interface InstancesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type InstancesListBySubscriptionNextResponse = MonitoringInstanceList;

/** Optional parameters. */
export interface AzureAPIForManagingScomMonitoringInstancesOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
