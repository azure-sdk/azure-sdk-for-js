/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** A paged list of SCOM managed instances */
export interface MonitoringInstanceList {
  /**
   * The items on the page
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ManagedInstance[];
  /**
   * URL to get the next page if any
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The properties of management server */
export interface ManagementServerProperties {
  /**
   * Management server Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serverName?: string;
  /**
   * Azure VM Resource Id of the Management server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly vmResId?: string;
  /**
   * Management server Fully Qualified Domain Name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly fqdn?: string;
  /**
   * Represent whether the Server is a Management Server and/or Web Console Server.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly serverRoles?: string;
  /**
   * Management server health state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthState?: string;
}

/** The properties of database instance */
export interface DatabaseInstanceProperties {
  /** Resource Id of existing database instance */
  databaseInstanceId?: string;
  /**
   * Fully qualified domain name of existing database instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly databaseFqdn?: string;
  /**
   * Name of warehouse database on database instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dwDatabaseName?: string;
  /**
   * Resource Id of operational database on database instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationalDatabaseId?: string;
  /**
   * Resource Id of warehouse database on database instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dwDatabaseId?: string;
}

/** The properties of domain controller to which SCOM and SQL servers join for AuthN/AuthZ. */
export interface DomainControllerProperties {
  /** Fully qualified domain name */
  domainName?: string;
  /** IP address of DNS server */
  dnsServer?: string;
  /** Organizational Unit path in which the SCOM servers will be present */
  ouPath?: string;
}

/** Get Domain user name and password from key vault */
export interface DomainUserCredentials {
  /** Key vault url to get the domain username and password */
  keyVaultUrl?: string;
  /** Domain user name secret */
  userNameSecret?: string;
  /** Domain Password secret */
  passwordSecret?: string;
}

/** Gmsa Details */
export interface GmsaDetails {
  /** Frontend IP configuration for Load Balancer, which should be an available IP in customer VNet */
  loadBalancerIP?: string;
  /** gMSA account under which context all Management Server services will run */
  gmsaAccount?: string;
  /** OnPrem AD Computer Group where we will join VMs for ease of management */
  managementServerGroupName?: string;
  /** Frontend DNS name for Load Balancer which will be used by Agents to initiate communication */
  dnsName?: string;
}

/** The properties to maximize savings by using Azure Hybrid Benefit */
export interface AzureHybridBenefitProperties {
  /** SCOM license type. Maximize savings by using license you already own */
  scomLicenseType?: HybridLicenseType;
  /** Specifies that the image or disk that is being used was licensed on-premises. <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) */
  windowsServerLicenseType?: HybridLicenseType;
  /** SQL Server license type. Maximize savings by using Azure Hybrid Benefit for SQL Server with license you already own */
  sqlServerLicenseType?: HybridLicenseType;
}

/** Configuration for Log Analytics linking to SCOM managed instance. */
export interface LogAnalyticsConfiguration {
  /** The resource ID of the Log Analytics workspace to be used. */
  workspaceId?: string;
  /** The types of data to be ingested to Log Analytics workspace. */
  dataTypes?: DataType[];
  /** A one-time optional parameter to import data of last 7 days. */
  importData?: boolean;
}

/** Gets status of current and latest SCOM managed instance operation. */
export interface ManagedInstanceOperationStatus {
  /**
   * Operation Name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationName?: string;
  /**
   * Operation status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationState?: string;
  /**
   * Operation id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
}

/** Azure Active Directory identity configuration for a resource. */
export interface ManagedIdentity {
  /** The identity type */
  type?: ManagedIdentityType;
  /**
   * System Assigned Identity ObjectId.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The Azure Active Directory tenant id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** The resource ids of the user assigned identities to use */
  userAssignedIdentities?: { [propertyName: string]: UserIdentity };
}

/** Azure Active Directory identity configuration for a resource. */
export interface UserIdentity {
  /**
   * The Azure Active Directory principal id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The Azure Active Directory client id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Object containing updates for patch operations. */
export interface MonitoringInstancePatch {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The Azure Active Directory identity of the SCOM instance */
  identity?: ManagedIdentity;
}

/** The response of a ManagedGateway list operation. */
export interface ManagedGatewayListResult {
  /** The ManagedGateway items on this page */
  value: ManagedGateway[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The response of a MonitoredResource list operation. */
export interface MonitoredResourceListResult {
  /** The MonitoredResource items on this page */
  value: MonitoredResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Properties for patching servers */
export interface PatchServersResponseProperties {
  /** Status of the patch operation */
  status?: string;
}

/** Properties for Scaling */
export interface ScalingProperties {
  /** Required management server count */
  serverCount?: number;
}

/** Properties for set server count operation */
export interface SetServerCountResponseProperties {
  /** Management server count */
  serverCount?: number;
}

/** Properties for unlinking log analytics */
export interface UnlinkLogAnalyticsResponseProperties {
  /** Status of the unlink operation */
  status?: string;
}

/** Updated configuration for Log Analytics linking */
export interface LogAnalyticsUpdateConfiguration {
  /** The types of data to be ingested to Log Analytics workspace. */
  dataTypes?: DataType[];
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** A SCOM instance resource */
export interface ManagedInstance extends TrackedResource {
  /** The managed service identities assigned to this resource. */
  identity?: ManagedIdentity;
  /**
   * SCOM product version to be installed on instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly productVersion?: string;
  /** Virtual Network subnet id on which Aquila instance will be provisioned */
  vNetSubnetId?: string;
  /**
   * List of management server endpoints
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managementEndpoints?: ManagementServerProperties[];
  /** The database instance where the SCOM Operational and Warehouse databases will be stored. */
  databaseInstance?: DatabaseInstanceProperties;
  /** Domain controller details */
  domainController?: DomainControllerProperties;
  /** Domain user which will be used to join VMs to domain and login to VMs. */
  domainUserCredentials?: DomainUserCredentials;
  /** Gmsa Details for load balancer and vmss */
  gmsaDetails?: GmsaDetails;
  /** The properties to enable Azure Hybrid benefit for various SCOM infrastructure license. */
  azureHybridBenefit?: AzureHybridBenefitProperties;
  /**
   * Gets or sets the provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * Details of Log Analytics workspace and data being ingested.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly logAnalyticsProperties?: LogAnalyticsConfiguration;
  /**
   * Gets status of current and latest SCOM managed instance operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operationsStatus?: ManagedInstanceOperationStatus[];
}

/** A gateway resource. */
export interface ManagedGateway extends ProxyResource {
  /** ArmId of the gateway to be monitored. */
  resourceId?: string;
  /** Location of the gateway to be monitored. */
  resourceLocation?: string;
  /** ComputerName of the gateway to be monitored. */
  computerName?: string;
  /** The domain name associated with the gateway to be monitored. */
  domainName?: string;
  /**
   * The management server endpoint to which the gateway is directed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managementServerEndpoint?: string;
  /**
   * The health status of the gateway resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthStatus?: string;
  /**
   * The connection status of the gateway resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionStatus?: string;
  /**
   * The version of the gateway resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly version?: string;
  /**
   * Install type of gateway resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly installType?: string;
  /**
   * Gets or sets the provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** A monitored resource. */
export interface MonitoredResource extends ProxyResource {
  /** ArmId of the monitored resource. */
  resourceId?: string;
  /** Location of the monitored resource. */
  resourceLocation?: string;
  /** ComputerName of the monitored resource. */
  computerName?: string;
  /** The domain name associated with the monitored resource. */
  domainName?: string;
  /**
   * The management server endpoint to which the monitored resource is directed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managementServerEndpoint?: string;
  /**
   * The health status of the monitored resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthStatus?: string;
  /**
   * The connection status of the monitored resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionStatus?: string;
  /**
   * The version of the monitored resource agent version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly agentVersion?: string;
  /**
   * Install type of monitored resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly installType?: string;
  /**
   * Gets or sets the provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Defines headers for Instances_createOrUpdate operation. */
export interface InstancesCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Instances_update operation. */
export interface InstancesUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for Instances_delete operation. */
export interface InstancesDeleteHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for Instances_linkLogAnalytics operation. */
export interface InstancesLinkLogAnalyticsHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for Instances_patchServers operation. */
export interface InstancesPatchServersHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for Instances_scale operation. */
export interface InstancesScaleHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for Instances_unlinkLogAnalytics operation. */
export interface InstancesUnlinkLogAnalyticsHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for Instances_updateLogAnalytics operation. */
export interface InstancesUpdateLogAnalyticsHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link HybridLicenseType} that the service accepts. */
export enum KnownHybridLicenseType {
  /** No license */
  None = "None",
  /** Azure Hybrid Benefit license */
  AzureHybridBenefit = "AzureHybridBenefit"
}

/**
 * Defines values for HybridLicenseType. \
 * {@link KnownHybridLicenseType} can be used interchangeably with HybridLicenseType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: No license \
 * **AzureHybridBenefit**: Azure Hybrid Benefit license
 */
export type HybridLicenseType = string;

/** Known values of {@link DataType} that the service accepts. */
export enum KnownDataType {
  /** State data */
  State = "State",
  /** Performance data */
  Performance = "Performance",
  /** Event data */
  Event = "Event",
  /** Audit data */
  Audit = "Audit"
}

/**
 * Defines values for DataType. \
 * {@link KnownDataType} can be used interchangeably with DataType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **State**: State data \
 * **Performance**: Performance data \
 * **Event**: Event data \
 * **Audit**: Audit data
 */
export type DataType = string;

/** Known values of {@link ManagedIdentityType} that the service accepts. */
export enum KnownManagedIdentityType {
  /** No managed identity. */
  None = "None",
  /** User assigned managed identity. */
  UserAssigned = "UserAssigned",
  /** System assigned managed identity. */
  SystemAssigned = "SystemAssigned",
  /** System and user assigned managed identity. */
  SystemAssignedUserAssigned = "SystemAssigned,UserAssigned"
}

/**
 * Defines values for ManagedIdentityType. \
 * {@link KnownManagedIdentityType} can be used interchangeably with ManagedIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: No managed identity. \
 * **UserAssigned**: User assigned managed identity. \
 * **SystemAssigned**: System assigned managed identity. \
 * **SystemAssigned,UserAssigned**: System and user assigned managed identity.
 */
export type ManagedIdentityType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Optional parameters. */
export interface OperationsListV2OptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listV2 operation. */
export type OperationsListV2Response = OperationListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListV2NextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listV2Next operation. */
export type OperationsListV2NextResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface InstancesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type InstancesListBySubscriptionResponse = MonitoringInstanceList;

/** Optional parameters. */
export interface InstancesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type InstancesListByResourceGroupResponse = MonitoringInstanceList;

/** Optional parameters. */
export interface InstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type InstancesGetResponse = ManagedInstance;

/** Optional parameters. */
export interface InstancesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Validation mode for the SCOM managed instance */
  validationMode?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type InstancesCreateOrUpdateResponse = ManagedInstance;

/** Optional parameters. */
export interface InstancesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type InstancesUpdateResponse = ManagedInstance;

/** Optional parameters. */
export interface InstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface InstancesLinkLogAnalyticsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the linkLogAnalytics operation. */
export type InstancesLinkLogAnalyticsResponse = LogAnalyticsConfiguration;

/** Optional parameters. */
export interface InstancesPatchServersOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the patchServers operation. */
export type InstancesPatchServersResponse = PatchServersResponseProperties;

/** Optional parameters. */
export interface InstancesScaleOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the scale operation. */
export type InstancesScaleResponse = SetServerCountResponseProperties;

/** Optional parameters. */
export interface InstancesUnlinkLogAnalyticsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the unlinkLogAnalytics operation. */
export type InstancesUnlinkLogAnalyticsResponse = UnlinkLogAnalyticsResponseProperties;

/** Optional parameters. */
export interface InstancesUpdateLogAnalyticsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateLogAnalytics operation. */
export type InstancesUpdateLogAnalyticsResponse = LogAnalyticsUpdateConfiguration;

/** Optional parameters. */
export interface InstancesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type InstancesListBySubscriptionNextResponse = MonitoringInstanceList;

/** Optional parameters. */
export interface InstancesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type InstancesListByResourceGroupNextResponse = MonitoringInstanceList;

/** Optional parameters. */
export interface ManagedGatewaysListByManagedInstanceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByManagedInstance operation. */
export type ManagedGatewaysListByManagedInstanceResponse = ManagedGatewayListResult;

/** Optional parameters. */
export interface ManagedGatewaysGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ManagedGatewaysGetResponse = ManagedGateway;

/** Optional parameters. */
export interface ManagedGatewaysCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type ManagedGatewaysCreateOrUpdateResponse = ManagedGateway;

/** Optional parameters. */
export interface ManagedGatewaysDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ManagedGatewaysListByManagedInstanceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByManagedInstanceNext operation. */
export type ManagedGatewaysListByManagedInstanceNextResponse = ManagedGatewayListResult;

/** Optional parameters. */
export interface MonitoredResourcesListByManagedInstanceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByManagedInstance operation. */
export type MonitoredResourcesListByManagedInstanceResponse = MonitoredResourceListResult;

/** Optional parameters. */
export interface MonitoredResourcesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MonitoredResourcesGetResponse = MonitoredResource;

/** Optional parameters. */
export interface MonitoredResourcesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type MonitoredResourcesCreateOrUpdateResponse = MonitoredResource;

/** Optional parameters. */
export interface MonitoredResourcesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface MonitoredResourcesListByManagedInstanceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByManagedInstanceNext operation. */
export type MonitoredResourcesListByManagedInstanceNextResponse = MonitoredResourceListResult;

/** Optional parameters. */
export interface AzureAPIForManagingScomManagedInstancesAndMonitoredResourcesOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
