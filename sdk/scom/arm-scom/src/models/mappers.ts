/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const MonitoringInstanceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringInstanceList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedInstance",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MonitoringInstanceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringInstanceProperties",
    modelProperties: {
      productVersion: {
        serializedName: "productVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      vNetSubnetId: {
        serializedName: "vNetSubnetId",
        type: {
          name: "String",
        },
      },
      managementEndpoints: {
        serializedName: "managementEndpoints",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagementServerProperties",
            },
          },
        },
      },
      databaseInstance: {
        serializedName: "databaseInstance",
        type: {
          name: "Composite",
          className: "DatabaseInstanceProperties",
        },
      },
      domainController: {
        serializedName: "domainController",
        type: {
          name: "Composite",
          className: "DomainControllerProperties",
        },
      },
      domainUserCredentials: {
        serializedName: "domainUserCredentials",
        type: {
          name: "Composite",
          className: "DomainUserCredentials",
        },
      },
      gmsaDetails: {
        serializedName: "gmsaDetails",
        type: {
          name: "Composite",
          className: "GmsaDetails",
        },
      },
      azureHybridBenefit: {
        serializedName: "azureHybridBenefit",
        type: {
          name: "Composite",
          className: "AzureHybridBenefitProperties",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      logAnalyticsProperties: {
        serializedName: "logAnalyticsProperties",
        type: {
          name: "Composite",
          className: "LogAnalyticsConfiguration",
        },
      },
      operationsStatus: {
        serializedName: "operationsStatus",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedInstanceOperationStatus",
            },
          },
        },
      },
    },
  },
};

export const ManagementServerProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagementServerProperties",
    modelProperties: {
      serverName: {
        serializedName: "serverName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      vmResId: {
        serializedName: "vmResId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      fqdn: {
        serializedName: "fqdn",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      serverRoles: {
        serializedName: "serverRoles",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      healthState: {
        serializedName: "healthState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DatabaseInstanceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseInstanceProperties",
    modelProperties: {
      databaseInstanceId: {
        serializedName: "databaseInstanceId",
        type: {
          name: "String",
        },
      },
      databaseFqdn: {
        serializedName: "databaseFqdn",
        type: {
          name: "String",
        },
      },
      dwDatabaseName: {
        serializedName: "dwDatabaseName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operationalDatabaseId: {
        serializedName: "operationalDatabaseId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      dwDatabaseId: {
        serializedName: "dwDatabaseId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DomainControllerProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DomainControllerProperties",
    modelProperties: {
      domainName: {
        serializedName: "domainName",
        type: {
          name: "String",
        },
      },
      dnsServer: {
        serializedName: "dnsServer",
        type: {
          name: "String",
        },
      },
      ouPath: {
        defaultValue: "",
        serializedName: "ouPath",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DomainUserCredentials: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DomainUserCredentials",
    modelProperties: {
      keyVaultUrl: {
        serializedName: "keyVaultUrl",
        type: {
          name: "String",
        },
      },
      userNameSecret: {
        serializedName: "userNameSecret",
        type: {
          name: "String",
        },
      },
      passwordSecret: {
        serializedName: "passwordSecret",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GmsaDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GmsaDetails",
    modelProperties: {
      loadBalancerIP: {
        serializedName: "loadBalancerIP",
        type: {
          name: "String",
        },
      },
      gmsaAccount: {
        serializedName: "gmsaAccount",
        type: {
          name: "String",
        },
      },
      managementServerGroupName: {
        serializedName: "managementServerGroupName",
        type: {
          name: "String",
        },
      },
      dnsName: {
        serializedName: "dnsName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureHybridBenefitProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureHybridBenefitProperties",
    modelProperties: {
      scomLicenseType: {
        serializedName: "scomLicenseType",
        type: {
          name: "String",
        },
      },
      windowsServerLicenseType: {
        serializedName: "windowsServerLicenseType",
        type: {
          name: "String",
        },
      },
      sqlServerLicenseType: {
        serializedName: "sqlServerLicenseType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LogAnalyticsConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogAnalyticsConfiguration",
    modelProperties: {
      workspaceId: {
        serializedName: "workspaceId",
        type: {
          name: "String",
        },
      },
      dataTypes: {
        serializedName: "dataTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      importData: {
        defaultValue: false,
        serializedName: "importData",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const ManagedInstanceOperationStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedInstanceOperationStatus",
    modelProperties: {
      operationName: {
        serializedName: "operationName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operationState: {
        serializedName: "operationState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operationMessage: {
        serializedName: "operationMessage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ManagedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedIdentity",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "UserIdentity" } },
        },
      },
    },
  },
};

export const UserIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const MonitoringInstancePatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringInstancePatch",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MonitoringInstancePatchProperties",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedIdentity",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const MonitoringInstancePatchProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringInstancePatchProperties",
    modelProperties: {
      domainUserCredentials: {
        serializedName: "domainUserCredentials",
        type: {
          name: "Composite",
          className: "DomainUserCredentials",
        },
      },
    },
  },
};

export const ScalingProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingProperties",
    modelProperties: {
      serverCount: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1,
        },
        serializedName: "serverCount",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SetServerCountResponseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SetServerCountResponseProperties",
    modelProperties: {
      serverCount: {
        serializedName: "serverCount",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GetResourceSummaryResponseProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GetResourceSummaryResponseProperties",
      modelProperties: {
        monitoredResources: {
          serializedName: "monitoredResources",
          type: {
            name: "Composite",
            className: "GetResourceSummary",
          },
        },
        gateways: {
          serializedName: "gateways",
          type: {
            name: "Composite",
            className: "GetResourceSummary",
          },
        },
      },
    },
  };

export const GetResourceSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResourceSummary",
    modelProperties: {
      count: {
        serializedName: "count",
        type: {
          name: "Composite",
          className: "GetResourceCountProperties",
        },
      },
    },
  },
};

export const GetResourceCountProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResourceCountProperties",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number",
        },
      },
      healthy: {
        serializedName: "healthy",
        type: {
          name: "Number",
        },
      },
      unhealthy: {
        serializedName: "unhealthy",
        type: {
          name: "Number",
        },
      },
      arcMachines: {
        serializedName: "arcMachines",
        type: {
          name: "Number",
        },
      },
      azureMachines: {
        serializedName: "azureMachines",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GetResourceListProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResourceListProperties",
    modelProperties: {
      filterProperties: {
        serializedName: "filterProperties",
        type: {
          name: "Composite",
          className: "FilterProperties",
        },
      },
    },
  },
};

export const FilterProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilterProperties",
    modelProperties: {
      skip: {
        serializedName: "skip",
        type: {
          name: "Number",
        },
      },
      take: {
        serializedName: "take",
        type: {
          name: "Number",
        },
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      subscription: {
        serializedName: "subscription",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      resourcegroup: {
        serializedName: "resourcegroup",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      healthStatus: {
        serializedName: "healthStatus",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      autoUpgrade: {
        serializedName: "autoUpgrade",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      machineType: {
        serializedName: "machineType",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const GetResourcesListResponseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetResourcesListResponseProperties",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NexusResourcesProperties",
            },
          },
        },
      },
      totalRecords: {
        serializedName: "totalRecords",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const FilteredResourcesResponseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilteredResourcesResponseProperties",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String",
        },
      },
      resourceLocation: {
        serializedName: "resourceLocation",
        type: {
          name: "String",
        },
      },
      computerName: {
        serializedName: "computerName",
        type: {
          name: "String",
        },
      },
      domainName: {
        serializedName: "domainName",
        type: {
          name: "String",
        },
      },
      onboardingStatus: {
        serializedName: "onboardingStatus",
        type: {
          name: "Composite",
          className: "OnboardingStatusProperties",
        },
      },
      managementServerEndpoint: {
        serializedName: "managementServerEndpoint",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      healthStatus: {
        serializedName: "healthStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      connectionStatus: {
        serializedName: "connectionStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      installType: {
        serializedName: "installType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      autoUpgrade: {
        serializedName: "autoUpgrade",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystem: {
        serializedName: "operatingSystem",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineType: {
        serializedName: "machineType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resourceAdditionalProperties: {
        serializedName: "resourceAdditionalProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const OnboardingStatusProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OnboardingStatusProperties",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GatewayOnboardingProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GatewayOnboardingProperties",
    modelProperties: {
      scomGateway: {
        serializedName: "scomGateway",
        type: {
          name: "String",
        },
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CommonResponseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommonResponseProperties",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MonitoredResourceOffboardingProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "MonitoredResourceOffboardingProperties",
      modelProperties: {
        computerName: {
          serializedName: "computerName",
          type: {
            name: "String",
          },
        },
        resourceId: {
          serializedName: "resourceId",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const PatchServersResponseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PatchServersResponseProperties",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UnlinkLogAnalyticsResponseProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "UnlinkLogAnalyticsResponseProperties",
      modelProperties: {
        status: {
          serializedName: "status",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const LogAnalyticsUpdateConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogAnalyticsUpdateConfiguration",
    modelProperties: {
      dataTypes: {
        serializedName: "dataTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const MonitoredResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredResourceProperties",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String",
        },
      },
      resourceLocation: {
        serializedName: "resourceLocation",
        type: {
          name: "String",
        },
      },
      computerName: {
        serializedName: "computerName",
        type: {
          name: "String",
        },
      },
      domainName: {
        serializedName: "domainName",
        type: {
          name: "String",
        },
      },
      onboardingStatus: {
        serializedName: "onboardingStatus",
        type: {
          name: "Composite",
          className: "OnboardingStatusProperties",
        },
      },
      managementServerEndpoint: {
        serializedName: "managementServerEndpoint",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      healthStatus: {
        serializedName: "healthStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      connectionStatus: {
        serializedName: "connectionStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      agentVersion: {
        serializedName: "agentVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      installType: {
        serializedName: "installType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      autoUpgrade: {
        serializedName: "autoUpgrade",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      totalAlerts: {
        serializedName: "totalAlerts",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      operatingSystem: {
        serializedName: "operatingSystem",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineType: {
        serializedName: "machineType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MonitoredResources: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredResources",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MonitoredResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ManagedGatewayProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedGatewayProperties",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String",
        },
      },
      resourceLocation: {
        serializedName: "resourceLocation",
        type: {
          name: "String",
        },
      },
      computerName: {
        serializedName: "computerName",
        type: {
          name: "String",
        },
      },
      domainName: {
        serializedName: "domainName",
        type: {
          name: "String",
        },
      },
      onboardingStatus: {
        serializedName: "onboardingStatus",
        type: {
          name: "Composite",
          className: "OnboardingStatusProperties",
        },
      },
      managementServerEndpoint: {
        serializedName: "managementServerEndpoint",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      healthStatus: {
        serializedName: "healthStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      connectionStatus: {
        serializedName: "connectionStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      installType: {
        serializedName: "installType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      autoUpgrade: {
        serializedName: "autoUpgrade",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      totalAlerts: {
        serializedName: "totalAlerts",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalAgents: {
        serializedName: "totalAgents",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      operatingSystem: {
        serializedName: "operatingSystem",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineType: {
        serializedName: "machineType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ManagedGateways: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedGateways",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedGateway",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NexusResourcesProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NexusResourcesProperties",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "FilteredResourcesResponseProperties",
        },
      },
    },
  },
};

export const MonitoredResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MonitoredResourceProperties",
        },
      },
    },
  },
};

export const ManagedGateway: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedGateway",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ManagedGatewayProperties",
        },
      },
    },
  },
};

export const ManagedInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedInstance",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MonitoringInstanceProperties",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedIdentity",
        },
      },
    },
  },
};

export const InstancesUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstancesUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const InstancesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstancesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const InstancesScaleHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstancesScaleHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const InstancesPatchServersHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstancesPatchServersHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const InstancesLinkLogAnalyticsHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstancesLinkLogAnalyticsHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const InstancesUnlinkLogAnalyticsHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstancesUnlinkLogAnalyticsHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const InstancesUpdateLogAnalyticsHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstancesUpdateLogAnalyticsHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OnboardGatewayHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OnboardGatewayHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OffboardGatewayHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OffboardGatewayHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OffboardMonitoredResourceHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OffboardMonitoredResourceHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};
