/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationsList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationsList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const MonitoringInstanceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringInstanceList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MonitoringInstance"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitoringInstanceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringInstanceProperties",
    modelProperties: {
      productVersion: {
        serializedName: "productVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      vNetSubnetId: {
        serializedName: "vNetSubnetId",
        type: {
          name: "String"
        }
      },
      managementEndpoints: {
        serializedName: "managementEndpoints",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagementServerProperties"
            }
          }
        }
      },
      databaseInstance: {
        serializedName: "databaseInstance",
        type: {
          name: "Composite",
          className: "DatabaseInstanceProperties"
        }
      },
      domainController: {
        serializedName: "domainController",
        type: {
          name: "Composite",
          className: "DomainControllerProperties"
        }
      },
      domainUserCredentials: {
        serializedName: "domainUserCredentials",
        type: {
          name: "Composite",
          className: "DomainUserCredentials"
        }
      },
      gmsaDetails: {
        serializedName: "gmsaDetails",
        type: {
          name: "Composite",
          className: "GmsaDetails"
        }
      },
      azureHybridBenefit: {
        serializedName: "azureHybridBenefit",
        type: {
          name: "Composite",
          className: "AzureHybridBenefitProperties"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operationsStatus: {
        serializedName: "operationsStatus",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagedInstanceOperationStatus"
            }
          }
        }
      }
    }
  }
};

export const ManagementServerProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagementServerProperties",
    modelProperties: {
      serverName: {
        serializedName: "serverName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      vmResId: {
        serializedName: "vmResId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      fqdn: {
        serializedName: "fqdn",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      serverRoles: {
        serializedName: "serverRoles",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      healthState: {
        serializedName: "healthState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabaseInstanceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DatabaseInstanceProperties",
    modelProperties: {
      databaseInstanceId: {
        serializedName: "databaseInstanceId",
        type: {
          name: "String"
        }
      },
      databaseFqdn: {
        serializedName: "databaseFqdn",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dwDatabaseName: {
        serializedName: "dwDatabaseName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operationalDatabaseId: {
        serializedName: "operationalDatabaseId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      dwDatabaseId: {
        serializedName: "dwDatabaseId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DomainControllerProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DomainControllerProperties",
    modelProperties: {
      domainName: {
        serializedName: "domainName",
        type: {
          name: "String"
        }
      },
      dnsServer: {
        serializedName: "dnsServer",
        type: {
          name: "String"
        }
      },
      ouPath: {
        defaultValue: "",
        serializedName: "ouPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DomainUserCredentials: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DomainUserCredentials",
    modelProperties: {
      keyVaultUrl: {
        serializedName: "keyVaultUrl",
        type: {
          name: "String"
        }
      },
      userNameSecret: {
        serializedName: "userNameSecret",
        type: {
          name: "String"
        }
      },
      passwordSecret: {
        serializedName: "passwordSecret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GmsaDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GmsaDetails",
    modelProperties: {
      loadBalancerIP: {
        serializedName: "loadBalancerIP",
        type: {
          name: "String"
        }
      },
      gmsaAccount: {
        serializedName: "gmsaAccount",
        type: {
          name: "String"
        }
      },
      managementServerGroupName: {
        serializedName: "managementServerGroupName",
        type: {
          name: "String"
        }
      },
      dnsName: {
        serializedName: "dnsName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureHybridBenefitProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureHybridBenefitProperties",
    modelProperties: {
      scomLicenseType: {
        serializedName: "scomLicenseType",
        type: {
          name: "String"
        }
      },
      windowsServerLicenseType: {
        serializedName: "windowsServerLicenseType",
        type: {
          name: "String"
        }
      },
      sqlServerLicenseType: {
        serializedName: "sqlServerLicenseType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedInstanceOperationStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedInstanceOperationStatus",
    modelProperties: {
      operationName: {
        serializedName: "operationName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operationState: {
        serializedName: "operationState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ManagedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedIdentity",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "UserIdentity" } }
        }
      }
    }
  }
};

export const UserIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitoringInstancePatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringInstancePatch",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedIdentity"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ScalingProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScalingProperties",
    modelProperties: {
      serverCount: {
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 1
        },
        serializedName: "serverCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitoringInstance: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringInstance",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MonitoringInstanceProperties"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedIdentity"
        }
      }
    }
  }
};
