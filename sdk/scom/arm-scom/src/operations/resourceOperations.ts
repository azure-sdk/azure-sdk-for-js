/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ResourceOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AzureAPIForManagingScomManagedInstancesAndMonitoredResources } from "../azureAPIForManagingScomManagedInstancesAndMonitoredResources";
import {
  ResourceSummaryOptionalParams,
  ResourceSummaryResponse,
  GetResourceListProperties,
  ResourceListOptionalParams,
  ResourceListResponse,
} from "../models";

/** Class containing ResourceOperations operations. */
export class ResourceOperationsImpl implements ResourceOperations {
  private readonly client: AzureAPIForManagingScomManagedInstancesAndMonitoredResources;

  /**
   * Initialize a new instance of the class ResourceOperations class.
   * @param client Reference to the service client
   */
  constructor(
    client: AzureAPIForManagingScomManagedInstancesAndMonitoredResources,
  ) {
    this.client = client;
  }

  /**
   * Getting the summary of monitored resources and manage gateway attached to a SCOM managed instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param instanceName Name of the Azure Monitor Operations Manager Managed Instance (SCOM MI)
   * @param options The options parameters.
   */
  summary(
    resourceGroupName: string,
    instanceName: string,
    options?: ResourceSummaryOptionalParams,
  ): Promise<ResourceSummaryResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, instanceName, options },
      summaryOperationSpec,
    );
  }

  /**
   * Getting the List of specified type of resource attached to a SCOM managed instance based on filter
   * and sorting conditions.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param instanceName Name of the Azure Monitor Operations Manager Managed Instance (SCOM MI)
   * @param body Properties for filtering resource list.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    instanceName: string,
    body: GetResourceListProperties,
    options?: ResourceListOptionalParams,
  ): Promise<ResourceListResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, instanceName, body, options },
      listOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const summaryOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/getResourceSummary",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.GetResourceSummaryResponseProperties,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.instanceName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
const listOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scom/managedInstances/{instanceName}/getResourcesList",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.GetResourcesListResponseProperties,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  requestBody: Parameters.body3,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.instanceName,
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer,
};
