/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  MonitoredResource,
  MonitoredResourcesListByManagedInstanceOptionalParams,
  MonitoredResourcesGetOptionalParams,
  MonitoredResourcesGetResponse,
  MonitoredResourcesCreateOrUpdateOptionalParams,
  MonitoredResourcesCreateOrUpdateResponse,
  MonitoredResourcesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a MonitoredResourcesOperations. */
export interface MonitoredResourcesOperations {
  /**
   * A comprehensive list of all monitored resources within a SCOM managed instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByManagedInstance(
    resourceGroupName: string,
    options?: MonitoredResourcesListByManagedInstanceOptionalParams
  ): PagedAsyncIterableIterator<MonitoredResource>;
  /**
   * Retrieve the details of the monitored resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    options?: MonitoredResourcesGetOptionalParams
  ): Promise<MonitoredResourcesGetResponse>;
  /**
   * Create or update a monitored resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    options?: MonitoredResourcesCreateOrUpdateOptionalParams
  ): Promise<MonitoredResourcesCreateOrUpdateResponse>;
  /**
   * Delete a monitored resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    options?: MonitoredResourcesDeleteOptionalParams
  ): Promise<void>;
}
