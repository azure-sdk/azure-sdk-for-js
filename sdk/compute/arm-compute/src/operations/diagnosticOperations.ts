/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { DiagnosticOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ComputeManagementClient } from "../computeManagementClient";
import { DiagnosticOperationsReadOptionalParams } from "../models";

/** Class containing DiagnosticOperations operations. */
export class DiagnosticOperationsImpl implements DiagnosticOperations {
  private readonly client: ComputeManagementClient;

  /**
   * Initialize a new instance of the class DiagnosticOperations class.
   * @param client Reference to the service client
   */
  constructor(client: ComputeManagementClient) {
    this.client = client;
  }

  /**
   * Gets status of a Diagnostic operation issued for Disk Inspection.
   * @param location The location used to execute the diagnostic operation.
   * @param operationId The identifier pointing to a request for Disk Inspection. This is used for
   *                    polling result of the request.
   * @param options The options parameters.
   */
  read(
    location: string,
    operationId: string,
    options?: DiagnosticOperationsReadOptionalParams,
  ): Promise<void> {
    return this.client.sendOperationRequest(
      { location, operationId, options },
      readOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const readOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/diagnosticOperations/{operationId}",
  httpMethod: "GET",
  responses: {
    200: {},
    202: {},
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.location1,
    Parameters.operationId,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
