/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  VirtualMachineScaleSetApplicationsListOptionalParams,
  VirtualMachineScaleSetApplicationsListResponse,
  VirtualMachineScaleSetApplicationsGetOptionalParams,
  VirtualMachineScaleSetApplicationsGetResponse,
  VirtualMachineScaleSetApplicationsDeleteOptionalParams,
  VMGalleryApplication,
  VirtualMachineScaleSetApplicationsPutOptionalParams,
  VirtualMachineScaleSetApplicationsPutResponse
} from "../models";

/** Interface representing a VirtualMachineScaleSetApplications. */
export interface VirtualMachineScaleSetApplications {
  /**
   * Gets a list of all applications in a VM scale set.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set containing the extension.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    vmScaleSetName: string,
    options?: VirtualMachineScaleSetApplicationsListOptionalParams
  ): Promise<VirtualMachineScaleSetApplicationsListResponse>;
  /**
   * Gets an application in a VM scale set.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set containing the extension.
   * @param applicationName The name of the application to query.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    vmScaleSetName: string,
    applicationName: string,
    options?: VirtualMachineScaleSetApplicationsGetOptionalParams
  ): Promise<VirtualMachineScaleSetApplicationsGetResponse>;
  /**
   * Removes an application from a VM scale set.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set containing the extension.
   * @param applicationName The name of the application to query.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    vmScaleSetName: string,
    applicationName: string,
    options?: VirtualMachineScaleSetApplicationsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Removes an application from a VM scale set.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set containing the extension.
   * @param applicationName The name of the application to query.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    vmScaleSetName: string,
    applicationName: string,
    options?: VirtualMachineScaleSetApplicationsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Adds an application to a VM scale set.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set containing the extension.
   * @param applicationName The name of the application to query.
   * @param application The definition of the VMApplication to add the virtual machine
   * @param options The options parameters.
   */
  beginPut(
    resourceGroupName: string,
    vmScaleSetName: string,
    applicationName: string,
    application: VMGalleryApplication,
    options?: VirtualMachineScaleSetApplicationsPutOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<VirtualMachineScaleSetApplicationsPutResponse>,
      VirtualMachineScaleSetApplicationsPutResponse
    >
  >;
  /**
   * Adds an application to a VM scale set.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set containing the extension.
   * @param applicationName The name of the application to query.
   * @param application The definition of the VMApplication to add the virtual machine
   * @param options The options parameters.
   */
  beginPutAndWait(
    resourceGroupName: string,
    vmScaleSetName: string,
    applicationName: string,
    application: VMGalleryApplication,
    options?: VirtualMachineScaleSetApplicationsPutOptionalParams
  ): Promise<VirtualMachineScaleSetApplicationsPutResponse>;
}
