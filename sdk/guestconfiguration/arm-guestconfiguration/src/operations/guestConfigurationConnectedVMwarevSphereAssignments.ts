/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { GuestConfigurationConnectedVMwarevSphereAssignments } from "../operationsInterfaces/index.js";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
import { GuestConfigurationClient } from "../guestConfigurationClient.js";
import {
  GuestConfigurationConnectedVMwarevSphereAssignmentsListOptionalParams,
  GuestConfigurationConnectedVMwarevSphereAssignmentsListResponse,
  GuestConfigurationConnectedVMwarevSphereAssignmentsGetOptionalParams,
  GuestConfigurationConnectedVMwarevSphereAssignmentsGetResponse,
  GuestConfigurationAssignment,
  GuestConfigurationConnectedVMwarevSphereAssignmentsCreateOrUpdateOptionalParams,
  GuestConfigurationConnectedVMwarevSphereAssignmentsCreateOrUpdateResponse,
  GuestConfigurationConnectedVMwarevSphereAssignmentsDeleteOptionalParams,
} from "../models/index.js";

/** Class containing GuestConfigurationConnectedVMwarevSphereAssignments operations. */
export class GuestConfigurationConnectedVMwarevSphereAssignmentsImpl
  implements GuestConfigurationConnectedVMwarevSphereAssignments
{
  private readonly client: GuestConfigurationClient;

  /**
   * Initialize a new instance of the class GuestConfigurationConnectedVMwarevSphereAssignments class.
   * @param client Reference to the service client
   */
  constructor(client: GuestConfigurationClient) {
    this.client = client;
  }

  /**
   * List all guest configuration assignments for an ARC machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vmName virtualmachines
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    vmName: string,
    options?: GuestConfigurationConnectedVMwarevSphereAssignmentsListOptionalParams,
  ): Promise<GuestConfigurationConnectedVMwarevSphereAssignmentsListResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, vmName, options },
      listOperationSpec,
    );
  }

  /**
   * Get information about a guest configuration assignment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vmName virtualmachines
   * @param guestConfigurationAssignmentName The name of the GuestConfigurationAssignment
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    vmName: string,
    guestConfigurationAssignmentName: string,
    options?: GuestConfigurationConnectedVMwarevSphereAssignmentsGetOptionalParams,
  ): Promise<GuestConfigurationConnectedVMwarevSphereAssignmentsGetResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, vmName, guestConfigurationAssignmentName, options },
      getOperationSpec,
    );
  }

  /**
   * Creates an association between a Connected VM Sphere machine and guest configuration
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vmName virtualmachines
   * @param guestConfigurationAssignmentName The name of the GuestConfigurationAssignment
   * @param parameters Parameters supplied to the create or update guest configuration assignment.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    vmName: string,
    guestConfigurationAssignmentName: string,
    parameters: GuestConfigurationAssignment,
    options?: GuestConfigurationConnectedVMwarevSphereAssignmentsCreateOrUpdateOptionalParams,
  ): Promise<GuestConfigurationConnectedVMwarevSphereAssignmentsCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        vmName,
        guestConfigurationAssignmentName,
        parameters,
        options,
      },
      createOrUpdateOperationSpec,
    );
  }

  /**
   * Delete a guest configuration assignment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vmName virtualmachines
   * @param guestConfigurationAssignmentName The name of the GuestConfigurationAssignment
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    vmName: string,
    guestConfigurationAssignmentName: string,
    options?: GuestConfigurationConnectedVMwarevSphereAssignmentsDeleteOptionalParams,
  ): Promise<void> {
    return this.client.sendOperationRequest(
      { resourceGroupName, vmName, guestConfigurationAssignmentName, options },
      deleteOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.GuestConfiguration/virtualmachines/{vmName}/guestConfigurationAssignments",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.GuestConfigurationAssignmentList,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.vmName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
const getOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.GuestConfiguration/virtualmachines/{vmName}/guestConfigurationAssignments/{guestConfigurationAssignmentName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.GuestConfigurationAssignment,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.vmName,
    Parameters.guestConfigurationAssignmentName1,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
const createOrUpdateOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.GuestConfiguration/virtualmachines/{vmName}/guestConfigurationAssignments/{guestConfigurationAssignmentName}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.GuestConfigurationAssignment,
    },
    201: {
      bodyMapper: Mappers.GuestConfigurationAssignment,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  requestBody: Parameters.parameters,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.vmName,
    Parameters.guestConfigurationAssignmentName1,
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer,
};
const deleteOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.GuestConfiguration/virtualmachines/{vmName}/guestConfigurationAssignments/{guestConfigurationAssignmentName}",
  httpMethod: "DELETE",
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.vmName,
    Parameters.guestConfigurationAssignmentName1,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
