/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  GuestConfigurationAssignmentsRGListOptionalParams,
  GuestConfigurationAssignmentsRGListResponse,
  GuestConfigurationAssignmentsListOptionalParams,
  GuestConfigurationAssignmentsListResponse,
  GuestConfigurationAssignmentsGetOptionalParams,
  GuestConfigurationAssignmentsGetResponse,
  GuestConfigurationAssignment,
  GuestConfigurationAssignmentsCreateOrUpdateOptionalParams,
  GuestConfigurationAssignmentsCreateOrUpdateResponse,
  GuestConfigurationAssignmentsDeleteOptionalParams,
} from "../models/index.js";

/** Interface representing a GuestConfigurationAssignments. */
export interface GuestConfigurationAssignments {
  /**
   * List all guest configuration assignments for a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  rGList(
    resourceGroupName: string,
    options?: GuestConfigurationAssignmentsRGListOptionalParams,
  ): Promise<GuestConfigurationAssignmentsRGListResponse>;
  /**
   * List all guest configuration assignments for a virtual machine.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vmName virtualMachines
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    vmName: string,
    options?: GuestConfigurationAssignmentsListOptionalParams,
  ): Promise<GuestConfigurationAssignmentsListResponse>;
  /**
   * Get information about a guest configuration assignment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vmName virtualMachines
   * @param guestConfigurationAssignmentName The name of the GuestConfigurationAssignment
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    vmName: string,
    guestConfigurationAssignmentName: string,
    options?: GuestConfigurationAssignmentsGetOptionalParams,
  ): Promise<GuestConfigurationAssignmentsGetResponse>;
  /**
   * Creates an association between a VM and guest configuration
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vmName virtualMachines
   * @param guestConfigurationAssignmentName The name of the GuestConfigurationAssignment
   * @param parameters Parameters supplied to the create or update guest configuration assignment.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    vmName: string,
    guestConfigurationAssignmentName: string,
    parameters: GuestConfigurationAssignment,
    options?: GuestConfigurationAssignmentsCreateOrUpdateOptionalParams,
  ): Promise<GuestConfigurationAssignmentsCreateOrUpdateResponse>;
  /**
   * Delete a guest configuration assignment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vmName virtualMachines
   * @param guestConfigurationAssignmentName The name of the GuestConfigurationAssignment
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    vmName: string,
    guestConfigurationAssignmentName: string,
    options?: GuestConfigurationAssignmentsDeleteOptionalParams,
  ): Promise<void>;
}
