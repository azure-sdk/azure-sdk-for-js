/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  AzureLargeInstance,
  AzureLargeInstancesListBySubscriptionOptionalParams,
  AzureLargeInstancesListByResourceGroupOptionalParams,
  AzureLargeInstancesGetOptionalParams,
  AzureLargeInstancesGetResponse,
  AzureLargeInstanceTagsUpdate,
  AzureLargeInstancesUpdateOptionalParams,
  AzureLargeInstancesUpdateResponse,
  ForceState,
  AzureLargeInstancesRestartOptionalParams,
  AzureLargeInstancesRestartResponse,
  AzureLargeInstancesShutdownOptionalParams,
  AzureLargeInstancesShutdownResponse,
  AzureLargeInstancesStartOptionalParams,
  AzureLargeInstancesStartResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AzureLargeInstances. */
export interface AzureLargeInstances {
  /**
   * Gets a list of Azure Large Instances in the specified subscription. The operations returns various
   * properties of each Azure Large Instance.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: AzureLargeInstancesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<AzureLargeInstance>;
  /**
   * Gets a list of Azure Large Instances in the specified subscription and resource group. The
   * operations returns various properties of each Azure Large Instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: AzureLargeInstancesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<AzureLargeInstance>;
  /**
   * Gets an Azure Large Instance for the specified subscription, resource group, and instance name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    options?: AzureLargeInstancesGetOptionalParams
  ): Promise<AzureLargeInstancesGetResponse>;
  /**
   * Patches the Tags field of an Azure Large Instance for the specified subscription, resource group,
   * and instance name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    properties: AzureLargeInstanceTagsUpdate,
    options?: AzureLargeInstancesUpdateOptionalParams
  ): Promise<AzureLargeInstancesUpdateResponse>;
  /**
   * The operation to restart an Azure Large Instance (only for compute instances)
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginRestart(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    body: ForceState,
    options?: AzureLargeInstancesRestartOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<AzureLargeInstancesRestartResponse>,
      AzureLargeInstancesRestartResponse
    >
  >;
  /**
   * The operation to restart an Azure Large Instance (only for compute instances)
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginRestartAndWait(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    body: ForceState,
    options?: AzureLargeInstancesRestartOptionalParams
  ): Promise<AzureLargeInstancesRestartResponse>;
  /**
   * The operation to shutdown an Azure Large Instance (only for compute instances)
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginShutdown(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    body: { [propertyName: string]: any },
    options?: AzureLargeInstancesShutdownOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<AzureLargeInstancesShutdownResponse>,
      AzureLargeInstancesShutdownResponse
    >
  >;
  /**
   * The operation to shutdown an Azure Large Instance (only for compute instances)
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginShutdownAndWait(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    body: { [propertyName: string]: any },
    options?: AzureLargeInstancesShutdownOptionalParams
  ): Promise<AzureLargeInstancesShutdownResponse>;
  /**
   * The operation to start an Azure Large Instance (only for compute instances)
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginStart(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    body: { [propertyName: string]: any },
    options?: AzureLargeInstancesStartOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<AzureLargeInstancesStartResponse>,
      AzureLargeInstancesStartResponse
    >
  >;
  /**
   * The operation to start an Azure Large Instance (only for compute instances)
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param azureLargeInstanceName Name of the AzureLargeInstance.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginStartAndWait(
    resourceGroupName: string,
    azureLargeInstanceName: string,
    body: { [propertyName: string]: any },
    options?: AzureLargeInstancesStartOptionalParams
  ): Promise<AzureLargeInstancesStartResponse>;
}
