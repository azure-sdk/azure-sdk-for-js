/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  FaultSimulation,
  ManagedClustersListFaultSimulationOptionalParams,
  ManagedCluster,
  ManagedClustersListByResourceGroupOptionalParams,
  ManagedClustersListBySubscriptionOptionalParams,
  FaultSimulationParametersUnion,
  ManagedClustersStartFaultSimulationOptionalParams,
  ManagedClustersStartFaultSimulationResponse,
  FaultSimulationIdParameters,
  ManagedClustersStopFaultSimulationOptionalParams,
  ManagedClustersStopFaultSimulationResponse,
  ManagedClustersGetFaultSimulationOptionalParams,
  ManagedClustersGetFaultSimulationResponse,
  ManagedClustersGetOptionalParams,
  ManagedClustersGetResponse,
  ManagedClustersCreateOrUpdateOptionalParams,
  ManagedClustersCreateOrUpdateResponse,
  ManagedClusterUpdateParameters,
  ManagedClustersUpdateOptionalParams,
  ManagedClustersUpdateResponse,
  ManagedClustersDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ManagedClusters. */
export interface ManagedClusters {
  /**
   * Gets a fault simulation byt the simulationId.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param options The options parameters.
   */
  listFaultSimulation(
    resourceGroupName: string,
    clusterName: string,
    options?: ManagedClustersListFaultSimulationOptionalParams,
  ): PagedAsyncIterableIterator<FaultSimulation>;
  /**
   * Gets all Service Fabric cluster resources created or in the process of being created in the resource
   * group.
   * @param resourceGroupName The name of the resource group.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ManagedClustersListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<ManagedCluster>;
  /**
   * Gets all Service Fabric cluster resources created or in the process of being created in the
   * subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ManagedClustersListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<ManagedCluster>;
  /**
   * Starts a fault simulation on the node type.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param parameters parameters describing the fault simulation.
   * @param options The options parameters.
   */
  beginStartFaultSimulation(
    resourceGroupName: string,
    clusterName: string,
    parameters: FaultSimulationParametersUnion,
    options?: ManagedClustersStartFaultSimulationOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ManagedClustersStartFaultSimulationResponse>,
      ManagedClustersStartFaultSimulationResponse
    >
  >;
  /**
   * Starts a fault simulation on the node type.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param parameters parameters describing the fault simulation.
   * @param options The options parameters.
   */
  beginStartFaultSimulationAndWait(
    resourceGroupName: string,
    clusterName: string,
    parameters: FaultSimulationParametersUnion,
    options?: ManagedClustersStartFaultSimulationOptionalParams,
  ): Promise<ManagedClustersStartFaultSimulationResponse>;
  /**
   * Stops a fault simulation on the node type.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param parameters parameter with fault simulation id.
   * @param options The options parameters.
   */
  beginStopFaultSimulation(
    resourceGroupName: string,
    clusterName: string,
    parameters: FaultSimulationIdParameters,
    options?: ManagedClustersStopFaultSimulationOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ManagedClustersStopFaultSimulationResponse>,
      ManagedClustersStopFaultSimulationResponse
    >
  >;
  /**
   * Stops a fault simulation on the node type.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param parameters parameter with fault simulation id.
   * @param options The options parameters.
   */
  beginStopFaultSimulationAndWait(
    resourceGroupName: string,
    clusterName: string,
    parameters: FaultSimulationIdParameters,
    options?: ManagedClustersStopFaultSimulationOptionalParams,
  ): Promise<ManagedClustersStopFaultSimulationResponse>;
  /**
   * Gets a fault simulation byt the simulationId.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param parameters parameter with fault simulation id.
   * @param options The options parameters.
   */
  getFaultSimulation(
    resourceGroupName: string,
    clusterName: string,
    parameters: FaultSimulationIdParameters,
    options?: ManagedClustersGetFaultSimulationOptionalParams,
  ): Promise<ManagedClustersGetFaultSimulationResponse>;
  /**
   * Get a Service Fabric managed cluster resource created or in the process of being created in the
   * specified resource group.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    clusterName: string,
    options?: ManagedClustersGetOptionalParams,
  ): Promise<ManagedClustersGetResponse>;
  /**
   * Create or update a Service Fabric managed cluster resource with the specified name.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param parameters The cluster resource.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    clusterName: string,
    parameters: ManagedCluster,
    options?: ManagedClustersCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ManagedClustersCreateOrUpdateResponse>,
      ManagedClustersCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update a Service Fabric managed cluster resource with the specified name.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param parameters The cluster resource.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    clusterName: string,
    parameters: ManagedCluster,
    options?: ManagedClustersCreateOrUpdateOptionalParams,
  ): Promise<ManagedClustersCreateOrUpdateResponse>;
  /**
   * Update the tags of of a Service Fabric managed cluster resource with the specified name.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param parameters The managed cluster resource updated tags.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    clusterName: string,
    parameters: ManagedClusterUpdateParameters,
    options?: ManagedClustersUpdateOptionalParams,
  ): Promise<ManagedClustersUpdateResponse>;
  /**
   * Delete a Service Fabric managed cluster resource with the specified name.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    clusterName: string,
    options?: ManagedClustersDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a Service Fabric managed cluster resource with the specified name.
   * @param resourceGroupName The name of the resource group.
   * @param clusterName The name of the cluster resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    clusterName: string,
    options?: ManagedClustersDeleteOptionalParams,
  ): Promise<void>;
}
