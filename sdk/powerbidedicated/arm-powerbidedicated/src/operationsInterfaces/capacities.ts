/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  CapacitiesListOptionalParams,
  CapacitiesListResponse,
  CheckCapacityNameAvailabilityParameters,
  CapacitiesCheckNameAvailabilityOptionalParams,
  CapacitiesCheckNameAvailabilityResponse,
  CapacitiesListSkusOptionalParams,
  CapacitiesListSkusResponse,
  CapacitiesListByResourceGroupOptionalParams,
  CapacitiesListByResourceGroupResponse,
  CapacitiesGetDetailsOptionalParams,
  CapacitiesGetDetailsResponse,
  DedicatedCapacity,
  CapacitiesCreateOptionalParams,
  CapacitiesCreateResponse,
  DedicatedCapacityUpdateParameters,
  CapacitiesUpdateOptionalParams,
  CapacitiesUpdateResponse,
  CapacitiesDeleteOptionalParams,
  CapacitiesResumeOptionalParams,
  CapacitiesListSkusForCapacityOptionalParams,
  CapacitiesListSkusForCapacityResponse,
  CapacitiesSuspendOptionalParams,
} from "../models/index.js";

/** Interface representing a Capacities. */
export interface Capacities {
  /**
   * Lists all the Dedicated capacities for the given subscription.
   * @param options The options parameters.
   */
  list(options?: CapacitiesListOptionalParams): Promise<CapacitiesListResponse>;
  /**
   * Check the name availability in the target location.
   * @param location The name of Azure region.
   * @param capacityParameters The request body
   * @param options The options parameters.
   */
  checkNameAvailability(
    location: string,
    capacityParameters: CheckCapacityNameAvailabilityParameters,
    options?: CapacitiesCheckNameAvailabilityOptionalParams,
  ): Promise<CapacitiesCheckNameAvailabilityResponse>;
  /**
   * Lists eligible SKUs for PowerBI Dedicated resource provider.
   * @param options The options parameters.
   */
  listSkus(options?: CapacitiesListSkusOptionalParams): Promise<CapacitiesListSkusResponse>;
  /**
   * Gets all the Dedicated capacities for the given resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: CapacitiesListByResourceGroupOptionalParams,
  ): Promise<CapacitiesListByResourceGroupResponse>;
  /**
   * Gets details about the specified dedicated capacity.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3
   *                              characters, and a maximum of 63.
   * @param options The options parameters.
   */
  getDetails(
    resourceGroupName: string,
    dedicatedCapacityName: string,
    options?: CapacitiesGetDetailsOptionalParams,
  ): Promise<CapacitiesGetDetailsResponse>;
  /**
   * Provisions the specified Dedicated capacity based on the configuration specified in the request.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3
   *                              characters, and a maximum of 63.
   * @param capacityParameters Contains the information used to provision the Dedicated capacity.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    dedicatedCapacityName: string,
    capacityParameters: DedicatedCapacity,
    options?: CapacitiesCreateOptionalParams,
  ): Promise<SimplePollerLike<OperationState<CapacitiesCreateResponse>, CapacitiesCreateResponse>>;
  /**
   * Provisions the specified Dedicated capacity based on the configuration specified in the request.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3
   *                              characters, and a maximum of 63.
   * @param capacityParameters Contains the information used to provision the Dedicated capacity.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    dedicatedCapacityName: string,
    capacityParameters: DedicatedCapacity,
    options?: CapacitiesCreateOptionalParams,
  ): Promise<CapacitiesCreateResponse>;
  /**
   * Updates the current state of the specified Dedicated capacity.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3
   *                              characters, and a maximum of 63.
   * @param capacityUpdateParameters Request object that contains the updated information for the
   *                                 capacity.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    dedicatedCapacityName: string,
    capacityUpdateParameters: DedicatedCapacityUpdateParameters,
    options?: CapacitiesUpdateOptionalParams,
  ): Promise<SimplePollerLike<OperationState<CapacitiesUpdateResponse>, CapacitiesUpdateResponse>>;
  /**
   * Updates the current state of the specified Dedicated capacity.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3
   *                              characters, and a maximum of 63.
   * @param capacityUpdateParameters Request object that contains the updated information for the
   *                                 capacity.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    dedicatedCapacityName: string,
    capacityUpdateParameters: DedicatedCapacityUpdateParameters,
    options?: CapacitiesUpdateOptionalParams,
  ): Promise<CapacitiesUpdateResponse>;
  /**
   * Deletes the specified Dedicated capacity.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3
   *                              characters, and a maximum of 63.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    dedicatedCapacityName: string,
    options?: CapacitiesDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes the specified Dedicated capacity.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3
   *                              characters, and a maximum of 63.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    dedicatedCapacityName: string,
    options?: CapacitiesDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Resumes operation of the specified Dedicated capacity instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3
   *                              characters, and a maximum of 63.
   * @param options The options parameters.
   */
  beginResume(
    resourceGroupName: string,
    dedicatedCapacityName: string,
    options?: CapacitiesResumeOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Resumes operation of the specified Dedicated capacity instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3
   *                              characters, and a maximum of 63.
   * @param options The options parameters.
   */
  beginResumeAndWait(
    resourceGroupName: string,
    dedicatedCapacityName: string,
    options?: CapacitiesResumeOptionalParams,
  ): Promise<void>;
  /**
   * Lists eligible SKUs for a PowerBI Dedicated resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3
   *                              characters, and a maximum of 63.
   * @param options The options parameters.
   */
  listSkusForCapacity(
    resourceGroupName: string,
    dedicatedCapacityName: string,
    options?: CapacitiesListSkusForCapacityOptionalParams,
  ): Promise<CapacitiesListSkusForCapacityResponse>;
  /**
   * Suspends operation of the specified dedicated capacity instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3
   *                              characters, and a maximum of 63.
   * @param options The options parameters.
   */
  beginSuspend(
    resourceGroupName: string,
    dedicatedCapacityName: string,
    options?: CapacitiesSuspendOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Suspends operation of the specified dedicated capacity instance.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param dedicatedCapacityName The name of the dedicated capacity. It must be a minimum of 3
   *                              characters, and a maximum of 63.
   * @param options The options parameters.
   */
  beginSuspendAndWait(
    resourceGroupName: string,
    dedicatedCapacityName: string,
    options?: CapacitiesSuspendOptionalParams,
  ): Promise<void>;
}
