/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator, PageSettings } from "@azure/core-paging";
import { setContinuationToken } from "../pagingHelper.js";
import { AutoScaleVCores } from "../operationsInterfaces/index.js";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
import { PowerBIDedicated } from "../powerBIDedicated.js";
import {
  AutoScaleVCore,
  AutoScaleVCoresListBySubscriptionNextOptionalParams,
  AutoScaleVCoresListBySubscriptionOptionalParams,
  AutoScaleVCoresListBySubscriptionResponse,
  AutoScaleVCoresListByResourceGroupNextOptionalParams,
  AutoScaleVCoresListByResourceGroupOptionalParams,
  AutoScaleVCoresListByResourceGroupResponse,
  AutoScaleVCoresGetOptionalParams,
  AutoScaleVCoresGetResponse,
  AutoScaleVCoresCreateOptionalParams,
  AutoScaleVCoresCreateResponse,
  AutoScaleVCoreUpdateParameters,
  AutoScaleVCoresUpdateOptionalParams,
  AutoScaleVCoresUpdateResponse,
  AutoScaleVCoresDeleteOptionalParams,
  AutoScaleVCoresListBySubscriptionNextResponse,
  AutoScaleVCoresListByResourceGroupNextResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Class containing AutoScaleVCores operations. */
export class AutoScaleVCoresImpl implements AutoScaleVCores {
  private readonly client: PowerBIDedicated;

  /**
   * Initialize a new instance of the class AutoScaleVCores class.
   * @param client Reference to the service client
   */
  constructor(client: PowerBIDedicated) {
    this.client = client;
  }

  /**
   * Lists all the auto scale v-cores for the given subscription.
   * @param options The options parameters.
   */
  public listBySubscription(
    options?: AutoScaleVCoresListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<AutoScaleVCore> {
    const iter = this.listBySubscriptionPagingAll(options);
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.listBySubscriptionPagingPage(options, settings);
      },
    };
  }

  private async *listBySubscriptionPagingPage(
    options?: AutoScaleVCoresListBySubscriptionOptionalParams,
    settings?: PageSettings,
  ): AsyncIterableIterator<AutoScaleVCore[]> {
    let result: AutoScaleVCoresListBySubscriptionResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._listBySubscription(options);
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._listBySubscriptionNext(continuationToken, options);
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *listBySubscriptionPagingAll(
    options?: AutoScaleVCoresListBySubscriptionOptionalParams,
  ): AsyncIterableIterator<AutoScaleVCore> {
    for await (const page of this.listBySubscriptionPagingPage(options)) {
      yield* page;
    }
  }

  /**
   * Gets all the auto scale v-cores for the given resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  public listByResourceGroup(
    resourceGroupName: string,
    options?: AutoScaleVCoresListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<AutoScaleVCore> {
    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.listByResourceGroupPagingPage(resourceGroupName, options, settings);
      },
    };
  }

  private async *listByResourceGroupPagingPage(
    resourceGroupName: string,
    options?: AutoScaleVCoresListByResourceGroupOptionalParams,
    settings?: PageSettings,
  ): AsyncIterableIterator<AutoScaleVCore[]> {
    let result: AutoScaleVCoresListByResourceGroupResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._listByResourceGroup(resourceGroupName, options);
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._listByResourceGroupNext(resourceGroupName, continuationToken, options);
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *listByResourceGroupPagingAll(
    resourceGroupName: string,
    options?: AutoScaleVCoresListByResourceGroupOptionalParams,
  ): AsyncIterableIterator<AutoScaleVCore> {
    for await (const page of this.listByResourceGroupPagingPage(resourceGroupName, options)) {
      yield* page;
    }
  }

  /**
   * Lists all the auto scale v-cores for the given subscription.
   * @param options The options parameters.
   */
  private _listBySubscription(
    options?: AutoScaleVCoresListBySubscriptionOptionalParams,
  ): Promise<AutoScaleVCoresListBySubscriptionResponse> {
    return this.client.sendOperationRequest({ options }, listBySubscriptionOperationSpec);
  }

  /**
   * Gets all the auto scale v-cores for the given resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  private _listByResourceGroup(
    resourceGroupName: string,
    options?: AutoScaleVCoresListByResourceGroupOptionalParams,
  ): Promise<AutoScaleVCoresListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, options },
      listByResourceGroupOperationSpec,
    );
  }

  /**
   * Gets details about the specified auto scale v-core.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vcoreName The name of the auto scale v-core. It must be a minimum of 3 characters, and a
   *                  maximum of 63.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    vcoreName: string,
    options?: AutoScaleVCoresGetOptionalParams,
  ): Promise<AutoScaleVCoresGetResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, vcoreName, options },
      getOperationSpec,
    );
  }

  /**
   * Provisions the specified auto scale v-core based on the configuration specified in the request.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vcoreName The name of the auto scale v-core. It must be a minimum of 3 characters, and a
   *                  maximum of 63.
   * @param vCoreParameters Contains the information used to provision the auto scale v-core.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    vcoreName: string,
    vCoreParameters: AutoScaleVCore,
    options?: AutoScaleVCoresCreateOptionalParams,
  ): Promise<AutoScaleVCoresCreateResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, vcoreName, vCoreParameters, options },
      createOperationSpec,
    );
  }

  /**
   * Updates the current state of the specified auto scale v-core.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vcoreName The name of the auto scale v-core. It must be a minimum of 3 characters, and a
   *                  maximum of 63.
   * @param vCoreUpdateParameters Request object that contains the updated information for the auto scale
   *                              v-core.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    vcoreName: string,
    vCoreUpdateParameters: AutoScaleVCoreUpdateParameters,
    options?: AutoScaleVCoresUpdateOptionalParams,
  ): Promise<AutoScaleVCoresUpdateResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, vcoreName, vCoreUpdateParameters, options },
      updateOperationSpec,
    );
  }

  /**
   * Deletes the specified auto scale v-core.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param vcoreName The name of the auto scale v-core. It must be a minimum of 3 characters, and a
   *                  maximum of 63.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    vcoreName: string,
    options?: AutoScaleVCoresDeleteOptionalParams,
  ): Promise<void> {
    return this.client.sendOperationRequest(
      { resourceGroupName, vcoreName, options },
      deleteOperationSpec,
    );
  }

  /**
   * ListBySubscriptionNext
   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.
   * @param options The options parameters.
   */
  private _listBySubscriptionNext(
    nextLink: string,
    options?: AutoScaleVCoresListBySubscriptionNextOptionalParams,
  ): Promise<AutoScaleVCoresListBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      { nextLink, options },
      listBySubscriptionNextOperationSpec,
    );
  }

  /**
   * ListByResourceGroupNext
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
   * @param options The options parameters.
   */
  private _listByResourceGroupNext(
    resourceGroupName: string,
    nextLink: string,
    options?: AutoScaleVCoresListByResourceGroupNextOptionalParams,
  ): Promise<AutoScaleVCoresListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, nextLink, options },
      listByResourceGroupNextOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listBySubscriptionOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/providers/Microsoft.PowerBIDedicated/autoScaleVCores",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.AutoScaleVCoreListResult,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept],
  serializer,
};
const listByResourceGroupOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/autoScaleVCores",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.AutoScaleVCoreListResult,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.subscriptionId, Parameters.resourceGroupName],
  headerParameters: [Parameters.accept],
  serializer,
};
const getOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/autoScaleVCores/{vcoreName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.AutoScaleVCore,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.vcoreName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
const createOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/autoScaleVCores/{vcoreName}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.AutoScaleVCore,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  requestBody: Parameters.vCoreParameters,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.vcoreName,
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer,
};
const updateOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/autoScaleVCores/{vcoreName}",
  httpMethod: "PATCH",
  responses: {
    200: {
      bodyMapper: Mappers.AutoScaleVCore,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  requestBody: Parameters.vCoreUpdateParameters,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.vcoreName,
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer,
};
const deleteOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBIDedicated/autoScaleVCores/{vcoreName}",
  httpMethod: "DELETE",
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.vcoreName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
const listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.AutoScaleVCoreListResult,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.subscriptionId],
  headerParameters: [Parameters.accept],
  serializer,
};
const listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.AutoScaleVCoreListResult,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  urlParameters: [
    Parameters.$host,
    Parameters.nextLink,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
