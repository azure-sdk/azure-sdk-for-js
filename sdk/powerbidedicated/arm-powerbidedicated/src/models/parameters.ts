/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  AutoScaleVCore as AutoScaleVCoreMapper,
  AutoScaleVCoreUpdateParameters as AutoScaleVCoreUpdateParametersMapper,
  CheckCapacityNameAvailabilityParameters as CheckCapacityNameAvailabilityParametersMapper,
  DedicatedCapacity as DedicatedCapacityMapper,
  DedicatedCapacityUpdateParameters as DedicatedCapacityUpdateParametersMapper,
} from "../models/mappers.js";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2021-01-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const vcoreName: OperationURLParameter = {
  parameterPath: "vcoreName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-a-zA-Z0-9_]+$"),
      MaxLength: 63,
      MinLength: 3,
    },
    serializedName: "vcoreName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const vCoreParameters: OperationParameter = {
  parameterPath: "vCoreParameters",
  mapper: AutoScaleVCoreMapper,
};

export const vCoreUpdateParameters: OperationParameter = {
  parameterPath: "vCoreUpdateParameters",
  mapper: AutoScaleVCoreUpdateParametersMapper,
};

export const capacityParameters: OperationParameter = {
  parameterPath: "capacityParameters",
  mapper: CheckCapacityNameAvailabilityParametersMapper,
};

export const location: OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "location",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const dedicatedCapacityName: OperationURLParameter = {
  parameterPath: "dedicatedCapacityName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[a-z][a-z0-9]*$"),
      MaxLength: 63,
      MinLength: 3,
    },
    serializedName: "dedicatedCapacityName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const capacityParameters1: OperationParameter = {
  parameterPath: "capacityParameters",
  mapper: DedicatedCapacityMapper,
};

export const capacityUpdateParameters: OperationParameter = {
  parameterPath: "capacityUpdateParameters",
  mapper: DedicatedCapacityUpdateParametersMapper,
};
