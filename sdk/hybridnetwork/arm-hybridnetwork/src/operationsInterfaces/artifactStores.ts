/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ArtifactStore,
  ArtifactStoresListByPublisherOptionalParams,
  ArtifactStoreNetworkFabricControllerEndPoints,
  ArtifactStoresListNetworkFabricControllerPrivateEndPointsOptionalParams,
  ArtifactStorePrivateEndPointsFormat,
  ArtifactStoresListPrivateEndPointsOptionalParams,
  ArtifactStoresDeleteOptionalParams,
  ArtifactStoresDeleteResponse,
  ArtifactStoresCreateOrUpdateOptionalParams,
  ArtifactStoresCreateOrUpdateResponse,
  ArtifactStoresGetOptionalParams,
  ArtifactStoresGetResponse,
  TagsObject,
  ArtifactStoresUpdateOptionalParams,
  ArtifactStoresUpdateResponse,
  ArtifactStoresAddNetworkFabricControllerEndPointsOptionalParams,
  ArtifactStoresAddNetworkFabricControllerEndPointsResponse,
  ArtifactStoresDeleteNetworkFabricControllerEndPointsOptionalParams,
  ArtifactStoresDeleteNetworkFabricControllerEndPointsResponse,
  ArtifactStoresApprovePrivateEndPointsOptionalParams,
  ArtifactStoresApprovePrivateEndPointsResponse,
  ArtifactStoresRemovePrivateEndPointsOptionalParams,
  ArtifactStoresRemovePrivateEndPointsResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ArtifactStores. */
export interface ArtifactStores {
  /**
   * Gets information of the ArtifactStores under publisher.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param options The options parameters.
   */
  listByPublisher(
    resourceGroupName: string,
    publisherName: string,
    options?: ArtifactStoresListByPublisherOptionalParams,
  ): PagedAsyncIterableIterator<ArtifactStore>;
  /**
   * List network fabric controllers to artifact stores
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param options The options parameters.
   */
  beginListNetworkFabricControllerPrivateEndPointsAndWait(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    options?: ArtifactStoresListNetworkFabricControllerPrivateEndPointsOptionalParams,
  ): PagedAsyncIterableIterator<ArtifactStoreNetworkFabricControllerEndPoints>;
  /**
   * List manual private endpoints on artifact stores
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param options The options parameters.
   */
  beginListPrivateEndPointsAndWait(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    options?: ArtifactStoresListPrivateEndPointsOptionalParams,
  ): PagedAsyncIterableIterator<ArtifactStorePrivateEndPointsFormat>;
  /**
   * Deletes the specified artifact store.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    options?: ArtifactStoresDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ArtifactStoresDeleteResponse>,
      ArtifactStoresDeleteResponse
    >
  >;
  /**
   * Deletes the specified artifact store.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    options?: ArtifactStoresDeleteOptionalParams,
  ): Promise<ArtifactStoresDeleteResponse>;
  /**
   * Creates or updates a artifact store.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to the create or update application group operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: ArtifactStore,
    options?: ArtifactStoresCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ArtifactStoresCreateOrUpdateResponse>,
      ArtifactStoresCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a artifact store.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to the create or update application group operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: ArtifactStore,
    options?: ArtifactStoresCreateOrUpdateOptionalParams,
  ): Promise<ArtifactStoresCreateOrUpdateResponse>;
  /**
   * Gets information about the specified artifact store.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    options?: ArtifactStoresGetOptionalParams,
  ): Promise<ArtifactStoresGetResponse>;
  /**
   * Update artifact store resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to the create or update application group operation.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: TagsObject,
    options?: ArtifactStoresUpdateOptionalParams,
  ): Promise<ArtifactStoresUpdateResponse>;
  /**
   * Add network fabric controllers to artifact stores
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to the create or update application group operation.
   * @param options The options parameters.
   */
  beginAddNetworkFabricControllerEndPoints(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: ArtifactStoreNetworkFabricControllerEndPoints,
    options?: ArtifactStoresAddNetworkFabricControllerEndPointsOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ArtifactStoresAddNetworkFabricControllerEndPointsResponse>,
      ArtifactStoresAddNetworkFabricControllerEndPointsResponse
    >
  >;
  /**
   * Add network fabric controllers to artifact stores
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to the create or update application group operation.
   * @param options The options parameters.
   */
  beginAddNetworkFabricControllerEndPointsAndWait(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: ArtifactStoreNetworkFabricControllerEndPoints,
    options?: ArtifactStoresAddNetworkFabricControllerEndPointsOptionalParams,
  ): Promise<ArtifactStoresAddNetworkFabricControllerEndPointsResponse>;
  /**
   * Delete network fabric controllers on artifact stores
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to the create or update application group operation.
   * @param options The options parameters.
   */
  beginDeleteNetworkFabricControllerEndPoints(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: ArtifactStoreNetworkFabricControllerEndPoints,
    options?: ArtifactStoresDeleteNetworkFabricControllerEndPointsOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ArtifactStoresDeleteNetworkFabricControllerEndPointsResponse>,
      ArtifactStoresDeleteNetworkFabricControllerEndPointsResponse
    >
  >;
  /**
   * Delete network fabric controllers on artifact stores
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to the create or update application group operation.
   * @param options The options parameters.
   */
  beginDeleteNetworkFabricControllerEndPointsAndWait(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: ArtifactStoreNetworkFabricControllerEndPoints,
    options?: ArtifactStoresDeleteNetworkFabricControllerEndPointsOptionalParams,
  ): Promise<ArtifactStoresDeleteNetworkFabricControllerEndPointsResponse>;
  /**
   * Approve manual private endpoints on artifact stores
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to approve private endpoints.
   * @param options The options parameters.
   */
  beginApprovePrivateEndPoints(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: ArtifactStorePrivateEndPointsFormat,
    options?: ArtifactStoresApprovePrivateEndPointsOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ArtifactStoresApprovePrivateEndPointsResponse>,
      ArtifactStoresApprovePrivateEndPointsResponse
    >
  >;
  /**
   * Approve manual private endpoints on artifact stores
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to approve private endpoints.
   * @param options The options parameters.
   */
  beginApprovePrivateEndPointsAndWait(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: ArtifactStorePrivateEndPointsFormat,
    options?: ArtifactStoresApprovePrivateEndPointsOptionalParams,
  ): Promise<ArtifactStoresApprovePrivateEndPointsResponse>;
  /**
   * Remove manual private endpoints on artifact stores
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to the create or update application group operation.
   * @param options The options parameters.
   */
  beginRemovePrivateEndPoints(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: ArtifactStorePrivateEndPointsFormat,
    options?: ArtifactStoresRemovePrivateEndPointsOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ArtifactStoresRemovePrivateEndPointsResponse>,
      ArtifactStoresRemovePrivateEndPointsResponse
    >
  >;
  /**
   * Remove manual private endpoints on artifact stores
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param publisherName The name of the publisher.
   * @param artifactStoreName The name of the artifact store.
   * @param parameters Parameters supplied to the create or update application group operation.
   * @param options The options parameters.
   */
  beginRemovePrivateEndPointsAndWait(
    resourceGroupName: string,
    publisherName: string,
    artifactStoreName: string,
    parameters: ArtifactStorePrivateEndPointsFormat,
    options?: ArtifactStoresRemovePrivateEndPointsOptionalParams,
  ): Promise<ArtifactStoresRemovePrivateEndPointsResponse>;
}
