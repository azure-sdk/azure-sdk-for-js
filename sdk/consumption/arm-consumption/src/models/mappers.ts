/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const PriceSheetProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PriceSheetProperties",
    modelProperties: {
      billingPeriodId: {
        serializedName: "billingPeriodId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      meterId: {
        serializedName: "meterId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      meterDetails: {
        serializedName: "meterDetails",
        type: {
          name: "Composite",
          className: "MeterDetails"
        }
      },
      unitOfMeasure: {
        serializedName: "unitOfMeasure",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      includedQuantity: {
        serializedName: "includedQuantity",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      partNumber: {
        serializedName: "partNumber",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      unitPrice: {
        serializedName: "unitPrice",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      currencyCode: {
        serializedName: "currencyCode",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      offerId: {
        serializedName: "offerId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MeterDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MeterDetails",
    modelProperties: {
      meterName: {
        serializedName: "meterName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      meterCategory: {
        serializedName: "meterCategory",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      meterSubCategory: {
        serializedName: "meterSubCategory",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      meterLocation: {
        serializedName: "meterLocation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      totalIncludedQuantity: {
        serializedName: "totalIncludedQuantity",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      pretaxStandardRate: {
        serializedName: "pretaxStandardRate",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      serviceName: {
        serializedName: "serviceName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      serviceTier: {
        serializedName: "serviceTier",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetails"
        }
      }
    }
  }
};

export const ErrorDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetails",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DownloadProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DownloadProperties",
    modelProperties: {
      downloadUrl: {
        serializedName: "downloadUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      validTill: {
        serializedName: "validTill",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PriceSheetResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PriceSheetResult",
    modelProperties: {
      ...Resource.type.modelProperties,
      pricesheets: {
        serializedName: "properties.pricesheets",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PriceSheetProperties"
            }
          }
        }
      },
      nextLink: {
        serializedName: "properties.nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      download: {
        serializedName: "properties.download",
        type: {
          name: "Composite",
          className: "MeterDetails"
        }
      }
    }
  }
};
