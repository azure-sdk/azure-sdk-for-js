/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ReservationRecommendationDetails } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ConsumptionManagementClient } from "../consumptionManagementClient";
import {
  ReservationRecommendationDetailsGetOptionalParams,
  ReservationRecommendationDetailsGetResponse
} from "../models";

/** Class containing ReservationRecommendationDetails operations. */
export class ReservationRecommendationDetailsImpl
  implements ReservationRecommendationDetails {
  private readonly client: ConsumptionManagementClient;

  /**
   * Initialize a new instance of the class ReservationRecommendationDetails class.
   * @param client Reference to the service client
   */
  constructor(client: ConsumptionManagementClient) {
    this.client = client;
  }

  /**
   * Details of a reservation recommendation for what-if analysis of reserved instances.
   * @param resourceScope The scope associated with reservation recommendation details operations. This
   *                      includes '/subscriptions/{subscriptionId}/' for subscription scope,
   *                      '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resource group scope,
   *                      /providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope, and
   *                      '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
   *                      for billingProfile scope
   * @param filter Used to filter reservation recommendation details by: properties/scope with allowed
   *               values ['Single', 'Shared']; properties/savings/lookBackPeriod with allowed values [7, 30, 60];
   *               properties/savings/reservationOrderTerm with allowed values ['P1Y', 'P3Y'];
   *               properties/resource/region; properties/resource/product; and optional filter
   *               properties/subscriptionId can be specified for billing account and billing profile paths.
   * @param options The options parameters.
   */
  get(
    resourceScope: string,
    filter: string,
    options?: ReservationRecommendationDetailsGetOptionalParams
  ): Promise<ReservationRecommendationDetailsGetResponse> {
    return this.client.sendOperationRequest(
      { resourceScope, filter, options },
      getOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/{resourceScope}/providers/Microsoft.Consumption/reservationRecommendationDetails",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ReservationRecommendationDetailsModel
    },
    204: {},
    default: {
      bodyMapper: Mappers.HighCasedErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion, Parameters.filter1],
  urlParameters: [Parameters.$host, Parameters.resourceScope],
  headerParameters: [Parameters.accept],
  serializer
};
