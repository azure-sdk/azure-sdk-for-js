/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  CodeSigningAccount,
  CodeSigningAccountListBySubscriptionOptionalParams,
  CodeSigningAccountListByResourceGroupOptionalParams,
  CodeSigningAccountCreateOptionalParams,
  CodeSigningAccountCreateResponse,
  CodeSigningAccountPatch,
  CodeSigningAccountUpdateOptionalParams,
  CodeSigningAccountUpdateResponse,
  CodeSigningAccountGetOptionalParams,
  CodeSigningAccountGetResponse,
  CodeSigningAccountDeleteOptionalParams,
  CheckNameAvailability,
  CodeSigningAccountCheckNameAvailabilityOptionalParams,
  CodeSigningAccountCheckNameAvailabilityResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a CodeSigningAccountOperations. */
export interface CodeSigningAccountOperations {
  /**
   * Lists Code Signing Accounts within a subscription
   * @param options The options parameters.
   */
  listBySubscription(
    options?: CodeSigningAccountListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<CodeSigningAccount>;
  /**
   * List Code Signing Accounts within a resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: CodeSigningAccountListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<CodeSigningAccount>;
  /**
   * Create a Code Signing Account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Code Signing account name
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    accountName: string,
    options?: CodeSigningAccountCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<CodeSigningAccountCreateResponse>,
      CodeSigningAccountCreateResponse
    >
  >;
  /**
   * Create a Code Signing Account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Code Signing account name
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    accountName: string,
    options?: CodeSigningAccountCreateOptionalParams
  ): Promise<CodeSigningAccountCreateResponse>;
  /**
   * Update a code signing account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Code Signing account name
   * @param codeSigningAccountPatch Parameters supplied to update code signing account
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    accountName: string,
    codeSigningAccountPatch: CodeSigningAccountPatch,
    options?: CodeSigningAccountUpdateOptionalParams
  ): Promise<CodeSigningAccountUpdateResponse>;
  /**
   * Get a Code Signing Account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Code Signing account name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    options?: CodeSigningAccountGetOptionalParams
  ): Promise<CodeSigningAccountGetResponse>;
  /**
   * Delete Code Signing Account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Code Signing account name
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    options?: CodeSigningAccountDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete Code Signing Account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName Code Signing account name
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    options?: CodeSigningAccountDeleteOptionalParams
  ): Promise<void>;
  /**
   * Checks that the code signing account name is valid and is not already in use.
   * @param accountName The name of the code signing account.
   * @param options The options parameters.
   */
  checkNameAvailability(
    accountName: CheckNameAvailability,
    options?: CodeSigningAccountCheckNameAvailabilityOptionalParams
  ): Promise<CodeSigningAccountCheckNameAvailabilityResponse>;
}
