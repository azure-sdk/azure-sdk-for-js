/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Parameters for creating or updating a code signing account */
export interface CodeSigningAccountPatch {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /**
   * Account Uri of the code signing account
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountUri?: string;
}

/** The paginated list of certificate profiles */
export interface CertificateProfiles {
  /** The list of certificate profiles */
  value?: CertificateProfile[];
  /** The link to fetch the next page of certificate profile */
  nextLink?: string;
}

/** Properties of the certificate */
export interface Certificate {
  /** Serial number of the certificate */
  serialNumber?: string;
  /** Subject name of the certificate */
  subjectName?: string;
  /** Thumbprint of the certificate */
  thumbprint?: string;
  /** Certificate created date */
  createdDate?: string;
  /** Certificate expiry date */
  expiryDate?: string;
  /** Status of the certificate */
  status?: CertificateStatus;
  revocations?: Revocation[];
}

/** Revocations history of a certificate */
export interface Revocation {
  /** The requested timestamp of the revocation */
  requestedAt?: string;
  /** Revocation timestamp */
  revokedAt?: string;
  /** Reason for revocation */
  reason?: string;
  /** Remarks for the revocation */
  remarks?: string;
}

/** Certificate Profile Patch Properties */
export interface CertificateProfilePatch {
  certificates?: Certificate[];
}

/** The paginated list of code signing accounts */
export interface CodeSigningAccounts {
  /** List of code signing accounts */
  value?: CodeSigningAccount[];
  /** The link to fetch the next page of code signing account */
  nextLink?: string;
}

/** The parameters used to check the availability of the code signing account name. */
export interface CheckNameAvailability {
  /** Code signing account name. */
  name: string;
}

/** The CheckNameAvailability operation response. */
export interface CheckNameAvailabilityResult {
  /**
   * A boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nameAvailable?: boolean;
  /**
   * The reason that a code signing account name could not be used. The Reason element is only returned if nameAvailable is false.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reason?: Reason;
  /**
   * An error message explaining the Reason value in more detail.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Code signing account resource */
export interface CodeSigningAccount extends TrackedResource {
  /**
   * The URI of the code signing account for performing operations on certificate profiles. This property is readonly
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accountUri?: string;
  /**
   * Provisioning state of the code signing account
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Certificate profile resource */
export interface CertificateProfile extends ProxyResource {
  /** Profile type of the certificate */
  profileType: ProfileType;
  /** Rotation policy of the certificate */
  rotationPolicy: RotationPolicy;
  /** Used as CN in the subject name of the certificate */
  commonName: string;
  /** Used as O in the subject name of the certificate */
  organization: string;
  /** Used as OU in the subject name of the private trust certificate */
  organizationUnit?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly streetAddress?: string;
  /** Whether to include in the public trust certificate subject name */
  includeStreetAddress?: boolean;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly state?: string;
  /** Whether to include in the public trust or private trust certificate subject name */
  includeState?: boolean;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly city?: string;
  /** Whether to include in the public trust or private trust certificate subject name */
  includeCity?: boolean;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly postalCode?: string;
  /** Whether to include in the public trust certificate subject name */
  includePostalCode?: boolean;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly country?: string;
  /** Whether to include in the public trust or private trust certificate subject name */
  includeCountry?: boolean;
  /**
   * Enhanced key usage of the certificate
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly enhancedKeyUsage?: string;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly identityValidationId?: string;
  /**
   * Provisioning state of the code signing account
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Status of the certificate profiles
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: CertificateProfileStatus;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly certificates?: Certificate[];
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Provisioning */
  Provisioning = "Provisioning",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
  /** Accepted */
  Accepted = "Accepted"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Provisioning** \
 * **Updating** \
 * **Deleting** \
 * **Accepted**
 */
export type ProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link ProfileType} that the service accepts. */
export enum KnownProfileType {
  /** PublicTrust */
  PublicTrust = "PublicTrust",
  /** PrivateTrust */
  PrivateTrust = "PrivateTrust",
  /** PrivateTrustCIPolicy */
  PrivateTrustCIPolicy = "PrivateTrustCIPolicy",
  /** VBSEnclave */
  VBSEnclave = "VBSEnclave",
  /** PublicTrustTest */
  PublicTrustTest = "PublicTrustTest"
}

/**
 * Defines values for ProfileType. \
 * {@link KnownProfileType} can be used interchangeably with ProfileType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PublicTrust** \
 * **PrivateTrust** \
 * **PrivateTrustCIPolicy** \
 * **VBSEnclave** \
 * **PublicTrustTest**
 */
export type ProfileType = string;

/** Known values of {@link RotationPolicy} that the service accepts. */
export enum KnownRotationPolicy {
  /** ThreeDays */
  ThreeDays = "3 Days",
  /** ThirtyDays */
  ThirtyDays = "30 Days"
}

/**
 * Defines values for RotationPolicy. \
 * {@link KnownRotationPolicy} can be used interchangeably with RotationPolicy,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **3 Days** \
 * **30 Days**
 */
export type RotationPolicy = string;

/** Known values of {@link CertificateProfileStatus} that the service accepts. */
export enum KnownCertificateProfileStatus {
  /** Active */
  Active = "Active",
  /** Disabled */
  Disabled = "Disabled",
  /** Suspended */
  Suspended = "Suspended"
}

/**
 * Defines values for CertificateProfileStatus. \
 * {@link KnownCertificateProfileStatus} can be used interchangeably with CertificateProfileStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active** \
 * **Disabled** \
 * **Suspended**
 */
export type CertificateProfileStatus = string;

/** Known values of {@link CertificateStatus} that the service accepts. */
export enum KnownCertificateStatus {
  /** Active */
  Active = "Active",
  /** Expired */
  Expired = "Expired",
  /** Revoked */
  Revoked = "Revoked",
  /** RevocationInitiated */
  RevocationInitiated = "RevocationInitiated",
  /** RevocationInProgress */
  RevocationInProgress = "RevocationInProgress",
  /** RevocationFailed */
  RevocationFailed = "RevocationFailed"
}

/**
 * Defines values for CertificateStatus. \
 * {@link KnownCertificateStatus} can be used interchangeably with CertificateStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active** \
 * **Expired** \
 * **Revoked** \
 * **RevocationInitiated** \
 * **RevocationInProgress** \
 * **RevocationFailed**
 */
export type CertificateStatus = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;
/** Defines values for Reason. */
export type Reason = "AccountNameInvalid" | "AlreadyExists";

/** Optional parameters. */
export interface CodeSigningAccountCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters to create the code signing account */
  codeSigningAccount?: CodeSigningAccount;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type CodeSigningAccountCreateResponse = CodeSigningAccount;

/** Optional parameters. */
export interface CodeSigningAccountUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type CodeSigningAccountUpdateResponse = CodeSigningAccount;

/** Optional parameters. */
export interface CodeSigningAccountGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CodeSigningAccountGetResponse = CodeSigningAccount;

/** Optional parameters. */
export interface CodeSigningAccountDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CodeSigningAccountListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type CodeSigningAccountListBySubscriptionResponse = CodeSigningAccounts;

/** Optional parameters. */
export interface CodeSigningAccountListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type CodeSigningAccountListByResourceGroupResponse = CodeSigningAccounts;

/** Optional parameters. */
export interface CodeSigningAccountCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type CodeSigningAccountCheckNameAvailabilityResponse = CheckNameAvailabilityResult;

/** Optional parameters. */
export interface CodeSigningAccountListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type CodeSigningAccountListBySubscriptionNextResponse = CodeSigningAccounts;

/** Optional parameters. */
export interface CodeSigningAccountListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type CodeSigningAccountListByResourceGroupNextResponse = CodeSigningAccounts;

/** Optional parameters. */
export interface CertificateProfileListByCodeSigningAccountOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCodeSigningAccount operation. */
export type CertificateProfileListByCodeSigningAccountResponse = CertificateProfiles;

/** Optional parameters. */
export interface CertificateProfileCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type CertificateProfileCreateResponse = CertificateProfile;

/** Optional parameters. */
export interface CertificateProfileGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CertificateProfileGetResponse = CertificateProfile;

/** Optional parameters. */
export interface CertificateProfileUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type CertificateProfileUpdateResponse = CertificateProfile;

/** Optional parameters. */
export interface CertificateProfileDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CertificateProfileListByCodeSigningAccountNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCodeSigningAccountNext operation. */
export type CertificateProfileListByCodeSigningAccountNextResponse = CertificateProfiles;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface CodeSigningManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
