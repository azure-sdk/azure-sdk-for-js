/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type TargetPropertiesUnion =
  | TargetProperties
  | SqlDbElasticPoolTargetProperties
  | SqlDbSingleDatabaseTargetProperties
  | SqlMiTargetProperties
  | SqlVmTargetProperties;

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response of a Watcher list operation. */
export interface WatcherListResult {
  /** The Watcher items on this page */
  value: Watcher[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The properties of a data store. */
export interface Datastore {
  /** The Azure ResourceId of an Azure Data Explorer cluster. */
  adxClusterResourceId?: string;
  /** The Kusto cluster display name. */
  kustoClusterDisplayName?: string;
  /** The Kusto cluster URI. */
  kustoClusterUri: string;
  /** The Kusto data ingestion URI. */
  kustoDataIngestionUri: string;
  /** The name of a Kusto database. */
  kustoDatabaseName: string;
  /** The Kusto management URL. */
  kustoManagementUrl: string;
  /** The type of a Kusto offering. */
  kustoOfferingType: KustoOfferingType;
}

/** Managed service identity (system assigned and/or user assigned identities) */
export interface ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */
  type: ManagedServiceIdentityType;
  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The type used for update operations of the Watcher. */
export interface WatcherUpdate {
  /** The managed service identities assigned to this resource. */
  identity?: ManagedServiceIdentity;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The data store for collected monitoring data. */
  datastore?: DatastoreUpdate;
}

/** The properties of a data store. */
export interface DatastoreUpdate {
  /** The Azure ResourceId of an Azure Data Explorer cluster. */
  adxClusterResourceId?: string;
  /** The Kusto cluster display name. */
  kustoClusterDisplayName?: string;
  /** The Kusto cluster URI. */
  kustoClusterUri?: string;
  /** The Kusto data ingestion URI. */
  kustoDataIngestionUri?: string;
  /** The name of a Kusto database. */
  kustoDatabaseName?: string;
  /** The Kusto management URL. */
  kustoManagementUrl?: string;
  /** The type of a Kusto offering. */
  kustoOfferingType?: KustoOfferingType;
}

/** The response of a SharedPrivateLinkResource list operation. */
export interface SharedPrivateLinkResourceListResult {
  /** The SharedPrivateLinkResource items on this page */
  value: SharedPrivateLinkResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The response of a Target list operation. */
export interface TargetListResult {
  /** The Target items on this page */
  value: Target[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The generic properties of a target. */
export interface TargetProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  targetType: "SqlEp" | "SqlDb" | "SqlMi" | "SqlVm";
  /** The type of authentication to use when connecting to a target. */
  targetAuthenticationType: TargetAuthenticationType;
  /** To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are stored. */
  targetVault?: VaultSecret;
  /** The server name to use in the connection string when connecting to a target. Port number and instance name must be specified separately. */
  connectionServerName: string;
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
}

/** The vault specific details required if using SQL authentication to connect to a target. */
export interface VaultSecret {
  /** The Azure ResourceId of the Key Vault instance storing database authentication secrets. */
  akvResourceId?: string;
  /** The path to the Key Vault secret storing the login name (aka user name, aka account name) for authentication to a target. */
  akvTargetUser?: string;
  /** The path to the Key Vault secret storing the password for authentication to a target. */
  akvTargetPassword?: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** The properties specific to elastic pool in Azure SQL Database. */
export interface SqlDbElasticPoolTargetProperties extends TargetProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  targetType: "SqlEp";
  /** The Azure ResourceId of an Azure SQL DB elastic pool target. */
  sqlEpResourceId: string;
  /** The Azure ResourceId of the anchor database used to connect to an elastic pool. */
  anchorDatabaseResourceId: string;
  /** Set to true to monitor a high availability replica of specified target, if any. */
  readIntent?: boolean;
}

/** The properties specific to single database in Azure SQL Database. */
export interface SqlDbSingleDatabaseTargetProperties extends TargetProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  targetType: "SqlDb";
  /** The Azure ResourceId of an Azure SQL DB single database target. */
  sqlDbResourceId: string;
  /** Set to true to monitor a high availability replica of specified target, if any. */
  readIntent?: boolean;
}

/** The properties specific to Azure SQL Managed Instance targets. */
export interface SqlMiTargetProperties extends TargetProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  targetType: "SqlMi";
  /** The Azure ResourceId of an Azure SQL Managed Instance target. */
  sqlMiResourceId: string;
  /** The TCP port number to optionally use in the connection string when connecting to an Azure SQL Managed Instance target. */
  connectionTcpPort?: number;
  /** Set to true to monitor a high availability replica of specified target, if any. */
  readIntent?: boolean;
}

/** The properties specific to Azure SQL VM targets. */
export interface SqlVmTargetProperties extends TargetProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  targetType: "SqlVm";
  /** The Azure ResourceId of an Azure SQL VM target. */
  sqlVmResourceId: string;
  /** The TCP port number to optionally use in the connection string when connecting to an Azure SQL VM target. */
  connectionTcpPort?: number;
  /** The SQL instance name to optionally use in the connection string when connecting to an Azure SQL VM target. */
  sqlNamedInstanceName?: string;
}

/** The DatabaseWatcherProviderHub resource. */
export interface Watcher extends TrackedResource {
  /** The managed service identities assigned to this resource. */
  identity?: ManagedServiceIdentity;
  /** The data store for collected monitoring data. */
  datastore?: Datastore;
  /**
   * The monitoring collection status of the watcher.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: WatcherStatus;
  /**
   * The provisioning state of the resource watcher.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: DatabaseWatcherProvisioningState;
}

/** Concrete proxy resource types can be created by aliasing this type using a specific property type. */
export interface SharedPrivateLinkResource extends ProxyResource {
  /** The resource id of the resource the shared private link resource is for. */
  privateLinkResourceId?: string;
  /** The group id from the provider of resource the shared private link resource is for. */
  groupId?: string;
  /** The request message for requesting approval of the shared private link resource. */
  requestMessage?: string;
  /** The DNS zone to be included in the DNS name of the shared private link. Value is service-specific. */
  dnsZone?: string;
  /**
   * Status of the shared private link resource. Can be Pending, Approved, Rejected or Disconnected.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: SharedPrivateLinkResourceStatus;
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
}

/** Concrete proxy resource types can be created by aliasing this type using a specific property type. */
export interface Target extends ProxyResource {
  /** Discriminator property for TargetProperties. */
  targetType?: string;
  /** The type of authentication to use when connecting to a target. */
  targetAuthenticationType?: TargetAuthenticationType;
  /** To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are stored. */
  targetVault?: VaultSecret;
  /** The server name to use in the connection string when connecting to a target. Port number and instance name must be specified separately. */
  connectionServerName?: string;
  /**
   * The provisioning state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ResourceProvisioningState;
}

/** Defines headers for Watchers_createOrUpdate operation. */
export interface WatchersCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Watchers_update operation. */
export interface WatchersUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Watchers_delete operation. */
export interface WatchersDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Watchers_start operation. */
export interface WatchersStartHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Watchers_stop operation. */
export interface WatchersStopHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for SharedPrivateLinkResources_create operation. */
export interface SharedPrivateLinkResourcesCreateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for SharedPrivateLinkResources_delete operation. */
export interface SharedPrivateLinkResourcesDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link KustoOfferingType} that the service accepts. */
export enum KnownKustoOfferingType {
  /** The Azure Data Explorer cluster Kusto offering. */
  Adx = "adx",
  /** The free Azure Data Explorer cluster Kusto offering. */
  Free = "free",
  /** The Fabric Real-Time Analytics Kusto offering. */
  Fabric = "fabric",
}

/**
 * Defines values for KustoOfferingType. \
 * {@link KnownKustoOfferingType} can be used interchangeably with KustoOfferingType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **adx**: The Azure Data Explorer cluster Kusto offering. \
 * **free**: The free Azure Data Explorer cluster Kusto offering. \
 * **fabric**: The Fabric Real-Time Analytics Kusto offering.
 */
export type KustoOfferingType = string;

/** Known values of {@link WatcherStatus} that the service accepts. */
export enum KnownWatcherStatus {
  /** Denotes the watcher is in a starting state. */
  Starting = "Starting",
  /** Denotes the watcher is in a running state. */
  Running = "Running",
  /** Denotes the watcher is in a stopping state. */
  Stopping = "Stopping",
  /** Denotes the watcher is in a stopped state. */
  Stopped = "Stopped",
  /** Denotes the watcher is in a deleting state. */
  Deleting = "Deleting",
}

/**
 * Defines values for WatcherStatus. \
 * {@link KnownWatcherStatus} can be used interchangeably with WatcherStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Starting**: Denotes the watcher is in a starting state. \
 * **Running**: Denotes the watcher is in a running state. \
 * **Stopping**: Denotes the watcher is in a stopping state. \
 * **Stopped**: Denotes the watcher is in a stopped state. \
 * **Deleting**: Denotes the watcher is in a deleting state.
 */
export type WatcherStatus = string;

/** Known values of {@link DatabaseWatcherProvisioningState} that the service accepts. */
export enum KnownDatabaseWatcherProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
}

/**
 * Defines values for DatabaseWatcherProvisioningState. \
 * {@link KnownDatabaseWatcherProvisioningState} can be used interchangeably with DatabaseWatcherProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled.
 */
export type DatabaseWatcherProvisioningState = string;

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned, UserAssigned",
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned, UserAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link SharedPrivateLinkResourceStatus} that the service accepts. */
export enum KnownSharedPrivateLinkResourceStatus {
  /** The shared private link connection request was not yet authorized by the resource owner. */
  Pending = "Pending",
  /** The shared private link connection request was approved by the resource owner. */
  Approved = "Approved",
  /** The shared private link connection request was rejected by the resource owner. */
  Rejected = "Rejected",
  /** The shared private link connection request was disconnected by the resource owner. */
  Disconnected = "Disconnected",
}

/**
 * Defines values for SharedPrivateLinkResourceStatus. \
 * {@link KnownSharedPrivateLinkResourceStatus} can be used interchangeably with SharedPrivateLinkResourceStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending**: The shared private link connection request was not yet authorized by the resource owner. \
 * **Approved**: The shared private link connection request was approved by the resource owner. \
 * **Rejected**: The shared private link connection request was rejected by the resource owner. \
 * **Disconnected**: The shared private link connection request was disconnected by the resource owner.
 */
export type SharedPrivateLinkResourceStatus = string;

/** Known values of {@link ResourceProvisioningState} that the service accepts. */
export enum KnownResourceProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
}

/**
 * Defines values for ResourceProvisioningState. \
 * {@link KnownResourceProvisioningState} can be used interchangeably with ResourceProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled.
 */
export type ResourceProvisioningState = string;

/** Known values of {@link TargetAuthenticationType} that the service accepts. */
export enum KnownTargetAuthenticationType {
  /** The Azure Active Directory authentication. */
  Aad = "Aad",
  /** The SQL password authentication. */
  Sql = "Sql",
}

/**
 * Defines values for TargetAuthenticationType. \
 * {@link KnownTargetAuthenticationType} can be used interchangeably with TargetAuthenticationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Aad**: The Azure Active Directory authentication. \
 * **Sql**: The SQL password authentication.
 */
export type TargetAuthenticationType = string;

/** Known values of {@link Versions} that the service accepts. */
export enum KnownVersions {
  /** The 2023-09-01-preview version. */
  V20230901Preview = "2023-09-01-preview",
}

/**
 * Defines values for Versions. \
 * {@link KnownVersions} can be used interchangeably with Versions,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **2023-09-01-preview**: The 2023-09-01-preview version.
 */
export type Versions = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface WatchersListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type WatchersListBySubscriptionResponse = WatcherListResult;

/** Optional parameters. */
export interface WatchersListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type WatchersListByResourceGroupResponse = WatcherListResult;

/** Optional parameters. */
export interface WatchersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WatchersGetResponse = Watcher;

/** Optional parameters. */
export interface WatchersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type WatchersCreateOrUpdateResponse = Watcher;

/** Optional parameters. */
export interface WatchersUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type WatchersUpdateResponse = Watcher;

/** Optional parameters. */
export interface WatchersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type WatchersDeleteResponse = WatchersDeleteHeaders;

/** Optional parameters. */
export interface WatchersStartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the start operation. */
export type WatchersStartResponse = Watcher;

/** Optional parameters. */
export interface WatchersStopOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the stop operation. */
export type WatchersStopResponse = Watcher;

/** Optional parameters. */
export interface WatchersListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type WatchersListBySubscriptionNextResponse = WatcherListResult;

/** Optional parameters. */
export interface WatchersListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type WatchersListByResourceGroupNextResponse = WatcherListResult;

/** Optional parameters. */
export interface SharedPrivateLinkResourcesListByWatcherOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByWatcher operation. */
export type SharedPrivateLinkResourcesListByWatcherResponse =
  SharedPrivateLinkResourceListResult;

/** Optional parameters. */
export interface SharedPrivateLinkResourcesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SharedPrivateLinkResourcesGetResponse = SharedPrivateLinkResource;

/** Optional parameters. */
export interface SharedPrivateLinkResourcesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type SharedPrivateLinkResourcesCreateResponse =
  SharedPrivateLinkResource;

/** Optional parameters. */
export interface SharedPrivateLinkResourcesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type SharedPrivateLinkResourcesDeleteResponse =
  SharedPrivateLinkResourcesDeleteHeaders;

/** Optional parameters. */
export interface SharedPrivateLinkResourcesListByWatcherNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByWatcherNext operation. */
export type SharedPrivateLinkResourcesListByWatcherNextResponse =
  SharedPrivateLinkResourceListResult;

/** Optional parameters. */
export interface TargetsListByWatcherOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByWatcher operation. */
export type TargetsListByWatcherResponse = TargetListResult;

/** Optional parameters. */
export interface TargetsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TargetsGetResponse = Target;

/** Optional parameters. */
export interface TargetsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type TargetsCreateOrUpdateResponse = Target;

/** Optional parameters. */
export interface TargetsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TargetsListByWatcherNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByWatcherNext operation. */
export type TargetsListByWatcherNextResponse = TargetListResult;

/** Optional parameters. */
export interface MicrosoftDatabaseWatcherOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
