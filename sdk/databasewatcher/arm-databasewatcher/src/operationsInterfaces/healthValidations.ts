/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  HealthValidation,
  HealthValidationsListByParentOptionalParams,
  HealthValidationsGetOptionalParams,
  HealthValidationsGetResponse,
  HealthValidationsStartValidationOptionalParams,
  HealthValidationsStartValidationResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a HealthValidations. */
export interface HealthValidations {
  /**
   * List HealthValidation resources by Watcher
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param watcherName The database watcher name.
   * @param options The options parameters.
   */
  listByParent(
    resourceGroupName: string,
    watcherName: string,
    options?: HealthValidationsListByParentOptionalParams,
  ): PagedAsyncIterableIterator<HealthValidation>;
  /**
   * Get a HealthValidation
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param watcherName The database watcher name.
   * @param healthValidationName The health validation resource name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    watcherName: string,
    healthValidationName: string,
    options?: HealthValidationsGetOptionalParams,
  ): Promise<HealthValidationsGetResponse>;
  /**
   * Starts health validation for a watcher.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param watcherName The database watcher name.
   * @param healthValidationName The health validation resource name.
   * @param options The options parameters.
   */
  beginStartValidation(
    resourceGroupName: string,
    watcherName: string,
    healthValidationName: string,
    options?: HealthValidationsStartValidationOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<HealthValidationsStartValidationResponse>,
      HealthValidationsStartValidationResponse
    >
  >;
  /**
   * Starts health validation for a watcher.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param watcherName The database watcher name.
   * @param healthValidationName The health validation resource name.
   * @param options The options parameters.
   */
  beginStartValidationAndWait(
    resourceGroupName: string,
    watcherName: string,
    healthValidationName: string,
    options?: HealthValidationsStartValidationOptionalParams,
  ): Promise<HealthValidationsStartValidationResponse>;
}
