/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator, PageSettings } from "@azure/core-paging";
import { setContinuationToken } from "../pagingHelper";
import { DaprResiliencyCircuitBreakerPolicies } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ContainerAppsAPIClient } from "../containerAppsAPIClient";
import {
  DaprResiliencyCircuitBreakerPolicy,
  DaprResiliencyCircuitBreakerPoliciesListNextOptionalParams,
  DaprResiliencyCircuitBreakerPoliciesListOptionalParams,
  DaprResiliencyCircuitBreakerPoliciesListResponse,
  DaprResiliencyCircuitBreakerPoliciesGetOptionalParams,
  DaprResiliencyCircuitBreakerPoliciesGetResponse,
  DaprResiliencyCircuitBreakerPoliciesCreateOrUpdateOptionalParams,
  DaprResiliencyCircuitBreakerPoliciesCreateOrUpdateResponse,
  DaprResiliencyCircuitBreakerPoliciesDeleteOptionalParams,
  DaprResiliencyCircuitBreakerPoliciesListNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing DaprResiliencyCircuitBreakerPolicies operations. */
export class DaprResiliencyCircuitBreakerPoliciesImpl
  implements DaprResiliencyCircuitBreakerPolicies {
  private readonly client: ContainerAppsAPIClient;

  /**
   * Initialize a new instance of the class DaprResiliencyCircuitBreakerPolicies class.
   * @param client Reference to the service client
   */
  constructor(client: ContainerAppsAPIClient) {
    this.client = client;
  }

  /**
   * Get the Dapr Resiliency Circuit Breaker Policies for a managed environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param options The options parameters.
   */
  public list(
    resourceGroupName: string,
    environmentName: string,
    options?: DaprResiliencyCircuitBreakerPoliciesListOptionalParams
  ): PagedAsyncIterableIterator<DaprResiliencyCircuitBreakerPolicy> {
    const iter = this.listPagingAll(
      resourceGroupName,
      environmentName,
      options
    );
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: (settings?: PageSettings) => {
        if (settings?.maxPageSize) {
          throw new Error("maxPageSize is not supported by this operation.");
        }
        return this.listPagingPage(
          resourceGroupName,
          environmentName,
          options,
          settings
        );
      }
    };
  }

  private async *listPagingPage(
    resourceGroupName: string,
    environmentName: string,
    options?: DaprResiliencyCircuitBreakerPoliciesListOptionalParams,
    settings?: PageSettings
  ): AsyncIterableIterator<DaprResiliencyCircuitBreakerPolicy[]> {
    let result: DaprResiliencyCircuitBreakerPoliciesListResponse;
    let continuationToken = settings?.continuationToken;
    if (!continuationToken) {
      result = await this._list(resourceGroupName, environmentName, options);
      let page = result.value || [];
      continuationToken = result.nextLink;
      setContinuationToken(page, continuationToken);
      yield page;
    }
    while (continuationToken) {
      result = await this._listNext(
        resourceGroupName,
        environmentName,
        continuationToken,
        options
      );
      continuationToken = result.nextLink;
      let page = result.value || [];
      setContinuationToken(page, continuationToken);
      yield page;
    }
  }

  private async *listPagingAll(
    resourceGroupName: string,
    environmentName: string,
    options?: DaprResiliencyCircuitBreakerPoliciesListOptionalParams
  ): AsyncIterableIterator<DaprResiliencyCircuitBreakerPolicy> {
    for await (const page of this.listPagingPage(
      resourceGroupName,
      environmentName,
      options
    )) {
      yield* page;
    }
  }

  /**
   * Get the Dapr Resiliency Circuit Breaker Policies for a managed environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param options The options parameters.
   */
  private _list(
    resourceGroupName: string,
    environmentName: string,
    options?: DaprResiliencyCircuitBreakerPoliciesListOptionalParams
  ): Promise<DaprResiliencyCircuitBreakerPoliciesListResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, environmentName, options },
      listOperationSpec
    );
  }

  /**
   * Get a Dapr Resiliency Circuit Breaker policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param policyName Name of the Dapr resiliency circuit breaker policy.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    environmentName: string,
    policyName: string,
    options?: DaprResiliencyCircuitBreakerPoliciesGetOptionalParams
  ): Promise<DaprResiliencyCircuitBreakerPoliciesGetResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, environmentName, policyName, options },
      getOperationSpec
    );
  }

  /**
   * Creates or updates a Dapr Resiliency Circuit Breaker Policy in a Managed Environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param policyName Name of the Dapr Resiliency Circuit Breaker Policy.
   * @param daprResiliencyCircuitBreakerPoliciesEnvelope Configuration details of the Dapr Resiliency
   *                                                     Circuit Breaker Policy.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    environmentName: string,
    policyName: string,
    daprResiliencyCircuitBreakerPoliciesEnvelope: DaprResiliencyCircuitBreakerPolicy,
    options?: DaprResiliencyCircuitBreakerPoliciesCreateOrUpdateOptionalParams
  ): Promise<DaprResiliencyCircuitBreakerPoliciesCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        environmentName,
        policyName,
        daprResiliencyCircuitBreakerPoliciesEnvelope,
        options
      },
      createOrUpdateOperationSpec
    );
  }

  /**
   * Delete a Dapr Resiliency Circuit Breaker Policy from a Managed Environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param policyName Name of the Dapr Resiliency Circuit Breaker Policy.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    environmentName: string,
    policyName: string,
    options?: DaprResiliencyCircuitBreakerPoliciesDeleteOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      { resourceGroupName, environmentName, policyName, options },
      deleteOperationSpec
    );
  }

  /**
   * ListNext
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param nextLink The nextLink from the previous successful call to the List method.
   * @param options The options parameters.
   */
  private _listNext(
    resourceGroupName: string,
    environmentName: string,
    nextLink: string,
    options?: DaprResiliencyCircuitBreakerPoliciesListNextOptionalParams
  ): Promise<DaprResiliencyCircuitBreakerPoliciesListNextResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, environmentName, nextLink, options },
      listNextOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprResiliencyCircuitBreakerPolicies",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DaprResiliencyCircuitBreakerPoliciesCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.environmentName1
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprResiliencyCircuitBreakerPolicies/{policyName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DaprResiliencyCircuitBreakerPolicy
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.environmentName1,
    Parameters.policyName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const createOrUpdateOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprResiliencyCircuitBreakerPolicies/{policyName}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.DaprResiliencyCircuitBreakerPolicy
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  requestBody: Parameters.daprResiliencyCircuitBreakerPoliciesEnvelope,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.environmentName1,
    Parameters.policyName
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
const deleteOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprResiliencyCircuitBreakerPolicies/{policyName}",
  httpMethod: "DELETE",
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.environmentName1,
    Parameters.policyName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const listNextOperationSpec: coreClient.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DaprResiliencyCircuitBreakerPoliciesCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.nextLink,
    Parameters.environmentName1
  ],
  headerParameters: [Parameters.accept],
  serializer
};
