/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  JobExecution,
  JobExecutionsOptionalParams,
  JobGetOptionalParams,
  JobGetResponse,
  Job,
  JobCreateOrUpdateOptionalParams,
  JobCreateOrUpdateResponse,
  JobDeleteOptionalParams,
  JobPatchProperties,
  JobUpdateOptionalParams,
  JobUpdateResponse,
  JobExecutionTemplate,
  JobRunOptionalParams,
  JobRunResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a JobOperations. */
export interface JobOperations {
  /**
   * Get a Container Apps Job's executions
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param jobName Name of the Container Apps Job.
   * @param options The options parameters.
   */
  listExecutions(
    resourceGroupName: string,
    jobName: string,
    options?: JobExecutionsOptionalParams
  ): PagedAsyncIterableIterator<JobExecution>;
  /**
   * Get the properties of a Container Apps Job.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param jobName Name of the Container Apps Job.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    jobName: string,
    options?: JobGetOptionalParams
  ): Promise<JobGetResponse>;
  /**
   * Create or Update a Container Apps Job.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param jobName Name of the Container Apps Job.
   * @param jobEnvelope Properties used to create a container apps job
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    jobName: string,
    jobEnvelope: Job,
    options?: JobCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<JobCreateOrUpdateResponse>,
      JobCreateOrUpdateResponse
    >
  >;
  /**
   * Create or Update a Container Apps Job.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param jobName Name of the Container Apps Job.
   * @param jobEnvelope Properties used to create a container apps job
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    jobName: string,
    jobEnvelope: Job,
    options?: JobCreateOrUpdateOptionalParams
  ): Promise<JobCreateOrUpdateResponse>;
  /**
   * Delete a Container Apps Job.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param jobName Name of the Container Apps Job.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    jobName: string,
    options?: JobDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a Container Apps Job.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param jobName Name of the Container Apps Job.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    jobName: string,
    options?: JobDeleteOptionalParams
  ): Promise<void>;
  /**
   * Patches a Container Apps Job using JSON Merge Patch
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param jobName Name of the Container Apps Job.
   * @param jobEnvelope Properties used to create a container apps job
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    jobName: string,
    jobEnvelope: JobPatchProperties,
    options?: JobUpdateOptionalParams
  ): Promise<
    SimplePollerLike<OperationState<JobUpdateResponse>, JobUpdateResponse>
  >;
  /**
   * Patches a Container Apps Job using JSON Merge Patch
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param jobName Name of the Container Apps Job.
   * @param jobEnvelope Properties used to create a container apps job
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    jobName: string,
    jobEnvelope: JobPatchProperties,
    options?: JobUpdateOptionalParams
  ): Promise<JobUpdateResponse>;
  /**
   * Runs a Container Apps Job
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param jobName Name of the Container Apps Job.
   * @param template Properties used to start a job instance.
   * @param options The options parameters.
   */
  beginRun(
    resourceGroupName: string,
    jobName: string,
    template: JobExecutionTemplate,
    options?: JobRunOptionalParams
  ): Promise<SimplePollerLike<OperationState<JobRunResponse>, JobRunResponse>>;
  /**
   * Runs a Container Apps Job
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param jobName Name of the Container Apps Job.
   * @param template Properties used to start a job instance.
   * @param options The options parameters.
   */
  beginRunAndWait(
    resourceGroupName: string,
    jobName: string,
    template: JobExecutionTemplate,
    options?: JobRunOptionalParams
  ): Promise<JobRunResponse>;
}
