/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** A list of mongo clusters. */
export interface MongoClusterListResult {
  /** The list of mongo clusters */
  value?: MongoCluster[];
  /**
   * The link used to get the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Parameters used for restore operations */
export interface MongoClusterRestoreParameters {
  /** UTC point in time to restore a mongo cluster */
  pointInTimeUTC?: Date;
  /** Resource ID to locate the source cluster to restore */
  sourceResourceId?: string;
}

/** The properties of the node group on a cluster. */
export interface NodeGroupProperties {
  /** The resource sku for the node group. This defines the size of CPU and memory that is provisioned for each node. Example values: 'M30', 'M40'. */
  sku?: string;
  /** The disk storage size for the node group in GB. Example values: 128, 256, 512, 1024. */
  diskSizeGB?: number;
  /** Whether high availability is enabled on the node group. */
  enableHa?: boolean;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Represents a mongo cluster resource for updates. */
export interface MongoClusterUpdate {
  /** Application-specific metadata in the form of key-value pairs. */
  tags?: { [propertyName: string]: string };
  /** The mode to create a mongo cluster. */
  createMode?: CreateMode;
  /** Parameters used for restore operations */
  restoreParameters?: MongoClusterRestoreParameters;
  /** The administrator's login for the mongo cluster. */
  administratorLogin?: string;
  /**
   * The password of the administrator login.
   * This value contains a credential. Consider obscuring before showing to users
   */
  administratorLoginPassword?: string;
  /** The Mongo DB server version. Defaults to the latest available version if not specified. */
  serverVersion?: string;
  /**
   * The default mongo connection string for the cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionString?: string;
  /**
   * Earliest restore timestamp in UTC ISO8601 format.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly earliestRestoreTime?: string;
  /**
   * A provisioning state of the mongo cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * A status of the mongo cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterStatus?: MongoClusterStatus;
  /** The list of node group specs in the cluster. */
  nodeGroupSpecs?: NodeGroupSpec[];
}

/** A list of firewall rules. */
export interface FirewallRuleListResult {
  /** The list of firewall rules in a mongo cluster. */
  value?: FirewallRule[];
  /**
   * The link used to get the next page of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The check availability request body. */
export interface CheckNameAvailabilityRequest {
  /** The name of the resource for which availability needs to be checked. */
  name?: string;
  /** The resource type. */
  type?: string;
}

/** The check availability result. */
export interface CheckNameAvailabilityResponse {
  /** Indicates if the resource name is available. */
  nameAvailable?: boolean;
  /** The reason why the given name is not available. */
  reason?: CheckNameAvailabilityReason;
  /** Detailed reason why the given name is available. */
  message?: string;
}

/** The connection strings for the given mongo cluster. */
export interface ListConnectionStringsResult {
  /**
   * An array that contains the connection strings for a mongo cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionStrings?: ConnectionString[];
}

/** Connection string for the mongo cluster */
export interface ConnectionString {
  /**
   * Value of the connection string
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionString?: string;
  /**
   * Description of the connection string
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Specification for a node group. */
export interface NodeGroupSpec extends NodeGroupProperties {
  /** The node type deployed in the node group. */
  kind?: NodeKind;
  /** The number of nodes in the node group. */
  nodeCount?: number;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Represents a mongo cluster resource. */
export interface MongoCluster extends TrackedResource {
  /** The mode to create a mongo cluster. */
  createMode?: CreateMode;
  /** Parameters used for restore operations */
  restoreParameters?: MongoClusterRestoreParameters;
  /** The administrator's login for the mongo cluster. */
  administratorLogin?: string;
  /**
   * The password of the administrator login.
   * This value contains a credential. Consider obscuring before showing to users
   */
  administratorLoginPassword?: string;
  /** The Mongo DB server version. Defaults to the latest available version if not specified. */
  serverVersion?: string;
  /**
   * The default mongo connection string for the cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionString?: string;
  /**
   * Earliest restore timestamp in UTC ISO8601 format.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly earliestRestoreTime?: string;
  /**
   * A provisioning state of the mongo cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * A status of the mongo cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clusterStatus?: MongoClusterStatus;
  /** The list of node group specs in the cluster. */
  nodeGroupSpecs?: NodeGroupSpec[];
}

/** Represents a mongo cluster firewall rule. */
export interface FirewallRule extends ProxyResource {
  /**
   * The provisioning state of the firewall rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The start IP address of the mongo cluster firewall rule. Must be IPv4 format. */
  startIpAddress: string;
  /** The end IP address of the mongo cluster firewall rule. Must be IPv4 format. */
  endIpAddress: string;
}

/** Defines headers for MongoClusters_delete operation. */
export interface MongoClustersDeleteHeaders {
  location?: string;
}

/** Defines headers for MongoClusters_update operation. */
export interface MongoClustersUpdateHeaders {
  location?: string;
}

/** Defines headers for MongoClusters_deleteFirewallRule operation. */
export interface MongoClustersDeleteFirewallRuleHeaders {
  location?: string;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link CreateMode} that the service accepts. */
export enum KnownCreateMode {
  /** Default */
  Default = "Default",
  /** PointInTimeRestore */
  PointInTimeRestore = "PointInTimeRestore"
}

/**
 * Defines values for CreateMode. \
 * {@link KnownCreateMode} can be used interchangeably with CreateMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Default** \
 * **PointInTimeRestore**
 */
export type CreateMode = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** InProgress */
  InProgress = "InProgress",
  /** Updating */
  Updating = "Updating",
  /** Dropping */
  Dropping = "Dropping"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **InProgress** \
 * **Updating** \
 * **Dropping**
 */
export type ProvisioningState = string;

/** Known values of {@link MongoClusterStatus} that the service accepts. */
export enum KnownMongoClusterStatus {
  /** Ready */
  Ready = "Ready",
  /** Provisioning */
  Provisioning = "Provisioning",
  /** Updating */
  Updating = "Updating",
  /** Starting */
  Starting = "Starting",
  /** Stopping */
  Stopping = "Stopping",
  /** Stopped */
  Stopped = "Stopped",
  /** Dropping */
  Dropping = "Dropping"
}

/**
 * Defines values for MongoClusterStatus. \
 * {@link KnownMongoClusterStatus} can be used interchangeably with MongoClusterStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Ready** \
 * **Provisioning** \
 * **Updating** \
 * **Starting** \
 * **Stopping** \
 * **Stopped** \
 * **Dropping**
 */
export type MongoClusterStatus = string;

/** Known values of {@link NodeKind} that the service accepts. */
export enum KnownNodeKind {
  /** Shard */
  Shard = "Shard"
}

/**
 * Defines values for NodeKind. \
 * {@link KnownNodeKind} can be used interchangeably with NodeKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Shard**
 */
export type NodeKind = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link CheckNameAvailabilityReason} that the service accepts. */
export enum KnownCheckNameAvailabilityReason {
  /** Invalid */
  Invalid = "Invalid",
  /** AlreadyExists */
  AlreadyExists = "AlreadyExists"
}

/**
 * Defines values for CheckNameAvailabilityReason. \
 * {@link KnownCheckNameAvailabilityReason} can be used interchangeably with CheckNameAvailabilityReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export type CheckNameAvailabilityReason = string;

/** Optional parameters. */
export interface ListOperationsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listOperations operation. */
export type ListOperationsResponse = OperationListResult;

/** Optional parameters. */
export interface ListOperationsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listOperationsNext operation. */
export type ListOperationsNextResponse = OperationListResult;

/** Optional parameters. */
export interface MongoClustersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type MongoClustersListResponse = MongoClusterListResult;

/** Optional parameters. */
export interface MongoClustersListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type MongoClustersListByResourceGroupResponse = MongoClusterListResult;

/** Optional parameters. */
export interface MongoClustersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type MongoClustersCreateOrUpdateResponse = MongoCluster;

/** Optional parameters. */
export interface MongoClustersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MongoClustersGetResponse = MongoCluster;

/** Optional parameters. */
export interface MongoClustersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type MongoClustersDeleteResponse = MongoClustersDeleteHeaders;

/** Optional parameters. */
export interface MongoClustersUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type MongoClustersUpdateResponse = MongoCluster;

/** Optional parameters. */
export interface MongoClustersCreateOrUpdateFirewallRuleOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdateFirewallRule operation. */
export type MongoClustersCreateOrUpdateFirewallRuleResponse = FirewallRule;

/** Optional parameters. */
export interface MongoClustersDeleteFirewallRuleOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the deleteFirewallRule operation. */
export type MongoClustersDeleteFirewallRuleResponse = MongoClustersDeleteFirewallRuleHeaders;

/** Optional parameters. */
export interface MongoClustersGetFirewallRuleOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getFirewallRule operation. */
export type MongoClustersGetFirewallRuleResponse = FirewallRule;

/** Optional parameters. */
export interface MongoClustersListFirewallRulesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listFirewallRules operation. */
export type MongoClustersListFirewallRulesResponse = FirewallRuleListResult;

/** Optional parameters. */
export interface MongoClustersCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type MongoClustersCheckNameAvailabilityResponse = CheckNameAvailabilityResponse;

/** Optional parameters. */
export interface MongoClustersListConnectionStringsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listConnectionStrings operation. */
export type MongoClustersListConnectionStringsResponse = ListConnectionStringsResult;

/** Optional parameters. */
export interface MongoClustersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type MongoClustersListNextResponse = MongoClusterListResult;

/** Optional parameters. */
export interface MongoClustersListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type MongoClustersListByResourceGroupNextResponse = MongoClusterListResult;

/** Optional parameters. */
export interface MongoClustersListFirewallRulesNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listFirewallRulesNext operation. */
export type MongoClustersListFirewallRulesNextResponse = FirewallRuleListResult;

/** Optional parameters. */
export interface CosmosDBMongoClusterOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
