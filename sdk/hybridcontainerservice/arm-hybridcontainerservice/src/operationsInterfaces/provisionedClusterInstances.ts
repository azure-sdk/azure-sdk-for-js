/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ProvisionedCluster,
  ProvisionedClusterInstancesListOptionalParams,
  ProvisionedClusterInstancesGetOptionalParams,
  ProvisionedClusterInstancesGetResponse,
  ProvisionedClusterInstancesCreateOrUpdateOptionalParams,
  ProvisionedClusterInstancesCreateOrUpdateResponse,
  ProvisionedClusterInstancesDeleteOptionalParams,
  ProvisionedClusterInstancesDeleteResponse,
  ProvisionedClusterInstancesListAdminKubeconfigOptionalParams,
  ProvisionedClusterInstancesListAdminKubeconfigResponse,
  ProvisionedClusterInstancesListUserKubeconfigOptionalParams,
  ProvisionedClusterInstancesListUserKubeconfigResponse,
  ProvisionedClusterInstancesGetUpgradeProfileOptionalParams,
  ProvisionedClusterInstancesGetUpgradeProfileResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ProvisionedClusterInstances. */
export interface ProvisionedClusterInstances {
  /**
   * Lists the ProvisionedClusterInstance resource associated with the ConnectedCluster
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param options The options parameters.
   */
  list(
    resourceUri: string,
    options?: ProvisionedClusterInstancesListOptionalParams,
  ): PagedAsyncIterableIterator<ProvisionedCluster>;
  /**
   * Gets the provisioned cluster instance
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param options The options parameters.
   */
  get(
    resourceUri: string,
    options?: ProvisionedClusterInstancesGetOptionalParams,
  ): Promise<ProvisionedClusterInstancesGetResponse>;
  /**
   * Creates or updates the provisioned cluster instance
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceUri: string,
    resource: ProvisionedCluster,
    options?: ProvisionedClusterInstancesCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProvisionedClusterInstancesCreateOrUpdateResponse>,
      ProvisionedClusterInstancesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates the provisioned cluster instance
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceUri: string,
    resource: ProvisionedCluster,
    options?: ProvisionedClusterInstancesCreateOrUpdateOptionalParams,
  ): Promise<ProvisionedClusterInstancesCreateOrUpdateResponse>;
  /**
   * Deletes the provisioned cluster instance
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceUri: string,
    options?: ProvisionedClusterInstancesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProvisionedClusterInstancesDeleteResponse>,
      ProvisionedClusterInstancesDeleteResponse
    >
  >;
  /**
   * Deletes the provisioned cluster instance
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceUri: string,
    options?: ProvisionedClusterInstancesDeleteOptionalParams,
  ): Promise<ProvisionedClusterInstancesDeleteResponse>;
  /**
   * Lists the admin credentials of the provisioned cluster (can only be used within private network)
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param options The options parameters.
   */
  beginListAdminKubeconfig(
    resourceUri: string,
    options?: ProvisionedClusterInstancesListAdminKubeconfigOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProvisionedClusterInstancesListAdminKubeconfigResponse>,
      ProvisionedClusterInstancesListAdminKubeconfigResponse
    >
  >;
  /**
   * Lists the admin credentials of the provisioned cluster (can only be used within private network)
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param options The options parameters.
   */
  beginListAdminKubeconfigAndWait(
    resourceUri: string,
    options?: ProvisionedClusterInstancesListAdminKubeconfigOptionalParams,
  ): Promise<ProvisionedClusterInstancesListAdminKubeconfigResponse>;
  /**
   * Lists the user credentials of the provisioned cluster (can only be used within private network)
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param options The options parameters.
   */
  beginListUserKubeconfig(
    resourceUri: string,
    options?: ProvisionedClusterInstancesListUserKubeconfigOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProvisionedClusterInstancesListUserKubeconfigResponse>,
      ProvisionedClusterInstancesListUserKubeconfigResponse
    >
  >;
  /**
   * Lists the user credentials of the provisioned cluster (can only be used within private network)
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param options The options parameters.
   */
  beginListUserKubeconfigAndWait(
    resourceUri: string,
    options?: ProvisionedClusterInstancesListUserKubeconfigOptionalParams,
  ): Promise<ProvisionedClusterInstancesListUserKubeconfigResponse>;
  /**
   * Gets the upgrade profile of a provisioned cluster
   * @param resourceUri The fully qualified Azure Resource manager identifier of the resource.
   * @param options The options parameters.
   */
  getUpgradeProfile(
    resourceUri: string,
    options?: ProvisionedClusterInstancesGetUpgradeProfileOptionalParams,
  ): Promise<ProvisionedClusterInstancesGetUpgradeProfileResponse>;
}
