/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const WorkbenchPageableList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkbenchPageableList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Workbench"
            }
          }
        }
      }
    }
  }
};

export const AppOidc: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppOidc",
    modelProperties: {
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      secretUri: {
        serializedName: "secretUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ConnectorPageableList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectorPageableList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Connector"
            }
          }
        }
      }
    }
  }
};

export const LicenseKeyParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LicenseKeyParameters",
    modelProperties: {
      licenseKey: {
        serializedName: "licenseKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileUploadParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileUploadParameters",
    modelProperties: {
      fileSize: {
        serializedName: "fileSize",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GetUploadUri: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetUploadUri",
    modelProperties: {
      result: {
        serializedName: "result",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UpdateLicenseParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateLicenseParameters",
    modelProperties: {
      licenseService: {
        serializedName: "licenseService",
        type: {
          name: "String"
        }
      },
      enable: {
        serializedName: "enable",
        type: {
          name: "Boolean"
        }
      },
      licenseKey: {
        serializedName: "licenseKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RestartLicenseParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestartLicenseParameters",
    modelProperties: {
      licenseService: {
        serializedName: "licenseService",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChamberPageableList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChamberPageableList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Chamber"
            }
          }
        }
      }
    }
  }
};

export const WorkloadPageableList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadPageableList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Workload"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponseAutoGenerated: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponseAutoGenerated",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetailAutoGenerated"
        }
      }
    }
  }
};

export const ErrorDetailAutoGenerated: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetailAutoGenerated",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetailAutoGenerated"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const StoragePageableList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StoragePageableList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Storage"
            }
          }
        }
      }
    }
  }
};

export const FilesManageParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilesManageParameters",
    modelProperties: {
      dataPipeline: {
        serializedName: "dataPipeline",
        type: {
          name: "String"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      force: {
        serializedName: "force",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FilesManage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilesManage",
    modelProperties: {
      result: {
        serializedName: "result",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FilesDownloadRequestParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilesDownloadRequestParameters",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DownloadRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DownloadRequest",
    modelProperties: {
      result: {
        serializedName: "result",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FilePageableList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilePageableList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "File"
            }
          }
        }
      }
    }
  }
};

export const RequestPropertiesFormatApprove: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RequestPropertiesFormatApprove",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const RequestPropertiesFormatDownload: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RequestPropertiesFormatDownload",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      completeTime: {
        serializedName: "completeTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const RequestPropertiesFormatInternalMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RequestPropertiesFormatInternalMetadata",
    modelProperties: {
      sasUriId: {
        serializedName: "sasUriId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileRequestsManageParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileRequestsManageParameters",
    modelProperties: {
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileRequestsManage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileRequestsManage",
    modelProperties: {
      result: {
        serializedName: "result",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileDownloadSasUri: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileDownloadSasUri",
    modelProperties: {
      result: {
        serializedName: "result",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RequestPageableList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RequestPageableList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Request"
            }
          }
        }
      }
    }
  }
};

export const RemoteDesktop: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RemoteDesktop",
    modelProperties: {
      etx: {
        serializedName: "etx",
        type: {
          name: "Composite",
          className: "Etx"
        }
      }
    }
  }
};

export const Etx: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Etx",
    modelProperties: {
      connectionNodeCount: {
        serializedName: "connectionNodeCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      licenseActivated: {
        serializedName: "licenseActivated",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      replyUrlEtx: {
        serializedName: "replyUrlEtx",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      replyUrlOtds: {
        serializedName: "replyUrlOtds",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      licenseKeyUri: {
        serializedName: "licenseKeyUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccessConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessConfiguration",
    modelProperties: {
      accessType: {
        serializedName: "accessType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      gatewayType: {
        serializedName: "gatewayType",
        type: {
          name: "String"
        }
      },
      gatewayVnetId: {
        serializedName: "gatewayVnetId",
        type: {
          name: "String"
        }
      },
      accessUrl: {
        serializedName: "accessUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      ipAddress: {
        serializedName: "ipAddress",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkAcls: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkAcls",
    modelProperties: {
      allowedAddressSpaces: {
        serializedName: "allowedAddressSpaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Workbench: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Workbench",
    modelProperties: {
      ...Resource.type.modelProperties,
      addressSpace: {
        serializedName: "properties.addressSpace",
        type: {
          name: "String"
        }
      },
      appOidc: {
        serializedName: "properties.appOidc",
        type: {
          name: "Composite",
          className: "AppOidc"
        }
      },
      skuPropertiesSku: {
        serializedName: "properties.sku",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Connector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Connector",
    modelProperties: {
      ...Resource.type.modelProperties,
      accessConfigurations: {
        serializedName: "properties.accessConfigurations",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      remoteDesktop: {
        serializedName: "properties.remoteDesktop",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      networkAcls: {
        serializedName: "properties.networkAcls",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Chamber: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Chamber",
    modelProperties: {
      ...Resource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      enablePropertiesLicenseServicesSynopsysEnable: {
        serializedName: "properties.licenseServices.synopsys.enable",
        type: {
          name: "Boolean"
        }
      },
      serverPropertiesLicenseServicesSynopsysServer: {
        serializedName: "properties.licenseServices.synopsys.server",
        type: {
          name: "String"
        }
      },
      vmUuid: {
        serializedName: "properties.licenseServices.synopsys.vmUuid",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      enablePropertiesLicenseServicesSiemensEnable: {
        serializedName: "properties.licenseServices.siemens.enable",
        type: {
          name: "Boolean"
        }
      },
      serverPropertiesLicenseServicesSiemensServer: {
        serializedName: "properties.licenseServices.siemens.server",
        type: {
          name: "String"
        }
      },
      lmhostIdPropertiesLicenseServicesSiemensLmhostId: {
        serializedName: "properties.licenseServices.siemens.lmhostId",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      enablePropertiesLicenseServicesAnsysEnable: {
        serializedName: "properties.licenseServices.ansys.enable",
        type: {
          name: "Boolean"
        }
      },
      serverPropertiesLicenseServicesAnsysServer: {
        serializedName: "properties.licenseServices.ansys.server",
        type: {
          name: "String"
        }
      },
      lmhostIdPropertiesLicenseServicesAnsysLmhostId: {
        serializedName: "properties.licenseServices.ansys.lmhostId",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      enablePropertiesLicenseServicesCadenceEnable: {
        serializedName: "properties.licenseServices.cadence.enable",
        type: {
          name: "Boolean"
        }
      },
      serverPropertiesLicenseServicesCadenceServer: {
        serializedName: "properties.licenseServices.cadence.server",
        type: {
          name: "String"
        }
      },
      lmhostIdPropertiesLicenseServicesCadenceLmhostId: {
        serializedName: "properties.licenseServices.cadence.lmhostId",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      mfp: {
        serializedName: "properties.licenseServices.cadence.mfp",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Workload: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Workload",
    modelProperties: {
      ...Resource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      vmSize: {
        serializedName: "properties.vmSize",
        type: {
          name: "String"
        }
      },
      edaType: {
        serializedName: "properties.edaType",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      privateIP: {
        serializedName: "properties.privateIP",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Storage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Storage",
    modelProperties: {
      ...Resource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      capacityAllocated: {
        serializedName: "properties.capacityAllocated",
        type: {
          name: "Number"
        }
      },
      performanceTier: {
        defaultValue: "Premium",
        serializedName: "properties.performanceTier",
        type: {
          name: "String"
        }
      },
      localMountPath: {
        serializedName: "properties.localMountPath",
        type: {
          name: "String"
        }
      },
      dataPipelineInboundPath: {
        serializedName: "properties.dataPipelineInboundPath",
        type: {
          name: "String"
        }
      },
      dataPipelineOutboundPath: {
        serializedName: "properties.dataPipelineOutboundPath",
        type: {
          name: "String"
        }
      },
      capacityUsed: {
        serializedName: "properties.capacityUsed",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const File: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "File",
    modelProperties: {
      ...Resource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "properties.timestamp",
        type: {
          name: "DateTime"
        }
      },
      dataPipeline: {
        serializedName: "properties.dataPipeline",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "properties.requestId",
        type: {
          name: "String"
        }
      },
      filePath: {
        serializedName: "properties.filePath",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "properties.size",
        type: {
          name: "Number"
        }
      },
      checksum: {
        serializedName: "properties.checksum",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Request: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Request",
    modelProperties: {
      ...Resource.type.modelProperties,
      timestamp: {
        serializedName: "properties.timestamp",
        type: {
          name: "DateTime"
        }
      },
      fileId: {
        serializedName: "properties.fileId",
        type: {
          name: "String"
        }
      },
      requestUserId: {
        serializedName: "properties.requestUserId",
        type: {
          name: "String"
        }
      },
      linuxUsername: {
        serializedName: "properties.linuxUsername",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      approve: {
        serializedName: "properties.approve",
        type: {
          name: "Composite",
          className: "RequestPropertiesFormatApprove"
        }
      },
      download: {
        serializedName: "properties.download",
        type: {
          name: "Composite",
          className: "RequestPropertiesFormatDownload"
        }
      },
      internalMetadata: {
        serializedName: "properties.internalMetadata",
        type: {
          name: "Composite",
          className: "RequestPropertiesFormatInternalMetadata"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkbenchesGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkbenchesGetHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkbenchesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkbenchesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorsStartHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectorsStartHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorsStopHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectorsStopHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorsRestartHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectorsRestartHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectorsDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorsLicenseAddHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectorsLicenseAddHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChambersStartHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChambersStartHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChambersStopHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChambersStopHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChambersRestartHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChambersRestartHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChambersLicenseUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChambersLicenseUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChambersLicenseRestartHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChambersLicenseRestartHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChambersDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChambersDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkloadsStartHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadsStartHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkloadsStopHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadsStopHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkloadsRestartHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadsRestartHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkloadsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadsDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FilesDownloadRequestHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilesDownloadRequestHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileManageHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileManageHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileRequestsManageHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileRequestsManageHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileRequestGetDownloadUriHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileRequestGetDownloadUriHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};
