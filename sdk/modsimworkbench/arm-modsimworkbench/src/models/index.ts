/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1. */
export interface WorkbenchPageableList {
  /** Gets or sets the URL (link) to the next result set. */
  nextLink?: string;
  /** Gets or sets the values to emit from this list. */
  value?: Workbench[];
}

/** Workbench properties. */
export interface AppOidc {
  /** Client Id */
  clientId?: string;
  /** Client secret */
  secretUri?: string;
}

/** Common resource representation. */
export interface Resource {
  /**
   * Resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Resource location. */
  location?: string;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /**
   * system data
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Name of SKU. */
  sku?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1. */
export interface ConnectorPageableList {
  /** Gets or sets the URL (link) to the next result set. */
  nextLink?: string;
  /** Gets or sets the values to emit from this list. */
  value?: Connector[];
}

/** License Key Parameters */
export interface LicenseKeyParameters {
  /** Value of License Key */
  licenseKey?: string;
}

/** File Upload Parameters DTO. */
export interface FileUploadParameters {
  /** Gets or sets the size of the file being uploaded. */
  fileSize?: number;
}

/** Datasync file upload SAS token */
export interface GetUploadUri {
  /** Datasync file upload SAS token */
  result?: string;
}

/** File Upload Parameters DTO. */
export interface UpdateLicenseParameters {
  /** Gets or sets the license service to update. */
  licenseService?: LicenseService;
  /** Switch to show if License Service is activated. */
  enable?: boolean;
  /** EDA License file contents */
  licenseKey?: string;
}

/** File Upload Parameters DTO. */
export interface RestartLicenseParameters {
  /** Gets or sets the license service to update. */
  licenseService?: LicenseService;
}

/** Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1. */
export interface ChamberPageableList {
  /** Gets or sets the URL (link) to the next result set. */
  nextLink?: string;
  /** Gets or sets the values to emit from this list. */
  value?: Chamber[];
}

/** Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1. */
export interface WorkloadPageableList {
  /** Gets or sets the URL (link) to the next result set. */
  nextLink?: string;
  /** Gets or sets the values to emit from this list. */
  value?: Workload[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponseAutoGenerated {
  /** The error object. */
  error?: ErrorDetailAutoGenerated;
}

/** The error detail. */
export interface ErrorDetailAutoGenerated {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetailAutoGenerated[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1. */
export interface StoragePageableList {
  /** Gets or sets the URL (link) to the next result set. */
  nextLink?: string;
  /** Gets or sets the values to emit from this list. */
  value?: Storage[];
}

/** Manage files in an ModSim Workbench chamber data pipeline. */
export interface FilesManageParameters {
  /** Inbound or outbound of the ModSim Workbench chamber Data pipeline. */
  dataPipeline?: DataPipeline;
  /** Specifies the file management action. */
  action?: Action;
  /** Specifies whether to force delete. Works if action is Delete */
  force?: Force;
}

/** Manage files in an chamber data pipeline. */
export interface FilesManage {
  /** Manage files in an ModSim Workbench chamber data pipeline action */
  result?: string;
}

/** Request to download files from an ModSim Workbench chamber data pipeline. */
export interface FilesDownloadRequestParameters {
  /** Specifies the reason for the download request. */
  description?: string;
}

/** Request to download files from an chamber data pipeline. */
export interface DownloadRequest {
  /** Request to download files from an ModSim Workbench chamber data pipeline action */
  result?: string;
}

/** Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1. */
export interface FilePageableList {
  /** Gets or sets the URL (link) to the next result set. */
  nextLink?: string;
  /** Gets or sets the values to emit from this list. */
  value?: File[];
}

export interface RequestPropertiesFormatApprove {
  /** The globally unique identifier for the approval. */
  id?: string;
  /** Description of approval */
  description?: string;
  /** Specifies the principal ID of Azure Active Directory User who approved to download. */
  userId?: string;
  /** The timestamp for the approval */
  timestamp?: Date;
}

export interface RequestPropertiesFormatDownload {
  /** Download destination location. */
  location?: string;
  /** The timestamp for the start of download. */
  startTime?: Date;
  /** The timestamp for the completion of download. */
  completeTime?: Date;
}

export interface RequestPropertiesFormatInternalMetadata {
  /** sas uri id */
  sasUriId?: string;
}

/** Manage files in an ModSim Workbench chamber data pipeline. */
export interface FileRequestsManageParameters {
  /** Specifies the file management action. */
  action?: FileRequestsAction;
  /** Specifies the reason for the action. */
  description?: string;
}

/** Manage download file requests in an chamber Data pipeline. */
export interface FileRequestsManage {
  /** Manage download file requests in an chamber Data pipeline action */
  result?: string;
}

/** Get SAS URI to download a file from an chamber data pipeline. */
export interface FileDownloadSasUri {
  /** Get SAS URI to download a file action */
  result?: string;
}

/** Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1. */
export interface RequestPageableList {
  /** Gets or sets the URL (link) to the next result set. */
  nextLink?: string;
  /** Gets or sets the values to emit from this list. */
  value?: Request[];
}

/** Remote Desktop properties. */
export interface RemoteDesktop {
  /** The etx object. */
  etx?: Etx;
}

/** Etx properties. */
export interface Etx {
  /**
   * The connection node count.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectionNodeCount?: number;
  /**
   * The license activated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly licenseActivated?: LicenseActivated;
  /**
   * The reply URL of ETX Server for Azure AD app.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly replyUrlEtx?: string;
  /**
   * The reply URL of OTDS for Azure AD app.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly replyUrlOtds?: string;
  /** The license key uri. */
  licenseKeyUri?: string;
}

/** Access configuration properties. */
export interface AccessConfiguration {
  /**
   * Gets or sets the AccessType.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accessType?: AccessType;
  /** Gets or sets the GatewayType. */
  gatewayType?: GatewayType;
  /** Gets or sets the GatewayVnetId. */
  gatewayVnetId?: string;
  /**
   * Gets or sets the AccessUrl.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly accessUrl?: string;
  /**
   * Gets or sets the IpAddress.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ipAddress?: string;
}

/** Access configuration properties. */
export interface NetworkAcls {
  /** Gets or sets the AllowedAddressSpaces. */
  allowedAddressSpaces?: string[];
}

/** Workbench resource */
export interface Workbench extends Resource {
  /**
   * this is an extension of IPAddress which includes logic related to Classes Interdomain Routing (CIDR) formatted IP Addresses.
   * E.g. 192.168.0.0/24, most people's default class C RFC 1918 IP space for their home router
   */
  addressSpace?: string;
  /** Workbench properties. */
  appOidc?: AppOidc;
  /** Name of SKU. */
  skuPropertiesSku?: string;
  /**
   * Gets the status of the workbench at the time the operation was called
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Connector resource */
export interface Connector extends Resource {
  /** Gets or sets the Access Configuration. */
  accessConfigurations?: Record<string, unknown>;
  /** Gets or sets the Remote Desktop. */
  remoteDesktop?: Record<string, unknown>;
  /** Specifies set of source IP address ranges to allow access the ModSim Workbench workbench. */
  networkAcls?: Record<string, unknown>;
  /**
   * Gets the status of the connector at the time the operation was called
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Chamber resource */
export interface Chamber extends Resource {
  /**
   * Gets the status of the Chamber at the time the operation was called
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Switch to show if License Service is activated. */
  enablePropertiesLicenseServicesSynopsysEnable?: boolean;
  /** License Service server. */
  serverPropertiesLicenseServicesSynopsysServer?: string;
  /** Virtual machine universal unique identifier of ModSim Workbench chamber license servers used by FlexNet Licensing Service. */
  vmUuid?: string[];
  /** Switch to show if License Service is activated. */
  enablePropertiesLicenseServicesSiemensEnable?: boolean;
  /** License Service server. */
  serverPropertiesLicenseServicesSiemensServer?: string;
  /** Unique identifier of ModSim Workbench chamber license servers used by FlexNet Licensing Service. */
  lmhostIdPropertiesLicenseServicesSiemensLmhostId?: string[];
  /** Switch to show if License Service is activated. */
  enablePropertiesLicenseServicesAnsysEnable?: boolean;
  /** License Service server. */
  serverPropertiesLicenseServicesAnsysServer?: string;
  /** Unique identifier of ModSim Workbench chamber license servers used by FlexNet Licensing Service. */
  lmhostIdPropertiesLicenseServicesAnsysLmhostId?: string[];
  /** Switch to show if License Service is activated. */
  enablePropertiesLicenseServicesCadenceEnable?: boolean;
  /** License Service server. */
  serverPropertiesLicenseServicesCadenceServer?: string;
  /** Unique identifier of ModSim Workbench chamber license servers used by FlexNet Licensing Service. */
  lmhostIdPropertiesLicenseServicesCadenceLmhostId?: string[];
  /** License server information for Cadence License Manager. */
  mfp?: string[];
}

/** Workload resource */
export interface Workload extends Resource {
  /**
   * Gets the status of the workload at the time the operation was called
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Gets or sets the VmSize. */
  vmSize?: string;
  /** Gets or sets the edaType. */
  edaType?: string;
  /**
   * Gets or sets the status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: string;
  /**
   * Gets or sets the private IpAddress of workload.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateIP?: string;
}

/** Storage resource */
export interface Storage extends Resource {
  /**
   * Gets the status of the storage at the time the operation was called
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Provisioned size of the ModSim Workbench chamber storage in terabytes */
  capacityAllocated?: number;
  /** Specifies performance tier of the ModSim Workbench chamber storage. */
  performanceTier?: PerformanceTier;
  /** Directory where the SDW Private Storage volume mounted. */
  localMountPath?: string;
  /** Directory for the ModSim Workbench chamber data pipeline inbound. */
  dataPipelineInboundPath?: string;
  /** Directory for the ModSim Workbench chamber data pipeline outbound. */
  dataPipelineOutboundPath?: string;
  /** Capacity used in the SDW Private Storage volume in gigabytes. */
  capacityUsed?: number;
}

/** File resource */
export interface File extends Resource {
  /**
   * Gets the status of the file at the time the operation was called
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The modified timestamp of the file. */
  timestamp?: Date;
  /** The direction of ModSim Workbench chamber data pipeline where the file located. */
  dataPipeline?: string;
  /** The resource ID of ModSim Workbench chamber data pipeline request Works and required only if requested is true. */
  requestId?: string;
  /** The Linux File System path for the ModSim Workbench chamber data pipeline file. */
  filePath?: string;
  /** The size of the file. */
  size?: number;
  /** The MD5 hash of the file. */
  checksum?: string;
}

/** Request resource */
export interface Request extends Resource {
  /** The timestamp for the resource creation. */
  timestamp?: Date;
  /** FileId for the operation */
  fileId?: string;
  /** Specifies the principal ID of Azure Active Directory User who requested to download. */
  requestUserId?: string;
  /** The ModSim Workbench chamber workloads local username used when login. */
  linuxUsername?: string;
  /** The status of ModSim Workbench chamber data pipeline request. */
  status?: string;
  /** Description for the operation */
  description?: string;
  approve?: RequestPropertiesFormatApprove;
  download?: RequestPropertiesFormatDownload;
  internalMetadata?: RequestPropertiesFormatInternalMetadata;
  /**
   * Gets the status of the request at the time the operation was called
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Defines headers for Workbenches_get operation. */
export interface WorkbenchesGetHeaders {
  location?: string;
}

/** Defines headers for Workbenches_delete operation. */
export interface WorkbenchesDeleteHeaders {
  location?: string;
}

/** Defines headers for Connectors_start operation. */
export interface ConnectorsStartHeaders {
  location?: string;
}

/** Defines headers for Connectors_stop operation. */
export interface ConnectorsStopHeaders {
  location?: string;
}

/** Defines headers for Connectors_restart operation. */
export interface ConnectorsRestartHeaders {
  location?: string;
}

/** Defines headers for Connectors_delete operation. */
export interface ConnectorsDeleteHeaders {
  location?: string;
}

/** Defines headers for Connectors_licenseAdd operation. */
export interface ConnectorsLicenseAddHeaders {
  location?: string;
}

/** Defines headers for Chambers_start operation. */
export interface ChambersStartHeaders {
  location?: string;
}

/** Defines headers for Chambers_stop operation. */
export interface ChambersStopHeaders {
  location?: string;
}

/** Defines headers for Chambers_restart operation. */
export interface ChambersRestartHeaders {
  location?: string;
}

/** Defines headers for Chambers_licenseUpdate operation. */
export interface ChambersLicenseUpdateHeaders {
  location?: string;
}

/** Defines headers for Chambers_licenseRestart operation. */
export interface ChambersLicenseRestartHeaders {
  location?: string;
}

/** Defines headers for Chambers_delete operation. */
export interface ChambersDeleteHeaders {
  location?: string;
}

/** Defines headers for Workloads_start operation. */
export interface WorkloadsStartHeaders {
  location?: string;
}

/** Defines headers for Workloads_stop operation. */
export interface WorkloadsStopHeaders {
  location?: string;
}

/** Defines headers for Workloads_restart operation. */
export interface WorkloadsRestartHeaders {
  location?: string;
}

/** Defines headers for Workloads_delete operation. */
export interface WorkloadsDeleteHeaders {
  location?: string;
}

/** Defines headers for Files_downloadRequest operation. */
export interface FilesDownloadRequestHeaders {
  location?: string;
}

/** Defines headers for File_manage operation. */
export interface FileManageHeaders {
  location?: string;
}

/** Defines headers for FileRequests_manage operation. */
export interface FileRequestsManageHeaders {
  location?: string;
}

/** Defines headers for FileRequest_getDownloadUri operation. */
export interface FileRequestGetDownloadUriHeaders {
  location?: string;
}

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Unknown */
  Unknown = "Unknown",
  /** Validating */
  Validating = "Validating",
  /** Processing */
  Processing = "Processing",
  /** Deleting */
  Deleting = "Deleting",
  /** Accepted */
  Accepted = "Accepted",
  /** Canceled */
  Canceled = "Canceled",
  /** Completed */
  Completed = "Completed",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Deleted */
  Deleted = "Deleted"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Unknown** \
 * **Validating** \
 * **Processing** \
 * **Deleting** \
 * **Accepted** \
 * **Canceled** \
 * **Completed** \
 * **Succeeded** \
 * **Failed** \
 * **Deleted**
 */
export type ProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link LicenseService} that the service accepts. */
export enum KnownLicenseService {
  /** Ansys */
  Ansys = "ansys",
  /** Cadence */
  Cadence = "cadence",
  /** Siemens */
  Siemens = "siemens",
  /** Synopsys */
  Synopsys = "synopsys"
}

/**
 * Defines values for LicenseService. \
 * {@link KnownLicenseService} can be used interchangeably with LicenseService,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ansys** \
 * **cadence** \
 * **siemens** \
 * **synopsys**
 */
export type LicenseService = string;

/** Known values of {@link PerformanceTier} that the service accepts. */
export enum KnownPerformanceTier {
  /** Standard */
  Standard = "Standard",
  /** Premium */
  Premium = "Premium",
  /** Ultra */
  Ultra = "Ultra"
}

/**
 * Defines values for PerformanceTier. \
 * {@link KnownPerformanceTier} can be used interchangeably with PerformanceTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard** \
 * **Premium** \
 * **Ultra**
 */
export type PerformanceTier = string;

/** Known values of {@link DataPipeline} that the service accepts. */
export enum KnownDataPipeline {
  /** Inbound */
  Inbound = "Inbound",
  /** Outbound */
  Outbound = "Outbound"
}

/**
 * Defines values for DataPipeline. \
 * {@link KnownDataPipeline} can be used interchangeably with DataPipeline,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Inbound** \
 * **Outbound**
 */
export type DataPipeline = string;

/** Known values of {@link Action} that the service accepts. */
export enum KnownAction {
  /** Delete */
  Delete = "Delete",
  /** Archive */
  Archive = "Archive"
}

/**
 * Defines values for Action. \
 * {@link KnownAction} can be used interchangeably with Action,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Delete** \
 * **Archive**
 */
export type Action = string;

/** Known values of {@link Force} that the service accepts. */
export enum KnownForce {
  /** True */
  True = "True",
  /** False */
  False = "False"
}

/**
 * Defines values for Force. \
 * {@link KnownForce} can be used interchangeably with Force,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **True** \
 * **False**
 */
export type Force = string;

/** Known values of {@link FileRequestsAction} that the service accepts. */
export enum KnownFileRequestsAction {
  /** Approve */
  Approve = "Approve",
  /** Reject */
  Reject = "Reject"
}

/**
 * Defines values for FileRequestsAction. \
 * {@link KnownFileRequestsAction} can be used interchangeably with FileRequestsAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Approve** \
 * **Reject**
 */
export type FileRequestsAction = string;

/** Known values of {@link LicenseActivated} that the service accepts. */
export enum KnownLicenseActivated {
  /** True */
  True = "True",
  /** False */
  False = "False"
}

/**
 * Defines values for LicenseActivated. \
 * {@link KnownLicenseActivated} can be used interchangeably with LicenseActivated,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **True** \
 * **False**
 */
export type LicenseActivated = string;

/** Known values of {@link AccessType} that the service accepts. */
export enum KnownAccessType {
  /** GUI */
  GUI = "GUI"
}

/**
 * Defines values for AccessType. \
 * {@link KnownAccessType} can be used interchangeably with AccessType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GUI**
 */
export type AccessType = string;

/** Known values of {@link GatewayType} that the service accepts. */
export enum KnownGatewayType {
  /** ExpressRoute */
  ExpressRoute = "ExpressRoute",
  /** None */
  None = "None",
  /** Vpn */
  Vpn = "Vpn"
}

/**
 * Defines values for GatewayType. \
 * {@link KnownGatewayType} can be used interchangeably with GatewayType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ExpressRoute** \
 * **None** \
 * **Vpn**
 */
export type GatewayType = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface WorkbenchesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type WorkbenchesListBySubscriptionResponse = WorkbenchPageableList;

/** Optional parameters. */
export interface WorkbenchesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type WorkbenchesListByResourceGroupResponse = WorkbenchPageableList;

/** Optional parameters. */
export interface WorkbenchesGetOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the get operation. */
export type WorkbenchesGetResponse = Workbench;

/** Optional parameters. */
export interface WorkbenchesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the create or update workbench operation. */
  body?: Workbench;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type WorkbenchesCreateOrUpdateResponse = Workbench;

/** Optional parameters. */
export interface WorkbenchesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the create or update chamber operation. */
  body?: Workbench;
}

/** Contains response data for the update operation. */
export type WorkbenchesUpdateResponse = Workbench;

/** Optional parameters. */
export interface WorkbenchesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type WorkbenchesDeleteResponse = Workbench;

/** Optional parameters. */
export interface WorkbenchesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type WorkbenchesListBySubscriptionNextResponse = WorkbenchPageableList;

/** Optional parameters. */
export interface WorkbenchesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type WorkbenchesListByResourceGroupNextResponse = WorkbenchPageableList;

/** Optional parameters. */
export interface ConnectorsStartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ConnectorsStopOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ConnectorsRestartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ConnectorsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the create or update connector operation. */
  parameters?: Connector;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ConnectorsCreateOrUpdateResponse = Connector;

/** Optional parameters. */
export interface ConnectorsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the create or update connector operation. */
  parameters?: Connector;
}

/** Contains response data for the update operation. */
export type ConnectorsUpdateResponse = Connector;

/** Optional parameters. */
export interface ConnectorsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ConnectorsGetResponse = Connector;

/** Optional parameters. */
export interface ConnectorsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ConnectorsDeleteResponse = Connector;

/** Optional parameters. */
export interface ConnectorsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ConnectorsListResponse = ConnectorPageableList;

/** Optional parameters. */
export interface ConnectorsLicenseAddOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ConnectorsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ConnectorsListNextResponse = ConnectorPageableList;

/** Optional parameters. */
export interface ChambersGetUploadUriOptionalParams
  extends coreClient.OperationOptions {
  /** the file upload parameters. */
  body?: FileUploadParameters;
}

/** Contains response data for the getUploadUri operation. */
export type ChambersGetUploadUriResponse = GetUploadUri;

/** Optional parameters. */
export interface ChambersStartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ChambersStopOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ChambersRestartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ChambersLicenseUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** the update license services parameters. */
  body?: UpdateLicenseParameters;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ChambersLicenseRestartOptionalParams
  extends coreClient.OperationOptions {
  /** Restart License body */
  body?: RestartLicenseParameters;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ChambersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the create or update chamber operation. */
  parameters?: Chamber;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ChambersCreateOrUpdateResponse = Chamber;

/** Optional parameters. */
export interface ChambersUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the create or update Chamber operation. */
  parameters?: Chamber;
}

/** Contains response data for the update operation. */
export type ChambersUpdateResponse = Chamber;

/** Optional parameters. */
export interface ChambersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ChambersGetResponse = Chamber;

/** Optional parameters. */
export interface ChambersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ChambersDeleteResponse = Chamber;

/** Optional parameters. */
export interface ChambersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ChambersListResponse = ChamberPageableList;

/** Optional parameters. */
export interface ChambersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ChambersListNextResponse = ChamberPageableList;

/** Optional parameters. */
export interface WorkloadsStartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface WorkloadsStopOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface WorkloadsRestartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface WorkloadsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the create or update workload operation. */
  parameters?: Workload;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type WorkloadsCreateOrUpdateResponse = Workload;

/** Optional parameters. */
export interface WorkloadsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the create or update workload operation. */
  parameters?: Workload;
}

/** Contains response data for the update operation. */
export type WorkloadsUpdateResponse = Workload;

/** Optional parameters. */
export interface WorkloadsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkloadsGetResponse = Workload;

/** Optional parameters. */
export interface WorkloadsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type WorkloadsDeleteResponse = Workload;

/** Optional parameters. */
export interface WorkloadsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type WorkloadsListResponse = WorkloadPageableList;

/** Optional parameters. */
export interface WorkloadsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type WorkloadsListNextResponse = WorkloadPageableList;

/** Optional parameters. */
export interface StoragesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the create or update storage resource. */
  parameters?: Storage;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type StoragesCreateOrUpdateResponse = Storage;

/** Optional parameters. */
export interface StoragesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameters supplied to the create or update storage resource. */
  parameters?: Storage;
}

/** Contains response data for the update operation. */
export type StoragesUpdateResponse = Storage;

/** Optional parameters. */
export interface StoragesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type StoragesGetResponse = Storage;

/** Optional parameters. */
export interface StoragesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type StoragesDeleteResponse = Storage;

/** Optional parameters. */
export interface StoragesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type StoragesListResponse = StoragePageableList;

/** Optional parameters. */
export interface StoragesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type StoragesListNextResponse = StoragePageableList;

/** Optional parameters. */
export interface FilesGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FilesGetResponse = File;

/** Optional parameters. */
export interface FilesDownloadRequestOptionalParams
  extends coreClient.OperationOptions {
  /** the file download request parameters. */
  body?: FilesDownloadRequestParameters;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the downloadRequest operation. */
export type FilesDownloadRequestResponse = DownloadRequest;

/** Optional parameters. */
export interface FilesListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type FilesListResponse = FilePageableList;

/** Optional parameters. */
export interface FilesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type FilesListNextResponse = FilePageableList;

/** Optional parameters. */
export interface FileManageOptionalParams extends coreClient.OperationOptions {
  /** Manage download file parameters. */
  body?: FilesManageParameters;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the manage operation. */
export type FileManageResponse = FilesManage;

/** Optional parameters. */
export interface FileRequestsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FileRequestsGetResponse = Request;

/** Optional parameters. */
export interface FileRequestsManageOptionalParams
  extends coreClient.OperationOptions {
  /** Manage download file requests parameters. */
  body?: FileRequestsManageParameters;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the manage operation. */
export type FileRequestsManageResponse = FileRequestsManage;

/** Optional parameters. */
export interface FileRequestsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type FileRequestsListResponse = RequestPageableList;

/** Optional parameters. */
export interface FileRequestsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type FileRequestsListNextResponse = RequestPageableList;

/** Optional parameters. */
export interface FileRequestGetDownloadUriOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the getDownloadUri operation. */
export type FileRequestGetDownloadUriResponse = FileDownloadSasUri;

/** Optional parameters. */
export interface MicrosoftModSimWorkbenchOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
