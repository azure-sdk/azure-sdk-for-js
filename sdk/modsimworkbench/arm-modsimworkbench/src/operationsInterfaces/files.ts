/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  File,
  FilesListOptionalParams,
  FilesGetOptionalParams,
  FilesGetResponse,
  FilesDownloadRequestOptionalParams,
  FilesDownloadRequestResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Files. */
export interface Files {
  /**
   * Lists all files.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workbenchName The name of the workbench.
   * @param chamberName The name of the chamber.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workbenchName: string,
    chamberName: string,
    options?: FilesListOptionalParams
  ): PagedAsyncIterableIterator<File>;
  /**
   * Get a specific ModSim Workbench chamber data pipeline file resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workbenchName the workbench name.
   * @param chamberName the chamber name.
   * @param fileName the file name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workbenchName: string,
    chamberName: string,
    fileName: string,
    options?: FilesGetOptionalParams
  ): Promise<FilesGetResponse>;
  /**
   * Request to download files from an ModSim Workbench chamber data pipeline.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workbenchName the workbench name.
   * @param chamberName the chamber name.
   * @param fileName the file name.
   * @param options The options parameters.
   */
  beginDownloadRequest(
    resourceGroupName: string,
    workbenchName: string,
    chamberName: string,
    fileName: string,
    options?: FilesDownloadRequestOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<FilesDownloadRequestResponse>,
      FilesDownloadRequestResponse
    >
  >;
  /**
   * Request to download files from an ModSim Workbench chamber data pipeline.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workbenchName the workbench name.
   * @param chamberName the chamber name.
   * @param fileName the file name.
   * @param options The options parameters.
   */
  beginDownloadRequestAndWait(
    resourceGroupName: string,
    workbenchName: string,
    chamberName: string,
    fileName: string,
    options?: FilesDownloadRequestOptionalParams
  ): Promise<FilesDownloadRequestResponse>;
}
