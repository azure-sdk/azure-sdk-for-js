/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Request,
  FileRequestsListOptionalParams,
  FileRequestsGetOptionalParams,
  FileRequestsGetResponse,
  FileRequestsManageOptionalParams,
  FileRequestsManageResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a FileRequests. */
export interface FileRequests {
  /**
   * Get ModSim Workbench chamber data pipeline file request resource collection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workbenchName The name of the workbench.
   * @param chamberName The name of the chamber.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    workbenchName: string,
    chamberName: string,
    options?: FileRequestsListOptionalParams
  ): PagedAsyncIterableIterator<Request>;
  /**
   * Get a specific ModSim Workbench chamber data pipeline file request resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workbenchName the workbench name.
   * @param chamberName the chamber name.
   * @param requestName the request name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    workbenchName: string,
    chamberName: string,
    requestName: string,
    options?: FileRequestsGetOptionalParams
  ): Promise<FileRequestsGetResponse>;
  /**
   * Manage download file requests in an ModSim Workbench chamber Data pipeline.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workbenchName the workbench name.
   * @param chamberName the chamber name.
   * @param requestName the file request name.
   * @param options The options parameters.
   */
  beginManage(
    resourceGroupName: string,
    workbenchName: string,
    chamberName: string,
    requestName: string,
    options?: FileRequestsManageOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<FileRequestsManageResponse>,
      FileRequestsManageResponse
    >
  >;
  /**
   * Manage download file requests in an ModSim Workbench chamber Data pipeline.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param workbenchName the workbench name.
   * @param chamberName the chamber name.
   * @param requestName the file request name.
   * @param options The options parameters.
   */
  beginManageAndWait(
    resourceGroupName: string,
    workbenchName: string,
    chamberName: string,
    requestName: string,
    options?: FileRequestsManageOptionalParams
  ): Promise<FileRequestsManageResponse>;
}
