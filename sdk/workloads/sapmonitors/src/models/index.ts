/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type ProviderSpecificPropertiesUnion =
  | ProviderSpecificProperties
  | OracleProviderInstanceProperties
  | HanaDbProviderInstanceProperties
  | SapNetWeaverProviderInstanceProperties
  | PrometheusOSProviderInstanceProperties
  | DB2ProviderInstanceProperties
  | PrometheusHaClusterProviderInstanceProperties
  | MsSqlServerProviderInstanceProperties;

/** The response from the List SAP monitors operation. */
export interface MonitorListResult {
  /** The list of SAP monitors. */
  value?: Monitor[];
  /** The URL to get the next set of SAP monitors. */
  nextLink?: string;
}

/** The Managed service identity. */
export interface ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
  userAssignedIdentities?: {
    [propertyName: string]: UserAssignedIdentity | null;
  };
  /** The managed service identity for all identities. */
  type: ManagedServiceIdentityType;
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Managed resource group configuration */
export interface ManagedRGConfiguration {
  /** Managed resource group name */
  name?: string;
}

/** Configuration details of app service plan */
export interface AppServicePlanConfiguration {
  /** The App Service plan tier. */
  tier?: AppServicePlanTier;
  /** The number of workers in app service plan. If this is not set or set to 0, auto scale will be configured for the app service plan, otherwise, instance count is set to this number. */
  capacity?: number;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** Defines the request body for updating SAP monitor resource. */
export interface UpdateMonitorRequest {
  /** Gets or sets the Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The Managed service identity. */
  identity?: ManagedServiceIdentity;
}

/** The response from the List provider instances operation. */
export interface ProviderInstanceListResult {
  /** The list of provider instances. */
  value?: ProviderInstance[];
  /** The URL to get the next set of provider instances. */
  nextLink?: string;
}

/** Resource health details */
export interface Health {
  /**
   * Health state of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly healthState?: WorkloadProviderInstanceHealthState;
  /**
   * Reasons impacting health state
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly impactingReasons?: string;
}

/** Gets or sets the provider specific properties. */
export interface ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType:
    | "Oracle"
    | "SapHana"
    | "SapNetWeaver"
    | "PrometheusOS"
    | "Db2"
    | "PrometheusHaCluster"
    | "MsSqlServer";
}

/** The response from the List alert templates operation. */
export interface AlertTemplatesListResult {
  /** The list of alert templates. */
  value?: AlertTemplate[];
  /** The URL to get the next set of alert templates. */
  nextLink?: string;
}

/** Describes the properties for metric measurement in alerts template. */
export interface AlertTemplateMetricMeasurement {
  /** Threshold Operator for the alert template [Metric Measurement] */
  thresholdOperator?: AlertTemplateThresholdOperatorMetricMeasurement;
  /** The Threshold Value Associated with the Alert Template for Metric Measurement */
  threshold?: number;
  /** Metric Trigger Type Associated with the Alert Template for Metric Measurement */
  metricTriggerType?: AlertTemplateMetricTriggerType;
  /** Metric Column Associated with the Alert Template for Metric Measurement */
  metricColumn?: string;
  /** Frequency (mins) value Associated with the Alert Template for Metric Measurement */
  frequencyInMinutes?: number;
  /** Time Window (mins) Value Associated with the Alert Template for Metric Measurement */
  timeWindowInMinutes?: number;
}

/** Describes the Query Input Parameter properties in alerts template. */
export interface AlertTemplateQueryInputParameter {
  /** Type of the Query Input Parameter */
  type?: AlertTemplateParameterType;
  /** Name of the Query Input Parameter */
  name?: string;
  /** Description of the Query Input Parameter */
  description?: string;
  /** Default Value of the Query Input Parameter */
  defaultValue?: string;
  /** Query of the Query Input Parameter */
  laQuery?: string;
  /** Selection Mode of the Query Input Parameter */
  selectionMode?: AlertTemplateSelectionMode;
  /** Display Name of the Query Input Parameter */
  displayName?: string;
}

/** The response from the List alerts operation. */
export interface AlertsListResult {
  /** The list of alerts of the SAP monitor resource. */
  value?: Alert[];
  /** The URL to get the next set of alert instances. */
  nextLink?: string;
}

/** Describes the Alert Query Parameter properties in alert. */
export interface AlertQueryParameter {
  /** The name of the alert query param. */
  name?: string;
  /** The value of the alert query param. */
  value?: string;
}

/** The response from the List db2 Job Configurations operation. */
export interface Db2JobConfigurationsListResult {
  /** The list of db2 Job Configurations. */
  value?: Db2JobConfiguration[];
  /** The URL to get the next set of db2 Job Configurations. */
  nextLink?: string;
}

/** Gets or sets list of configuration Parameter */
export interface ConfigurationParameter {
  /** Gets or sets name of configuration */
  name?: string;
  /** Gets or sets value of configuration parameter */
  value?: string;
}

/** Gets or sets the list of action parameter */
export interface ActionsParameter {
  /** Gets or sets the function Name */
  functionName?: string;
  /** Gets or sets the list of function Name. */
  parameters?: ConfigurationParameter[];
}

/** Gets or sets the SID groupings by landscape and Environment. */
export interface SapLandscapeMonitorPropertiesGrouping {
  /** Gets or sets the list of landscape to SID mappings. */
  landscape?: SapLandscapeMonitorSidMapping[];
  /** Gets or sets the list of Sap Applications to SID mappings. */
  sapApplication?: SapLandscapeMonitorSidMapping[];
}

/** Gets or sets the mapping for SID to Environment/Applications. */
export interface SapLandscapeMonitorSidMapping {
  /** Gets or sets the name of the grouping. */
  name?: string;
  /** Gets or sets the list of SID's. */
  topSid?: string[];
}

/** Gets or sets the Threshold Values for Top Metrics Health. */
export interface SapLandscapeMonitorMetricThresholds {
  /** Gets or sets the name of the threshold. */
  name?: string;
  /** Gets or sets the threshold value for Green. */
  green?: number;
  /** Gets or sets the threshold value for Yellow. */
  yellow?: number;
  /** Gets or sets the threshold value for Red. */
  red?: number;
}

/** The response from the List SAP Landscape Monitor Dashboard operation. */
export interface SapLandscapeMonitorListResult {
  /** The list of Sap Landscape Monitor configuration. */
  value?: SapLandscapeMonitor[];
  /** The URL to get the next set of SAP Landscape Monitor Dashboard. */
  nextLink?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Tags field of the resource. */
export interface Tags {
  /** Tags field of the resource. */
  tags?: { [propertyName: string]: string };
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Gets or sets the Oracle provider properties. */
export interface OracleProviderInstanceProperties
  extends ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType: "Oracle";
  /** Gets or sets the target virtual machine name. */
  hostname?: string;
  /** Gets or sets the oracle database name. */
  dbName?: string;
  /** Gets or sets the oracle database sql port. */
  dbPort?: string;
  /** Gets or sets the oracle database user name. */
  dbUsername?: string;
  /** Gets or sets the oracle database password. */
  dbPassword?: string;
  /** Gets or sets the key vault URI to secret with the database password. */
  dbPasswordUri?: string;
  /** Gets or sets the SAP System Identifier */
  sapSid?: string;
  /** Gets or sets certificate preference if secure communication is enabled. */
  sslPreference?: SslPreference;
  /** Gets or sets the blob URI to SSL certificate for the Oracle Database. */
  sslCertificateUri?: string;
}

/** Gets or sets the provider properties. */
export interface HanaDbProviderInstanceProperties
  extends ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType: "SapHana";
  /** Gets or sets the target virtual machine size. */
  hostname?: string;
  /** Gets or sets the hana database name. */
  dbName?: string;
  /** Gets or sets the database sql port. */
  sqlPort?: string;
  /** Gets or sets the database instance number. */
  instanceNumber?: string;
  /** Gets or sets the database user name. */
  dbUsername?: string;
  /** Gets or sets the database password. */
  dbPassword?: string;
  /** Gets or sets the key vault URI to secret with the database password. */
  dbPasswordUri?: string;
  /** Gets or sets the blob URI to SSL certificate for the DB. */
  sslCertificateUri?: string;
  /** Gets or sets the hostname(s) in the SSL certificate. */
  sslHostNameInCertificate?: string;
  /** Gets or sets certificate preference if secure communication is enabled. */
  sslPreference?: SslPreference;
  /** Gets or sets the SAP System Identifier. */
  sapSid?: string;
}

/** Gets or sets the provider properties. */
export interface SapNetWeaverProviderInstanceProperties
  extends ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType: "SapNetWeaver";
  /** Gets or sets the SAP System Identifier */
  sapSid?: string;
  /** Gets or sets the target virtual machine IP Address/FQDN. */
  sapHostname?: string;
  /** Gets or sets the instance number of SAP NetWeaver. */
  sapInstanceNr?: string;
  /** Gets or sets the list of HostFile Entries */
  sapHostFileEntries?: string[];
  /** Gets or sets the SAP user name. */
  sapUsername?: string;
  /** Sets the SAP password. */
  sapPassword?: string;
  /** Gets or sets the key vault URI to secret with the SAP password. */
  sapPasswordUri?: string;
  /** Gets or sets the SAP Client ID. */
  sapClientId?: string;
  /** Gets or sets the SAP HTTP port number. */
  sapPortNumber?: string;
  /** Gets or sets the blob URI to SSL certificate for the SAP system. */
  sslCertificateUri?: string;
  /** Gets or sets certificate preference if secure communication is enabled. */
  sslPreference?: SslPreference;
}

/** Gets or sets the PrometheusOS provider properties. */
export interface PrometheusOSProviderInstanceProperties
  extends ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType: "PrometheusOS";
  /** URL of the Node Exporter endpoint */
  prometheusUrl?: string;
  /** Gets or sets certificate preference if secure communication is enabled. */
  sslPreference?: SslPreference;
  /** Gets or sets the blob URI to SSL certificate for the prometheus node exporter. */
  sslCertificateUri?: string;
  /** Gets or sets the SAP System Identifier */
  sapSid?: string;
}

/** Gets or sets the DB2 provider properties. */
export interface DB2ProviderInstanceProperties
  extends ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType: "Db2";
  /** Gets or sets the target virtual machine name. */
  hostname?: string;
  /** Gets or sets the db2 database name. */
  dbName?: string;
  /** Gets or sets the db2 database sql port. */
  dbPort?: string;
  /** Gets or sets the db2 database user name. */
  dbUsername?: string;
  /** Gets or sets the db2 database password. */
  dbPassword?: string;
  /** Gets or sets the key vault URI to secret with the database password. */
  dbPasswordUri?: string;
  /** Gets or sets the SAP System Identifier */
  sapSid?: string;
  /** Gets or sets certificate preference if secure communication is enabled. */
  sslPreference?: SslPreference;
  /** Gets or sets the blob URI to SSL certificate for the DB2 Database. */
  sslCertificateUri?: string;
}

/** Gets or sets the PrometheusHaCluster provider properties. */
export interface PrometheusHaClusterProviderInstanceProperties
  extends ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType: "PrometheusHaCluster";
  /** URL of the Node Exporter endpoint. */
  prometheusUrl?: string;
  /** Gets or sets the target machine name. */
  hostname?: string;
  /** Gets or sets the cluster sid. */
  sid?: string;
  /** Gets or sets the clusterName. */
  clusterName?: string;
  /** Gets or sets certificate preference if secure communication is enabled. */
  sslPreference?: SslPreference;
  /** Gets or sets the blob URI to SSL certificate for the HA cluster exporter. */
  sslCertificateUri?: string;
}

/** Gets or sets the SQL server provider properties. */
export interface MsSqlServerProviderInstanceProperties
  extends ProviderSpecificProperties {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  providerType: "MsSqlServer";
  /** Gets or sets the SQL server host name. */
  hostname?: string;
  /** Gets or sets the database sql port. */
  dbPort?: string;
  /** Gets or sets the database user name. */
  dbUsername?: string;
  /** Gets or sets the database password. */
  dbPassword?: string;
  /** Gets or sets the key vault URI to secret with the database password. */
  dbPasswordUri?: string;
  /** Gets or sets the SAP System Identifier */
  sapSid?: string;
  /** Gets or sets certificate preference if secure communication is enabled. */
  sslPreference?: SslPreference;
  /** Gets or sets the blob URI to SSL certificate for the SQL Database. */
  sslCertificateUri?: string;
}

/** SAP monitor info on Azure (ARM properties and SAP monitor properties) */
export interface Monitor extends TrackedResource {
  /** The Managed service identity. */
  identity?: ManagedServiceIdentity;
  /**
   * State of provisioning of the SAP monitor.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: WorkloadMonitorProvisioningState;
  /**
   * Defines the SAP monitor errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: ErrorDetail;
  /** The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region. */
  appLocation?: string;
  /** Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET. */
  routingPreference?: RoutingPreference;
  /** Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created which do not support zone redundancy. */
  zoneRedundancyPreference?: string;
  /** Managed resource group configuration */
  managedResourceGroupConfiguration?: ManagedRGConfiguration;
  /** The ARM ID of the Log Analytics Workspace that is used for SAP monitoring. */
  logAnalyticsWorkspaceArmId?: string;
  /** The subnet which the SAP monitor will be deployed in */
  monitorSubnet?: string;
  /** App service plan configuration */
  appServicePlanConfiguration?: AppServicePlanConfiguration;
  /**
   * The ARM ID of the MSI used for SAP monitoring.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly msiArmId?: string;
  /**
   * The ARM ID of the Storage account used for SAP monitoring.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly storageAccountArmId?: string;
}

/** A provider instance associated with SAP monitor. */
export interface ProviderInstance extends ProxyResource {
  /**
   * State of provisioning of the provider instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: WorkloadMonitorProvisioningState;
  /**
   * Resource health details
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly health?: Health;
  /**
   * Defines the provider instance errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: ErrorDetail;
  /** Defines the provider specific properties. */
  providerSettings?: ProviderSpecificPropertiesUnion;
}

/** A alert template associated with SAP monitor. */
export interface AlertTemplate extends ProxyResource {
  /**
   * Provisioning state of the alert template
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AlertTemplateProvisioningState;
  /** Display name of the alert template. */
  templateDisplayName?: string;
  /** The provider type for alert template. For example, the value can be SapHana. */
  providerType?: string;
  /** Short Description of the alert template. */
  description?: string;
  /** Severity of the alert. Should be an integer between [0-4]. Value of 0 is most severe and value of 4 is least severe. */
  severity?: number;
  /** Query Associated with the Alert Template */
  query?: string;
  /** Evaluation Operator for Alert Template Threshold. */
  thresholdOperator?: ConditionalOperator;
  /** Default Threshold Value Associated with the Alert Template */
  defaultThreshold?: number;
  /** Minimum possible Default Threshold Value Associated with the Alert Template */
  lowerBound?: number;
  /** Maximum possible Default Threshold Value Associated with the Alert Template */
  upperBound?: number;
  /** Is input required for Default Threshold Value Associated with the Alert Template */
  defaultThresholdInputOption?: DefaultThresholdInputOption;
  /** Alert Unit Value Associated with the Alert Template */
  alertUnit?: string;
  /** Defines the metric measurement properties. */
  metricMeasurement?: AlertTemplateMetricMeasurement;
  /** Defines the query input properties. */
  queryInputParameters?: AlertTemplateQueryInputParameter[];
}

/** A alert associated with SAP monitor. */
export interface Alert extends ProxyResource {
  /**
   * State of provisioning of the alert instance
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: AlertProvisioningState;
  /**
   * Defines the alert instance errors.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errors?: ErrorDetail;
  /** Name of the alert template from which it was created. */
  templateName?: string;
  /**
   * ID of the alert rule resource created.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly alertRuleResourceId?: string;
  /** The provider type for alert. For example, the value can be SapHana. */
  providerType?: string;
  /** Name of provider instances associated with the alert. */
  providerNames?: string[];
  /** The value which indicates whether this scheduled query rule is enabled. Value should be enabled or disabled */
  status?: AlertRuleStatus;
  /** Severity of the alert. Should be an integer between [0-4]. Value of 0 is severest. */
  severity?: number;
  /** Action Group resource Ids to invoke when the alert fires */
  actionGroups?: string[];
  /** the criteria threshold value that activates the alert */
  threshold?: number;
  /** Evaluation Operator for Threshold. */
  thresholdOperator?: ConditionalOperator;
  /** The period of time on which the Alert query will be executed */
  windowSize?: number;
  /** How often the scheduled query rule is evaluated. */
  evaluationFrequency?: number;
  /** The number of failing periods to trigger an alert. */
  failingPeriodsToAlert?: number;
  /** Evaluation Operator for Failing Periods. */
  failingPeriodsOperator?: ConditionalOperator;
  /** Mute actions for the chosen period of time after the alert is fired */
  muteActionsDuration?: number;
  /** The value that indicates whether the alert should be automatically resolved or not. The default is Disable. */
  autoMitigate?: AlertAutoMitigate;
  /** Evaluation of metric on a particular column */
  dimension?: string;
  /** Defines the alert query parameters. */
  alertQueryParameters?: AlertQueryParameter[];
}

/** A DB2 job configurations associated with SAP monitor. */
export interface Db2JobConfiguration extends ProxyResource {
  /** State of provisioning of the DB2 job configurations. */
  provisioningState?: WorkloadMonitorProvisioningState;
  /** Gets or sets the name of the DB2 job configurations. */
  metricName?: string;
  /** Gets or sets the list of dimensions for the DB2 job configurations. */
  metricDimensions?: string[];
  /** Gets or sets the name of the custom log table used to store data in log Analytics. */
  customLogTable?: string;
  /** Gets or sets the value of the default frequency of execution for the job. */
  defaultFrequencyInSecs?: number;
  /** Gets or sets the type for the job configuration. */
  typePropertiesType?: JobConfigurationType;
  /** Gets or sets the list of Configuration parameters. */
  parameters?: ConfigurationParameter[];
  /** Gets or sets the list of actions */
  actions?: ActionsParameter[];
}

/** configuration associated with SAP Landscape Monitor Dashboard. */
export interface SapLandscapeMonitor extends ProxyResource {
  /**
   * State of provisioning of the SAP monitor.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: SapLandscapeMonitorProvisioningState;
  /** Gets or sets the SID groupings by landscape and Environment. */
  grouping?: SapLandscapeMonitorPropertiesGrouping;
  /** Gets or sets the list Top Metric Thresholds for SAP Landscape Monitor Dashboard */
  topMetricsThresholds?: SapLandscapeMonitorMetricThresholds[];
}

/** Defines headers for Monitors_delete operation. */
export interface MonitorsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The header contains the URL where the status of the long running operation can be checked. */
  azureAsyncOperation?: string;
}

/** Defines headers for Monitors_update operation. */
export interface MonitorsUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The header contains the URL where the status of the long running operation can be checked. */
  azureAsyncOperation?: string;
}

/** Defines headers for ProviderInstances_delete operation. */
export interface ProviderInstancesDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The header contains the URL where the status of the long running operation can be checked. */
  azureAsyncOperation?: string;
}

/** Defines headers for Alerts_delete operation. */
export interface AlertsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The header contains the URL where the status of the long running operation can be checked. */
  azureAsyncOperation?: string;
}

/** Defines headers for Db2JobConfigurations_delete operation. */
export interface Db2JobConfigurationsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The header contains the URL where the status of the long running operation can be checked. */
  azureAsyncOperation?: string;
}

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **UserAssigned** \
 * **SystemAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link WorkloadMonitorProvisioningState} that the service accepts. */
export enum KnownWorkloadMonitorProvisioningState {
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Failed */
  Failed = "Failed",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Deleting */
  Deleting = "Deleting",
  /** Migrating */
  Migrating = "Migrating",
  /** Canceled */
  Canceled = "Canceled",
}

/**
 * Defines values for WorkloadMonitorProvisioningState. \
 * {@link KnownWorkloadMonitorProvisioningState} can be used interchangeably with WorkloadMonitorProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Updating** \
 * **Failed** \
 * **Succeeded** \
 * **Deleting** \
 * **Migrating** \
 * **Canceled**
 */
export type WorkloadMonitorProvisioningState = string;

/** Known values of {@link RoutingPreference} that the service accepts. */
export enum KnownRoutingPreference {
  /** Default */
  Default = "Default",
  /** RouteAll */
  RouteAll = "RouteAll",
}

/**
 * Defines values for RoutingPreference. \
 * {@link KnownRoutingPreference} can be used interchangeably with RoutingPreference,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Default** \
 * **RouteAll**
 */
export type RoutingPreference = string;

/** Known values of {@link AppServicePlanTier} that the service accepts. */
export enum KnownAppServicePlanTier {
  /** Elastic Premium plan */
  ElasticPremium = "ElasticPremium",
  /** Dedicated Premium v3 plan */
  PremiumV3 = "PremiumV3",
}

/**
 * Defines values for AppServicePlanTier. \
 * {@link KnownAppServicePlanTier} can be used interchangeably with AppServicePlanTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ElasticPremium**: Elastic Premium plan \
 * **PremiumV3**: Dedicated Premium v3 plan
 */
export type AppServicePlanTier = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link WorkloadProviderInstanceHealthState} that the service accepts. */
export enum KnownWorkloadProviderInstanceHealthState {
  /** Healthy */
  Healthy = "Healthy",
  /** Degraded */
  Degraded = "Degraded",
  /** Unavailable */
  Unavailable = "Unavailable",
  /** Unknown */
  Unknown = "Unknown",
}

/**
 * Defines values for WorkloadProviderInstanceHealthState. \
 * {@link KnownWorkloadProviderInstanceHealthState} can be used interchangeably with WorkloadProviderInstanceHealthState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Healthy** \
 * **Degraded** \
 * **Unavailable** \
 * **Unknown**
 */
export type WorkloadProviderInstanceHealthState = string;

/** Known values of {@link AlertTemplateProvisioningState} that the service accepts. */
export enum KnownAlertTemplateProvisioningState {
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Failed */
  Failed = "Failed",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Deleting */
  Deleting = "Deleting",
  /** Migrating */
  Migrating = "Migrating",
  /** Canceled */
  Canceled = "Canceled",
}

/**
 * Defines values for AlertTemplateProvisioningState. \
 * {@link KnownAlertTemplateProvisioningState} can be used interchangeably with AlertTemplateProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Updating** \
 * **Failed** \
 * **Succeeded** \
 * **Deleting** \
 * **Migrating** \
 * **Canceled**
 */
export type AlertTemplateProvisioningState = string;

/** Known values of {@link ConditionalOperator} that the service accepts. */
export enum KnownConditionalOperator {
  /** LessThan */
  LessThan = "LessThan",
  /** GreaterThan */
  GreaterThan = "GreaterThan",
  /** Equal */
  Equal = "Equal",
  /** GreaterThanOrEqual */
  GreaterThanOrEqual = "GreaterThanOrEqual",
  /** LessThanOrEqual */
  LessThanOrEqual = "LessThanOrEqual",
}

/**
 * Defines values for ConditionalOperator. \
 * {@link KnownConditionalOperator} can be used interchangeably with ConditionalOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LessThan** \
 * **GreaterThan** \
 * **Equal** \
 * **GreaterThanOrEqual** \
 * **LessThanOrEqual**
 */
export type ConditionalOperator = string;

/** Known values of {@link DefaultThresholdInputOption} that the service accepts. */
export enum KnownDefaultThresholdInputOption {
  /** Required */
  Required = "Required",
  /** NotRequired */
  NotRequired = "NotRequired",
  /** Optional */
  Optional = "Optional",
}

/**
 * Defines values for DefaultThresholdInputOption. \
 * {@link KnownDefaultThresholdInputOption} can be used interchangeably with DefaultThresholdInputOption,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Required** \
 * **NotRequired** \
 * **Optional**
 */
export type DefaultThresholdInputOption = string;

/** Known values of {@link AlertTemplateThresholdOperatorMetricMeasurement} that the service accepts. */
export enum KnownAlertTemplateThresholdOperatorMetricMeasurement {
  /** LessThan */
  LessThan = "LessThan",
  /** GreaterThan */
  GreaterThan = "GreaterThan",
  /** Equal */
  Equal = "Equal",
  /** GreaterThanOrEqual */
  GreaterThanOrEqual = "GreaterThanOrEqual",
  /** LessThanOrEqual */
  LessThanOrEqual = "LessThanOrEqual",
}

/**
 * Defines values for AlertTemplateThresholdOperatorMetricMeasurement. \
 * {@link KnownAlertTemplateThresholdOperatorMetricMeasurement} can be used interchangeably with AlertTemplateThresholdOperatorMetricMeasurement,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LessThan** \
 * **GreaterThan** \
 * **Equal** \
 * **GreaterThanOrEqual** \
 * **LessThanOrEqual**
 */
export type AlertTemplateThresholdOperatorMetricMeasurement = string;

/** Known values of {@link AlertTemplateMetricTriggerType} that the service accepts. */
export enum KnownAlertTemplateMetricTriggerType {
  /** Consecutive */
  Consecutive = "Consecutive",
  /** Total */
  Total = "Total",
}

/**
 * Defines values for AlertTemplateMetricTriggerType. \
 * {@link KnownAlertTemplateMetricTriggerType} can be used interchangeably with AlertTemplateMetricTriggerType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Consecutive** \
 * **Total**
 */
export type AlertTemplateMetricTriggerType = string;

/** Known values of {@link AlertTemplateParameterType} that the service accepts. */
export enum KnownAlertTemplateParameterType {
  /** LogAnalyticsQuery */
  LogAnalyticsQuery = "LogAnalyticsQuery",
  /** ProviderProperty */
  ProviderProperty = "ProviderProperty",
  /** CustomInput */
  CustomInput = "CustomInput",
}

/**
 * Defines values for AlertTemplateParameterType. \
 * {@link KnownAlertTemplateParameterType} can be used interchangeably with AlertTemplateParameterType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **LogAnalyticsQuery** \
 * **ProviderProperty** \
 * **CustomInput**
 */
export type AlertTemplateParameterType = string;

/** Known values of {@link AlertTemplateSelectionMode} that the service accepts. */
export enum KnownAlertTemplateSelectionMode {
  /** Single */
  Single = "Single",
  /** Multiple */
  Multiple = "Multiple",
}

/**
 * Defines values for AlertTemplateSelectionMode. \
 * {@link KnownAlertTemplateSelectionMode} can be used interchangeably with AlertTemplateSelectionMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Single** \
 * **Multiple**
 */
export type AlertTemplateSelectionMode = string;

/** Known values of {@link AlertProvisioningState} that the service accepts. */
export enum KnownAlertProvisioningState {
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Failed */
  Failed = "Failed",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Deleting */
  Deleting = "Deleting",
  /** Migrating */
  Migrating = "Migrating",
  /** Canceled */
  Canceled = "Canceled",
}

/**
 * Defines values for AlertProvisioningState. \
 * {@link KnownAlertProvisioningState} can be used interchangeably with AlertProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Updating** \
 * **Failed** \
 * **Succeeded** \
 * **Deleting** \
 * **Migrating** \
 * **Canceled**
 */
export type AlertProvisioningState = string;

/** Known values of {@link AlertRuleStatus} that the service accepts. */
export enum KnownAlertRuleStatus {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled",
}

/**
 * Defines values for AlertRuleStatus. \
 * {@link KnownAlertRuleStatus} can be used interchangeably with AlertRuleStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type AlertRuleStatus = string;

/** Known values of {@link AlertAutoMitigate} that the service accepts. */
export enum KnownAlertAutoMitigate {
  /** Enable */
  Enable = "Enable",
  /** Disable */
  Disable = "Disable",
}

/**
 * Defines values for AlertAutoMitigate. \
 * {@link KnownAlertAutoMitigate} can be used interchangeably with AlertAutoMitigate,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enable** \
 * **Disable**
 */
export type AlertAutoMitigate = string;

/** Known values of {@link JobConfigurationType} that the service accepts. */
export enum KnownJobConfigurationType {
  /** BuiltIn */
  BuiltIn = "BuiltIn",
  /** Custom */
  Custom = "Custom",
}

/**
 * Defines values for JobConfigurationType. \
 * {@link KnownJobConfigurationType} can be used interchangeably with JobConfigurationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **BuiltIn** \
 * **Custom**
 */
export type JobConfigurationType = string;

/** Known values of {@link SapLandscapeMonitorProvisioningState} that the service accepts. */
export enum KnownSapLandscapeMonitorProvisioningState {
  /** Accepted */
  Accepted = "Accepted",
  /** Created */
  Created = "Created",
  /** Failed */
  Failed = "Failed",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Canceled */
  Canceled = "Canceled",
}

/**
 * Defines values for SapLandscapeMonitorProvisioningState. \
 * {@link KnownSapLandscapeMonitorProvisioningState} can be used interchangeably with SapLandscapeMonitorProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Created** \
 * **Failed** \
 * **Succeeded** \
 * **Canceled**
 */
export type SapLandscapeMonitorProvisioningState = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link SslPreference} that the service accepts. */
export enum KnownSslPreference {
  /** Disabled */
  Disabled = "Disabled",
  /** RootCertificate */
  RootCertificate = "RootCertificate",
  /** ServerCertificate */
  ServerCertificate = "ServerCertificate",
}

/**
 * Defines values for SslPreference. \
 * {@link KnownSslPreference} can be used interchangeably with SslPreference,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **RootCertificate** \
 * **ServerCertificate**
 */
export type SslPreference = string;

/** Optional parameters. */
export interface MonitorsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type MonitorsListResponse = MonitorListResult;

/** Optional parameters. */
export interface MonitorsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type MonitorsListByResourceGroupResponse = MonitorListResult;

/** Optional parameters. */
export interface MonitorsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MonitorsGetResponse = Monitor;

/** Optional parameters. */
export interface MonitorsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type MonitorsCreateResponse = Monitor;

/** Optional parameters. */
export interface MonitorsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type MonitorsDeleteResponse = MonitorsDeleteHeaders;

/** Optional parameters. */
export interface MonitorsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type MonitorsUpdateResponse = Monitor;

/** Optional parameters. */
export interface MonitorsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type MonitorsListNextResponse = MonitorListResult;

/** Optional parameters. */
export interface MonitorsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type MonitorsListByResourceGroupNextResponse = MonitorListResult;

/** Optional parameters. */
export interface ProviderInstancesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ProviderInstancesListResponse = ProviderInstanceListResult;

/** Optional parameters. */
export interface ProviderInstancesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProviderInstancesGetResponse = ProviderInstance;

/** Optional parameters. */
export interface ProviderInstancesCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ProviderInstancesCreateResponse = ProviderInstance;

/** Optional parameters. */
export interface ProviderInstancesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ProviderInstancesDeleteResponse = ProviderInstancesDeleteHeaders;

/** Optional parameters. */
export interface ProviderInstancesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ProviderInstancesListNextResponse = ProviderInstanceListResult;

/** Optional parameters. */
export interface AlertTemplatesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AlertTemplatesListResponse = AlertTemplatesListResult;

/** Optional parameters. */
export interface AlertTemplatesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AlertTemplatesGetResponse = AlertTemplate;

/** Optional parameters. */
export interface AlertTemplatesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type AlertTemplatesListNextResponse = AlertTemplatesListResult;

/** Optional parameters. */
export interface AlertsListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AlertsListResponse = AlertsListResult;

/** Optional parameters. */
export interface AlertsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AlertsGetResponse = Alert;

/** Optional parameters. */
export interface AlertsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type AlertsCreateResponse = Alert;

/** Optional parameters. */
export interface AlertsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type AlertsDeleteResponse = AlertsDeleteHeaders;

/** Optional parameters. */
export interface AlertsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type AlertsListNextResponse = AlertsListResult;

/** Optional parameters. */
export interface Db2JobConfigurationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type Db2JobConfigurationsListResponse = Db2JobConfigurationsListResult;

/** Optional parameters. */
export interface Db2JobConfigurationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type Db2JobConfigurationsGetResponse = Db2JobConfiguration;

/** Optional parameters. */
export interface Db2JobConfigurationsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type Db2JobConfigurationsCreateResponse = Db2JobConfiguration;

/** Optional parameters. */
export interface Db2JobConfigurationsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type Db2JobConfigurationsDeleteResponse =
  Db2JobConfigurationsDeleteHeaders;

/** Optional parameters. */
export interface Db2JobConfigurationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type Db2JobConfigurationsListNextResponse =
  Db2JobConfigurationsListResult;

/** Optional parameters. */
export interface SapLandscapeMonitorGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SapLandscapeMonitorGetResponse = SapLandscapeMonitor;

/** Optional parameters. */
export interface SapLandscapeMonitorCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type SapLandscapeMonitorCreateResponse = SapLandscapeMonitor;

/** Optional parameters. */
export interface SapLandscapeMonitorDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface SapLandscapeMonitorUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type SapLandscapeMonitorUpdateResponse = SapLandscapeMonitor;

/** Optional parameters. */
export interface SapLandscapeMonitorListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SapLandscapeMonitorListResponse = SapLandscapeMonitorListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface WorkloadsClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** The provider type for filtering alert templates. */
  providerType?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
