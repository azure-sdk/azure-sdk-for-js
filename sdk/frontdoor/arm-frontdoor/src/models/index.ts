/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Defines a list of WebApplicationFirewallPolicies. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the next set of results. */
export interface WebApplicationFirewallPolicyList {
  /**
   * List of WebApplicationFirewallPolicies within a resource group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: WebApplicationFirewallPolicy[];
  /** URL to get the next set of WebApplicationFirewallPolicy objects if there are any. */
  nextLink?: string;
}

/** Defines top-level WebApplicationFirewallPolicy configuration settings. */
export interface PolicySettings {
  /** Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified. */
  enabledState?: PolicyEnabledState;
  /** Describes if it is in detection mode or prevention mode at policy level. */
  mode?: PolicyMode;
  /** If action type is redirect, this field represents redirect URL for the client. */
  redirectUrl?: string;
  /** If the action type is block, customer can override the response status code. */
  customBlockResponseStatusCode?: number;
  /** If the action type is block, customer can override the response body. The body must be specified in base64 encoding. */
  customBlockResponseBody?: string;
  /** Describes if policy managed rules will inspect the request body content. */
  requestBodyCheck?: PolicyRequestBodyCheck;
}

/** Defines contents of custom rules */
export interface CustomRuleList {
  /** List of rules */
  rules?: CustomRule[];
}

/** Defines contents of a web application rule */
export interface CustomRule {
  /** Describes the name of the rule. */
  name?: string;
  /** Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. */
  priority: number;
  /** Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified. */
  enabledState?: CustomRuleEnabledState;
  /** Describes type of rule. */
  ruleType: RuleType;
  /** Time window for resetting the rate limit count. Default is 1 minute. */
  rateLimitDurationInMinutes?: number;
  /** Number of allowed requests per client within the time window. */
  rateLimitThreshold?: number;
  /** List of match conditions. */
  matchConditions: MatchCondition[];
  /** Describes what action to be applied when rule matches. */
  action: ActionType;
}

/** Define a match condition. */
export interface MatchCondition {
  /** Request variable to compare with. */
  matchVariable: MatchVariable;
  /** Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null. */
  selector?: string;
  /** Comparison type to use for matching with the variable value. */
  operator: Operator;
  /** Describes if the result of this condition should be negated. */
  negateCondition?: boolean;
  /** List of possible match values. */
  matchValue: string[];
  /** List of transforms. */
  transforms?: TransformType[];
}

/** Defines the list of managed rule sets for the policy. */
export interface ManagedRuleSetList {
  /** List of rule sets. */
  managedRuleSets?: ManagedRuleSet[];
}

/** Defines a managed rule set. */
export interface ManagedRuleSet {
  /** Defines the rule set type to use. */
  ruleSetType: string;
  /** Defines the version of the rule set to use. */
  ruleSetVersion: string;
  /** Defines the rule set action. */
  ruleSetAction?: ManagedRuleSetActionType;
  /** Describes the exclusions that are applied to all rules in the set. */
  exclusions?: ManagedRuleExclusion[];
  /** Defines the rule group overrides to apply to the rule set. */
  ruleGroupOverrides?: ManagedRuleGroupOverride[];
}

/** Exclude variables from managed rule evaluation. */
export interface ManagedRuleExclusion {
  /** The variable type to be excluded. */
  matchVariable: ManagedRuleExclusionMatchVariable;
  /** Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. */
  selectorMatchOperator: ManagedRuleExclusionSelectorMatchOperator;
  /** Selector value for which elements in the collection this exclusion applies to. */
  selector: string;
}

/** Defines a managed rule group override setting. */
export interface ManagedRuleGroupOverride {
  /** Describes the managed rule group to override. */
  ruleGroupName: string;
  /** Describes the exclusions that are applied to all rules in the group. */
  exclusions?: ManagedRuleExclusion[];
  /** List of rules that will be disabled. If none specified, all rules in the group will be disabled. */
  rules?: ManagedRuleOverride[];
}

/** Defines a managed rule group override setting. */
export interface ManagedRuleOverride {
  /** Identifier for the managed rule. */
  ruleId: string;
  /** Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified. */
  enabledState?: ManagedRuleEnabledState;
  /** Describes the override action to be applied when rule matches. */
  action?: ActionType;
  /** Describes the exclusions that are applied to this specific rule. */
  exclusions?: ManagedRuleExclusion[];
}

/** Defines the Resource ID for a Frontend Endpoint. */
export interface FrontendEndpointLink {
  /** Resource ID. */
  id?: string;
}

/** Defines the Resource ID for a Routing Rule. */
export interface RoutingRuleLink {
  /** Resource ID. */
  id?: string;
}

/** Defines the Resource ID for a Security Policy. */
export interface SecurityPolicyLink {
  /** Resource ID. */
  id?: string;
}

/** The pricing tier of the web application firewall policy. */
export interface Sku {
  /** Name of the pricing tier. */
  name?: SkuName;
}

/** Common resource representation. */
export interface Resource {
  /**
   * Resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Resource location. */
  location?: string;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Error response indicates Front Door service is not able to process the incoming request. The reason is provided in the error message. */
export interface ErrorResponse {
  /**
   * Error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** Tags object for patch operations. */
export interface TagsObject {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** List of managed rule set definitions available for use in a policy. */
export interface ManagedRuleSetDefinitionList {
  /**
   * List of managed rule set definitions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: ManagedRuleSetDefinition[];
  /** URL to retrieve next set of managed rule set definitions. */
  nextLink?: string;
}

/** Describes a managed rule group. */
export interface ManagedRuleGroupDefinition {
  /**
   * Name of the managed rule group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleGroupName?: string;
  /**
   * Description of the managed rule group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * List of rules within the managed rule group.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly rules?: ManagedRuleDefinition[];
}

/** Describes a managed rule definition. */
export interface ManagedRuleDefinition {
  /**
   * Identifier for the managed rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleId?: string;
  /**
   * Describes the default state for the managed rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly defaultState?: ManagedRuleEnabledState;
  /**
   * Describes the default action to be applied when the managed rule matches.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly defaultAction?: ActionType;
  /**
   * Describes the functionality of the managed rule.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

export interface ErrorDetails {
  code?: string;
  target?: string;
  message?: string;
}

export interface ErrorModel {
  code?: string;
  message?: string;
  target?: string;
  details?: ErrorDetails[];
  innerError?: string;
}

/** The response body contains the status of the specified asynchronous operation, indicating whether it has succeeded, is in progress, or has failed. Note that this status is distinct from the HTTP status code returned for the Get Operation Status operation itself. If the asynchronous operation succeeded, the response body includes the HTTP status code for the successful request. If the asynchronous operation failed, the response body includes the HTTP status code for the failed request and error information regarding the failure. */
export interface AzureAsyncOperationResult {
  /** Status of the Azure async operation. */
  status?: NetworkOperationStatus;
  error?: ErrorModel;
}

/** Reference to another subresource. */
export interface SubResource {
  /** Resource ID. */
  id?: string;
}

/** Defines web application firewall policy. */
export type WebApplicationFirewallPolicy = Resource & {
  /** Gets a unique read-only string that changes whenever the resource is updated. */
  etag?: string;
  /** The pricing tier of web application firewall policy. Defaults to Classic_AzureFrontDoor if not specified. */
  sku?: Sku;
  /** Describes settings for the policy. */
  policySettings?: PolicySettings;
  /** Describes custom rules inside the policy. */
  customRules?: CustomRuleList;
  /** Describes managed rules inside the policy. */
  managedRules?: ManagedRuleSetList;
  /**
   * Describes Frontend Endpoints associated with this Web Application Firewall policy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly frontendEndpointLinks?: FrontendEndpointLink[];
  /**
   * Describes Routing Rules associated with this Web Application Firewall policy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly routingRuleLinks?: RoutingRuleLink[];
  /**
   * Describes Security Policy associated with this Web Application Firewall policy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly securityPolicyLinks?: SecurityPolicyLink[];
  /**
   * Provisioning state of the policy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * Resource status of the policy.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceState?: PolicyResourceState;
};

/** Describes the a managed rule set definition. */
export type ManagedRuleSetDefinition = Resource & {
  /**
   * Provisioning state of the managed rule set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
  /**
   * Id of the managed rule set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleSetId?: string;
  /**
   * Type of the managed rule set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleSetType?: string;
  /**
   * Version of the managed rule set type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleSetVersion?: string;
  /**
   * Rule groups of the managed rule set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly ruleGroups?: ManagedRuleGroupDefinition[];
};

/** Known values of {@link PolicyEnabledState} that the service accepts. */
export enum KnownPolicyEnabledState {
  Disabled = "Disabled",
  Enabled = "Enabled"
}

/**
 * Defines values for PolicyEnabledState. \
 * {@link KnownPolicyEnabledState} can be used interchangeably with PolicyEnabledState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type PolicyEnabledState = string;

/** Known values of {@link PolicyMode} that the service accepts. */
export enum KnownPolicyMode {
  Prevention = "Prevention",
  Detection = "Detection"
}

/**
 * Defines values for PolicyMode. \
 * {@link KnownPolicyMode} can be used interchangeably with PolicyMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Prevention** \
 * **Detection**
 */
export type PolicyMode = string;

/** Known values of {@link PolicyRequestBodyCheck} that the service accepts. */
export enum KnownPolicyRequestBodyCheck {
  Disabled = "Disabled",
  Enabled = "Enabled"
}

/**
 * Defines values for PolicyRequestBodyCheck. \
 * {@link KnownPolicyRequestBodyCheck} can be used interchangeably with PolicyRequestBodyCheck,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type PolicyRequestBodyCheck = string;

/** Known values of {@link CustomRuleEnabledState} that the service accepts. */
export enum KnownCustomRuleEnabledState {
  Disabled = "Disabled",
  Enabled = "Enabled"
}

/**
 * Defines values for CustomRuleEnabledState. \
 * {@link KnownCustomRuleEnabledState} can be used interchangeably with CustomRuleEnabledState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type CustomRuleEnabledState = string;

/** Known values of {@link RuleType} that the service accepts. */
export enum KnownRuleType {
  MatchRule = "MatchRule",
  RateLimitRule = "RateLimitRule"
}

/**
 * Defines values for RuleType. \
 * {@link KnownRuleType} can be used interchangeably with RuleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MatchRule** \
 * **RateLimitRule**
 */
export type RuleType = string;

/** Known values of {@link MatchVariable} that the service accepts. */
export enum KnownMatchVariable {
  RemoteAddr = "RemoteAddr",
  RequestMethod = "RequestMethod",
  QueryString = "QueryString",
  PostArgs = "PostArgs",
  RequestUri = "RequestUri",
  RequestHeader = "RequestHeader",
  RequestBody = "RequestBody",
  Cookies = "Cookies",
  SocketAddr = "SocketAddr"
}

/**
 * Defines values for MatchVariable. \
 * {@link KnownMatchVariable} can be used interchangeably with MatchVariable,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RemoteAddr** \
 * **RequestMethod** \
 * **QueryString** \
 * **PostArgs** \
 * **RequestUri** \
 * **RequestHeader** \
 * **RequestBody** \
 * **Cookies** \
 * **SocketAddr**
 */
export type MatchVariable = string;

/** Known values of {@link Operator} that the service accepts. */
export enum KnownOperator {
  Any = "Any",
  IPMatch = "IPMatch",
  GeoMatch = "GeoMatch",
  Equal = "Equal",
  Contains = "Contains",
  LessThan = "LessThan",
  GreaterThan = "GreaterThan",
  LessThanOrEqual = "LessThanOrEqual",
  GreaterThanOrEqual = "GreaterThanOrEqual",
  BeginsWith = "BeginsWith",
  EndsWith = "EndsWith",
  RegEx = "RegEx"
}

/**
 * Defines values for Operator. \
 * {@link KnownOperator} can be used interchangeably with Operator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Any** \
 * **IPMatch** \
 * **GeoMatch** \
 * **Equal** \
 * **Contains** \
 * **LessThan** \
 * **GreaterThan** \
 * **LessThanOrEqual** \
 * **GreaterThanOrEqual** \
 * **BeginsWith** \
 * **EndsWith** \
 * **RegEx**
 */
export type Operator = string;

/** Known values of {@link TransformType} that the service accepts. */
export enum KnownTransformType {
  Lowercase = "Lowercase",
  Uppercase = "Uppercase",
  Trim = "Trim",
  UrlDecode = "UrlDecode",
  UrlEncode = "UrlEncode",
  RemoveNulls = "RemoveNulls"
}

/**
 * Defines values for TransformType. \
 * {@link KnownTransformType} can be used interchangeably with TransformType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Lowercase** \
 * **Uppercase** \
 * **Trim** \
 * **UrlDecode** \
 * **UrlEncode** \
 * **RemoveNulls**
 */
export type TransformType = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  Allow = "Allow",
  Block = "Block",
  Log = "Log",
  Redirect = "Redirect"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allow** \
 * **Block** \
 * **Log** \
 * **Redirect**
 */
export type ActionType = string;

/** Known values of {@link ManagedRuleSetActionType} that the service accepts. */
export enum KnownManagedRuleSetActionType {
  Block = "Block",
  Log = "Log",
  Redirect = "Redirect"
}

/**
 * Defines values for ManagedRuleSetActionType. \
 * {@link KnownManagedRuleSetActionType} can be used interchangeably with ManagedRuleSetActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Block** \
 * **Log** \
 * **Redirect**
 */
export type ManagedRuleSetActionType = string;

/** Known values of {@link ManagedRuleExclusionMatchVariable} that the service accepts. */
export enum KnownManagedRuleExclusionMatchVariable {
  RequestHeaderNames = "RequestHeaderNames",
  RequestCookieNames = "RequestCookieNames",
  QueryStringArgNames = "QueryStringArgNames",
  RequestBodyPostArgNames = "RequestBodyPostArgNames",
  RequestBodyJsonArgNames = "RequestBodyJsonArgNames"
}

/**
 * Defines values for ManagedRuleExclusionMatchVariable. \
 * {@link KnownManagedRuleExclusionMatchVariable} can be used interchangeably with ManagedRuleExclusionMatchVariable,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **RequestHeaderNames** \
 * **RequestCookieNames** \
 * **QueryStringArgNames** \
 * **RequestBodyPostArgNames** \
 * **RequestBodyJsonArgNames**
 */
export type ManagedRuleExclusionMatchVariable = string;

/** Known values of {@link ManagedRuleExclusionSelectorMatchOperator} that the service accepts. */
export enum KnownManagedRuleExclusionSelectorMatchOperator {
  Equals = "Equals",
  Contains = "Contains",
  StartsWith = "StartsWith",
  EndsWith = "EndsWith",
  EqualsAny = "EqualsAny"
}

/**
 * Defines values for ManagedRuleExclusionSelectorMatchOperator. \
 * {@link KnownManagedRuleExclusionSelectorMatchOperator} can be used interchangeably with ManagedRuleExclusionSelectorMatchOperator,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Equals** \
 * **Contains** \
 * **StartsWith** \
 * **EndsWith** \
 * **EqualsAny**
 */
export type ManagedRuleExclusionSelectorMatchOperator = string;

/** Known values of {@link ManagedRuleEnabledState} that the service accepts. */
export enum KnownManagedRuleEnabledState {
  Disabled = "Disabled",
  Enabled = "Enabled"
}

/**
 * Defines values for ManagedRuleEnabledState. \
 * {@link KnownManagedRuleEnabledState} can be used interchangeably with ManagedRuleEnabledState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Disabled** \
 * **Enabled**
 */
export type ManagedRuleEnabledState = string;

/** Known values of {@link PolicyResourceState} that the service accepts. */
export enum KnownPolicyResourceState {
  Creating = "Creating",
  Enabling = "Enabling",
  Enabled = "Enabled",
  Disabling = "Disabling",
  Disabled = "Disabled",
  Deleting = "Deleting"
}

/**
 * Defines values for PolicyResourceState. \
 * {@link KnownPolicyResourceState} can be used interchangeably with PolicyResourceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Enabling** \
 * **Enabled** \
 * **Disabling** \
 * **Disabled** \
 * **Deleting**
 */
export type PolicyResourceState = string;

/** Known values of {@link SkuName} that the service accepts. */
export enum KnownSkuName {
  ClassicAzureFrontDoor = "Classic_AzureFrontDoor",
  StandardAzureFrontDoor = "Standard_AzureFrontDoor",
  PremiumAzureFrontDoor = "Premium_AzureFrontDoor"
}

/**
 * Defines values for SkuName. \
 * {@link KnownSkuName} can be used interchangeably with SkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Classic_AzureFrontDoor** \
 * **Standard_AzureFrontDoor** \
 * **Premium_AzureFrontDoor**
 */
export type SkuName = string;

/** Known values of {@link NetworkOperationStatus} that the service accepts. */
export enum KnownNetworkOperationStatus {
  InProgress = "InProgress",
  Succeeded = "Succeeded",
  Failed = "Failed"
}

/**
 * Defines values for NetworkOperationStatus. \
 * {@link KnownNetworkOperationStatus} can be used interchangeably with NetworkOperationStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **InProgress** \
 * **Succeeded** \
 * **Failed**
 */
export type NetworkOperationStatus = string;

/** Optional parameters. */
export interface PoliciesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PoliciesListResponse = WebApplicationFirewallPolicyList;

/** Optional parameters. */
export interface PoliciesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PoliciesGetResponse = WebApplicationFirewallPolicy;

/** Optional parameters. */
export interface PoliciesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PoliciesCreateOrUpdateResponse = WebApplicationFirewallPolicy;

/** Optional parameters. */
export interface PoliciesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type PoliciesUpdateResponse = WebApplicationFirewallPolicy;

/** Optional parameters. */
export interface PoliciesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PoliciesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type PoliciesListNextResponse = WebApplicationFirewallPolicyList;

/** Optional parameters. */
export interface ManagedRuleSetsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ManagedRuleSetsListResponse = ManagedRuleSetDefinitionList;

/** Optional parameters. */
export interface ManagedRuleSetsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ManagedRuleSetsListNextResponse = ManagedRuleSetDefinitionList;

/** Optional parameters. */
export interface FrontDoorManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
