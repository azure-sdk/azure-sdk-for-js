/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const BackupManagementUsageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BackupManagementUsageList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BackupManagementUsage",
            },
          },
        },
      },
    },
  },
};

export const BackupManagementUsage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BackupManagementUsage",
    modelProperties: {
      unit: {
        serializedName: "unit",
        type: {
          name: "String",
        },
      },
      quotaPeriod: {
        serializedName: "quotaPeriod",
        type: {
          name: "String",
        },
      },
      nextResetTime: {
        serializedName: "nextResetTime",
        type: {
          name: "DateTime",
        },
      },
      currentValue: {
        serializedName: "currentValue",
        type: {
          name: "Number",
        },
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Number",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "NameInfo",
        },
      },
    },
  },
};

export const NameInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NameInfo",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
      localizedValue: {
        serializedName: "localizedValue",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NewErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NewErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "NewErrorResponseError",
        },
      },
    },
  },
};

export const NewErrorResponseError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NewErrorResponseError",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NewErrorResponse",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const AADProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AADProperties",
    modelProperties: {
      servicePrincipalClientId: {
        serializedName: "servicePrincipalClientId",
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String",
        },
      },
      authority: {
        serializedName: "authority",
        type: {
          name: "String",
        },
      },
      audience: {
        serializedName: "audience",
        type: {
          name: "String",
        },
      },
      servicePrincipalObjectId: {
        serializedName: "servicePrincipalObjectId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CrossRegionRestoreRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrossRegionRestoreRequest",
    modelProperties: {
      crossRegionRestoreAccessDetails: {
        serializedName: "crossRegionRestoreAccessDetails",
        type: {
          name: "Composite",
          className: "CrrAccessToken",
        },
      },
      restoreRequest: {
        serializedName: "restoreRequest",
        type: {
          name: "Composite",
          className: "RestoreRequest",
        },
      },
    },
  },
};

export const CrrAccessToken: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrrAccessToken",
    uberParent: "CrrAccessToken",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType",
    },
    modelProperties: {
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String",
        },
      },
      accessTokenString: {
        serializedName: "accessTokenString",
        type: {
          name: "String",
        },
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String",
        },
      },
      resourceGroupName: {
        serializedName: "resourceGroupName",
        type: {
          name: "String",
        },
      },
      resourceName: {
        serializedName: "resourceName",
        type: {
          name: "String",
        },
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String",
        },
      },
      protectionContainerId: {
        serializedName: "protectionContainerId",
        type: {
          name: "Number",
        },
      },
      recoveryPointId: {
        serializedName: "recoveryPointId",
        type: {
          name: "String",
        },
      },
      recoveryPointTime: {
        serializedName: "recoveryPointTime",
        type: {
          name: "String",
        },
      },
      containerName: {
        serializedName: "containerName",
        type: {
          name: "String",
        },
      },
      containerType: {
        serializedName: "containerType",
        type: {
          name: "String",
        },
      },
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String",
        },
      },
      datasourceType: {
        serializedName: "datasourceType",
        type: {
          name: "String",
        },
      },
      datasourceName: {
        serializedName: "datasourceName",
        type: {
          name: "String",
        },
      },
      datasourceId: {
        serializedName: "datasourceId",
        type: {
          name: "String",
        },
      },
      datasourceContainerName: {
        serializedName: "datasourceContainerName",
        type: {
          name: "String",
        },
      },
      coordinatorServiceStampId: {
        serializedName: "coordinatorServiceStampId",
        type: {
          name: "String",
        },
      },
      coordinatorServiceStampUri: {
        serializedName: "coordinatorServiceStampUri",
        type: {
          name: "String",
        },
      },
      protectionServiceStampId: {
        serializedName: "protectionServiceStampId",
        type: {
          name: "String",
        },
      },
      protectionServiceStampUri: {
        serializedName: "protectionServiceStampUri",
        type: {
          name: "String",
        },
      },
      tokenExtendedInformation: {
        serializedName: "tokenExtendedInformation",
        type: {
          name: "String",
        },
      },
      rpTierInformation: {
        serializedName: "rpTierInformation",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      rpOriginalSAOption: {
        serializedName: "rpOriginalSAOption",
        type: {
          name: "Boolean",
        },
      },
      rpIsManagedVirtualMachine: {
        serializedName: "rpIsManagedVirtualMachine",
        type: {
          name: "Boolean",
        },
      },
      rpVMSizeDescription: {
        serializedName: "rpVMSizeDescription",
        type: {
          name: "String",
        },
      },
      bMSActiveRegion: {
        serializedName: "bMSActiveRegion",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RestoreRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestoreRequest",
    uberParent: "RestoreRequest",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType",
    },
    modelProperties: {
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CrrJobRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrrJobRequest",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String",
        },
      },
      jobName: {
        serializedName: "jobName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Job: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Job",
    uberParent: "Job",
    polymorphicDiscriminator: {
      serializedName: "jobType",
      clientName: "jobType",
    },
    modelProperties: {
      entityFriendlyName: {
        serializedName: "entityFriendlyName",
        type: {
          name: "String",
        },
      },
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime",
        },
      },
      activityId: {
        serializedName: "activityId",
        type: {
          name: "String",
        },
      },
      jobType: {
        serializedName: "jobType",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationStatus",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime",
        },
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "OperationStatusError",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "OperationStatusExtendedInfo",
        },
      },
    },
  },
};

export const OperationStatusError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationStatusError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationStatusExtendedInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationStatusExtendedInfo",
    uberParent: "OperationStatusExtendedInfo",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType",
    },
    modelProperties: {
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const BackupResourceConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BackupResourceConfig",
    modelProperties: {
      storageModelType: {
        serializedName: "storageModelType",
        type: {
          name: "String",
        },
      },
      storageType: {
        serializedName: "storageType",
        type: {
          name: "String",
        },
      },
      storageTypeState: {
        serializedName: "storageTypeState",
        type: {
          name: "String",
        },
      },
      crossRegionRestoreFlag: {
        serializedName: "crossRegionRestoreFlag",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const RecoveryPoint: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecoveryPoint",
    uberParent: "RecoveryPoint",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType",
    },
    modelProperties: {
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProtectedItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProtectedItem",
    uberParent: "ProtectedItem",
    polymorphicDiscriminator: {
      serializedName: "protectedItemType",
      clientName: "protectedItemType",
    },
    modelProperties: {
      protectedItemType: {
        serializedName: "protectedItemType",
        required: true,
        type: {
          name: "String",
        },
      },
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String",
        },
      },
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String",
        },
      },
      containerName: {
        serializedName: "containerName",
        type: {
          name: "String",
        },
      },
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String",
        },
      },
      policyId: {
        serializedName: "policyId",
        type: {
          name: "String",
        },
      },
      lastRecoveryPoint: {
        serializedName: "lastRecoveryPoint",
        type: {
          name: "DateTime",
        },
      },
      backupSetName: {
        serializedName: "backupSetName",
        type: {
          name: "String",
        },
      },
      createMode: {
        serializedName: "createMode",
        type: {
          name: "String",
        },
      },
      deferredDeleteTimeInUTC: {
        serializedName: "deferredDeleteTimeInUTC",
        type: {
          name: "DateTime",
        },
      },
      isScheduledForDeferredDelete: {
        serializedName: "isScheduledForDeferredDelete",
        type: {
          name: "Boolean",
        },
      },
      deferredDeleteTimeRemaining: {
        serializedName: "deferredDeleteTimeRemaining",
        type: {
          name: "String",
        },
      },
      isDeferredDeleteScheduleUpcoming: {
        serializedName: "isDeferredDeleteScheduleUpcoming",
        type: {
          name: "Boolean",
        },
      },
      isRehydrate: {
        serializedName: "isRehydrate",
        type: {
          name: "Boolean",
        },
      },
      resourceGuardOperationRequests: {
        serializedName: "resourceGuardOperationRequests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const BMSBackupSummariesQueryObject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BMSBackupSummariesQueryObject",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KPIResourceHealthDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KPIResourceHealthDetails",
    modelProperties: {
      resourceHealthStatus: {
        serializedName: "resourceHealthStatus",
        type: {
          name: "String",
        },
      },
      resourceHealthDetails: {
        serializedName: "resourceHealthDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceHealthDetails",
            },
          },
        },
      },
    },
  },
};

export const ResourceHealthDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceHealthDetails",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      title: {
        serializedName: "title",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendations: {
        serializedName: "recommendations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AzureFileshareProtectedItemExtendedInfo: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AzureFileshareProtectedItemExtendedInfo",
      modelProperties: {
        oldestRecoveryPoint: {
          serializedName: "oldestRecoveryPoint",
          type: {
            name: "DateTime",
          },
        },
        recoveryPointCount: {
          serializedName: "recoveryPointCount",
          type: {
            name: "Number",
          },
        },
        policyState: {
          serializedName: "policyState",
          type: {
            name: "String",
          },
        },
        resourceState: {
          serializedName: "resourceState",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        resourceStateSyncTime: {
          serializedName: "resourceStateSyncTime",
          readOnly: true,
          type: {
            name: "DateTime",
          },
        },
      },
    },
  };

export const RecoveryPointProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecoveryPointProperties",
    modelProperties: {
      expiryTime: {
        serializedName: "expiryTime",
        type: {
          name: "String",
        },
      },
      ruleName: {
        serializedName: "ruleName",
        type: {
          name: "String",
        },
      },
      isSoftDeleted: {
        serializedName: "isSoftDeleted",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const RestoreFileSpecs: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RestoreFileSpecs",
    modelProperties: {
      path: {
        serializedName: "path",
        type: {
          name: "String",
        },
      },
      fileSpecType: {
        serializedName: "fileSpecType",
        type: {
          name: "String",
        },
      },
      targetFolderPath: {
        serializedName: "targetFolderPath",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TargetAFSRestoreInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TargetAFSRestoreInfo",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      targetResourceId: {
        serializedName: "targetResourceId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureIaaSVMProtectedItemExtendedInfo: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AzureIaaSVMProtectedItemExtendedInfo",
      modelProperties: {
        oldestRecoveryPoint: {
          serializedName: "oldestRecoveryPoint",
          type: {
            name: "DateTime",
          },
        },
        recoveryPointCount: {
          serializedName: "recoveryPointCount",
          type: {
            name: "Number",
          },
        },
        policyInconsistent: {
          serializedName: "policyInconsistent",
          type: {
            name: "Boolean",
          },
        },
      },
    },
  };

export const ExtendedProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtendedProperties",
    modelProperties: {
      diskExclusionProperties: {
        serializedName: "diskExclusionProperties",
        type: {
          name: "Composite",
          className: "DiskExclusionProperties",
        },
      },
    },
  },
};

export const DiskExclusionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiskExclusionProperties",
    modelProperties: {
      diskLunList: {
        serializedName: "diskLunList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number",
            },
          },
        },
      },
      isInclusionList: {
        serializedName: "isInclusionList",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const AzureIaaSVMErrorInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureIaaSVMErrorInfo",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      errorTitle: {
        serializedName: "errorTitle",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      errorString: {
        serializedName: "errorString",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendations: {
        serializedName: "recommendations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AzureIaaSVMJobExtendedInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureIaaSVMJobExtendedInfo",
    modelProperties: {
      tasksList: {
        serializedName: "tasksList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureIaaSVMJobTaskDetails",
            },
          },
        },
      },
      propertyBag: {
        serializedName: "propertyBag",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      internalPropertyBag: {
        serializedName: "internalPropertyBag",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      progressPercentage: {
        serializedName: "progressPercentage",
        type: {
          name: "Number",
        },
      },
      estimatedRemainingDuration: {
        serializedName: "estimatedRemainingDuration",
        type: {
          name: "String",
        },
      },
      dynamicErrorMessage: {
        serializedName: "dynamicErrorMessage",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureIaaSVMJobTaskDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureIaaSVMJobTaskDetails",
    modelProperties: {
      taskId: {
        serializedName: "taskId",
        type: {
          name: "String",
        },
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime",
        },
      },
      instanceId: {
        serializedName: "instanceId",
        type: {
          name: "String",
        },
      },
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      progressPercentage: {
        serializedName: "progressPercentage",
        type: {
          name: "Number",
        },
      },
      taskExecutionDetails: {
        serializedName: "taskExecutionDetails",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureSqlProtectedItemExtendedInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureSqlProtectedItemExtendedInfo",
    modelProperties: {
      oldestRecoveryPoint: {
        serializedName: "oldestRecoveryPoint",
        type: {
          name: "DateTime",
        },
      },
      recoveryPointCount: {
        serializedName: "recoveryPointCount",
        type: {
          name: "Number",
        },
      },
      policyState: {
        serializedName: "policyState",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureStorageErrorInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureStorageErrorInfo",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "Number",
        },
      },
      errorString: {
        serializedName: "errorString",
        type: {
          name: "String",
        },
      },
      recommendations: {
        serializedName: "recommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AzureStorageJobExtendedInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureStorageJobExtendedInfo",
    modelProperties: {
      tasksList: {
        serializedName: "tasksList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureStorageJobTaskDetails",
            },
          },
        },
      },
      propertyBag: {
        serializedName: "propertyBag",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      dynamicErrorMessage: {
        serializedName: "dynamicErrorMessage",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureStorageJobTaskDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureStorageJobTaskDetails",
    modelProperties: {
      taskId: {
        serializedName: "taskId",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendations: {
        serializedName: "recommendations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AzureVmWorkloadProtectedItemExtendedInfo: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AzureVmWorkloadProtectedItemExtendedInfo",
      modelProperties: {
        oldestRecoveryPoint: {
          serializedName: "oldestRecoveryPoint",
          type: {
            name: "DateTime",
          },
        },
        recoveryPointCount: {
          serializedName: "recoveryPointCount",
          type: {
            name: "Number",
          },
        },
        policyState: {
          serializedName: "policyState",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const AzureWorkloadErrorInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureWorkloadErrorInfo",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "Number",
        },
      },
      errorString: {
        serializedName: "errorString",
        type: {
          name: "String",
        },
      },
      errorTitle: {
        serializedName: "errorTitle",
        type: {
          name: "String",
        },
      },
      recommendations: {
        serializedName: "recommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      additionalDetails: {
        serializedName: "additionalDetails",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureWorkloadJobExtendedInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureWorkloadJobExtendedInfo",
    modelProperties: {
      tasksList: {
        serializedName: "tasksList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureWorkloadJobTaskDetails",
            },
          },
        },
      },
      propertyBag: {
        serializedName: "propertyBag",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      dynamicErrorMessage: {
        serializedName: "dynamicErrorMessage",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureWorkloadJobTaskDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureWorkloadJobTaskDetails",
    modelProperties: {
      taskId: {
        serializedName: "taskId",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PointInTimeRange: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PointInTimeRange",
    modelProperties: {
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const RecoveryPointTierInformation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecoveryPointTierInformation",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: ["Invalid", "InstantRP", "HardenedRP", "ArchivedRP"],
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "Invalid",
            "Valid",
            "Disabled",
            "Deleted",
            "Rehydrated",
          ],
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const RecoveryPointMoveReadinessInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecoveryPointMoveReadinessInfo",
    modelProperties: {
      isReadyForMove: {
        serializedName: "isReadyForMove",
        type: {
          name: "Boolean",
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TargetRestoreInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TargetRestoreInfo",
    modelProperties: {
      overwriteOption: {
        serializedName: "overwriteOption",
        type: {
          name: "String",
        },
      },
      containerId: {
        serializedName: "containerId",
        type: {
          name: "String",
        },
      },
      databaseName: {
        serializedName: "databaseName",
        type: {
          name: "String",
        },
      },
      targetDirectoryForFileRestore: {
        serializedName: "targetDirectoryForFileRestore",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureWorkloadSQLRecoveryPointExtendedInfo: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AzureWorkloadSQLRecoveryPointExtendedInfo",
      modelProperties: {
        dataDirectoryTimeInUTC: {
          serializedName: "dataDirectoryTimeInUTC",
          readOnly: true,
          type: {
            name: "DateTime",
          },
        },
        dataDirectoryPaths: {
          serializedName: "dataDirectoryPaths",
          readOnly: true,
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "SQLDataDirectory",
              },
            },
          },
        },
      },
    },
  };

export const SQLDataDirectory: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SQLDataDirectory",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
      path: {
        serializedName: "path",
        type: {
          name: "String",
        },
      },
      logicalName: {
        serializedName: "logicalName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SQLDataDirectoryMapping: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SQLDataDirectoryMapping",
    modelProperties: {
      mappingType: {
        serializedName: "mappingType",
        type: {
          name: "String",
        },
      },
      sourceLogicalName: {
        serializedName: "sourceLogicalName",
        type: {
          name: "String",
        },
      },
      sourcePath: {
        serializedName: "sourcePath",
        type: {
          name: "String",
        },
      },
      targetPath: {
        serializedName: "targetPath",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const BEKDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BEKDetails",
    modelProperties: {
      secretUrl: {
        serializedName: "secretUrl",
        type: {
          name: "String",
        },
      },
      secretVaultId: {
        serializedName: "secretVaultId",
        type: {
          name: "String",
        },
      },
      secretData: {
        serializedName: "secretData",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const BmsrpQueryObject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BmsrpQueryObject",
    modelProperties: {
      startDate: {
        serializedName: "startDate",
        type: {
          name: "DateTime",
        },
      },
      endDate: {
        serializedName: "endDate",
        type: {
          name: "DateTime",
        },
      },
      restorePointQueryType: {
        serializedName: "restorePointQueryType",
        type: {
          name: "String",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Boolean",
        },
      },
      moveReadyRPOnly: {
        serializedName: "moveReadyRPOnly",
        type: {
          name: "Boolean",
        },
      },
      includeSoftDeletedRP: {
        serializedName: "includeSoftDeletedRP",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const ClientScriptForConnect: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ClientScriptForConnect",
    modelProperties: {
      scriptContent: {
        serializedName: "scriptContent",
        type: {
          name: "String",
        },
      },
      scriptExtension: {
        serializedName: "scriptExtension",
        type: {
          name: "String",
        },
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String",
        },
      },
      url: {
        serializedName: "url",
        type: {
          name: "String",
        },
      },
      scriptNameSuffix: {
        serializedName: "scriptNameSuffix",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DiskInformation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiskInformation",
    modelProperties: {
      lun: {
        serializedName: "lun",
        type: {
          name: "Number",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DpmErrorInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DpmErrorInfo",
    modelProperties: {
      errorString: {
        serializedName: "errorString",
        type: {
          name: "String",
        },
      },
      recommendations: {
        serializedName: "recommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const DpmJobExtendedInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DpmJobExtendedInfo",
    modelProperties: {
      tasksList: {
        serializedName: "tasksList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DpmJobTaskDetails",
            },
          },
        },
      },
      propertyBag: {
        serializedName: "propertyBag",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      dynamicErrorMessage: {
        serializedName: "dynamicErrorMessage",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DpmJobTaskDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DpmJobTaskDetails",
    modelProperties: {
      taskId: {
        serializedName: "taskId",
        type: {
          name: "String",
        },
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime",
        },
      },
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DPMProtectedItemExtendedInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DPMProtectedItemExtendedInfo",
    modelProperties: {
      protectableObjectLoadPath: {
        serializedName: "protectableObjectLoadPath",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      protected: {
        serializedName: "protected",
        type: {
          name: "Boolean",
        },
      },
      isPresentOnCloud: {
        serializedName: "isPresentOnCloud",
        type: {
          name: "Boolean",
        },
      },
      lastBackupStatus: {
        serializedName: "lastBackupStatus",
        type: {
          name: "String",
        },
      },
      lastRefreshedAt: {
        serializedName: "lastRefreshedAt",
        type: {
          name: "DateTime",
        },
      },
      oldestRecoveryPoint: {
        serializedName: "oldestRecoveryPoint",
        type: {
          name: "DateTime",
        },
      },
      recoveryPointCount: {
        serializedName: "recoveryPointCount",
        type: {
          name: "Number",
        },
      },
      onPremiseOldestRecoveryPoint: {
        serializedName: "onPremiseOldestRecoveryPoint",
        type: {
          name: "DateTime",
        },
      },
      onPremiseLatestRecoveryPoint: {
        serializedName: "onPremiseLatestRecoveryPoint",
        type: {
          name: "DateTime",
        },
      },
      onPremiseRecoveryPointCount: {
        serializedName: "onPremiseRecoveryPointCount",
        type: {
          name: "Number",
        },
      },
      isCollocated: {
        serializedName: "isCollocated",
        type: {
          name: "Boolean",
        },
      },
      protectionGroupName: {
        serializedName: "protectionGroupName",
        type: {
          name: "String",
        },
      },
      diskStorageUsedInBytes: {
        serializedName: "diskStorageUsedInBytes",
        type: {
          name: "String",
        },
      },
      totalDiskStorageSizeInBytes: {
        serializedName: "totalDiskStorageSizeInBytes",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EncryptionDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EncryptionDetails",
    modelProperties: {
      encryptionEnabled: {
        serializedName: "encryptionEnabled",
        type: {
          name: "Boolean",
        },
      },
      kekUrl: {
        serializedName: "kekUrl",
        type: {
          name: "String",
        },
      },
      secretKeyUrl: {
        serializedName: "secretKeyUrl",
        type: {
          name: "String",
        },
      },
      kekVaultId: {
        serializedName: "kekVaultId",
        type: {
          name: "String",
        },
      },
      secretKeyVaultId: {
        serializedName: "secretKeyVaultId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KeyAndSecretDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyAndSecretDetails",
    modelProperties: {
      kekDetails: {
        serializedName: "kekDetails",
        type: {
          name: "Composite",
          className: "KEKDetails",
        },
      },
      bekDetails: {
        serializedName: "bekDetails",
        type: {
          name: "Composite",
          className: "BEKDetails",
        },
      },
      encryptionMechanism: {
        serializedName: "encryptionMechanism",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KEKDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KEKDetails",
    modelProperties: {
      keyUrl: {
        serializedName: "keyUrl",
        type: {
          name: "String",
        },
      },
      keyVaultId: {
        serializedName: "keyVaultId",
        type: {
          name: "String",
        },
      },
      keyBackupData: {
        serializedName: "keyBackupData",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RecoveryPointDiskConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecoveryPointDiskConfiguration",
    modelProperties: {
      numberOfDisksIncludedInBackup: {
        serializedName: "numberOfDisksIncludedInBackup",
        type: {
          name: "Number",
        },
      },
      numberOfDisksAttachedToVm: {
        serializedName: "numberOfDisksAttachedToVm",
        type: {
          name: "Number",
        },
      },
      includedDiskList: {
        serializedName: "includedDiskList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskInformation",
            },
          },
        },
      },
      excludedDiskList: {
        serializedName: "excludedDiskList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskInformation",
            },
          },
        },
      },
    },
  },
};

export const IdentityInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IdentityInfo",
    modelProperties: {
      isSystemAssignedIdentity: {
        serializedName: "isSystemAssignedIdentity",
        type: {
          name: "Boolean",
        },
      },
      managedIdentityResourceId: {
        serializedName: "managedIdentityResourceId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IdentityBasedRestoreDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IdentityBasedRestoreDetails",
    modelProperties: {
      objectType: {
        serializedName: "objectType",
        type: {
          name: "String",
        },
      },
      targetStorageAccountId: {
        serializedName: "targetStorageAccountId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const InstantItemRecoveryTarget: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InstantItemRecoveryTarget",
    modelProperties: {
      clientScripts: {
        serializedName: "clientScripts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClientScriptForConnect",
            },
          },
        },
      },
    },
  },
};

export const BmsaadPropertiesQueryObject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BmsaadPropertiesQueryObject",
    modelProperties: {
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const JobQueryObject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JobQueryObject",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String",
        },
      },
      jobId: {
        serializedName: "jobId",
        type: {
          name: "String",
        },
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const MabErrorInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MabErrorInfo",
    modelProperties: {
      errorString: {
        serializedName: "errorString",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendations: {
        serializedName: "recommendations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const MabFileFolderProtectedItemExtendedInfo: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "MabFileFolderProtectedItemExtendedInfo",
      modelProperties: {
        lastRefreshedAt: {
          serializedName: "lastRefreshedAt",
          type: {
            name: "DateTime",
          },
        },
        oldestRecoveryPoint: {
          serializedName: "oldestRecoveryPoint",
          type: {
            name: "DateTime",
          },
        },
        recoveryPointCount: {
          serializedName: "recoveryPointCount",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const MabJobExtendedInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MabJobExtendedInfo",
    modelProperties: {
      tasksList: {
        serializedName: "tasksList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MabJobTaskDetails",
            },
          },
        },
      },
      propertyBag: {
        serializedName: "propertyBag",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      dynamicErrorMessage: {
        serializedName: "dynamicErrorMessage",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MabJobTaskDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MabJobTaskDetails",
    modelProperties: {
      taskId: {
        serializedName: "taskId",
        type: {
          name: "String",
        },
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime",
        },
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime",
        },
      },
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProtectedItemQueryObject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProtectedItemQueryObject",
    modelProperties: {
      healthState: {
        serializedName: "healthState",
        type: {
          name: "String",
        },
      },
      backupManagementType: {
        serializedName: "backupManagementType",
        type: {
          name: "String",
        },
      },
      itemType: {
        serializedName: "itemType",
        type: {
          name: "String",
        },
      },
      policyName: {
        serializedName: "policyName",
        type: {
          name: "String",
        },
      },
      containerName: {
        serializedName: "containerName",
        type: {
          name: "String",
        },
      },
      backupEngineName: {
        serializedName: "backupEngineName",
        type: {
          name: "String",
        },
      },
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      fabricName: {
        serializedName: "fabricName",
        type: {
          name: "String",
        },
      },
      backupSetName: {
        serializedName: "backupSetName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AADPropertiesResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AADPropertiesResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AADProperties",
        },
      },
    },
  },
};

export const JobResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JobResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "Job",
        },
      },
    },
  },
};

export const CrrAccessTokenResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrrAccessTokenResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CrrAccessToken",
        },
      },
    },
  },
};

export const BackupResourceConfigResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BackupResourceConfigResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "BackupResourceConfig",
        },
      },
    },
  },
};

export const RecoveryPointResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecoveryPointResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RecoveryPoint",
        },
      },
    },
  },
};

export const ProtectedItemResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProtectedItemResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ProtectedItem",
        },
      },
    },
  },
};

export const CrrJobRequestResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrrJobRequestResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CrrJobRequest",
        },
      },
    },
  },
};

export const CrossRegionRestoreRequestResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CrossRegionRestoreRequestResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CrossRegionRestoreRequest",
        },
      },
    },
  },
};

export const WorkloadCrrAccessToken: coreClient.CompositeMapper = {
  serializedName: "WorkloadCrrAccessToken",
  type: {
    name: "Composite",
    className: "WorkloadCrrAccessToken",
    uberParent: "CrrAccessToken",
    polymorphicDiscriminator: CrrAccessToken.type.polymorphicDiscriminator,
    modelProperties: {
      ...CrrAccessToken.type.modelProperties,
      protectableObjectUniqueName: {
        serializedName: "protectableObjectUniqueName",
        type: {
          name: "String",
        },
      },
      protectableObjectFriendlyName: {
        serializedName: "protectableObjectFriendlyName",
        type: {
          name: "String",
        },
      },
      protectableObjectWorkloadType: {
        serializedName: "protectableObjectWorkloadType",
        type: {
          name: "String",
        },
      },
      protectableObjectProtectionState: {
        serializedName: "protectableObjectProtectionState",
        type: {
          name: "String",
        },
      },
      protectableObjectContainerHostOsName: {
        serializedName: "protectableObjectContainerHostOsName",
        type: {
          name: "String",
        },
      },
      protectableObjectParentLogicalContainerName: {
        serializedName: "protectableObjectParentLogicalContainerName",
        type: {
          name: "String",
        },
      },
      containerId: {
        serializedName: "containerId",
        type: {
          name: "String",
        },
      },
      policyName: {
        serializedName: "policyName",
        type: {
          name: "String",
        },
      },
      policyId: {
        serializedName: "policyId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureFileShareRestoreRequest: coreClient.CompositeMapper = {
  serializedName: "AzureFileShareRestoreRequest",
  type: {
    name: "Composite",
    className: "AzureFileShareRestoreRequest",
    uberParent: "RestoreRequest",
    polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
    modelProperties: {
      ...RestoreRequest.type.modelProperties,
      recoveryType: {
        serializedName: "recoveryType",
        type: {
          name: "String",
        },
      },
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String",
        },
      },
      copyOptions: {
        serializedName: "copyOptions",
        type: {
          name: "String",
        },
      },
      restoreRequestType: {
        serializedName: "restoreRequestType",
        type: {
          name: "String",
        },
      },
      restoreFileSpecs: {
        serializedName: "restoreFileSpecs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RestoreFileSpecs",
            },
          },
        },
      },
      targetDetails: {
        serializedName: "targetDetails",
        type: {
          name: "Composite",
          className: "TargetAFSRestoreInfo",
        },
      },
    },
  },
};

export const AzureWorkloadRestoreRequest: coreClient.CompositeMapper = {
  serializedName: "AzureWorkloadRestoreRequest",
  type: {
    name: "Composite",
    className: "AzureWorkloadRestoreRequest",
    uberParent: "RestoreRequest",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType",
    },
    modelProperties: {
      ...RestoreRequest.type.modelProperties,
      recoveryType: {
        serializedName: "recoveryType",
        type: {
          name: "String",
        },
      },
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String",
        },
      },
      propertyBag: {
        serializedName: "propertyBag",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      targetInfo: {
        serializedName: "targetInfo",
        type: {
          name: "Composite",
          className: "TargetRestoreInfo",
        },
      },
      recoveryMode: {
        serializedName: "recoveryMode",
        type: {
          name: "String",
        },
      },
      targetVirtualMachineId: {
        serializedName: "targetVirtualMachineId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IaasVMRestoreRequest: coreClient.CompositeMapper = {
  serializedName: "IaasVMRestoreRequest",
  type: {
    name: "Composite",
    className: "IaasVMRestoreRequest",
    uberParent: "RestoreRequest",
    polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
    modelProperties: {
      ...RestoreRequest.type.modelProperties,
      recoveryPointId: {
        serializedName: "recoveryPointId",
        type: {
          name: "String",
        },
      },
      recoveryType: {
        serializedName: "recoveryType",
        type: {
          name: "String",
        },
      },
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String",
        },
      },
      targetVirtualMachineId: {
        serializedName: "targetVirtualMachineId",
        type: {
          name: "String",
        },
      },
      targetResourceGroupId: {
        serializedName: "targetResourceGroupId",
        type: {
          name: "String",
        },
      },
      storageAccountId: {
        serializedName: "storageAccountId",
        type: {
          name: "String",
        },
      },
      virtualNetworkId: {
        serializedName: "virtualNetworkId",
        type: {
          name: "String",
        },
      },
      subnetId: {
        serializedName: "subnetId",
        type: {
          name: "String",
        },
      },
      targetDomainNameId: {
        serializedName: "targetDomainNameId",
        type: {
          name: "String",
        },
      },
      region: {
        serializedName: "region",
        type: {
          name: "String",
        },
      },
      affinityGroup: {
        serializedName: "affinityGroup",
        type: {
          name: "String",
        },
      },
      createNewCloudService: {
        serializedName: "createNewCloudService",
        type: {
          name: "Boolean",
        },
      },
      originalStorageAccountOption: {
        serializedName: "originalStorageAccountOption",
        type: {
          name: "Boolean",
        },
      },
      encryptionDetails: {
        serializedName: "encryptionDetails",
        type: {
          name: "Composite",
          className: "EncryptionDetails",
        },
      },
      restoreDiskLunList: {
        serializedName: "restoreDiskLunList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number",
            },
          },
        },
      },
      restoreWithManagedDisks: {
        serializedName: "restoreWithManagedDisks",
        type: {
          name: "Boolean",
        },
      },
      diskEncryptionSetId: {
        serializedName: "diskEncryptionSetId",
        type: {
          name: "String",
        },
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      identityInfo: {
        serializedName: "identityInfo",
        type: {
          name: "Composite",
          className: "IdentityInfo",
        },
      },
      identityBasedRestoreDetails: {
        serializedName: "identityBasedRestoreDetails",
        type: {
          name: "Composite",
          className: "IdentityBasedRestoreDetails",
        },
      },
    },
  },
};

export const AzureIaaSVMJob: coreClient.CompositeMapper = {
  serializedName: "AzureIaaSVMJob",
  type: {
    name: "Composite",
    className: "AzureIaaSVMJob",
    uberParent: "Job",
    polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
    modelProperties: {
      ...Job.type.modelProperties,
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan",
        },
      },
      actionsInfo: {
        serializedName: "actionsInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["Invalid", "Cancellable", "Retriable"],
            },
          },
        },
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureIaaSVMErrorInfo",
            },
          },
        },
      },
      virtualMachineVersion: {
        serializedName: "virtualMachineVersion",
        type: {
          name: "String",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureIaaSVMJobExtendedInfo",
        },
      },
    },
  },
};

export const AzureStorageJob: coreClient.CompositeMapper = {
  serializedName: "AzureStorageJob",
  type: {
    name: "Composite",
    className: "AzureStorageJob",
    uberParent: "Job",
    polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
    modelProperties: {
      ...Job.type.modelProperties,
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan",
        },
      },
      actionsInfo: {
        serializedName: "actionsInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["Invalid", "Cancellable", "Retriable"],
            },
          },
        },
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureStorageErrorInfo",
            },
          },
        },
      },
      storageAccountName: {
        serializedName: "storageAccountName",
        type: {
          name: "String",
        },
      },
      storageAccountVersion: {
        serializedName: "storageAccountVersion",
        type: {
          name: "String",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureStorageJobExtendedInfo",
        },
      },
    },
  },
};

export const AzureWorkloadJob: coreClient.CompositeMapper = {
  serializedName: "AzureWorkloadJob",
  type: {
    name: "Composite",
    className: "AzureWorkloadJob",
    uberParent: "Job",
    polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
    modelProperties: {
      ...Job.type.modelProperties,
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String",
        },
      },
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan",
        },
      },
      actionsInfo: {
        serializedName: "actionsInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["Invalid", "Cancellable", "Retriable"],
            },
          },
        },
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureWorkloadErrorInfo",
            },
          },
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureWorkloadJobExtendedInfo",
        },
      },
    },
  },
};

export const DpmJob: coreClient.CompositeMapper = {
  serializedName: "DpmJob",
  type: {
    name: "Composite",
    className: "DpmJob",
    uberParent: "Job",
    polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
    modelProperties: {
      ...Job.type.modelProperties,
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan",
        },
      },
      dpmServerName: {
        serializedName: "dpmServerName",
        type: {
          name: "String",
        },
      },
      containerName: {
        serializedName: "containerName",
        type: {
          name: "String",
        },
      },
      containerType: {
        serializedName: "containerType",
        type: {
          name: "String",
        },
      },
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String",
        },
      },
      actionsInfo: {
        serializedName: "actionsInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["Invalid", "Cancellable", "Retriable"],
            },
          },
        },
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DpmErrorInfo",
            },
          },
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "DpmJobExtendedInfo",
        },
      },
    },
  },
};

export const MabJob: coreClient.CompositeMapper = {
  serializedName: "MabJob",
  type: {
    name: "Composite",
    className: "MabJob",
    uberParent: "Job",
    polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
    modelProperties: {
      ...Job.type.modelProperties,
      duration: {
        serializedName: "duration",
        type: {
          name: "TimeSpan",
        },
      },
      actionsInfo: {
        serializedName: "actionsInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["Invalid", "Cancellable", "Retriable"],
            },
          },
        },
      },
      mabServerName: {
        serializedName: "mabServerName",
        type: {
          name: "String",
        },
      },
      mabServerType: {
        serializedName: "mabServerType",
        type: {
          name: "String",
        },
      },
      workloadType: {
        serializedName: "workloadType",
        type: {
          name: "String",
        },
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MabErrorInfo",
            },
          },
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "MabJobExtendedInfo",
        },
      },
    },
  },
};

export const JobResourceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "JobResourceList",
    modelProperties: {
      ...ResourceList.type.modelProperties,
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RecoveryPointResourceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecoveryPointResourceList",
    modelProperties: {
      ...ResourceList.type.modelProperties,
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecoveryPointResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProtectedItemResourceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProtectedItemResourceList",
    modelProperties: {
      ...ResourceList.type.modelProperties,
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProtectedItemResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationStatusJobExtendedInfo: coreClient.CompositeMapper = {
  serializedName: "OperationStatusJobExtendedInfo",
  type: {
    name: "Composite",
    className: "OperationStatusJobExtendedInfo",
    uberParent: "OperationStatusExtendedInfo",
    polymorphicDiscriminator:
      OperationStatusExtendedInfo.type.polymorphicDiscriminator,
    modelProperties: {
      ...OperationStatusExtendedInfo.type.modelProperties,
      jobId: {
        serializedName: "jobId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationStatusJobsExtendedInfo: coreClient.CompositeMapper = {
  serializedName: "OperationStatusJobsExtendedInfo",
  type: {
    name: "Composite",
    className: "OperationStatusJobsExtendedInfo",
    uberParent: "OperationStatusExtendedInfo",
    polymorphicDiscriminator:
      OperationStatusExtendedInfo.type.polymorphicDiscriminator,
    modelProperties: {
      ...OperationStatusExtendedInfo.type.modelProperties,
      jobIds: {
        serializedName: "jobIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      failedJobsError: {
        serializedName: "failedJobsError",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const OperationStatusProvisionILRExtendedInfo: coreClient.CompositeMapper =
  {
    serializedName: "OperationStatusProvisionILRExtendedInfo",
    type: {
      name: "Composite",
      className: "OperationStatusProvisionILRExtendedInfo",
      uberParent: "OperationStatusExtendedInfo",
      polymorphicDiscriminator:
        OperationStatusExtendedInfo.type.polymorphicDiscriminator,
      modelProperties: {
        ...OperationStatusExtendedInfo.type.modelProperties,
        recoveryTarget: {
          serializedName: "recoveryTarget",
          type: {
            name: "Composite",
            className: "InstantItemRecoveryTarget",
          },
        },
      },
    },
  };

export const OperationStatusRecoveryPointExtendedInfo: coreClient.CompositeMapper =
  {
    serializedName: "OperationStatusRecoveryPointExtendedInfo",
    type: {
      name: "Composite",
      className: "OperationStatusRecoveryPointExtendedInfo",
      uberParent: "OperationStatusExtendedInfo",
      polymorphicDiscriminator:
        OperationStatusExtendedInfo.type.polymorphicDiscriminator,
      modelProperties: {
        ...OperationStatusExtendedInfo.type.modelProperties,
        updatedRecoveryPoint: {
          serializedName: "updatedRecoveryPoint",
          type: {
            name: "Composite",
            className: "RecoveryPoint",
          },
        },
        deletedBackupItemVersion: {
          serializedName: "deletedBackupItemVersion",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const AzureFileShareRecoveryPoint: coreClient.CompositeMapper = {
  serializedName: "AzureFileShareRecoveryPoint",
  type: {
    name: "Composite",
    className: "AzureFileShareRecoveryPoint",
    uberParent: "RecoveryPoint",
    polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
    modelProperties: {
      ...RecoveryPoint.type.modelProperties,
      recoveryPointType: {
        serializedName: "recoveryPointType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      crossRegionRestoreState: {
        serializedName: "crossRegionRestoreState",
        type: {
          name: "String",
        },
      },
      recoveryPointTime: {
        serializedName: "recoveryPointTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      fileShareSnapshotUri: {
        serializedName: "fileShareSnapshotUri",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recoveryPointSizeInGB: {
        serializedName: "recoveryPointSizeInGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      recoveryPointProperties: {
        serializedName: "recoveryPointProperties",
        type: {
          name: "Composite",
          className: "RecoveryPointProperties",
        },
      },
    },
  },
};

export const AzureWorkloadRecoveryPoint: coreClient.CompositeMapper = {
  serializedName: "AzureWorkloadRecoveryPoint",
  type: {
    name: "Composite",
    className: "AzureWorkloadRecoveryPoint",
    uberParent: "RecoveryPoint",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType",
    },
    modelProperties: {
      ...RecoveryPoint.type.modelProperties,
      recoveryPointTimeInUTC: {
        serializedName: "recoveryPointTimeInUTC",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recoveryPointTierDetails: {
        serializedName: "recoveryPointTierDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecoveryPointTierInformation",
            },
          },
        },
      },
      recoveryPointMoveReadinessInfo: {
        serializedName: "recoveryPointMoveReadinessInfo",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "RecoveryPointMoveReadinessInfo",
            },
          },
        },
      },
      recoveryPointProperties: {
        serializedName: "recoveryPointProperties",
        type: {
          name: "Composite",
          className: "RecoveryPointProperties",
        },
      },
    },
  },
};

export const GenericRecoveryPoint: coreClient.CompositeMapper = {
  serializedName: "GenericRecoveryPoint",
  type: {
    name: "Composite",
    className: "GenericRecoveryPoint",
    uberParent: "RecoveryPoint",
    polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
    modelProperties: {
      ...RecoveryPoint.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      recoveryPointType: {
        serializedName: "recoveryPointType",
        type: {
          name: "String",
        },
      },
      recoveryPointTime: {
        serializedName: "recoveryPointTime",
        type: {
          name: "DateTime",
        },
      },
      recoveryPointAdditionalInfo: {
        serializedName: "recoveryPointAdditionalInfo",
        type: {
          name: "String",
        },
      },
      recoveryPointProperties: {
        serializedName: "recoveryPointProperties",
        type: {
          name: "Composite",
          className: "RecoveryPointProperties",
        },
      },
    },
  },
};

export const IaasVMRecoveryPoint: coreClient.CompositeMapper = {
  serializedName: "IaasVMRecoveryPoint",
  type: {
    name: "Composite",
    className: "IaasVMRecoveryPoint",
    uberParent: "RecoveryPoint",
    polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
    modelProperties: {
      ...RecoveryPoint.type.modelProperties,
      recoveryPointType: {
        serializedName: "recoveryPointType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recoveryPointTime: {
        serializedName: "recoveryPointTime",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      recoveryPointAdditionalInfo: {
        serializedName: "recoveryPointAdditionalInfo",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sourceVMStorageType: {
        serializedName: "sourceVMStorageType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isSourceVMEncrypted: {
        serializedName: "isSourceVMEncrypted",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      keyAndSecret: {
        serializedName: "keyAndSecret",
        type: {
          name: "Composite",
          className: "KeyAndSecretDetails",
        },
      },
      isInstantIlrSessionActive: {
        serializedName: "isInstantIlrSessionActive",
        type: {
          name: "Boolean",
        },
      },
      recoveryPointTierDetails: {
        serializedName: "recoveryPointTierDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecoveryPointTierInformation",
            },
          },
        },
      },
      isManagedVirtualMachine: {
        serializedName: "isManagedVirtualMachine",
        type: {
          name: "Boolean",
        },
      },
      virtualMachineSize: {
        serializedName: "virtualMachineSize",
        type: {
          name: "String",
        },
      },
      originalStorageAccountOption: {
        serializedName: "originalStorageAccountOption",
        type: {
          name: "Boolean",
        },
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String",
        },
      },
      recoveryPointDiskConfiguration: {
        serializedName: "recoveryPointDiskConfiguration",
        type: {
          name: "Composite",
          className: "RecoveryPointDiskConfiguration",
        },
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      recoveryPointMoveReadinessInfo: {
        serializedName: "recoveryPointMoveReadinessInfo",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "RecoveryPointMoveReadinessInfo",
            },
          },
        },
      },
      recoveryPointProperties: {
        serializedName: "recoveryPointProperties",
        type: {
          name: "Composite",
          className: "RecoveryPointProperties",
        },
      },
    },
  },
};

export const AzureFileshareProtectedItem: coreClient.CompositeMapper = {
  serializedName: "AzureFileShareProtectedItem",
  type: {
    name: "Composite",
    className: "AzureFileshareProtectedItem",
    uberParent: "ProtectedItem",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      protectionStatus: {
        serializedName: "protectionStatus",
        type: {
          name: "String",
        },
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String",
        },
      },
      healthStatus: {
        serializedName: "healthStatus",
        type: {
          name: "String",
        },
      },
      lastBackupStatus: {
        serializedName: "lastBackupStatus",
        type: {
          name: "String",
        },
      },
      lastBackupTime: {
        serializedName: "lastBackupTime",
        type: {
          name: "DateTime",
        },
      },
      kpisHealths: {
        serializedName: "kpisHealths",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "KPIResourceHealthDetails" },
          },
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureFileshareProtectedItemExtendedInfo",
        },
      },
    },
  },
};

export const AzureIaaSVMProtectedItem: coreClient.CompositeMapper = {
  serializedName: "AzureIaaSVMProtectedItem",
  type: {
    name: "Composite",
    className: "AzureIaaSVMProtectedItem",
    uberParent: "ProtectedItem",
    polymorphicDiscriminator: {
      serializedName: "protectedItemType",
      clientName: "protectedItemType",
    },
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      virtualMachineId: {
        serializedName: "virtualMachineId",
        type: {
          name: "String",
        },
      },
      protectionStatus: {
        serializedName: "protectionStatus",
        type: {
          name: "String",
        },
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String",
        },
      },
      healthStatus: {
        serializedName: "healthStatus",
        type: {
          name: "String",
        },
      },
      healthDetails: {
        serializedName: "healthDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureIaaSVMHealthDetails",
            },
          },
        },
      },
      kpisHealths: {
        serializedName: "kpisHealths",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "KPIResourceHealthDetails" },
          },
        },
      },
      lastBackupStatus: {
        serializedName: "lastBackupStatus",
        type: {
          name: "String",
        },
      },
      lastBackupTime: {
        serializedName: "lastBackupTime",
        type: {
          name: "DateTime",
        },
      },
      protectedItemDataId: {
        serializedName: "protectedItemDataId",
        type: {
          name: "String",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureIaaSVMProtectedItemExtendedInfo",
        },
      },
      extendedProperties: {
        serializedName: "extendedProperties",
        type: {
          name: "Composite",
          className: "ExtendedProperties",
        },
      },
    },
  },
};

export const AzureSqlProtectedItem: coreClient.CompositeMapper = {
  serializedName: "Microsoft.Sql/servers/databases",
  type: {
    name: "Composite",
    className: "AzureSqlProtectedItem",
    uberParent: "ProtectedItem",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      protectedItemDataId: {
        serializedName: "protectedItemDataId",
        type: {
          name: "String",
        },
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureSqlProtectedItemExtendedInfo",
        },
      },
    },
  },
};

export const AzureVmWorkloadProtectedItem: coreClient.CompositeMapper = {
  serializedName: "AzureVmWorkloadProtectedItem",
  type: {
    name: "Composite",
    className: "AzureVmWorkloadProtectedItem",
    uberParent: "ProtectedItem",
    polymorphicDiscriminator: {
      serializedName: "protectedItemType",
      clientName: "protectedItemType",
    },
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      serverName: {
        serializedName: "serverName",
        type: {
          name: "String",
        },
      },
      parentName: {
        serializedName: "parentName",
        type: {
          name: "String",
        },
      },
      parentType: {
        serializedName: "parentType",
        type: {
          name: "String",
        },
      },
      protectionStatus: {
        serializedName: "protectionStatus",
        type: {
          name: "String",
        },
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String",
        },
      },
      lastBackupStatus: {
        serializedName: "lastBackupStatus",
        type: {
          name: "String",
        },
      },
      lastBackupTime: {
        serializedName: "lastBackupTime",
        type: {
          name: "DateTime",
        },
      },
      lastBackupErrorDetail: {
        serializedName: "lastBackupErrorDetail",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
      protectedItemDataSourceId: {
        serializedName: "protectedItemDataSourceId",
        type: {
          name: "String",
        },
      },
      protectedItemHealthStatus: {
        serializedName: "protectedItemHealthStatus",
        type: {
          name: "String",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureVmWorkloadProtectedItemExtendedInfo",
        },
      },
      kpisHealths: {
        serializedName: "kpisHealths",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "KPIResourceHealthDetails" },
          },
        },
      },
    },
  },
};

export const DPMProtectedItem: coreClient.CompositeMapper = {
  serializedName: "DPMProtectedItem",
  type: {
    name: "Composite",
    className: "DPMProtectedItem",
    uberParent: "ProtectedItem",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      backupEngineName: {
        serializedName: "backupEngineName",
        type: {
          name: "String",
        },
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "DPMProtectedItemExtendedInfo",
        },
      },
    },
  },
};

export const GenericProtectedItem: coreClient.CompositeMapper = {
  serializedName: "GenericProtectedItem",
  type: {
    name: "Composite",
    className: "GenericProtectedItem",
    uberParent: "ProtectedItem",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      policyState: {
        serializedName: "policyState",
        type: {
          name: "String",
        },
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String",
        },
      },
      protectedItemId: {
        serializedName: "protectedItemId",
        type: {
          name: "Number",
        },
      },
      sourceAssociations: {
        serializedName: "sourceAssociations",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      fabricName: {
        serializedName: "fabricName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MabFileFolderProtectedItem: coreClient.CompositeMapper = {
  serializedName: "MabFileFolderProtectedItem",
  type: {
    name: "Composite",
    className: "MabFileFolderProtectedItem",
    uberParent: "ProtectedItem",
    polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
    modelProperties: {
      ...ProtectedItem.type.modelProperties,
      friendlyName: {
        serializedName: "friendlyName",
        type: {
          name: "String",
        },
      },
      computerName: {
        serializedName: "computerName",
        type: {
          name: "String",
        },
      },
      lastBackupStatus: {
        serializedName: "lastBackupStatus",
        type: {
          name: "String",
        },
      },
      lastBackupTime: {
        serializedName: "lastBackupTime",
        type: {
          name: "DateTime",
        },
      },
      protectionState: {
        serializedName: "protectionState",
        type: {
          name: "String",
        },
      },
      deferredDeleteSyncTimeInUTC: {
        serializedName: "deferredDeleteSyncTimeInUTC",
        type: {
          name: "Number",
        },
      },
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "MabFileFolderProtectedItemExtendedInfo",
        },
      },
    },
  },
};

export const AzureIaaSVMHealthDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureIaaSVMHealthDetails",
    modelProperties: {
      ...ResourceHealthDetails.type.modelProperties,
    },
  },
};

export const AzureWorkloadPointInTimeRestoreRequest: coreClient.CompositeMapper =
  {
    serializedName: "AzureWorkloadPointInTimeRestoreRequest",
    type: {
      name: "Composite",
      className: "AzureWorkloadPointInTimeRestoreRequest",
      uberParent: "AzureWorkloadRestoreRequest",
      polymorphicDiscriminator:
        AzureWorkloadRestoreRequest.type.polymorphicDiscriminator,
      modelProperties: {
        ...AzureWorkloadRestoreRequest.type.modelProperties,
        pointInTime: {
          serializedName: "pointInTime",
          type: {
            name: "DateTime",
          },
        },
      },
    },
  };

export const AzureWorkloadSAPHanaRestoreRequest: coreClient.CompositeMapper = {
  serializedName: "AzureWorkloadSAPHanaRestoreRequest",
  type: {
    name: "Composite",
    className: "AzureWorkloadSAPHanaRestoreRequest",
    uberParent: "AzureWorkloadRestoreRequest",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType",
    },
    modelProperties: {
      ...AzureWorkloadRestoreRequest.type.modelProperties,
    },
  },
};

export const AzureWorkloadSQLRestoreRequest: coreClient.CompositeMapper = {
  serializedName: "AzureWorkloadSQLRestoreRequest",
  type: {
    name: "Composite",
    className: "AzureWorkloadSQLRestoreRequest",
    uberParent: "AzureWorkloadRestoreRequest",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType",
    },
    modelProperties: {
      ...AzureWorkloadRestoreRequest.type.modelProperties,
      shouldUseAlternateTargetLocation: {
        serializedName: "shouldUseAlternateTargetLocation",
        type: {
          name: "Boolean",
        },
      },
      isNonRecoverable: {
        serializedName: "isNonRecoverable",
        type: {
          name: "Boolean",
        },
      },
      alternateDirectoryPaths: {
        serializedName: "alternateDirectoryPaths",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SQLDataDirectoryMapping",
            },
          },
        },
      },
    },
  },
};

export const AzureWorkloadPointInTimeRecoveryPoint: coreClient.CompositeMapper =
  {
    serializedName: "AzureWorkloadPointInTimeRecoveryPoint",
    type: {
      name: "Composite",
      className: "AzureWorkloadPointInTimeRecoveryPoint",
      uberParent: "AzureWorkloadRecoveryPoint",
      polymorphicDiscriminator: {
        serializedName: "objectType",
        clientName: "objectType",
      },
      modelProperties: {
        ...AzureWorkloadRecoveryPoint.type.modelProperties,
        timeRanges: {
          serializedName: "timeRanges",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "PointInTimeRange",
              },
            },
          },
        },
      },
    },
  };

export const AzureWorkloadSAPHanaRecoveryPoint: coreClient.CompositeMapper = {
  serializedName: "AzureWorkloadSAPHanaRecoveryPoint",
  type: {
    name: "Composite",
    className: "AzureWorkloadSAPHanaRecoveryPoint",
    uberParent: "AzureWorkloadRecoveryPoint",
    polymorphicDiscriminator:
      AzureWorkloadRecoveryPoint.type.polymorphicDiscriminator,
    modelProperties: {
      ...AzureWorkloadRecoveryPoint.type.modelProperties,
    },
  },
};

export const AzureWorkloadSQLRecoveryPoint: coreClient.CompositeMapper = {
  serializedName: "AzureWorkloadSQLRecoveryPoint",
  type: {
    name: "Composite",
    className: "AzureWorkloadSQLRecoveryPoint",
    uberParent: "AzureWorkloadRecoveryPoint",
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType",
    },
    modelProperties: {
      ...AzureWorkloadRecoveryPoint.type.modelProperties,
      extendedInfo: {
        serializedName: "extendedInfo",
        type: {
          name: "Composite",
          className: "AzureWorkloadSQLRecoveryPointExtendedInfo",
        },
      },
    },
  },
};

export const AzureIaaSClassicComputeVMProtectedItem: coreClient.CompositeMapper =
  {
    serializedName: "Microsoft.ClassicCompute/virtualMachines",
    type: {
      name: "Composite",
      className: "AzureIaaSClassicComputeVMProtectedItem",
      uberParent: "AzureIaaSVMProtectedItem",
      polymorphicDiscriminator:
        AzureIaaSVMProtectedItem.type.polymorphicDiscriminator,
      modelProperties: {
        ...AzureIaaSVMProtectedItem.type.modelProperties,
      },
    },
  };

export const AzureIaaSComputeVMProtectedItem: coreClient.CompositeMapper = {
  serializedName: "Microsoft.Compute/virtualMachines",
  type: {
    name: "Composite",
    className: "AzureIaaSComputeVMProtectedItem",
    uberParent: "AzureIaaSVMProtectedItem",
    polymorphicDiscriminator:
      AzureIaaSVMProtectedItem.type.polymorphicDiscriminator,
    modelProperties: {
      ...AzureIaaSVMProtectedItem.type.modelProperties,
    },
  },
};

export const AzureVmWorkloadSAPAseDatabaseProtectedItem: coreClient.CompositeMapper =
  {
    serializedName: "AzureVmWorkloadSAPAseDatabase",
    type: {
      name: "Composite",
      className: "AzureVmWorkloadSAPAseDatabaseProtectedItem",
      uberParent: "AzureVmWorkloadProtectedItem",
      polymorphicDiscriminator:
        AzureVmWorkloadProtectedItem.type.polymorphicDiscriminator,
      modelProperties: {
        ...AzureVmWorkloadProtectedItem.type.modelProperties,
      },
    },
  };

export const AzureVmWorkloadSAPHanaDatabaseProtectedItem: coreClient.CompositeMapper =
  {
    serializedName: "AzureVmWorkloadSAPHanaDatabase",
    type: {
      name: "Composite",
      className: "AzureVmWorkloadSAPHanaDatabaseProtectedItem",
      uberParent: "AzureVmWorkloadProtectedItem",
      polymorphicDiscriminator:
        AzureVmWorkloadProtectedItem.type.polymorphicDiscriminator,
      modelProperties: {
        ...AzureVmWorkloadProtectedItem.type.modelProperties,
      },
    },
  };

export const AzureVmWorkloadSQLDatabaseProtectedItem: coreClient.CompositeMapper =
  {
    serializedName: "AzureVmWorkloadSQLDatabase",
    type: {
      name: "Composite",
      className: "AzureVmWorkloadSQLDatabaseProtectedItem",
      uberParent: "AzureVmWorkloadProtectedItem",
      polymorphicDiscriminator:
        AzureVmWorkloadProtectedItem.type.polymorphicDiscriminator,
      modelProperties: {
        ...AzureVmWorkloadProtectedItem.type.modelProperties,
      },
    },
  };

export const AzureWorkloadSAPHanaPointInTimeRestoreRequest: coreClient.CompositeMapper =
  {
    serializedName: "AzureWorkloadSAPHanaPointInTimeRestoreRequest",
    type: {
      name: "Composite",
      className: "AzureWorkloadSAPHanaPointInTimeRestoreRequest",
      uberParent: "AzureWorkloadSAPHanaRestoreRequest",
      polymorphicDiscriminator:
        AzureWorkloadSAPHanaRestoreRequest.type.polymorphicDiscriminator,
      modelProperties: {
        ...AzureWorkloadSAPHanaRestoreRequest.type.modelProperties,
        pointInTime: {
          serializedName: "pointInTime",
          type: {
            name: "DateTime",
          },
        },
      },
    },
  };

export const AzureWorkloadSQLPointInTimeRestoreRequest: coreClient.CompositeMapper =
  {
    serializedName: "AzureWorkloadSQLPointInTimeRestoreRequest",
    type: {
      name: "Composite",
      className: "AzureWorkloadSQLPointInTimeRestoreRequest",
      uberParent: "AzureWorkloadSQLRestoreRequest",
      polymorphicDiscriminator:
        AzureWorkloadSQLRestoreRequest.type.polymorphicDiscriminator,
      modelProperties: {
        ...AzureWorkloadSQLRestoreRequest.type.modelProperties,
        pointInTime: {
          serializedName: "pointInTime",
          type: {
            name: "DateTime",
          },
        },
      },
    },
  };

export const AzureWorkloadSAPHanaPointInTimeRecoveryPoint: coreClient.CompositeMapper =
  {
    serializedName: "AzureWorkloadSAPHanaPointInTimeRecoveryPoint",
    type: {
      name: "Composite",
      className: "AzureWorkloadSAPHanaPointInTimeRecoveryPoint",
      uberParent: "AzureWorkloadPointInTimeRecoveryPoint",
      polymorphicDiscriminator:
        AzureWorkloadPointInTimeRecoveryPoint.type.polymorphicDiscriminator,
      modelProperties: {
        ...AzureWorkloadPointInTimeRecoveryPoint.type.modelProperties,
      },
    },
  };

export const AzureWorkloadSQLPointInTimeRecoveryPoint: coreClient.CompositeMapper =
  {
    serializedName: "AzureWorkloadSQLPointInTimeRecoveryPoint",
    type: {
      name: "Composite",
      className: "AzureWorkloadSQLPointInTimeRecoveryPoint",
      uberParent: "AzureWorkloadSQLRecoveryPoint",
      polymorphicDiscriminator:
        AzureWorkloadSQLRecoveryPoint.type.polymorphicDiscriminator,
      modelProperties: {
        ...AzureWorkloadSQLRecoveryPoint.type.modelProperties,
        timeRanges: {
          serializedName: "timeRanges",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "PointInTimeRange",
              },
            },
          },
        },
      },
    },
  };

export let discriminators = {
  CrrAccessToken: CrrAccessToken,
  RestoreRequest: RestoreRequest,
  Job: Job,
  OperationStatusExtendedInfo: OperationStatusExtendedInfo,
  RecoveryPoint: RecoveryPoint,
  ProtectedItem: ProtectedItem,
  "CrrAccessToken.WorkloadCrrAccessToken": WorkloadCrrAccessToken,
  "RestoreRequest.AzureFileShareRestoreRequest": AzureFileShareRestoreRequest,
  "RestoreRequest.AzureWorkloadRestoreRequest": AzureWorkloadRestoreRequest,
  "RestoreRequest.IaasVMRestoreRequest": IaasVMRestoreRequest,
  "Job.AzureIaaSVMJob": AzureIaaSVMJob,
  "Job.AzureStorageJob": AzureStorageJob,
  "Job.AzureWorkloadJob": AzureWorkloadJob,
  "Job.DpmJob": DpmJob,
  "Job.MabJob": MabJob,
  "OperationStatusExtendedInfo.OperationStatusJobExtendedInfo":
    OperationStatusJobExtendedInfo,
  "OperationStatusExtendedInfo.OperationStatusJobsExtendedInfo":
    OperationStatusJobsExtendedInfo,
  "OperationStatusExtendedInfo.OperationStatusProvisionILRExtendedInfo":
    OperationStatusProvisionILRExtendedInfo,
  "OperationStatusExtendedInfo.OperationStatusRecoveryPointExtendedInfo":
    OperationStatusRecoveryPointExtendedInfo,
  "RecoveryPoint.AzureFileShareRecoveryPoint": AzureFileShareRecoveryPoint,
  "RecoveryPoint.AzureWorkloadRecoveryPoint": AzureWorkloadRecoveryPoint,
  "RecoveryPoint.GenericRecoveryPoint": GenericRecoveryPoint,
  "RecoveryPoint.IaasVMRecoveryPoint": IaasVMRecoveryPoint,
  "ProtectedItem.AzureFileShareProtectedItem": AzureFileshareProtectedItem,
  "ProtectedItem.AzureIaaSVMProtectedItem": AzureIaaSVMProtectedItem,
  "ProtectedItem.Microsoft.Sql/servers/databases": AzureSqlProtectedItem,
  "ProtectedItem.AzureVmWorkloadProtectedItem": AzureVmWorkloadProtectedItem,
  "ProtectedItem.DPMProtectedItem": DPMProtectedItem,
  "ProtectedItem.GenericProtectedItem": GenericProtectedItem,
  "ProtectedItem.MabFileFolderProtectedItem": MabFileFolderProtectedItem,
  "AzureWorkloadRestoreRequest.AzureWorkloadPointInTimeRestoreRequest":
    AzureWorkloadPointInTimeRestoreRequest,
  "AzureWorkloadRestoreRequest.AzureWorkloadSAPHanaRestoreRequest":
    AzureWorkloadSAPHanaRestoreRequest,
  "AzureWorkloadRestoreRequest.AzureWorkloadSQLRestoreRequest":
    AzureWorkloadSQLRestoreRequest,
  "AzureWorkloadRecoveryPoint.AzureWorkloadPointInTimeRecoveryPoint":
    AzureWorkloadPointInTimeRecoveryPoint,
  "AzureWorkloadRecoveryPoint.AzureWorkloadSAPHanaRecoveryPoint":
    AzureWorkloadSAPHanaRecoveryPoint,
  "AzureWorkloadRecoveryPoint.AzureWorkloadSQLRecoveryPoint":
    AzureWorkloadSQLRecoveryPoint,
  "AzureIaaSVMProtectedItem.Microsoft.ClassicCompute/virtualMachines":
    AzureIaaSClassicComputeVMProtectedItem,
  "AzureIaaSVMProtectedItem.Microsoft.Compute/virtualMachines":
    AzureIaaSComputeVMProtectedItem,
  "AzureVmWorkloadProtectedItem.AzureVmWorkloadSAPAseDatabase":
    AzureVmWorkloadSAPAseDatabaseProtectedItem,
  "AzureVmWorkloadProtectedItem.AzureVmWorkloadSAPHanaDatabase":
    AzureVmWorkloadSAPHanaDatabaseProtectedItem,
  "AzureVmWorkloadProtectedItem.AzureVmWorkloadSQLDatabase":
    AzureVmWorkloadSQLDatabaseProtectedItem,
  "AzureWorkloadSAPHanaRestoreRequest.AzureWorkloadSAPHanaPointInTimeRestoreRequest":
    AzureWorkloadSAPHanaPointInTimeRestoreRequest,
  "AzureWorkloadSQLRestoreRequest.AzureWorkloadSQLPointInTimeRestoreRequest":
    AzureWorkloadSQLPointInTimeRestoreRequest,
  "AzureWorkloadPointInTimeRecoveryPoint.AzureWorkloadSAPHanaPointInTimeRecoveryPoint":
    AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
  "AzureWorkloadSQLRecoveryPoint.AzureWorkloadSQLPointInTimeRecoveryPoint":
    AzureWorkloadSQLPointInTimeRecoveryPoint,
};
