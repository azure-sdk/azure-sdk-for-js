/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BackupCrrJobDetails } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { RecoveryServicesBackupClient } from "../recoveryServicesBackupClient";
import {
  CrrJobRequest,
  BackupCrrJobDetailsGetOptionalParams,
  BackupCrrJobDetailsGetResponse,
} from "../models";

/** Class containing BackupCrrJobDetails operations. */
export class BackupCrrJobDetailsImpl implements BackupCrrJobDetails {
  private readonly client: RecoveryServicesBackupClient;

  /**
   * Initialize a new instance of the class BackupCrrJobDetails class.
   * @param client Reference to the service client
   */
  constructor(client: RecoveryServicesBackupClient) {
    this.client = client;
  }

  /**
   * Get CRR job details from target region.
   * @param azureRegion Azure region to hit Api
   * @param parameters CRR Job request
   * @param options The options parameters.
   */
  get(
    azureRegion: string,
    parameters: CrrJobRequest,
    options?: BackupCrrJobDetailsGetOptionalParams,
  ): Promise<BackupCrrJobDetailsGetResponse> {
    return this.client.sendOperationRequest(
      { azureRegion, parameters, options },
      getOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupCrrJob",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.JobResource,
    },
    default: {
      bodyMapper: Mappers.NewErrorResponse,
    },
  },
  requestBody: Parameters.parameters1,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.azureRegion,
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer,
};
