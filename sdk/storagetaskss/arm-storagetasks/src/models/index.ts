/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Identity for the storage task. */
export interface StorageTaskIdentity {
  /**
   * The principal ID of resource identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** The identity type. */
  type: IdentityType;
}

/** The storage task action represents conditional statements and operations to be performed on target objects. */
export interface StorageTaskAction {
  /** The if block of storage task operation */
  if: IfCondition;
  /** The else block of storage task operation */
  else?: ElseCondition;
}

/** The if block of storage task operation */
export interface IfCondition {
  /** The condition predicate which is composed of object properties, eg: blob and container properties. */
  condition: string;
  /** List of operations to execute when the condition predicate satisfies. */
  operations: StorageTaskOperationAutoGenerated[];
}

/** Represents an operation to be performed on the object */
export interface StorageTaskOperationAutoGenerated {
  /** The operation to be performed on the object. */
  name: StorageTaskOperation;
  /** Key-value parameters for the operation. */
  parameters?: { [propertyName: string]: string };
  /** Action to be taken when the operation is successful for a object. */
  onSuccess?: "continue";
  /** Action to be taken when the operation fails for a object. */
  onFailure?: "break";
}

/** The else block of storage task operation */
export interface ElseCondition {
  /** List of operations to execute in the else block */
  operations: StorageTaskOperationAutoGenerated[];
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Parameters of the storage task update request */
export interface StorageTaskUpdateParameters {
  /** The identity of the resource. */
  identity?: StorageTaskIdentity;
  /** Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters. */
  tags?: { [propertyName: string]: string };
  /**
   * Storage task version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly taskVersion?: number;
  /** Storage Task is enabled when set to true and disabled when set to false */
  enabled?: boolean;
  /** Text that describes the purpose of the storage task */
  description?: string;
  /** The storage task action that is executed */
  action?: StorageTaskAction;
  /**
   * Represents the provisioning state of the storage task.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The creation date and time of the storage task in UTC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTimeInUtc?: Date;
}

/** The response from the List Storage Tasks operation. */
export interface StorageTasksListResult {
  /**
   * Gets the list of storage tasks and their properties.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: StorageTask[];
  /**
   * Request URL that can be used to query next page of storage tasks. Returned when total number of requested storage tasks exceed maximum page size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** Represents Storage Task. */
export interface StorageTask extends TrackedResource {
  /** Gets or sets the location of the resource. location property cannot be changes for successfully provisioned storage tasks. */
  location?: string;
  /** The managed service identity of the resource. */
  identity?: StorageTaskIdentity;
  /** Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters. */
  tags?: { [propertyName: string]: string };
  /**
   * Storage task version.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly taskVersion?: number;
  /** Storage Task is enabled when set to true and disabled when set to false */
  enabled?: boolean;
  /** Text that describes the purpose of the storage task */
  description?: string;
  /** The storage task action that is executed */
  action?: StorageTaskAction;
  /**
   * Represents the provisioning state of the storage task.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The creation date and time of the storage task in UTC.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationTimeInUtc?: Date;
}

/** Defines headers for StorageTasks_create operation. */
export interface StorageTasksCreateHeaders {
  location?: string;
}

/** Defines headers for StorageTasks_delete operation. */
export interface StorageTasksDeleteHeaders {
  location?: string;
}

/** Defines headers for StorageTasks_update operation. */
export interface StorageTasksUpdateHeaders {
  location?: string;
}

/** Known values of {@link IdentityType} that the service accepts. */
export enum KnownIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned"
}

/**
 * Defines values for IdentityType. \
 * {@link KnownIdentityType} can be used interchangeably with IdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned**
 */
export type IdentityType = string;

/** Known values of {@link StorageTaskOperation} that the service accepts. */
export enum KnownStorageTaskOperation {
  /** SetBlobTier */
  SetBlobTier = "SetBlobTier",
  /** SetBlobTags */
  SetBlobTags = "SetBlobTags",
  /** SetBlobImmutabilityPolicy */
  SetBlobImmutabilityPolicy = "SetBlobImmutabilityPolicy",
  /** SetBlobLegalHold */
  SetBlobLegalHold = "SetBlobLegalHold",
  /** SetBlobExpiry */
  SetBlobExpiry = "SetBlobExpiry",
  /** DeleteBlob */
  DeleteBlob = "DeleteBlob",
  /** UndeleteBlob */
  UndeleteBlob = "UndeleteBlob"
}

/**
 * Defines values for StorageTaskOperation. \
 * {@link KnownStorageTaskOperation} can be used interchangeably with StorageTaskOperation,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SetBlobTier** \
 * **SetBlobTags** \
 * **SetBlobImmutabilityPolicy** \
 * **SetBlobLegalHold** \
 * **SetBlobExpiry** \
 * **DeleteBlob** \
 * **UndeleteBlob**
 */
export type StorageTaskOperation = string;
/** Defines values for ProvisioningState. */
export type ProvisioningState =
  | "ValidateSubscriptionQuotaBegin"
  | "ValidateSubscriptionQuotaEnd"
  | "Creating"
  | "Succeeded"
  | "Deleting"
  | "Canceled"
  | "Failed";

/** Optional parameters. */
export interface StorageTasksCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type StorageTasksCreateResponse = StorageTask;

/** Optional parameters. */
export interface StorageTasksDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type StorageTasksDeleteResponse = StorageTasksDeleteHeaders;

/** Optional parameters. */
export interface StorageTasksGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type StorageTasksGetResponse = StorageTask;

/** Optional parameters. */
export interface StorageTasksUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type StorageTasksUpdateResponse = StorageTask;

/** Optional parameters. */
export interface StorageTasksListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type StorageTasksListBySubscriptionResponse = StorageTasksListResult;

/** Optional parameters. */
export interface StorageTasksListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type StorageTasksListByResourceGroupResponse = StorageTasksListResult;

/** Optional parameters. */
export interface StorageTasksListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type StorageTasksListBySubscriptionNextResponse = StorageTasksListResult;

/** Optional parameters. */
export interface StorageTasksListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type StorageTasksListByResourceGroupNextResponse = StorageTasksListResult;

/** Optional parameters. */
export interface StorageTaskManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
