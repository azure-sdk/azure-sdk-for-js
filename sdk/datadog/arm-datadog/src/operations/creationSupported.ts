/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CreationSupported } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { MicrosoftDatadogClient } from "../microsoftDatadogClient";
import {
  CreationSupportedGetOptionalParams,
  CreationSupportedGetResponse,
} from "../models";

/** Class containing CreationSupported operations. */
export class CreationSupportedImpl implements CreationSupported {
  private readonly client: MicrosoftDatadogClient;

  /**
   * Initialize a new instance of the class CreationSupported class.
   * @param client Reference to the service client
   */
  constructor(client: MicrosoftDatadogClient) {
    this.client = client;
  }

  /**
   * Informs if the current subscription is being already monitored for selected Datadog organization.
   * @param datadogOrganizationId Datadog Organization Id
   * @param options The options parameters.
   */
  get(
    datadogOrganizationId: string,
    options?: CreationSupportedGetOptionalParams,
  ): Promise<CreationSupportedGetResponse> {
    return this.client.sendOperationRequest(
      { datadogOrganizationId, options },
      getOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/providers/Microsoft.Datadog/subscriptionStatuses/default",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.CreateResourceSupportedResponse,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion, Parameters.datadogOrganizationId],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept],
  serializer,
};
