/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  AnalyticsConnectorPatchResource,
  AnalyticsConnectorUpdateOptionalParams,
  AnalyticsConnectorUpdateResponse
} from "../models";

/** Interface representing a AnalyticsConnectorOperations. */
export interface AnalyticsConnectorOperations {
  /**
   * Patch Analytics Connector Service details.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param workspaceName The name of workspace resource.
   * @param analyticsConnectorName The name of Analytics Connector resource.
   * @param analyticsConnectorPatchResource The parameters for updating a Analytics Connector.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    workspaceName: string,
    analyticsConnectorName: string,
    analyticsConnectorPatchResource: AnalyticsConnectorPatchResource,
    options?: AnalyticsConnectorUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<AnalyticsConnectorUpdateResponse>,
      AnalyticsConnectorUpdateResponse
    >
  >;
  /**
   * Patch Analytics Connector Service details.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param workspaceName The name of workspace resource.
   * @param analyticsConnectorName The name of Analytics Connector resource.
   * @param analyticsConnectorPatchResource The parameters for updating a Analytics Connector.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    workspaceName: string,
    analyticsConnectorName: string,
    analyticsConnectorPatchResource: AnalyticsConnectorPatchResource,
    options?: AnalyticsConnectorUpdateOptionalParams
  ): Promise<AnalyticsConnectorUpdateResponse>;
}
