/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Capability,
  CapabilitiesListOptionalParams,
  CapabilitiesGetOptionalParams,
  CapabilitiesGetResponse,
  CapabilitiesCreateOrUpdateOptionalParams,
  CapabilitiesCreateOrUpdateResponse,
  CapabilitiesDeleteOptionalParams,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Capabilities. */
export interface Capabilities {
  /**
   * Get a list of Capability resources that extend a Target resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param parentProviderNamespace The parent resource provider namespace.
   * @param parentResourceType The parent resource type.
   * @param parentResourceName The parent resource name.
   * @param targetName String that represents a Target resource name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    parentProviderNamespace: string,
    parentResourceType: string,
    parentResourceName: string,
    targetName: string,
    options?: CapabilitiesListOptionalParams,
  ): PagedAsyncIterableIterator<Capability>;
  /**
   * Get a Capability resource that extends a Target resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param parentProviderNamespace The parent resource provider namespace.
   * @param parentResourceType The parent resource type.
   * @param parentResourceName The parent resource name.
   * @param targetName String that represents a Target resource name.
   * @param capabilityName String that represents a Capability resource name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    parentProviderNamespace: string,
    parentResourceType: string,
    parentResourceName: string,
    targetName: string,
    capabilityName: string,
    options?: CapabilitiesGetOptionalParams,
  ): Promise<CapabilitiesGetResponse>;
  /**
   * Create or update a Capability resource that extends a Target resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param parentProviderNamespace The parent resource provider namespace.
   * @param parentResourceType The parent resource type.
   * @param parentResourceName The parent resource name.
   * @param targetName String that represents a Target resource name.
   * @param capabilityName String that represents a Capability resource name.
   * @param resource Capability resource to be created or updated.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    parentProviderNamespace: string,
    parentResourceType: string,
    parentResourceName: string,
    targetName: string,
    capabilityName: string,
    resource: Capability,
    options?: CapabilitiesCreateOrUpdateOptionalParams,
  ): Promise<CapabilitiesCreateOrUpdateResponse>;
  /**
   * Delete a Capability that extends a Target resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param parentProviderNamespace The parent resource provider namespace.
   * @param parentResourceType The parent resource type.
   * @param parentResourceName The parent resource name.
   * @param targetName String that represents a Target resource name.
   * @param capabilityName String that represents a Capability resource name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    parentProviderNamespace: string,
    parentResourceType: string,
    parentResourceName: string,
    targetName: string,
    capabilityName: string,
    options?: CapabilitiesDeleteOptionalParams,
  ): Promise<void>;
}
