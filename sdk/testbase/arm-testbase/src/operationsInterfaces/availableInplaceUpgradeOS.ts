/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  AvailableInplaceUpgradeOSResource,
  OsUpdateType,
  AvailableInplaceUpgradeOSListOptionalParams,
  AvailableInplaceUpgradeOSGetOptionalParams,
  AvailableInplaceUpgradeOSGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AvailableInplaceUpgradeOS. */
export interface AvailableInplaceUpgradeOS {
  /**
   * Lists all the available In-place Upgrade OSs to a package under a Test Base Account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param osUpdateType The type of the OS Update.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    testBaseAccountName: string,
    osUpdateType: OsUpdateType,
    options?: AvailableInplaceUpgradeOSListOptionalParams
  ): PagedAsyncIterableIterator<AvailableInplaceUpgradeOSResource>;
  /**
   * Gets an available In-place Upgrade OS to run a package under a Test Base Account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param availableInplaceUpgradeOSResourceName The resource name of an Available In-place Upgrade OS.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    testBaseAccountName: string,
    availableInplaceUpgradeOSResourceName: string,
    options?: AvailableInplaceUpgradeOSGetOptionalParams
  ): Promise<AvailableInplaceUpgradeOSGetResponse>;
}
