/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ChatRequest,
  ChatSessionChatOptionalParams,
  ChatSessionChatResponse
} from "../models";

/** Interface representing a ChatSession. */
export interface ChatSession {
  /**
   * Start a new chat turn. Ask a question and see the answer in response.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param chatSessionName The chat session name.
   * @param parameters Payload to ask a question.
   * @param options The options parameters.
   */
  beginChat(
    resourceGroupName: string,
    testBaseAccountName: string,
    chatSessionName: string,
    parameters: ChatRequest,
    options?: ChatSessionChatOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ChatSessionChatResponse>,
      ChatSessionChatResponse
    >
  >;
  /**
   * Start a new chat turn. Ask a question and see the answer in response.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param chatSessionName The chat session name.
   * @param parameters Payload to ask a question.
   * @param options The options parameters.
   */
  beginChatAndWait(
    resourceGroupName: string,
    testBaseAccountName: string,
    chatSessionName: string,
    parameters: ChatRequest,
    options?: ChatSessionChatOptionalParams
  ): Promise<ChatSessionChatResponse>;
}
