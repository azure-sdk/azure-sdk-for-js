/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  PackageResource,
  PackageCreateOptionalParams,
  PackageCreateResponse,
  PackageUpdateParameters,
  PackageUpdateOptionalParams,
  PackageUpdateResponse,
  PackageDeleteOptionalParams,
  PackageGetOptionalParams,
  PackageGetResponse,
  PackageHardDeleteOptionalParams
} from "../models";

/** Interface representing a Package. */
export interface Package {
  /**
   * Create or replace (overwrite/recreate, with potential downtime) a Test Base Package.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param parameters Parameters supplied to create a Test Base Package.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    testBaseAccountName: string,
    packageName: string,
    parameters: PackageResource,
    options?: PackageCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<PackageCreateResponse>,
      PackageCreateResponse
    >
  >;
  /**
   * Create or replace (overwrite/recreate, with potential downtime) a Test Base Package.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param parameters Parameters supplied to create a Test Base Package.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    testBaseAccountName: string,
    packageName: string,
    parameters: PackageResource,
    options?: PackageCreateOptionalParams
  ): Promise<PackageCreateResponse>;
  /**
   * Update an existing Test Base Package.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param parameters Parameters supplied to update a Test Base Package.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    testBaseAccountName: string,
    packageName: string,
    parameters: PackageUpdateParameters,
    options?: PackageUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<PackageUpdateResponse>,
      PackageUpdateResponse
    >
  >;
  /**
   * Update an existing Test Base Package.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param parameters Parameters supplied to update a Test Base Package.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    testBaseAccountName: string,
    packageName: string,
    parameters: PackageUpdateParameters,
    options?: PackageUpdateOptionalParams
  ): Promise<PackageUpdateResponse>;
  /**
   * Deletes a Test Base Package.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    testBaseAccountName: string,
    packageName: string,
    options?: PackageDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes a Test Base Package.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    testBaseAccountName: string,
    packageName: string,
    options?: PackageDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets a Test Base Package.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    testBaseAccountName: string,
    packageName: string,
    options?: PackageGetOptionalParams
  ): Promise<PackageGetResponse>;
  /**
   * Hard Delete a Test Base Package.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param options The options parameters.
   */
  beginHardDelete(
    resourceGroupName: string,
    testBaseAccountName: string,
    packageName: string,
    options?: PackageHardDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Hard Delete a Test Base Package.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param options The options parameters.
   */
  beginHardDeleteAndWait(
    resourceGroupName: string,
    testBaseAccountName: string,
    packageName: string,
    options?: PackageHardDeleteOptionalParams
  ): Promise<void>;
}
