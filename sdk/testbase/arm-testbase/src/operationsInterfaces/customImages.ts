/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  CustomImageResource,
  CustomImagesListByTestBaseAccountOptionalParams,
  CustomImagesCreateOptionalParams,
  CustomImagesCreateResponse,
  CustomImagesDeleteOptionalParams,
  CustomImagesDeleteResponse,
  CustomImagesGetOptionalParams,
  CustomImagesGetResponse,
  ImageNameCheckAvailabilityParameters,
  CustomImagesCheckImageNameAvailabilityOptionalParams,
  CustomImagesCheckImageNameAvailabilityResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a CustomImages. */
export interface CustomImages {
  /**
   * Lists all the custom images under a test base account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param options The options parameters.
   */
  listByTestBaseAccount(
    resourceGroupName: string,
    testBaseAccountName: string,
    options?: CustomImagesListByTestBaseAccountOptionalParams
  ): PagedAsyncIterableIterator<CustomImageResource>;
  /**
   * Creates a test base custom image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param customImageName The resource name of the test base custom image.
   * @param parameters Parameters supplied to create a test base custom image.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    testBaseAccountName: string,
    customImageName: string,
    parameters: CustomImageResource,
    options?: CustomImagesCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<CustomImagesCreateResponse>,
      CustomImagesCreateResponse
    >
  >;
  /**
   * Creates a test base custom image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param customImageName The resource name of the test base custom image.
   * @param parameters Parameters supplied to create a test base custom image.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    testBaseAccountName: string,
    customImageName: string,
    parameters: CustomImageResource,
    options?: CustomImagesCreateOptionalParams
  ): Promise<CustomImagesCreateResponse>;
  /**
   * Deletes a test base custom image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param customImageName The resource name of the test base custom image.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    testBaseAccountName: string,
    customImageName: string,
    options?: CustomImagesDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<CustomImagesDeleteResponse>,
      CustomImagesDeleteResponse
    >
  >;
  /**
   * Deletes a test base custom image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param customImageName The resource name of the test base custom image.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    testBaseAccountName: string,
    customImageName: string,
    options?: CustomImagesDeleteOptionalParams
  ): Promise<CustomImagesDeleteResponse>;
  /**
   * Gets a test base custom image.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param customImageName The resource name of the test base custom image.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    testBaseAccountName: string,
    customImageName: string,
    options?: CustomImagesGetOptionalParams
  ): Promise<CustomImagesGetResponse>;
  /**
   * Checks that the test vase custom image generated from VHD resource has valid and unique definition
   * and version, return architecture and OS state of potential existing image definition.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param parameters Parameters supplied to the test base custom image CheckAvailability operation.
   * @param options The options parameters.
   */
  checkImageNameAvailability(
    resourceGroupName: string,
    testBaseAccountName: string,
    parameters: ImageNameCheckAvailabilityParameters,
    options?: CustomImagesCheckImageNameAvailabilityOptionalParams
  ): Promise<CustomImagesCheckImageNameAvailabilityResponse>;
}
