/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const PreReleaseAccessRequestSpec: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PreReleaseAccessRequestSpec",
    modelProperties: {
      organizationName: {
        serializedName: "organizationName",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      engagements: {
        serializedName: "engagements",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      streetAddress: {
        serializedName: "streetAddress",
        type: {
          name: "String"
        }
      },
      city: {
        serializedName: "city",
        type: {
          name: "String"
        }
      },
      stateOrProvince: {
        serializedName: "stateOrProvince",
        type: {
          name: "String"
        }
      },
      zipCode: {
        serializedName: "zipCode",
        type: {
          name: "String"
        }
      },
      countryAndRegion: {
        serializedName: "countryAndRegion",
        type: {
          name: "String"
        }
      },
      companyWebsite: {
        serializedName: "companyWebsite",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const ActionRequests: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionRequests",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActionRequest"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChatSessionResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChatSessionResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ChatSessionResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChatRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChatRequest",
    modelProperties: {
      question: {
        serializedName: "question",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChatResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChatResponse",
    modelProperties: {
      question: {
        serializedName: "properties.question",
        required: true,
        type: {
          name: "String"
        }
      },
      answer: {
        serializedName: "properties.answer",
        required: true,
        type: {
          name: "String"
        }
      },
      citations: {
        serializedName: "properties.citations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AnswerCitation"
            }
          }
        }
      },
      usage: {
        serializedName: "properties.usage",
        required: true,
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      limit: {
        serializedName: "properties.limit",
        required: true,
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AnswerCitation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnswerCitation",
    modelProperties: {
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      chunkIndex: {
        serializedName: "chunkIndex",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CustomImageListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomImageListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomImageResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageValidationResults: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImageValidationResults",
    modelProperties: {
      results: {
        serializedName: "results",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VerificationResult"
            }
          }
        }
      }
    }
  }
};

export const VerificationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VerificationResult",
    modelProperties: {
      verificationName: {
        serializedName: "verificationName",
        type: {
          name: "String"
        }
      },
      result: {
        serializedName: "result",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageNameCheckAvailabilityParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImageNameCheckAvailabilityParameters",
    modelProperties: {
      definitionName: {
        serializedName: "definitionName",
        required: true,
        type: {
          name: "String"
        }
      },
      versionName: {
        serializedName: "versionName",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageDefinitionsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImageDefinitionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImageDefinitionResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VHDListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VHDListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VHDResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DraftPackageListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DraftPackageListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DraftPackageResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DraftPackageIntuneAppMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DraftPackageIntuneAppMetadata",
    modelProperties: {
      intuneApp: {
        serializedName: "intuneApp",
        type: {
          name: "Composite",
          className: "DraftPackageIntuneAppMetadataItem"
        }
      },
      intuneAppDependencies: {
        serializedName: "intuneAppDependencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DraftPackageIntuneAppMetadataItem"
            }
          }
        }
      }
    }
  }
};

export const DraftPackageIntuneAppMetadataItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DraftPackageIntuneAppMetadataItem",
    modelProperties: {
      appName: {
        serializedName: "appName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "String"
        }
      },
      createDate: {
        serializedName: "createDate",
        type: {
          name: "DateTime"
        }
      },
      dependentAppCount: {
        serializedName: "dependentAppCount",
        type: {
          name: "Number"
        }
      },
      installCommand: {
        serializedName: "installCommand",
        type: {
          name: "String"
        }
      },
      uninstallCommand: {
        serializedName: "uninstallCommand",
        type: {
          name: "String"
        }
      },
      lastProcessed: {
        serializedName: "lastProcessed",
        type: {
          name: "Number"
        }
      },
      dependencyIds: {
        serializedName: "dependencyIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      setupFile: {
        serializedName: "setupFile",
        type: {
          name: "String"
        }
      },
      minimumSupportedOS: {
        serializedName: "minimumSupportedOS",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      expectedExitCodes: {
        serializedName: "expectedExitCodes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const HighlightedFile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HighlightedFile",
    modelProperties: {
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String"
        }
      },
      visited: {
        defaultValue: false,
        serializedName: "visited",
        type: {
          name: "Boolean"
        }
      },
      sections: {
        serializedName: "sections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TabState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TabState",
    modelProperties: {
      currentTab: {
        serializedName: "currentTab",
        type: {
          name: "String"
        }
      },
      visitedTabs: {
        serializedName: "visitedTabs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TargetOSInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TargetOSInfo",
    modelProperties: {
      osUpdateType: {
        serializedName: "osUpdateType",
        required: true,
        type: {
          name: "String"
        }
      },
      targetOSs: {
        serializedName: "targetOSs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      insiderChannelIds: {
        serializedName: "insiderChannelIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      baselineOSs: {
        serializedName: "baselineOSs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      targetOSImageIds: {
        serializedName: "targetOSImageIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const InplaceUpgradeOSInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InplaceUpgradeOSInfo",
    modelProperties: {
      baselineOS: {
        serializedName: "baselineOS",
        type: {
          name: "Composite",
          className: "OsProperties"
        }
      },
      targetOS: {
        serializedName: "targetOS",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OsProperties",
    modelProperties: {
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      },
      customImageId: {
        serializedName: "customImageId",
        type: {
          name: "String"
        }
      },
      customImageDisplayName: {
        serializedName: "customImageDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      releaseProperties: {
        serializedName: "releaseProperties",
        type: {
          name: "Composite",
          className: "ReleaseProperties"
        }
      }
    }
  }
};

export const ReleaseProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReleaseProperties",
    modelProperties: {
      releaseName: {
        serializedName: "releaseName",
        type: {
          name: "String"
        }
      },
      buildNumber: {
        serializedName: "buildNumber",
        type: {
          name: "String"
        }
      },
      buildRevision: {
        serializedName: "buildRevision",
        type: {
          name: "String"
        }
      },
      releaseVersionDate: {
        serializedName: "releaseVersionDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const FirstPartyAppDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FirstPartyAppDefinition",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      architecture: {
        serializedName: "architecture",
        type: {
          name: "String"
        }
      },
      channel: {
        serializedName: "channel",
        type: {
          name: "String"
        }
      },
      ring: {
        serializedName: "ring",
        type: {
          name: "String"
        }
      },
      interopExecutionMode: {
        defaultValue: "firstPartyAppWithTests",
        serializedName: "interopExecutionMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryAppDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryAppDefinition",
    modelProperties: {
      skuId: {
        serializedName: "skuId",
        required: true,
        type: {
          name: "String"
        }
      },
      isConsented: {
        defaultValue: false,
        serializedName: "isConsented",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Test: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Test",
    modelProperties: {
      testType: {
        serializedName: "testType",
        required: true,
        type: {
          name: "String"
        }
      },
      validationRunStatus: {
        serializedName: "validationRunStatus",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      validationResultId: {
        serializedName: "validationResultId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isActive: {
        serializedName: "isActive",
        type: {
          name: "Boolean"
        }
      },
      commands: {
        serializedName: "commands",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Command"
            }
          }
        }
      }
    }
  }
};

export const Command: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Command",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      action: {
        serializedName: "action",
        required: true,
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        required: true,
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      runElevated: {
        serializedName: "runElevated",
        type: {
          name: "Boolean"
        }
      },
      restartAfter: {
        serializedName: "restartAfter",
        type: {
          name: "Boolean"
        }
      },
      maxRunTime: {
        serializedName: "maxRunTime",
        type: {
          name: "Number"
        }
      },
      runAsInteractive: {
        serializedName: "runAsInteractive",
        type: {
          name: "Boolean"
        }
      },
      alwaysRun: {
        serializedName: "alwaysRun",
        type: {
          name: "Boolean"
        }
      },
      applyUpdateBefore: {
        serializedName: "applyUpdateBefore",
        type: {
          name: "Boolean"
        }
      },
      install1PAppBefore: {
        serializedName: "install1PAppBefore",
        type: {
          name: "Boolean"
        }
      },
      preUpgrade: {
        serializedName: "preUpgrade",
        type: {
          name: "Boolean"
        }
      },
      postUpgrade: {
        serializedName: "postUpgrade",
        type: {
          name: "Boolean"
        }
      },
      enrollIntuneBefore: {
        serializedName: "enrollIntuneBefore",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const IntuneEnrollmentMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IntuneEnrollmentMetadata",
    modelProperties: {
      appList: {
        serializedName: "appList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnrolledIntuneApp"
            }
          }
        }
      },
      credentialId: {
        serializedName: "credentialId",
        type: {
          name: "String"
        }
      },
      expectedDeploymentDurationInMinute: {
        serializedName: "expectedDeploymentDurationInMinute",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EnrolledIntuneApp: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnrolledIntuneApp",
    modelProperties: {
      appName: {
        serializedName: "appName",
        required: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "appId",
        required: true,
        type: {
          name: "String"
        }
      },
      expectedInstallationPath: {
        serializedName: "expectedInstallationPath",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DraftPackageUpdateParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DraftPackageUpdateParameters",
    modelProperties: {
      applicationName: {
        serializedName: "properties.applicationName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      appFileName: {
        serializedName: "properties.appFileName",
        type: {
          name: "String"
        }
      },
      sourceType: {
        serializedName: "properties.sourceType",
        type: {
          name: "String"
        }
      },
      useSample: {
        serializedName: "properties.useSample",
        type: {
          name: "Boolean"
        }
      },
      comments: {
        serializedName: "properties.comments",
        type: {
          name: "String"
        }
      },
      intuneMetadata: {
        serializedName: "properties.intuneMetadata",
        type: {
          name: "Composite",
          className: "DraftPackageIntuneAppMetadata"
        }
      },
      highlightedFiles: {
        serializedName: "properties.highlightedFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HighlightedFile"
            }
          }
        }
      },
      packageTags: {
        serializedName: "properties.packageTags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      packageId: {
        serializedName: "properties.packageId",
        type: {
          name: "String"
        }
      },
      useAutofill: {
        serializedName: "properties.useAutofill",
        type: {
          name: "Boolean"
        }
      },
      executableLaunchCommand: {
        serializedName: "properties.executableLaunchCommand",
        type: {
          name: "String"
        }
      },
      processName: {
        serializedName: "properties.processName",
        type: {
          name: "String"
        }
      },
      tabState: {
        serializedName: "properties.tabState",
        type: {
          name: "Composite",
          className: "TabState"
        }
      },
      testTypes: {
        serializedName: "properties.testTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      targetOSList: {
        serializedName: "properties.targetOSList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TargetOSInfo"
            }
          }
        }
      },
      inplaceUpgradeOSPair: {
        serializedName: "properties.inplaceUpgradeOSPair",
        type: {
          name: "Composite",
          className: "InplaceUpgradeOSInfo"
        }
      },
      flightingRing: {
        serializedName: "properties.flightingRing",
        type: {
          name: "String"
        }
      },
      firstPartyApps: {
        serializedName: "properties.firstPartyApps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FirstPartyAppDefinition"
            }
          }
        }
      },
      galleryApps: {
        serializedName: "properties.galleryApps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryAppDefinition"
            }
          }
        }
      },
      tests: {
        serializedName: "properties.tests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Test"
            }
          }
        }
      },
      intuneEnrollmentMetadata: {
        serializedName: "properties.intuneEnrollmentMetadata",
        type: {
          name: "Composite",
          className: "IntuneEnrollmentMetadata"
        }
      }
    }
  }
};

export const DraftPackageGetPathResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DraftPackageGetPathResponse",
    modelProperties: {
      baseUrl: {
        serializedName: "baseUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      draftPackagePath: {
        serializedName: "draftPackagePath",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      workingPath: {
        serializedName: "workingPath",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sasToken: {
        serializedName: "sasToken",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      expirationTime: {
        serializedName: "expirationTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CopyFromPackageOperationParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CopyFromPackageOperationParameters",
    modelProperties: {
      packageId: {
        serializedName: "packageId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExtractFileOperationParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtractFileOperationParameters",
    modelProperties: {
      fileType: {
        serializedName: "fileType",
        type: {
          name: "String"
        }
      },
      sourceFile: {
        serializedName: "sourceFile",
        required: true,
        type: {
          name: "String"
        }
      },
      intuneAppId: {
        serializedName: "intuneAppId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenerateOperationParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenerateOperationParameters",
    modelProperties: {
      forceGenerate: {
        defaultValue: false,
        serializedName: "forceGenerate",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const FreeHourBalancesListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FreeHourBalancesListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FreeHourBalanceResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingHubGetFreeHourBalanceResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingHubGetFreeHourBalanceResponse",
    modelProperties: {
      totalRemainingFreeHours: {
        serializedName: "totalRemainingFreeHours",
        type: {
          name: "Number"
        }
      },
      incrementEntries: {
        serializedName: "incrementEntries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingHubFreeHourIncrementEntry"
            }
          }
        }
      }
    }
  }
};

export const BillingHubFreeHourIncrementEntry: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingHubFreeHourIncrementEntry",
    modelProperties: {
      freeHourType: {
        serializedName: "freeHourType",
        type: {
          name: "String"
        }
      },
      freeHourStatus: {
        serializedName: "freeHourStatus",
        type: {
          name: "String"
        }
      },
      createTimeStamp: {
        serializedName: "createTimeStamp",
        type: {
          name: "DateTime"
        }
      },
      expirationTimeStamp: {
        serializedName: "expirationTimeStamp",
        type: {
          name: "DateTime"
        }
      },
      incrementalFreeHours: {
        serializedName: "incrementalFreeHours",
        type: {
          name: "Number"
        }
      },
      remainingFreeHours: {
        serializedName: "remainingFreeHours",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TestBaseAccountSKUListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestBaseAccountSKUListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestBaseAccountSKU"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountSKU: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestBaseAccountSKU",
    modelProperties: {
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        required: true,
        type: {
          name: "String"
        }
      },
      capabilities: {
        serializedName: "capabilities",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestBaseAccountSKUCapability"
            }
          }
        }
      },
      locations: {
        serializedName: "locations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TestBaseAccountSKUCapability: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestBaseAccountSKUCapability",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestBaseAccountListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestBaseAccountResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemAssignedServiceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemAssignedServiceIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "Uuid"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountUpdateParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestBaseAccountUpdateParameters",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "SystemAssignedServiceIdentity"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      sku: {
        serializedName: "properties.sku",
        type: {
          name: "Composite",
          className: "TestBaseAccountSKU"
        }
      }
    }
  }
};

export const TestBaseAccountUsageDataList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestBaseAccountUsageDataList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestBaseAccountUsageData"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountUsageData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestBaseAccountUsageData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "TestBaseAccountUsageName"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      limit: {
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      currentValue: {
        serializedName: "currentValue",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TestBaseAccountUsageName: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestBaseAccountUsageName",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetFileUploadURLParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetFileUploadURLParameters",
    modelProperties: {
      blobName: {
        serializedName: "blobName",
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileUploadURLResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FileUploadURLResponse",
    modelProperties: {
      uploadUrl: {
        serializedName: "uploadUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      blobPath: {
        serializedName: "blobPath",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AvailableOSListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableOSListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvailableOSResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FeatureUpdateSupportedOsesResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FeatureUpdateSupportedOsesResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FeatureUpdateSupportedOsesResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FlightingRingListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlightingRingListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FlightingRingResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FirstPartyAppListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FirstPartyAppListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FirstPartyAppResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryAppListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryAppListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryAppResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryAppSkuListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryAppSkuListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryAppSkuResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryAppSkuProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryAppSkuProperties",
    uberParent: "GalleryAppSkuProperties",
    polymorphicDiscriminator: {
      serializedName: "applicationType",
      clientName: "applicationType"
    },
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      applicationType: {
        serializedName: "applicationType",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestTypeListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestTypeListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestTypeResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageCheckNameAvailabilityParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageCheckNameAvailabilityParameters",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      applicationName: {
        serializedName: "applicationName",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameAvailabilityResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityResult",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageValidationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageValidationResult",
    modelProperties: {
      validationName: {
        serializedName: "validationName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isValid: {
        serializedName: "isValid",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      errors: {
        serializedName: "errors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PackageUpdateParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageUpdateParameters",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      draftPackageId: {
        serializedName: "properties.draftPackageId",
        type: {
          name: "String"
        }
      },
      isEnabled: {
        serializedName: "properties.isEnabled",
        type: {
          name: "Boolean"
        }
      },
      blobPath: {
        serializedName: "properties.blobPath",
        type: {
          name: "String"
        }
      },
      targetOSList: {
        serializedName: "properties.targetOSList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TargetOSInfo"
            }
          }
        }
      },
      inplaceUpgradeOSPair: {
        serializedName: "properties.inplaceUpgradeOSPair",
        type: {
          name: "Composite",
          className: "InplaceUpgradeOSInfo"
        }
      },
      flightingRing: {
        serializedName: "properties.flightingRing",
        type: {
          name: "String"
        }
      },
      firstPartyApps: {
        serializedName: "properties.firstPartyApps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FirstPartyAppDefinition"
            }
          }
        }
      },
      tests: {
        serializedName: "properties.tests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Test"
            }
          }
        }
      },
      intuneEnrollmentMetadata: {
        serializedName: "properties.intuneEnrollmentMetadata",
        type: {
          name: "Composite",
          className: "IntuneEnrollmentMetadata"
        }
      }
    }
  }
};

export const DownloadURLResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DownloadURLResponse",
    modelProperties: {
      downloadUrl: {
        serializedName: "downloadUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      expirationTime: {
        serializedName: "expirationTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const PackageRunTestParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageRunTestParameters",
    modelProperties: {
      testType: {
        serializedName: "testType",
        type: {
          name: "String"
        }
      },
      osUpdateType: {
        serializedName: "osUpdateType",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      },
      releaseName: {
        serializedName: "releaseName",
        type: {
          name: "String"
        }
      },
      flightingRing: {
        serializedName: "flightingRing",
        type: {
          name: "String"
        }
      },
      customImageId: {
        serializedName: "customImageId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestSummaryListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestSummaryListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestSummaryResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OSUpdatesTestSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OSUpdatesTestSummary",
    modelProperties: {
      executionStatus: {
        serializedName: "executionStatus",
        type: {
          name: "String"
        }
      },
      testStatus: {
        serializedName: "testStatus",
        type: {
          name: "String"
        }
      },
      grade: {
        serializedName: "grade",
        type: {
          name: "String"
        }
      },
      testRunTime: {
        serializedName: "testRunTime",
        type: {
          name: "String"
        }
      },
      osUpdateTestSummaries: {
        serializedName: "osUpdateTestSummaries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OSUpdateTestSummary"
            }
          }
        }
      }
    }
  }
};

export const OSUpdateTestSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OSUpdateTestSummary",
    modelProperties: {
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      },
      customImageId: {
        serializedName: "customImageId",
        type: {
          name: "String"
        }
      },
      customImageDisplayName: {
        serializedName: "customImageDisplayName",
        type: {
          name: "String"
        }
      },
      releaseName: {
        serializedName: "releaseName",
        type: {
          name: "String"
        }
      },
      buildVersion: {
        serializedName: "buildVersion",
        type: {
          name: "String"
        }
      },
      buildRevision: {
        serializedName: "buildRevision",
        type: {
          name: "String"
        }
      },
      releaseVersionDate: {
        serializedName: "releaseVersionDate",
        type: {
          name: "DateTime"
        }
      },
      flightingRing: {
        serializedName: "flightingRing",
        type: {
          name: "String"
        }
      },
      executionStatus: {
        serializedName: "executionStatus",
        type: {
          name: "String"
        }
      },
      testStatus: {
        serializedName: "testStatus",
        type: {
          name: "String"
        }
      },
      grade: {
        serializedName: "grade",
        type: {
          name: "String"
        }
      },
      testRunTime: {
        serializedName: "testRunTime",
        type: {
          name: "String"
        }
      },
      testType: {
        serializedName: "testType",
        type: {
          name: "String"
        }
      },
      inplaceUpgradeBaselineProperties: {
        serializedName: "inplaceUpgradeBaselineProperties",
        type: {
          name: "Composite",
          className: "OsProperties"
        }
      }
    }
  }
};

export const TestResultListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestResultListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestResultResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestResultAnalysisSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestResultAnalysisSummary",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      analysisStatus: {
        serializedName: "analysisStatus",
        type: {
          name: "String"
        }
      },
      grade: {
        serializedName: "grade",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InplaceUpgradeProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InplaceUpgradeProperties",
    modelProperties: {
      upgradeStartTime: {
        serializedName: "upgradeStartTime",
        type: {
          name: "DateTime"
        }
      },
      upgradeEndTime: {
        serializedName: "upgradeEndTime",
        type: {
          name: "DateTime"
        }
      },
      customImageId: {
        serializedName: "customImageId",
        type: {
          name: "String"
        }
      },
      customImageDisplayName: {
        serializedName: "customImageDisplayName",
        type: {
          name: "String"
        }
      },
      baselineOsName: {
        serializedName: "baselineOsName",
        type: {
          name: "String"
        }
      },
      baselineReleaseName: {
        serializedName: "baselineReleaseName",
        type: {
          name: "String"
        }
      },
      baselineBuildNumber: {
        serializedName: "baselineBuildNumber",
        type: {
          name: "String"
        }
      },
      baselineBuildRevision: {
        serializedName: "baselineBuildRevision",
        type: {
          name: "String"
        }
      },
      baselineKbNumber: {
        serializedName: "baselineKbNumber",
        type: {
          name: "String"
        }
      },
      baselineReleaseVersionDate: {
        serializedName: "baselineReleaseVersionDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const TestResultFirstPartyAppDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestResultFirstPartyAppDefinition",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      architecture: {
        serializedName: "architecture",
        type: {
          name: "String"
        }
      },
      channel: {
        serializedName: "channel",
        type: {
          name: "String"
        }
      },
      ring: {
        serializedName: "ring",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OSUpdateListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OSUpdateListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OSUpdateResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FavoriteProcessListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FavoriteProcessListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FavoriteProcessResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnalysisResultListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisResultListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AnalysisResultSingletonResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnalysisResultSingletonResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisResultSingletonResourceProperties",
    uberParent: "AnalysisResultSingletonResourceProperties",
    polymorphicDiscriminator: {
      serializedName: "analysisResultType",
      clientName: "analysisResultType"
    },
    modelProperties: {
      grade: {
        serializedName: "grade",
        type: {
          name: "String"
        }
      },
      analysisResultType: {
        serializedName: "analysisResultType",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestResultConsoleLogDownloadURLParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestResultConsoleLogDownloadURLParameters",
    modelProperties: {
      logFileName: {
        serializedName: "logFileName",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmailEventListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailEventListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EmailEventResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomerEventListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomerEventListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomerEventResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationEventReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationEventReceiver",
    modelProperties: {
      receiverType: {
        serializedName: "receiverType",
        type: {
          name: "String"
        }
      },
      receiverValue: {
        serializedName: "receiverValue",
        type: {
          name: "Composite",
          className: "NotificationReceiverValue"
        }
      }
    }
  }
};

export const NotificationReceiverValue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationReceiverValue",
    modelProperties: {
      userObjectReceiverValue: {
        serializedName: "userObjectReceiverValue",
        type: {
          name: "Composite",
          className: "UserObjectReceiverValue"
        }
      },
      subscriptionReceiverValue: {
        serializedName: "subscriptionReceiverValue",
        type: {
          name: "Composite",
          className: "SubscriptionReceiverValue"
        }
      },
      distributionGroupListReceiverValue: {
        serializedName: "distributionGroupListReceiverValue",
        type: {
          name: "Composite",
          className: "DistributionGroupListReceiverValue"
        }
      }
    }
  }
};

export const UserObjectReceiverValue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserObjectReceiverValue",
    modelProperties: {
      userObjectIds: {
        serializedName: "userObjectIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SubscriptionReceiverValue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionReceiverValue",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DistributionGroupListReceiverValue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DistributionGroupListReceiverValue",
    modelProperties: {
      distributionGroups: {
        serializedName: "distributionGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingHubGetUsageRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingHubGetUsageRequest",
    modelProperties: {
      startTimeStamp: {
        serializedName: "startTimeStamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      endTimeStamp: {
        serializedName: "endTimeStamp",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      pageSize: {
        serializedName: "pageSize",
        type: {
          name: "Number"
        }
      },
      pageIndex: {
        serializedName: "pageIndex",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const BillingHubGetUsageResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingHubGetUsageResponse",
    modelProperties: {
      totalUsedFreeHours: {
        serializedName: "totalUsedFreeHours",
        type: {
          name: "Number"
        }
      },
      totalUsedBillableHours: {
        serializedName: "totalUsedBillableHours",
        type: {
          name: "Number"
        }
      },
      totalCharges: {
        serializedName: "totalCharges",
        type: {
          name: "Number"
        }
      },
      packageUsageEntries: {
        serializedName: "packageUsageEntries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingHubPackageUsage"
            }
          }
        }
      },
      nextRequest: {
        serializedName: "nextRequest",
        type: {
          name: "Composite",
          className: "BillingHubGetUsageRequest"
        }
      }
    }
  }
};

export const BillingHubPackageUsage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingHubPackageUsage",
    modelProperties: {
      applicationName: {
        serializedName: "applicationName",
        type: {
          name: "String"
        }
      },
      applicationVersion: {
        serializedName: "applicationVersion",
        type: {
          name: "String"
        }
      },
      azureResourceUri: {
        serializedName: "azureResourceUri",
        type: {
          name: "String"
        }
      },
      totalUsedFreeHours: {
        serializedName: "totalUsedFreeHours",
        type: {
          name: "Number"
        }
      },
      totalUsedBillableHours: {
        serializedName: "totalUsedBillableHours",
        type: {
          name: "Number"
        }
      },
      totalCharges: {
        serializedName: "totalCharges",
        type: {
          name: "Number"
        }
      },
      usageEntriesGroupedByUpdateType: {
        serializedName: "usageEntriesGroupedByUpdateType",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingHubUsageGroupedByUpdateType"
            }
          }
        }
      }
    }
  }
};

export const BillingHubUsageGroupedByUpdateType: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingHubUsageGroupedByUpdateType",
    modelProperties: {
      updateType: {
        serializedName: "updateType",
        type: {
          name: "String"
        }
      },
      totalUsedFreeHours: {
        serializedName: "totalUsedFreeHours",
        type: {
          name: "Number"
        }
      },
      totalUsedBillableHours: {
        serializedName: "totalUsedBillableHours",
        type: {
          name: "Number"
        }
      },
      totalCharges: {
        serializedName: "totalCharges",
        type: {
          name: "Number"
        }
      },
      usageGroups: {
        serializedName: "usageGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingHubUsageGroup"
            }
          }
        }
      }
    }
  }
};

export const BillingHubUsageGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingHubUsageGroup",
    modelProperties: {
      totalUsedFreeHours: {
        serializedName: "totalUsedFreeHours",
        type: {
          name: "Number"
        }
      },
      totalUsedBillableHours: {
        serializedName: "totalUsedBillableHours",
        type: {
          name: "Number"
        }
      },
      totalCharges: {
        serializedName: "totalCharges",
        type: {
          name: "Number"
        }
      },
      releaseBuildRevision: {
        serializedName: "releaseBuildRevision",
        type: {
          name: "Number"
        }
      },
      releaseBuildNumber: {
        serializedName: "releaseBuildNumber",
        type: {
          name: "Number"
        }
      },
      releaseBuildDate: {
        serializedName: "releaseBuildDate",
        type: {
          name: "DateTime"
        }
      },
      osBuild: {
        serializedName: "osBuild",
        type: {
          name: "String"
        }
      },
      release: {
        serializedName: "release",
        type: {
          name: "String"
        }
      },
      testType: {
        serializedName: "testType",
        type: {
          name: "String"
        }
      },
      productFamily: {
        serializedName: "productFamily",
        type: {
          name: "String"
        }
      },
      executionUsageDetails: {
        serializedName: "executionUsageDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingHubExecutionUsageDetail"
            }
          }
        }
      }
    }
  }
};

export const BillingHubExecutionUsageDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingHubExecutionUsageDetail",
    modelProperties: {
      applicationName: {
        serializedName: "applicationName",
        type: {
          name: "String"
        }
      },
      applicationVersion: {
        serializedName: "applicationVersion",
        type: {
          name: "String"
        }
      },
      executionRequestId: {
        serializedName: "executionRequestId",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "String"
        }
      },
      meterId: {
        serializedName: "meterId",
        type: {
          name: "String"
        }
      },
      startTimeStamp: {
        serializedName: "startTimeStamp",
        type: {
          name: "DateTime"
        }
      },
      endTimeStamp: {
        serializedName: "endTimeStamp",
        type: {
          name: "DateTime"
        }
      },
      osBuild: {
        serializedName: "osBuild",
        type: {
          name: "String"
        }
      },
      release: {
        serializedName: "release",
        type: {
          name: "String"
        }
      },
      testType: {
        serializedName: "testType",
        type: {
          name: "String"
        }
      },
      updateType: {
        serializedName: "updateType",
        type: {
          name: "String"
        }
      },
      usedFreeHours: {
        serializedName: "usedFreeHours",
        type: {
          name: "Number"
        }
      },
      usedBillableHours: {
        serializedName: "usedBillableHours",
        type: {
          name: "Number"
        }
      },
      billedCharges: {
        serializedName: "billedCharges",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AvailableInplaceUpgradeOSListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableInplaceUpgradeOSListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvailableInplaceUpgradeOSResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CredentialListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CredentialListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CredentialResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CredentialProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CredentialProperties",
    uberParent: "CredentialProperties",
    polymorphicDiscriminator: {
      serializedName: "credentialType",
      clientName: "credentialType"
    },
    modelProperties: {
      credentialType: {
        serializedName: "credentialType",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageDefinitionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImageDefinitionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImageDefinitionResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetImageDefinitionParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetImageDefinitionParameters",
    modelProperties: {
      definitionName: {
        serializedName: "definitionName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScriptExecutionResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScriptExecutionResult",
    modelProperties: {
      scriptName: {
        serializedName: "scriptName",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      exitCode: {
        serializedName: "exitCode",
        type: {
          name: "Number"
        }
      },
      timedOut: {
        serializedName: "timedOut",
        type: {
          name: "Boolean"
        }
      },
      stdoutLogFileName: {
        serializedName: "stdoutLogFileName",
        type: {
          name: "String"
        }
      },
      stderrLogFileName: {
        serializedName: "stderrLogFileName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReliabilityResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReliabilityResult",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      launchCount: {
        serializedName: "launchCount",
        type: {
          name: "Number"
        }
      },
      crashCount: {
        serializedName: "crashCount",
        type: {
          name: "Number"
        }
      },
      hangCount: {
        serializedName: "hangCount",
        type: {
          name: "Number"
        }
      },
      regressionGrade: {
        serializedName: "regressionGrade",
        type: {
          name: "String"
        }
      },
      crashRegressionGrade: {
        serializedName: "crashRegressionGrade",
        type: {
          name: "String"
        }
      },
      crashRegressionTestDetails: {
        serializedName: "crashRegressionTestDetails",
        type: {
          name: "Composite",
          className: "RegressionTestDetails"
        }
      },
      hangRegressionGrade: {
        serializedName: "hangRegressionGrade",
        type: {
          name: "String"
        }
      },
      hangRegressionTestDetails: {
        serializedName: "hangRegressionTestDetails",
        type: {
          name: "Composite",
          className: "RegressionTestDetails"
        }
      }
    }
  }
};

export const RegressionTestDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegressionTestDetails",
    modelProperties: {
      diff: {
        serializedName: "diff",
        type: {
          name: "Number"
        }
      },
      isRegressed: {
        serializedName: "isRegressed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const UtilizationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UtilizationResult",
    modelProperties: {
      process: {
        serializedName: "process",
        type: {
          name: "String"
        }
      },
      upperBound: {
        serializedName: "upperBound",
        type: {
          name: "Composite",
          className: "UtilizationBound"
        }
      },
      lowerBound: {
        serializedName: "lowerBound",
        type: {
          name: "Composite",
          className: "UtilizationBound"
        }
      },
      utilization: {
        serializedName: "utilization",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UtilizationEntry"
            }
          }
        }
      }
    }
  }
};

export const UtilizationBound: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UtilizationBound",
    modelProperties: {
      percentile: {
        serializedName: "percentile",
        type: {
          name: "Number"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const UtilizationEntry: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UtilizationEntry",
    modelProperties: {
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RegressionResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegressionResult",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      grade: {
        serializedName: "grade",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "String"
        }
      },
      diff: {
        serializedName: "diff",
        type: {
          name: "Number"
        }
      },
      isRegressed: {
        serializedName: "isRegressed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const TestAnalysisResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestAnalysisResult",
    modelProperties: {
      blobData: {
        serializedName: "blobData",
        type: {
          name: "String"
        }
      },
      testAnalysisStatus: {
        serializedName: "testAnalysisStatus",
        type: {
          name: "String"
        }
      },
      identifiedFailures: {
        serializedName: "identifiedFailures",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IdentifiedFailure"
            }
          }
        }
      }
    }
  }
};

export const IdentifiedFailure: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IdentifiedFailure",
    modelProperties: {
      failureId: {
        serializedName: "failureId",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      guidance: {
        serializedName: "guidance",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingHubUsage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BillingHubUsage",
    modelProperties: {
      applicationName: {
        serializedName: "applicationName",
        type: {
          name: "String"
        }
      },
      applicationVersion: {
        serializedName: "applicationVersion",
        type: {
          name: "String"
        }
      },
      azureResourceUri: {
        serializedName: "azureResourceUri",
        type: {
          name: "String"
        }
      },
      totalUsedFreeHours: {
        serializedName: "totalUsedFreeHours",
        type: {
          name: "Number"
        }
      },
      totalUsedBillableHours: {
        serializedName: "totalUsedBillableHours",
        type: {
          name: "Number"
        }
      },
      totalCharges: {
        serializedName: "totalCharges",
        type: {
          name: "Number"
        }
      },
      usageGroups: {
        serializedName: "usageGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingHubUsageGroup"
            }
          }
        }
      }
    }
  }
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WingetAppSkuProperties: coreClient.CompositeMapper = {
  serializedName: "Winget",
  type: {
    name: "Composite",
    className: "WingetAppSkuProperties",
    uberParent: "GalleryAppSkuProperties",
    polymorphicDiscriminator:
      GalleryAppSkuProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...GalleryAppSkuProperties.type.modelProperties,
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      license: {
        serializedName: "license",
        type: {
          name: "String"
        }
      },
      licenseUrl: {
        serializedName: "licenseUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScriptExecutionResultSingletonResourceProperties: coreClient.CompositeMapper = {
  serializedName: "ScriptExecution",
  type: {
    name: "Composite",
    className: "ScriptExecutionResultSingletonResourceProperties",
    uberParent: "AnalysisResultSingletonResourceProperties",
    polymorphicDiscriminator:
      AnalysisResultSingletonResourceProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AnalysisResultSingletonResourceProperties.type.modelProperties,
      scriptExecutionResults: {
        serializedName: "scriptExecutionResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScriptExecutionResult"
            }
          }
        }
      }
    }
  }
};

export const ReliabilityResultSingletonResourceProperties: coreClient.CompositeMapper = {
  serializedName: "Reliability",
  type: {
    name: "Composite",
    className: "ReliabilityResultSingletonResourceProperties",
    uberParent: "AnalysisResultSingletonResourceProperties",
    polymorphicDiscriminator:
      AnalysisResultSingletonResourceProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AnalysisResultSingletonResourceProperties.type.modelProperties,
      reliabilityResults: {
        serializedName: "reliabilityResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReliabilityResult"
            }
          }
        }
      },
      inplaceUpgradeBaselineReliabilityResults: {
        serializedName: "inplaceUpgradeBaselineReliabilityResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReliabilityResult"
            }
          }
        }
      }
    }
  }
};

export const CPUUtilizationResultSingletonResourceProperties: coreClient.CompositeMapper = {
  serializedName: "CPUUtilization",
  type: {
    name: "Composite",
    className: "CPUUtilizationResultSingletonResourceProperties",
    uberParent: "AnalysisResultSingletonResourceProperties",
    polymorphicDiscriminator:
      AnalysisResultSingletonResourceProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AnalysisResultSingletonResourceProperties.type.modelProperties,
      cpuUtilizationResults: {
        serializedName: "cpuUtilizationResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UtilizationResult"
            }
          }
        }
      }
    }
  }
};

export const MemoryUtilizationResultSingletonResourceProperties: coreClient.CompositeMapper = {
  serializedName: "MemoryUtilization",
  type: {
    name: "Composite",
    className: "MemoryUtilizationResultSingletonResourceProperties",
    uberParent: "AnalysisResultSingletonResourceProperties",
    polymorphicDiscriminator:
      AnalysisResultSingletonResourceProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AnalysisResultSingletonResourceProperties.type.modelProperties,
      memoryUtilizationResults: {
        serializedName: "memoryUtilizationResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UtilizationResult"
            }
          }
        }
      }
    }
  }
};

export const CPURegressionResultSingletonResourceProperties: coreClient.CompositeMapper = {
  serializedName: "CPURegression",
  type: {
    name: "Composite",
    className: "CPURegressionResultSingletonResourceProperties",
    uberParent: "AnalysisResultSingletonResourceProperties",
    polymorphicDiscriminator:
      AnalysisResultSingletonResourceProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AnalysisResultSingletonResourceProperties.type.modelProperties,
      cpuRegressionResults: {
        serializedName: "cpuRegressionResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegressionResult"
            }
          }
        }
      }
    }
  }
};

export const MemoryRegressionResultSingletonResourceProperties: coreClient.CompositeMapper = {
  serializedName: "MemoryRegression",
  type: {
    name: "Composite",
    className: "MemoryRegressionResultSingletonResourceProperties",
    uberParent: "AnalysisResultSingletonResourceProperties",
    polymorphicDiscriminator:
      AnalysisResultSingletonResourceProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AnalysisResultSingletonResourceProperties.type.modelProperties,
      memoryRegressionResults: {
        serializedName: "memoryRegressionResults",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegressionResult"
            }
          }
        }
      }
    }
  }
};

export const TestAnalysisResultSingletonResourceProperties: coreClient.CompositeMapper = {
  serializedName: "TestAnalysis",
  type: {
    name: "Composite",
    className: "TestAnalysisResultSingletonResourceProperties",
    uberParent: "AnalysisResultSingletonResourceProperties",
    polymorphicDiscriminator:
      AnalysisResultSingletonResourceProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AnalysisResultSingletonResourceProperties.type.modelProperties,
      testAnalysisResult: {
        serializedName: "testAnalysisResult",
        type: {
          name: "Composite",
          className: "TestAnalysisResult"
        }
      }
    }
  }
};

export const IntuneSingletonResourceProperties: coreClient.CompositeMapper = {
  serializedName: "IntuneAccount",
  type: {
    name: "Composite",
    className: "IntuneSingletonResourceProperties",
    uberParent: "CredentialProperties",
    polymorphicDiscriminator:
      CredentialProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...CredentialProperties.type.modelProperties,
      userNameKeyVaultSecretPath: {
        serializedName: "userNameKeyVaultSecretPath",
        type: {
          name: "String"
        }
      },
      passwordKeyVaultSecretPath: {
        serializedName: "passwordKeyVaultSecretPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionRequest",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      requestType: {
        serializedName: "properties.requestType",
        type: {
          name: "String"
        }
      },
      preReleaseAccessRequestSpec: {
        serializedName: "properties.preReleaseAccessRequestSpec",
        type: {
          name: "Composite",
          className: "PreReleaseAccessRequestSpec"
        }
      },
      creationDate: {
        serializedName: "properties.creationDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChatSessionResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChatSessionResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomImageResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomImageResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      vhdId: {
        serializedName: "properties.vhdId",
        type: {
          name: "String"
        }
      },
      definitionName: {
        serializedName: "properties.definitionName",
        type: {
          name: "String"
        }
      },
      versionName: {
        serializedName: "properties.versionName",
        type: {
          name: "String"
        }
      },
      source: {
        defaultValue: "VHD",
        serializedName: "properties.source",
        type: {
          name: "String"
        }
      },
      product: {
        serializedName: "properties.product",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      release: {
        serializedName: "properties.release",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      creationTime: {
        serializedName: "properties.creationTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      validationResults: {
        serializedName: "properties.validationResults",
        type: {
          name: "Composite",
          className: "ImageValidationResults"
        }
      },
      osDiskImageSizeInGB: {
        serializedName: "properties.osDiskImageSizeInGB",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      releaseVersionDate: {
        serializedName: "properties.releaseVersionDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      vhdFileName: {
        serializedName: "properties.vhdFileName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageDefinitionResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImageDefinitionResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      architecture: {
        serializedName: "properties.architecture",
        type: {
          name: "String"
        }
      },
      osState: {
        serializedName: "properties.osState",
        type: {
          name: "String"
        }
      },
      securityType: {
        serializedName: "properties.securityType",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VHDResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VHDResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      path: {
        serializedName: "properties.path",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      fileName: {
        serializedName: "properties.fileName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      fileSize: {
        serializedName: "properties.fileSize",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      creationTime: {
        serializedName: "properties.creationTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DraftPackageResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DraftPackageResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      applicationName: {
        serializedName: "properties.applicationName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      draftPackagePath: {
        serializedName: "properties.draftPackagePath",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      workingPath: {
        serializedName: "properties.workingPath",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      appFileName: {
        serializedName: "properties.appFileName",
        type: {
          name: "String"
        }
      },
      sourceType: {
        serializedName: "properties.sourceType",
        type: {
          name: "String"
        }
      },
      useSample: {
        serializedName: "properties.useSample",
        type: {
          name: "Boolean"
        }
      },
      comments: {
        serializedName: "properties.comments",
        type: {
          name: "String"
        }
      },
      intuneMetadata: {
        serializedName: "properties.intuneMetadata",
        type: {
          name: "Composite",
          className: "DraftPackageIntuneAppMetadata"
        }
      },
      highlightedFiles: {
        serializedName: "properties.highlightedFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HighlightedFile"
            }
          }
        }
      },
      packageTags: {
        serializedName: "properties.packageTags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      editPackage: {
        defaultValue: false,
        serializedName: "properties.editPackage",
        type: {
          name: "Boolean"
        }
      },
      packageId: {
        serializedName: "properties.packageId",
        type: {
          name: "String"
        }
      },
      useAutofill: {
        serializedName: "properties.useAutofill",
        type: {
          name: "Boolean"
        }
      },
      executableLaunchCommand: {
        serializedName: "properties.executableLaunchCommand",
        type: {
          name: "String"
        }
      },
      processName: {
        serializedName: "properties.processName",
        type: {
          name: "String"
        }
      },
      tabState: {
        serializedName: "properties.tabState",
        type: {
          name: "Composite",
          className: "TabState"
        }
      },
      testTypes: {
        serializedName: "properties.testTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      targetOSList: {
        serializedName: "properties.targetOSList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TargetOSInfo"
            }
          }
        }
      },
      inplaceUpgradeOSPair: {
        serializedName: "properties.inplaceUpgradeOSPair",
        type: {
          name: "Composite",
          className: "InplaceUpgradeOSInfo"
        }
      },
      lastModifiedTime: {
        serializedName: "properties.lastModifiedTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      flightingRing: {
        serializedName: "properties.flightingRing",
        type: {
          name: "String"
        }
      },
      firstPartyApps: {
        serializedName: "properties.firstPartyApps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FirstPartyAppDefinition"
            }
          }
        }
      },
      galleryApps: {
        serializedName: "properties.galleryApps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryAppDefinition"
            }
          }
        }
      },
      tests: {
        serializedName: "properties.tests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Test"
            }
          }
        }
      },
      intuneEnrollmentMetadata: {
        serializedName: "properties.intuneEnrollmentMetadata",
        type: {
          name: "Composite",
          className: "IntuneEnrollmentMetadata"
        }
      }
    }
  }
};

export const FreeHourBalanceResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FreeHourBalanceResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      totalRemainingFreeHours: {
        serializedName: "properties.totalRemainingFreeHours",
        type: {
          name: "Number"
        }
      },
      incrementEntries: {
        serializedName: "properties.incrementEntries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingHubFreeHourIncrementEntry"
            }
          }
        }
      }
    }
  }
};

export const AvailableOSResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableOSResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      osId: {
        serializedName: "properties.osId",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "properties.osName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "properties.osVersion",
        type: {
          name: "String"
        }
      },
      insiderChannel: {
        serializedName: "properties.insiderChannel",
        type: {
          name: "String"
        }
      },
      osUpdateType: {
        serializedName: "properties.osUpdateType",
        type: {
          name: "String"
        }
      },
      osPlatform: {
        serializedName: "properties.osPlatform",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FeatureUpdateSupportedOsesResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FeatureUpdateSupportedOsesResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      osId: {
        serializedName: "properties.osId",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "properties.osName",
        type: {
          name: "String"
        }
      },
      insiderChannel: {
        serializedName: "properties.insiderChannel",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      displayText: {
        serializedName: "properties.displayText",
        type: {
          name: "String"
        }
      },
      baselineProducts: {
        serializedName: "properties.baselineProducts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      startTime: {
        serializedName: "properties.startTime",
        type: {
          name: "DateTime"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FlightingRingResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlightingRingResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      actualFlightingRingName: {
        serializedName: "properties.actualFlightingRingName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FirstPartyAppResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FirstPartyAppResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      mediaType: {
        serializedName: "properties.mediaType",
        type: {
          name: "String"
        }
      },
      architecture: {
        serializedName: "properties.architecture",
        type: {
          name: "String"
        }
      },
      channel: {
        serializedName: "properties.channel",
        type: {
          name: "String"
        }
      },
      ring: {
        serializedName: "properties.ring",
        type: {
          name: "String"
        }
      },
      supportedProducts: {
        serializedName: "properties.supportedProducts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const GalleryAppResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryAppResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      applicationType: {
        serializedName: "properties.applicationType",
        type: {
          name: "String"
        }
      },
      applicationId: {
        serializedName: "properties.applicationId",
        type: {
          name: "String"
        }
      },
      applicationName: {
        serializedName: "properties.applicationName",
        type: {
          name: "String"
        }
      },
      popularity: {
        defaultValue: 0,
        serializedName: "properties.popularity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const GalleryAppSkuResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryAppSkuResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      applicationType: {
        serializedName: "properties.applicationType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestTypeResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestTypeResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      actualTestTypeName: {
        serializedName: "properties.actualTestTypeName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestSummaryResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestSummaryResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      testSummaryId: {
        serializedName: "properties.testSummaryId",
        type: {
          name: "String"
        }
      },
      packageId: {
        serializedName: "properties.packageId",
        type: {
          name: "String"
        }
      },
      applicationName: {
        serializedName: "properties.applicationName",
        type: {
          name: "String"
        }
      },
      applicationVersion: {
        serializedName: "properties.applicationVersion",
        type: {
          name: "String"
        }
      },
      executionStatus: {
        serializedName: "properties.executionStatus",
        type: {
          name: "String"
        }
      },
      testStatus: {
        serializedName: "properties.testStatus",
        type: {
          name: "String"
        }
      },
      grade: {
        serializedName: "properties.grade",
        type: {
          name: "String"
        }
      },
      testRunTime: {
        serializedName: "properties.testRunTime",
        type: {
          name: "String"
        }
      },
      featureUpdatesTestSummary: {
        serializedName: "properties.featureUpdatesTestSummary",
        type: {
          name: "Composite",
          className: "OSUpdatesTestSummary"
        }
      },
      securityUpdatesTestSummary: {
        serializedName: "properties.securityUpdatesTestSummary",
        type: {
          name: "Composite",
          className: "OSUpdatesTestSummary"
        }
      },
      inplaceUpgradesTestSummary: {
        serializedName: "properties.inplaceUpgradesTestSummary",
        type: {
          name: "Composite",
          className: "OSUpdatesTestSummary"
        }
      },
      packageTags: {
        serializedName: "properties.packageTags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const TestResultResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestResultResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      baselineTestResultId: {
        serializedName: "properties.baselineTestResultId",
        type: {
          name: "String"
        }
      },
      packageId: {
        serializedName: "properties.packageId",
        type: {
          name: "String"
        }
      },
      applicationName: {
        serializedName: "properties.applicationName",
        type: {
          name: "String"
        }
      },
      applicationVersion: {
        serializedName: "properties.applicationVersion",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "properties.osName",
        type: {
          name: "String"
        }
      },
      customImageId: {
        serializedName: "properties.customImageId",
        type: {
          name: "String"
        }
      },
      customImageDisplayName: {
        serializedName: "properties.customImageDisplayName",
        type: {
          name: "String"
        }
      },
      releaseName: {
        serializedName: "properties.releaseName",
        type: {
          name: "String"
        }
      },
      releaseVersionDate: {
        serializedName: "properties.releaseVersionDate",
        type: {
          name: "DateTime"
        }
      },
      flightingRing: {
        serializedName: "properties.flightingRing",
        type: {
          name: "String"
        }
      },
      buildVersion: {
        serializedName: "properties.buildVersion",
        type: {
          name: "String"
        }
      },
      buildRevision: {
        serializedName: "properties.buildRevision",
        type: {
          name: "String"
        }
      },
      testType: {
        serializedName: "properties.testType",
        type: {
          name: "String"
        }
      },
      testRunTime: {
        serializedName: "properties.testRunTime",
        type: {
          name: "String"
        }
      },
      isDownloadDataAvailable: {
        serializedName: "properties.isDownloadDataAvailable",
        type: {
          name: "Boolean"
        }
      },
      isVideoAvailable: {
        serializedName: "properties.isVideoAvailable",
        type: {
          name: "Boolean"
        }
      },
      executionStatus: {
        serializedName: "properties.executionStatus",
        type: {
          name: "String"
        }
      },
      testStatus: {
        serializedName: "properties.testStatus",
        type: {
          name: "String"
        }
      },
      grade: {
        serializedName: "properties.grade",
        type: {
          name: "String"
        }
      },
      kbNumber: {
        serializedName: "properties.kbNumber",
        type: {
          name: "String"
        }
      },
      interopMediaType: {
        serializedName: "properties.interopMediaType",
        type: {
          name: "String"
        }
      },
      interopMediaVersion: {
        serializedName: "properties.interopMediaVersion",
        type: {
          name: "String"
        }
      },
      packageVersion: {
        serializedName: "properties.packageVersion",
        type: {
          name: "String"
        }
      },
      analysisSummaries: {
        serializedName: "properties.analysisSummaries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestResultAnalysisSummary"
            }
          }
        }
      },
      inplaceUpgradeProperties: {
        serializedName: "properties.inplaceUpgradeProperties",
        type: {
          name: "Composite",
          className: "InplaceUpgradeProperties"
        }
      },
      testStartTime: {
        serializedName: "properties.testStartTime",
        type: {
          name: "DateTime"
        }
      },
      testEndTime: {
        serializedName: "properties.testEndTime",
        type: {
          name: "DateTime"
        }
      },
      firstPartyApps: {
        serializedName: "properties.firstPartyApps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TestResultFirstPartyAppDefinition"
            }
          }
        }
      }
    }
  }
};

export const OSUpdateResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OSUpdateResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      osName: {
        serializedName: "properties.osName",
        type: {
          name: "String"
        }
      },
      release: {
        serializedName: "properties.release",
        type: {
          name: "String"
        }
      },
      flightingRing: {
        serializedName: "properties.flightingRing",
        type: {
          name: "String"
        }
      },
      buildVersion: {
        serializedName: "properties.buildVersion",
        type: {
          name: "String"
        }
      },
      buildRevision: {
        serializedName: "properties.buildRevision",
        type: {
          name: "String"
        }
      },
      typePropertiesType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      releaseVersionDate: {
        serializedName: "properties.releaseVersionDate",
        type: {
          name: "DateTime"
        }
      },
      inplaceUpgradeBaselineProperties: {
        serializedName: "properties.inplaceUpgradeBaselineProperties",
        type: {
          name: "Composite",
          className: "OsProperties"
        }
      },
      customImageId: {
        serializedName: "properties.customImageId",
        type: {
          name: "String"
        }
      },
      customImageDisplayName: {
        serializedName: "properties.customImageDisplayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FavoriteProcessResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FavoriteProcessResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      actualProcessName: {
        serializedName: "properties.actualProcessName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnalysisResultSingletonResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisResultSingletonResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      grade: {
        serializedName: "properties.grade",
        type: {
          name: "String"
        }
      },
      analysisResultType: {
        serializedName: "properties.analysisResultType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmailEventResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailEventResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      eventId: {
        serializedName: "properties.eventId",
        type: {
          name: "String"
        }
      },
      eventName: {
        serializedName: "properties.eventName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomerEventResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomerEventResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      eventName: {
        serializedName: "properties.eventName",
        type: {
          name: "String"
        }
      },
      receivers: {
        serializedName: "properties.receivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NotificationEventReceiver"
            }
          }
        }
      }
    }
  }
};

export const AvailableInplaceUpgradeOSResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvailableInplaceUpgradeOSResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sourceOsName: {
        serializedName: "properties.sourceOsName",
        type: {
          name: "String"
        }
      },
      sourceOsReleases: {
        serializedName: "properties.sourceOsReleases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReleaseProperties"
            }
          }
        }
      },
      supportedTargetOsNameList: {
        serializedName: "properties.supportedTargetOsNameList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CredentialResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CredentialResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      credentialType: {
        serializedName: "properties.credentialType",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestBaseAccountResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "SystemAssignedServiceIdentity"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "properties.sku",
        type: {
          name: "Composite",
          className: "TestBaseAccountSKU"
        }
      },
      accessLevel: {
        serializedName: "properties.accessLevel",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackageResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackageResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      applicationName: {
        serializedName: "properties.applicationName",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      draftPackageId: {
        serializedName: "properties.draftPackageId",
        type: {
          name: "String"
        }
      },
      packageStatus: {
        serializedName: "properties.packageStatus",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isEnabled: {
        serializedName: "properties.isEnabled",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      blobPath: {
        serializedName: "properties.blobPath",
        type: {
          name: "String"
        }
      },
      validationResults: {
        serializedName: "properties.validationResults",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PackageValidationResult"
            }
          }
        }
      },
      testTypes: {
        serializedName: "properties.testTypes",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      targetOSList: {
        serializedName: "properties.targetOSList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TargetOSInfo"
            }
          }
        }
      },
      inplaceUpgradeOSPair: {
        serializedName: "properties.inplaceUpgradeOSPair",
        type: {
          name: "Composite",
          className: "InplaceUpgradeOSInfo"
        }
      },
      lastModifiedTime: {
        serializedName: "properties.lastModifiedTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      flightingRing: {
        serializedName: "properties.flightingRing",
        type: {
          name: "String"
        }
      },
      firstPartyApps: {
        serializedName: "properties.firstPartyApps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FirstPartyAppDefinition"
            }
          }
        }
      },
      galleryApps: {
        serializedName: "properties.galleryApps",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryAppDefinition"
            }
          }
        }
      },
      tests: {
        serializedName: "properties.tests",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Test"
            }
          }
        }
      },
      intuneEnrollmentMetadata: {
        serializedName: "properties.intuneEnrollmentMetadata",
        type: {
          name: "Composite",
          className: "IntuneEnrollmentMetadata"
        }
      }
    }
  }
};

export const ChatSessionChatHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChatSessionChatHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomImagesCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomImagesCreateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomImagesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomImagesDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DraftPackagesCopyFromPackageHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DraftPackagesCopyFromPackageHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DraftPackagesExtractFileHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DraftPackagesExtractFileHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DraftPackagesGenerateFoldersAndScriptsHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DraftPackagesGenerateFoldersAndScriptsHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestBaseAccountsCreateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestBaseAccountsUpdateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestBaseAccountsDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TestBaseAccountsOffboardHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestBaseAccountsOffboardHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackagesCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackagesCreateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackagesUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackagesUpdateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackagesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackagesDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackagesHardDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackagesHardDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PackagesRunTestHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PackagesRunTestHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomerEventsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomerEventsCreateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomerEventsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomerEventsDeleteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export let discriminators = {
  GalleryAppSkuProperties: GalleryAppSkuProperties,
  AnalysisResultSingletonResourceProperties: AnalysisResultSingletonResourceProperties,
  CredentialProperties: CredentialProperties,
  "GalleryAppSkuProperties.Winget": WingetAppSkuProperties,
  "AnalysisResultSingletonResourceProperties.ScriptExecution": ScriptExecutionResultSingletonResourceProperties,
  "AnalysisResultSingletonResourceProperties.Reliability": ReliabilityResultSingletonResourceProperties,
  "AnalysisResultSingletonResourceProperties.CPUUtilization": CPUUtilizationResultSingletonResourceProperties,
  "AnalysisResultSingletonResourceProperties.MemoryUtilization": MemoryUtilizationResultSingletonResourceProperties,
  "AnalysisResultSingletonResourceProperties.CPURegression": CPURegressionResultSingletonResourceProperties,
  "AnalysisResultSingletonResourceProperties.MemoryRegression": MemoryRegressionResultSingletonResourceProperties,
  "AnalysisResultSingletonResourceProperties.TestAnalysis": TestAnalysisResultSingletonResourceProperties,
  "CredentialProperties.IntuneAccount": IntuneSingletonResourceProperties
};
