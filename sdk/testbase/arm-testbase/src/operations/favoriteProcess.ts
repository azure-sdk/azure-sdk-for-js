/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { FavoriteProcess } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { RestAPIForTestBase } from "../restAPIForTestBase";
import {
  FavoriteProcessResource,
  FavoriteProcessCreateOptionalParams,
  FavoriteProcessCreateResponse,
  FavoriteProcessDeleteOptionalParams,
  FavoriteProcessGetOptionalParams,
  FavoriteProcessGetResponse
} from "../models";

/** Class containing FavoriteProcess operations. */
export class FavoriteProcessImpl implements FavoriteProcess {
  private readonly client: RestAPIForTestBase;

  /**
   * Initialize a new instance of the class FavoriteProcess class.
   * @param client Reference to the service client
   */
  constructor(client: RestAPIForTestBase) {
    this.client = client;
  }

  /**
   * Create or replace a favorite process for a Test Base Package.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param favoriteProcessResourceName The resource name of a favorite process in a package. If the
   *                                    process name contains characters that are not allowed in Azure Resource Name, we use
   *                                    'actualProcessName' in request body to submit the name.
   * @param parameters Parameters supplied to create a favorite process in a package.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    testBaseAccountName: string,
    packageName: string,
    favoriteProcessResourceName: string,
    parameters: FavoriteProcessResource,
    options?: FavoriteProcessCreateOptionalParams
  ): Promise<FavoriteProcessCreateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        testBaseAccountName,
        packageName,
        favoriteProcessResourceName,
        parameters,
        options
      },
      createOperationSpec
    );
  }

  /**
   * Deletes a favorite process for a specific package.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param favoriteProcessResourceName The resource name of a favorite process in a package. If the
   *                                    process name contains characters that are not allowed in Azure Resource Name, we use
   *                                    'actualProcessName' in request body to submit the name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    testBaseAccountName: string,
    packageName: string,
    favoriteProcessResourceName: string,
    options?: FavoriteProcessDeleteOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        testBaseAccountName,
        packageName,
        favoriteProcessResourceName,
        options
      },
      deleteOperationSpec
    );
  }

  /**
   * Gets a favorite process for a Test Base Package.
   * @param resourceGroupName The name of the resource group that contains the resource.
   * @param testBaseAccountName The resource name of the Test Base Account.
   * @param packageName The resource name of the Test Base Package.
   * @param favoriteProcessResourceName The resource name of a favorite process in a package. If the
   *                                    process name contains characters that are not allowed in Azure Resource Name, we use
   *                                    'actualProcessName' in request body to submit the name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    testBaseAccountName: string,
    packageName: string,
    favoriteProcessResourceName: string,
    options?: FavoriteProcessGetOptionalParams
  ): Promise<FavoriteProcessGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        testBaseAccountName,
        packageName,
        favoriteProcessResourceName,
        options
      },
      getOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const createOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/favoriteProcesses/{favoriteProcessResourceName}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.FavoriteProcessResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  requestBody: Parameters.parameters6,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.testBaseAccountName,
    Parameters.packageName,
    Parameters.favoriteProcessResourceName
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
const deleteOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/favoriteProcesses/{favoriteProcessResourceName}",
  httpMethod: "DELETE",
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.testBaseAccountName,
    Parameters.packageName,
    Parameters.favoriteProcessResourceName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const getOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TestBase/testBaseAccounts/{testBaseAccountName}/packages/{packageName}/favoriteProcesses/{favoriteProcessResourceName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.FavoriteProcessResource
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.testBaseAccountName,
    Parameters.packageName,
    Parameters.favoriteProcessResourceName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
