/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ProvisioningPolicy,
  ProvisioningPoliciesListByProvisioningResourceOptionalParams,
  ProvisioningPoliciesGetOptionalParams,
  ProvisioningPoliciesGetResponse,
  ProvisioningPoliciesCreateOrUpdateOptionalParams,
  ProvisioningPoliciesCreateOrUpdateResponse,
  ProvisioningPolicyUpdate,
  ProvisioningPoliciesUpdateOptionalParams,
  ProvisioningPoliciesUpdateResponse,
  ProvisioningPoliciesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ProvisioningPolicies. */
export interface ProvisioningPolicies {
  /**
   * List ProvisioningPolicy resources by ProvisioningResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningResourceName The name of the Provisioning Resource.
   * @param options The options parameters.
   */
  listByProvisioningResource(
    resourceGroupName: string,
    provisioningResourceName: string,
    options?: ProvisioningPoliciesListByProvisioningResourceOptionalParams
  ): PagedAsyncIterableIterator<ProvisioningPolicy>;
  /**
   * Get a ProvisioningPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningResourceName The name of the Provisioning Resource.
   * @param provisioningPolicyName The name of the Provisioning Policy tracked resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    provisioningResourceName: string,
    provisioningPolicyName: string,
    options?: ProvisioningPoliciesGetOptionalParams
  ): Promise<ProvisioningPoliciesGetResponse>;
  /**
   * Create a ProvisioningPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningResourceName The name of the Provisioning Resource.
   * @param provisioningPolicyName The name of the Provisioning Policy tracked resource.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    provisioningResourceName: string,
    provisioningPolicyName: string,
    resource: ProvisioningPolicy,
    options?: ProvisioningPoliciesCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ProvisioningPoliciesCreateOrUpdateResponse>,
      ProvisioningPoliciesCreateOrUpdateResponse
    >
  >;
  /**
   * Create a ProvisioningPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningResourceName The name of the Provisioning Resource.
   * @param provisioningPolicyName The name of the Provisioning Policy tracked resource.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    provisioningResourceName: string,
    provisioningPolicyName: string,
    resource: ProvisioningPolicy,
    options?: ProvisioningPoliciesCreateOrUpdateOptionalParams
  ): Promise<ProvisioningPoliciesCreateOrUpdateResponse>;
  /**
   * Update a ProvisioningPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningResourceName The name of the Provisioning Resource.
   * @param provisioningPolicyName The name of the Provisioning Policy tracked resource.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    provisioningResourceName: string,
    provisioningPolicyName: string,
    properties: ProvisioningPolicyUpdate,
    options?: ProvisioningPoliciesUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ProvisioningPoliciesUpdateResponse>,
      ProvisioningPoliciesUpdateResponse
    >
  >;
  /**
   * Update a ProvisioningPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningResourceName The name of the Provisioning Resource.
   * @param provisioningPolicyName The name of the Provisioning Policy tracked resource.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    provisioningResourceName: string,
    provisioningPolicyName: string,
    properties: ProvisioningPolicyUpdate,
    options?: ProvisioningPoliciesUpdateOptionalParams
  ): Promise<ProvisioningPoliciesUpdateResponse>;
  /**
   * Delete a ProvisioningPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningResourceName The name of the Provisioning Resource.
   * @param provisioningPolicyName The name of the Provisioning Policy tracked resource.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    provisioningResourceName: string,
    provisioningPolicyName: string,
    options?: ProvisioningPoliciesDeleteOptionalParams
  ): Promise<void>;
}
