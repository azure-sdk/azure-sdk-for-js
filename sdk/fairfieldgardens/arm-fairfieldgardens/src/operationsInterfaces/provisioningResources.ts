/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ProvisioningResource,
  ProvisioningResourcesListBySubscriptionOptionalParams,
  ProvisioningResourcesListByResourceGroupOptionalParams,
  ProvisioningResourcesGetOptionalParams,
  ProvisioningResourcesGetResponse,
  ProvisioningResourcesCreateOrUpdateOptionalParams,
  ProvisioningResourcesCreateOrUpdateResponse,
  ProvisioningResourceUpdate,
  ProvisioningResourcesUpdateOptionalParams,
  ProvisioningResourcesUpdateResponse,
  ProvisioningResourcesDeleteOptionalParams,
  ProvisioningResourcesDeleteResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ProvisioningResources. */
export interface ProvisioningResources {
  /**
   * List ProvisioningResource resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ProvisioningResourcesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<ProvisioningResource>;
  /**
   * List ProvisioningResource resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ProvisioningResourcesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<ProvisioningResource>;
  /**
   * Get a ProvisioningResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningResourceName The name of the Provisioning Resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    provisioningResourceName: string,
    options?: ProvisioningResourcesGetOptionalParams
  ): Promise<ProvisioningResourcesGetResponse>;
  /**
   * Create a ProvisioningResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningResourceName The name of the Provisioning Resource.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    provisioningResourceName: string,
    resource: ProvisioningResource,
    options?: ProvisioningResourcesCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ProvisioningResourcesCreateOrUpdateResponse>,
      ProvisioningResourcesCreateOrUpdateResponse
    >
  >;
  /**
   * Create a ProvisioningResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningResourceName The name of the Provisioning Resource.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    provisioningResourceName: string,
    resource: ProvisioningResource,
    options?: ProvisioningResourcesCreateOrUpdateOptionalParams
  ): Promise<ProvisioningResourcesCreateOrUpdateResponse>;
  /**
   * Update a ProvisioningResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningResourceName The name of the Provisioning Resource.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    provisioningResourceName: string,
    properties: ProvisioningResourceUpdate,
    options?: ProvisioningResourcesUpdateOptionalParams
  ): Promise<ProvisioningResourcesUpdateResponse>;
  /**
   * Delete a ProvisioningResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningResourceName The name of the Provisioning Resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    provisioningResourceName: string,
    options?: ProvisioningResourcesDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ProvisioningResourcesDeleteResponse>,
      ProvisioningResourcesDeleteResponse
    >
  >;
  /**
   * Delete a ProvisioningResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningResourceName The name of the Provisioning Resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    provisioningResourceName: string,
    options?: ProvisioningResourcesDeleteOptionalParams
  ): Promise<ProvisioningResourcesDeleteResponse>;
}
