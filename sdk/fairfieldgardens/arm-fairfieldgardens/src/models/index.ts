/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type BootstrapAuthenticationRuleUnion =
  | BootstrapAuthenticationRule
  | DiscoveryBootstrapAuthenticationRule
  | X509BootstrapAuthenticationRule;
export type AllocationRuleUnion =
  | AllocationRule
  | EvenlyDistributedAllocationRule;
export type ProvisioningPolicyResourceDetailsUnion =
  | ProvisioningPolicyResourceDetails
  | DeviceRegistryProvisioningPolicyResourceDetails
  | DiscoveryProvisioningPolicyResourceDetails;

/** The response of a DeviceProvisioningState list operation. */
export interface DeviceProvisioningStateListResult {
  /** The DeviceProvisioningState items on this page */
  value: DeviceProvisioningState[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Representation of a previously allocated endpoint */
export interface AllocatedEndpoint {
  /** Name of the endpoint. */
  name: string;
  /** Type of the endpoint. */
  endpointType: EndpointType;
  /** Hostname of the endpoint. */
  hostName: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The type used for update operations of the DeviceProvisioningState. */
export interface DeviceProvisioningStateUpdate {
  /** Onboarding status of the resource this DeviceProvisioningState extends */
  onboardingStatus?: OnboardingStatus;
  /** Indicates if the device is enabled for discovery */
  discoveryEnabled?: boolean;
  /** The provisioning policy resource id */
  provisioningPolicyResourceId?: string;
  /** Array of previously allocated endpoints */
  allocatedEndpoints?: AllocatedEndpoint[];
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** The response of a ProvisioningResource list operation. */
export interface ProvisioningResourceListResult {
  /** The ProvisioningResource items on this page */
  value: ProvisioningResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Device endpoints. */
export interface DeviceEndpoints {
  /**
   * The default endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly default?: DeviceEndpoint;
}

/** The device endpoint. */
export interface DeviceEndpoint {
  /**
   * Hostname of the Endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly hostName?: string;
}

/** The type used for update operations of the ProvisioningResource. */
export interface ProvisioningResourceUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** The response of a ProvisioningPolicy list operation. */
export interface ProvisioningPolicyListResult {
  /** The ProvisioningPolicy items on this page */
  value: ProvisioningPolicy[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The authentication rule for bootstrap. */
export interface BootstrapAuthenticationRule {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Discovery" | "X509";
}

/** The allocation rule. */
export interface AllocationRule {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "EvenlyDistributed";
  /** Name of the allocation rule. */
  name: string;
  /** Type of endpoint. */
  endpointType: EndpointType;
}

/** The rule for Just-in-time connection. */
export interface JitRule {
  /** The priority of the policy. Should be greater than 0. */
  priority: number;
  /** The ID of the target subscription. */
  subscriptionId: string;
  /** The case insensitive name of the target resource group. */
  resourceGroupName: string;
}

/** Common further details about the policy resource */
export interface ProvisioningPolicyResourceDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Microsoft.DeviceRegistry/devices" | "Microsoft.HybridCompute/machines";
}

/** The type used for update operations of the ProvisioningPolicy. */
export interface ProvisioningPolicyUpdate {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Description of the policy */
  description?: string;
  /** The policy status */
  status?: boolean;
  /** The bootstrap authentication rule. */
  bootstrapAuthentication?: BootstrapAuthenticationRuleUnion;
  /** Allocation rules. */
  allocations?: AllocationRuleUnion[];
  /** Just-in-time rule to create the device resource. */
  jit?: JitRuleUpdate;
  /** Further details about the policy resource */
  resourceDetails?: ProvisioningPolicyResourceDetailsUnion;
}

/** The rule for Just-in-time connection. */
export interface JitRuleUpdate {
  /** The priority of the policy. Should be greater than 0. */
  priority?: number;
  /** The ID of the target subscription. */
  subscriptionId?: string;
  /** The case insensitive name of the target resource group. */
  resourceGroupName?: string;
}

/** Allocation endpoint. */
export interface AllocationEndpoint {
  /** Resource id of the endpoint. */
  resourceId: string;
  /** host name of the endpoint. */
  hostName: string;
}

/** The configuration for setting up a CA. */
export interface CaConfig {
  /**
   * System-generated value for referencing the CA.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** Certificate properties. */
  properties: CertificateProperties;
}

/** Certificate properties. */
export interface CertificateProperties {
  /** Crypto type: RSA or EC. */
  keyType: SupportedKeyType;
  /**
   * Certificate subject.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly subject?: string;
  /**
   * System-assigned validity period.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly validityPeriodInDays?: number;
  /**
   * Certificate is valid not before this date. Format ISO8601. Generated based on on validity period.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly validityNotBefore?: Date;
  /**
   * Certificate is valid not after this date. Format ISO8601. Generated based on validity period.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly validityNotAfter?: Date;
}

/** The configuration for setting up a policy. */
export interface CertPolicyConfig {
  /** The validity period in days. */
  validityPeriodInDays: number;
}

/** Certificate issuance configurations. */
export interface CertificateIssuanceRule {
  /** The type of authority for cert issuance. */
  issuingAuthority: SupportedIssuingAuthority;
  /** The configuration to set up an ICA. */
  certificateAuthorityConfiguration: CaConfig;
  /** The leaf certificate configuration. */
  leafCertificateConfiguration: CertPolicyConfig;
  /** Cert renewal interval. */
  renewalInterval: number;
}

/** The information related to device identity. */
export interface IdentityInfo {
  /** Certificate issuance settings. */
  certificateIssuance?: CertificateIssuanceRule;
  /** Guid of the device template. */
  deviceTemplateId: string;
  /** Guid for static AAD group. */
  staticGroupId: string;
}

/** Resource metadata */
export interface ResourceMetadata {
  /** Custom attributes */
  customAttributes?: { [propertyName: string]: any };
}

/** Provisioning policies model for patch. */
export interface ProvisioningPolicyPatchProperties {
  /** Description of the policy */
  description?: string;
  /** The policy status */
  status?: boolean;
  /**
   * The status of the last operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The bootstrap authentication rule. */
  bootstrapAuthentication?: BootstrapAuthenticationRuleUnion;
  /** Allocation rules. */
  allocations?: AllocationRuleUnion[];
  /** Just-in-time rule to create the device resource. */
  jit?: JitRuleUpdate;
  /** Further details about the policy resource */
  resourceDetails?: ProvisioningPolicyResourceDetailsUnion;
}

/** The provisioning rule. */
export interface ProvisioningRule {
  /** Type of the resource being provisioned. */
  type: ProvisioningResourceType;
  /** Just-in-time rule to create the device resource. */
  jit?: JitRule;
  /** Identity information. */
  operationalIdentityInfo?: IdentityInfo;
  /** Resource metadata. */
  resourceMetadata?: string;
}

/** X509 Certificate. */
export interface X509Certificate {
  /** The certificate. */
  certificate: string;
  /**
   * Thumbprint extracted from the certificate.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly thumbprint?: string;
  /**
   * Expiry date for the certificate.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly expiryDate?: Date;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The Discovery-based authentication rule for bootstrapping. */
export interface DiscoveryBootstrapAuthenticationRule
  extends BootstrapAuthenticationRule {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Discovery";
}

/** The x509-based authentication rule for bootstrapping. */
export interface X509BootstrapAuthenticationRule
  extends BootstrapAuthenticationRule {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "X509";
  /** The primary certificate. B64 x509 cert */
  primaryCertificate: X509Certificate;
  /** The secondary certificate. */
  secondaryCertificate?: X509Certificate;
}

/** The allocation rule for evenly distributed allocation type. */
export interface EvenlyDistributedAllocationRule extends AllocationRule {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "EvenlyDistributed";
  /** List of endpoints for evenly distributed allocation type. */
  endpoints: AllocationEndpoint[];
}

/** Details of the ProvisioningService Device Registry ProvisioningPolicy. */
export interface DeviceRegistryProvisioningPolicyResourceDetails
  extends ProvisioningPolicyResourceDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Microsoft.DeviceRegistry/devices";
  /** Identity information. */
  operationalIdentityInfo?: IdentityInfo;
  /** Resource metadata. */
  resourceMetadata?: ResourceMetadata;
}

/** Details of the ProvisioningService Discovery ProvisioningPolicy. */
export interface DiscoveryProvisioningPolicyResourceDetails
  extends ProvisioningPolicyResourceDetails {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "Microsoft.HybridCompute/machines";
}

/** The provisioning state of a device. */
export interface DeviceProvisioningState extends ProxyResource {
  /** Unique identifier for the device. Allow alphanumeric and '-', '.', '_', ':' only. Last character can only be alphanumeric and '-' */
  registrationId?: string;
  /** Onboarding status of the resource this DeviceProvisioningState extends */
  onboardingStatus?: OnboardingStatus;
  /** Indicates if the device is enabled for discovery */
  discoveryEnabled?: boolean;
  /** The provisioning policy resource id */
  provisioningPolicyResourceId?: string;
  /** Array of previously allocated endpoints */
  allocatedEndpoints?: AllocatedEndpoint[];
  /**
   * The status of the last operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** A provisioning resource. */
export interface ProvisioningResource extends TrackedResource {
  /**
   * The status of the last operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The provisioning service endpoints.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deviceEndpoints?: DeviceEndpoints;
  /** Selecting 'yes' will enable a Microsoft managed PKI to issue certificates. Setting up of the CA and policies for certificate management will be while defining the bumblebee provisioning policy. */
  enableOperationalCertificates?: boolean;
}

/** A provisioning policy resource. */
export interface ProvisioningPolicy extends TrackedResource {
  /** Description of the policy */
  description?: string;
  /** The policy status */
  status?: boolean;
  /**
   * The status of the last operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The bootstrap authentication rule. */
  bootstrapAuthentication?: BootstrapAuthenticationRuleUnion;
  /** Allocation rules. */
  allocations?: AllocationRuleUnion[];
  /** Just-in-time rule to create the device resource. */
  jit?: JitRule;
  /** Further details about the policy resource */
  resourceDetails?: ProvisioningPolicyResourceDetailsUnion;
}

/** Defines headers for ProvisioningResources_createOrUpdate operation. */
export interface ProvisioningResourcesCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for ProvisioningResources_delete operation. */
export interface ProvisioningResourcesDeleteHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Defines headers for ProvisioningPolicies_createOrUpdate operation. */
export interface ProvisioningPoliciesCreateOrUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for ProvisioningPolicies_update operation. */
export interface ProvisioningPoliciesUpdateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
}

/** Known values of {@link OnboardingStatus} that the service accepts. */
export enum KnownOnboardingStatus {
  /** Onboarding is still pending */
  Pending = "Pending",
  /** The resource has been onboarded */
  Provisioned = "Provisioned",
  /** Onboarding has failed */
  Failed = "Failed"
}

/**
 * Defines values for OnboardingStatus. \
 * {@link KnownOnboardingStatus} can be used interchangeably with OnboardingStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending**: Onboarding is still pending \
 * **Provisioned**: The resource has been onboarded \
 * **Failed**: Onboarding has failed
 */
export type OnboardingStatus = string;

/** Known values of {@link EndpointType} that the service accepts. */
export enum KnownEndpointType {
  /** Azure event grid broker. */
  MicrosoftEventGridNamespace = "Microsoft.EventGrid/namespaces"
}

/**
 * Defines values for EndpointType. \
 * {@link KnownEndpointType} can be used interchangeably with EndpointType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.EventGrid\/namespaces**: Azure event grid broker.
 */
export type EndpointType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** Resource is being created. */
  Creating = "Creating",
  /** Resource is being updated. */
  Updating = "Updating",
  /** Resource is being deleted. */
  Deleting = "Deleting"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Creating**: Resource is being created. \
 * **Updating**: Resource is being updated. \
 * **Deleting**: Resource is being deleted.
 */
export type ProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link BootstrapAuthenticationType} that the service accepts. */
export enum KnownBootstrapAuthenticationType {
  /** The X509 authentication type. */
  X509 = "X509",
  /** The discovery authentication type. */
  Discovery = "Discovery"
}

/**
 * Defines values for BootstrapAuthenticationType. \
 * {@link KnownBootstrapAuthenticationType} can be used interchangeably with BootstrapAuthenticationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **X509**: The X509 authentication type. \
 * **Discovery**: The discovery authentication type.
 */
export type BootstrapAuthenticationType = string;

/** Known values of {@link AllocationType} that the service accepts. */
export enum KnownAllocationType {
  /** Evenly distributed allocation. */
  EvenlyDistributed = "EvenlyDistributed"
}

/**
 * Defines values for AllocationType. \
 * {@link KnownAllocationType} can be used interchangeably with AllocationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EvenlyDistributed**: Evenly distributed allocation.
 */
export type AllocationType = string;

/** Known values of {@link ProvisioningResourceType} that the service accepts. */
export enum KnownProvisioningResourceType {
  /** Azure device registry device. Microsoft.DeviceRegistry\/devices */
  DeviceRegistryDevice = "Microsoft.DeviceRegistry/devices",
  /** Arc enabled device. Microsoft.HybridCompute\/machines */
  HybridComputeMachine = "Microsoft.HybridCompute/machines"
}

/**
 * Defines values for ProvisioningResourceType. \
 * {@link KnownProvisioningResourceType} can be used interchangeably with ProvisioningResourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.DeviceRegistry\/devices**: Azure device registry device. Microsoft.DeviceRegistry\/devices \
 * **Microsoft.HybridCompute\/machines**: Arc enabled device. Microsoft.HybridCompute\/machines
 */
export type ProvisioningResourceType = string;

/** Known values of {@link SupportedKeyType} that the service accepts. */
export enum KnownSupportedKeyType {
  /** Indicate the ECC key type. */
  ECC = "ECC"
}

/**
 * Defines values for SupportedKeyType. \
 * {@link KnownSupportedKeyType} can be used interchangeably with SupportedKeyType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ECC**: Indicate the ECC key type.
 */
export type SupportedKeyType = string;

/** Known values of {@link SupportedIssuingAuthority} that the service accepts. */
export enum KnownSupportedIssuingAuthority {
  /** First party cert issuance. */
  FirstParty = "FirstParty"
}

/**
 * Defines values for SupportedIssuingAuthority. \
 * {@link KnownSupportedIssuingAuthority} can be used interchangeably with SupportedIssuingAuthority,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **FirstParty**: First party cert issuance.
 */
export type SupportedIssuingAuthority = string;

/** Optional parameters. */
export interface DeviceProvisioningStatesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DeviceProvisioningStatesListResponse = DeviceProvisioningStateListResult;

/** Optional parameters. */
export interface DeviceProvisioningStatesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DeviceProvisioningStatesGetResponse = DeviceProvisioningState;

/** Optional parameters. */
export interface DeviceProvisioningStatesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type DeviceProvisioningStatesCreateOrUpdateResponse = DeviceProvisioningState;

/** Optional parameters. */
export interface DeviceProvisioningStatesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type DeviceProvisioningStatesUpdateResponse = DeviceProvisioningState;

/** Optional parameters. */
export interface DeviceProvisioningStatesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface DeviceProvisioningStatesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type DeviceProvisioningStatesListNextResponse = DeviceProvisioningStateListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface ProvisioningResourcesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type ProvisioningResourcesListBySubscriptionResponse = ProvisioningResourceListResult;

/** Optional parameters. */
export interface ProvisioningResourcesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ProvisioningResourcesListByResourceGroupResponse = ProvisioningResourceListResult;

/** Optional parameters. */
export interface ProvisioningResourcesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProvisioningResourcesGetResponse = ProvisioningResource;

/** Optional parameters. */
export interface ProvisioningResourcesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ProvisioningResourcesCreateOrUpdateResponse = ProvisioningResource;

/** Optional parameters. */
export interface ProvisioningResourcesUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ProvisioningResourcesUpdateResponse = ProvisioningResource;

/** Optional parameters. */
export interface ProvisioningResourcesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ProvisioningResourcesDeleteResponse = ProvisioningResourcesDeleteHeaders;

/** Optional parameters. */
export interface ProvisioningResourcesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type ProvisioningResourcesListBySubscriptionNextResponse = ProvisioningResourceListResult;

/** Optional parameters. */
export interface ProvisioningResourcesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type ProvisioningResourcesListByResourceGroupNextResponse = ProvisioningResourceListResult;

/** Optional parameters. */
export interface ProvisioningPoliciesListByProvisioningResourceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProvisioningResource operation. */
export type ProvisioningPoliciesListByProvisioningResourceResponse = ProvisioningPolicyListResult;

/** Optional parameters. */
export interface ProvisioningPoliciesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ProvisioningPoliciesGetResponse = ProvisioningPolicy;

/** Optional parameters. */
export interface ProvisioningPoliciesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ProvisioningPoliciesCreateOrUpdateResponse = ProvisioningPolicy;

/** Optional parameters. */
export interface ProvisioningPoliciesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ProvisioningPoliciesUpdateResponse = ProvisioningPolicy;

/** Optional parameters. */
export interface ProvisioningPoliciesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ProvisioningPoliciesListByProvisioningResourceNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByProvisioningResourceNext operation. */
export type ProvisioningPoliciesListByProvisioningResourceNextResponse = ProvisioningPolicyListResult;

/** Optional parameters. */
export interface MicrosoftFairfieldGardensOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
