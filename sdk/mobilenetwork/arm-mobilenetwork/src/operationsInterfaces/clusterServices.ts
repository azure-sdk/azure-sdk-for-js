/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ClusterServiceResource,
  ClusterServicesListBySubscriptionOptionalParams,
  ClusterServicesListByResourceGroupOptionalParams,
  ClusterServicesGetOptionalParams,
  ClusterServicesGetResponse,
  ClusterServicesCreateOrUpdateOptionalParams,
  ClusterServicesCreateOrUpdateResponse,
  ClusterServiceResourceTagsUpdate,
  ClusterServicesUpdateTagsOptionalParams,
  ClusterServicesUpdateTagsResponse,
  ClusterServicesDeleteOptionalParams,
  ClusterServicesDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ClusterServices. */
export interface ClusterServices {
  /**
   * List all Cluster Services by Subscription ID.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ClusterServicesListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<ClusterServiceResource>;
  /**
   * List all Cluster Services by Resource Group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ClusterServicesListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<ClusterServiceResource>;
  /**
   * Get a ClusterServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterServiceName The name of the Cluster Service
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    clusterServiceName: string,
    options?: ClusterServicesGetOptionalParams,
  ): Promise<ClusterServicesGetResponse>;
  /**
   * Create a ClusterServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterServiceName The name of the Cluster Service
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    clusterServiceName: string,
    resource: ClusterServiceResource,
    options?: ClusterServicesCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ClusterServicesCreateOrUpdateResponse>,
      ClusterServicesCreateOrUpdateResponse
    >
  >;
  /**
   * Create a ClusterServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterServiceName The name of the Cluster Service
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    clusterServiceName: string,
    resource: ClusterServiceResource,
    options?: ClusterServicesCreateOrUpdateOptionalParams,
  ): Promise<ClusterServicesCreateOrUpdateResponse>;
  /**
   * Update a ClusterServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterServiceName The name of the Cluster Service
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  updateTags(
    resourceGroupName: string,
    clusterServiceName: string,
    properties: ClusterServiceResourceTagsUpdate,
    options?: ClusterServicesUpdateTagsOptionalParams,
  ): Promise<ClusterServicesUpdateTagsResponse>;
  /**
   * Delete a ClusterServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterServiceName The name of the Cluster Service
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    clusterServiceName: string,
    options?: ClusterServicesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ClusterServicesDeleteResponse>,
      ClusterServicesDeleteResponse
    >
  >;
  /**
   * Delete a ClusterServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterServiceName The name of the Cluster Service
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    clusterServiceName: string,
    options?: ClusterServicesDeleteOptionalParams,
  ): Promise<ClusterServicesDeleteResponse>;
}
