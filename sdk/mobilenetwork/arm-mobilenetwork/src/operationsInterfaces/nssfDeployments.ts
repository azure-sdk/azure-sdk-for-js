/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  NssfDeploymentResource,
  NssfDeploymentsListBySubscriptionOptionalParams,
  NssfDeploymentsListByResourceGroupOptionalParams,
  NssfDeploymentsGetOptionalParams,
  NssfDeploymentsGetResponse,
  NssfDeploymentsCreateOrUpdateOptionalParams,
  NssfDeploymentsCreateOrUpdateResponse,
  NssfDeploymentResourceTagsUpdate,
  NssfDeploymentsUpdateTagsOptionalParams,
  NssfDeploymentsUpdateTagsResponse,
  NssfDeploymentsDeleteOptionalParams,
  NssfDeploymentsDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a NssfDeployments. */
export interface NssfDeployments {
  /**
   * List all Network Slice Selection Function Deployments by Subscription ID.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: NssfDeploymentsListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<NssfDeploymentResource>;
  /**
   * List all Network Slice Selection Function Deployments by Resource Group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: NssfDeploymentsListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<NssfDeploymentResource>;
  /**
   * Get a NssfDeploymentResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nssfDeploymentName The name of the NSSF Deployment
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    nssfDeploymentName: string,
    options?: NssfDeploymentsGetOptionalParams,
  ): Promise<NssfDeploymentsGetResponse>;
  /**
   * Create a NssfDeploymentResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nssfDeploymentName The name of the NSSF Deployment
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    nssfDeploymentName: string,
    resource: NssfDeploymentResource,
    options?: NssfDeploymentsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<NssfDeploymentsCreateOrUpdateResponse>,
      NssfDeploymentsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a NssfDeploymentResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nssfDeploymentName The name of the NSSF Deployment
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    nssfDeploymentName: string,
    resource: NssfDeploymentResource,
    options?: NssfDeploymentsCreateOrUpdateOptionalParams,
  ): Promise<NssfDeploymentsCreateOrUpdateResponse>;
  /**
   * Update a NssfDeploymentResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nssfDeploymentName The name of the NSSF Deployment
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  updateTags(
    resourceGroupName: string,
    nssfDeploymentName: string,
    properties: NssfDeploymentResourceTagsUpdate,
    options?: NssfDeploymentsUpdateTagsOptionalParams,
  ): Promise<NssfDeploymentsUpdateTagsResponse>;
  /**
   * Delete a NssfDeploymentResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nssfDeploymentName The name of the NSSF Deployment
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    nssfDeploymentName: string,
    options?: NssfDeploymentsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<NssfDeploymentsDeleteResponse>,
      NssfDeploymentsDeleteResponse
    >
  >;
  /**
   * Delete a NssfDeploymentResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nssfDeploymentName The name of the NSSF Deployment
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    nssfDeploymentName: string,
    options?: NssfDeploymentsDeleteOptionalParams,
  ): Promise<NssfDeploymentsDeleteResponse>;
}
