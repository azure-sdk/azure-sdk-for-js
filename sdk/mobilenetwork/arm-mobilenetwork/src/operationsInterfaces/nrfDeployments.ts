/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  NrfDeploymentResource,
  NrfDeploymentsListBySubscriptionOptionalParams,
  NrfDeploymentsListByResourceGroupOptionalParams,
  NrfDeploymentsGetOptionalParams,
  NrfDeploymentsGetResponse,
  NrfDeploymentsCreateOrUpdateOptionalParams,
  NrfDeploymentsCreateOrUpdateResponse,
  NrfDeploymentResourceTagsUpdate,
  NrfDeploymentsUpdateTagsOptionalParams,
  NrfDeploymentsUpdateTagsResponse,
  NrfDeploymentsDeleteOptionalParams,
  NrfDeploymentsDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a NrfDeployments. */
export interface NrfDeployments {
  /**
   * List all Network Repository Function Deployments by Subscription ID.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: NrfDeploymentsListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<NrfDeploymentResource>;
  /**
   * List all Network Repository Function Deployments by Resource Group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: NrfDeploymentsListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<NrfDeploymentResource>;
  /**
   * Get a NrfDeploymentResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nrfDeploymentName The name of the NRF Deployment
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    nrfDeploymentName: string,
    options?: NrfDeploymentsGetOptionalParams,
  ): Promise<NrfDeploymentsGetResponse>;
  /**
   * Create a NrfDeploymentResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nrfDeploymentName The name of the NRF Deployment
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    nrfDeploymentName: string,
    resource: NrfDeploymentResource,
    options?: NrfDeploymentsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<NrfDeploymentsCreateOrUpdateResponse>,
      NrfDeploymentsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a NrfDeploymentResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nrfDeploymentName The name of the NRF Deployment
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    nrfDeploymentName: string,
    resource: NrfDeploymentResource,
    options?: NrfDeploymentsCreateOrUpdateOptionalParams,
  ): Promise<NrfDeploymentsCreateOrUpdateResponse>;
  /**
   * Update a NrfDeploymentResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nrfDeploymentName The name of the NRF Deployment
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  updateTags(
    resourceGroupName: string,
    nrfDeploymentName: string,
    properties: NrfDeploymentResourceTagsUpdate,
    options?: NrfDeploymentsUpdateTagsOptionalParams,
  ): Promise<NrfDeploymentsUpdateTagsResponse>;
  /**
   * Delete a NrfDeploymentResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nrfDeploymentName The name of the NRF Deployment
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    nrfDeploymentName: string,
    options?: NrfDeploymentsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<NrfDeploymentsDeleteResponse>,
      NrfDeploymentsDeleteResponse
    >
  >;
  /**
   * Delete a NrfDeploymentResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param nrfDeploymentName The name of the NRF Deployment
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    nrfDeploymentName: string,
    options?: NrfDeploymentsDeleteOptionalParams,
  ): Promise<NrfDeploymentsDeleteResponse>;
}
