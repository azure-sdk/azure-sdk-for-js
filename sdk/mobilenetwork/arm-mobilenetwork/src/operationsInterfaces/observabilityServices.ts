/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ObservabilityServiceResource,
  ObservabilityServicesListBySubscriptionOptionalParams,
  ObservabilityServicesListByResourceGroupOptionalParams,
  ObservabilityServicesGetOptionalParams,
  ObservabilityServicesGetResponse,
  ObservabilityServicesCreateOrUpdateOptionalParams,
  ObservabilityServicesCreateOrUpdateResponse,
  ObservabilityServiceResourceTagsUpdate,
  ObservabilityServicesUpdateTagsOptionalParams,
  ObservabilityServicesUpdateTagsResponse,
  ObservabilityServicesDeleteOptionalParams,
  ObservabilityServicesDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ObservabilityServices. */
export interface ObservabilityServices {
  /**
   * List all Observability Services by Subscription ID.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ObservabilityServicesListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<ObservabilityServiceResource>;
  /**
   * List all Observability Services by Resource Group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ObservabilityServicesListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<ObservabilityServiceResource>;
  /**
   * Get a ObservabilityServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param observabilityServiceName The name of the Observability Service
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    observabilityServiceName: string,
    options?: ObservabilityServicesGetOptionalParams,
  ): Promise<ObservabilityServicesGetResponse>;
  /**
   * Create a ObservabilityServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param observabilityServiceName The name of the Observability Service
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    observabilityServiceName: string,
    resource: ObservabilityServiceResource,
    options?: ObservabilityServicesCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ObservabilityServicesCreateOrUpdateResponse>,
      ObservabilityServicesCreateOrUpdateResponse
    >
  >;
  /**
   * Create a ObservabilityServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param observabilityServiceName The name of the Observability Service
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    observabilityServiceName: string,
    resource: ObservabilityServiceResource,
    options?: ObservabilityServicesCreateOrUpdateOptionalParams,
  ): Promise<ObservabilityServicesCreateOrUpdateResponse>;
  /**
   * Update a ObservabilityServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param observabilityServiceName The name of the Observability Service
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  updateTags(
    resourceGroupName: string,
    observabilityServiceName: string,
    properties: ObservabilityServiceResourceTagsUpdate,
    options?: ObservabilityServicesUpdateTagsOptionalParams,
  ): Promise<ObservabilityServicesUpdateTagsResponse>;
  /**
   * Delete a ObservabilityServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param observabilityServiceName The name of the Observability Service
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    observabilityServiceName: string,
    options?: ObservabilityServicesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ObservabilityServicesDeleteResponse>,
      ObservabilityServicesDeleteResponse
    >
  >;
  /**
   * Delete a ObservabilityServiceResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param observabilityServiceName The name of the Observability Service
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    observabilityServiceName: string,
    options?: ObservabilityServicesDeleteOptionalParams,
  ): Promise<ObservabilityServicesDeleteResponse>;
}
