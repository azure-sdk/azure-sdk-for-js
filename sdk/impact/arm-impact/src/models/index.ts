/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response of a Connector list operation. */
export interface ConnectorListResult {
  /** The Connector items on this page */
  value: Connector[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Details of the Connector. */
export interface ConnectorProperties {
  /**
   * Resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * unique id of the connector.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly connectorId: string;
  /**
   * tenant id of this connector
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId: string;
  /** connector type */
  connectorType: Platform;
  /**
   * last run time stamp of this connector in UTC time zone
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly lastRunTimeStamp: Date;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The type used for update operations of the Connector. */
export interface ConnectorUpdate {
  /** The resource-specific properties for this resource. */
  properties?: ConnectorUpdateProperties;
}

/** The updatable properties of the Connector. */
export interface ConnectorUpdateProperties {
  /** connector type */
  connectorType?: Platform;
}

/** The response of a ImpactCategory list operation. */
export interface ImpactCategoryListResult {
  /** The ImpactCategory items on this page */
  value: ImpactCategory[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Impact category properties. */
export interface ImpactCategoryProperties {
  /**
   * Resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Unique ID of the category */
  categoryId: string;
  /** Unique ID of the parent category */
  parentCategoryId?: string;
  /** Description of the category */
  description?: string;
  /** The workloadImpact properties which are required when reporting with the impact category */
  requiredImpactProperties?: RequiredImpactProperties[];
}

/** Required impact properties */
export interface RequiredImpactProperties {
  /** Name of the property */
  name: string;
  /** Allowed values values for the property */
  allowedValues?: string[];
}

/** The response of a WorkloadImpact list operation. */
export interface WorkloadImpactListResult {
  /** The WorkloadImpact items on this page */
  value: WorkloadImpact[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Workload impact properties */
export interface WorkloadImpactProperties {
  /**
   * Resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Time at which impact was observed */
  startDateTime: Date;
  /** Time at which impact has ended */
  endDateTime?: Date;
  /** Azure resource id of the impacted resource */
  impactedResourceId: string;
  /**
   * Unique ID of the impact (UUID)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly impactUniqueId?: string;
  /**
   * Time at which impact is reported
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reportedTimeUtc?: Date;
  /** Category of the impact,  details can found from /impactCategories API */
  impactCategory: string;
  /** A detailed description of the impact */
  impactDescription?: string;
  /** The ARM correlation ids, this is important field for control plane related impacts */
  armCorrelationIds?: string[];
  /** Details about performance issue. Applicable for performance impacts. */
  performance?: Performance[];
  /** Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue */
  connectivity?: Connectivity;
  /** Additional fields related to impact, applicable fields per resource type are list under /impactCategories API */
  additionalProperties?: { [propertyName: string]: any };
  /** ARM error code and error message associated with the impact */
  errorDetails?: ErrorDetailProperties;
  /** Information about the impacted workload */
  workload?: Workload;
  /** Use this field to group impacts */
  impactGroupId?: string;
  /** Degree of confidence on the impact being a platform issue */
  confidenceLevel?: ConfidenceLevel;
  /** Client incident details ex: incidentId , incident source */
  clientIncidentDetails?: ClientIncidentDetails;
}

/** Details about impacted performance metrics. Applicable for performance related impact */
export interface Performance {
  /** Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API */
  metricName?: string;
  /** Threshold value for the metric */
  expected?: number;
  /** Observed value for the metric */
  actual?: number;
  /** Max and Min Threshold values for the metric */
  expectedValueRange?: ExpectedValueRange;
  /** Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other */
  unit?: MetricUnit;
}

/** Max and Min Threshold values for the metric */
export interface ExpectedValueRange {
  /** Min threshold value for the metric */
  min: number;
  /** Max threshold value for the metric */
  max: number;
}

/** Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource could be VM or the network. In such cases, the connectivity field will have the details about both VM and network. */
export interface Connectivity {
  /** Protocol used for the connection */
  protocol?: Protocol;
  /** Port number for the connection */
  port?: number;
  /** Source from which the connection was attempted */
  source?: SourceOrTarget;
  /** target which connection was attempted */
  target?: SourceOrTarget;
}

/** Resource details */
export interface SourceOrTarget {
  /** Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName} */
  azureResourceId?: string;
}

/** ARM error code and error message associated with the impact */
export interface ErrorDetailProperties {
  /** ARM Error code associated with the impact. */
  errorCode?: string;
  /** ARM Error Message associated with the impact */
  errorMessage?: string;
}

/** Information about the impacted workload */
export interface Workload {
  /** the scenario for the workload */
  context?: string;
  /** Tool used to interact with Azure. SDK, AzPortal, etc.., Other */
  toolset?: Toolset;
}

/** Client incident details ex: incidentId , incident source */
export interface ClientIncidentDetails {
  /** Client incident id. ex : id of the incident created to investigate and address the impact if any. */
  clientIncidentId?: string;
  /** Client incident source. ex : source system name where the incident is created */
  clientIncidentSource?: IncidentSource;
}

/** The response of a Insight list operation. */
export interface InsightListResult {
  /** The Insight items on this page */
  value: Insight[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Impact category properties. */
export interface InsightProperties {
  /**
   * Resource provisioning state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** category of the insight. */
  category: string;
  /** status of the insight. example resolved, repaired, other. */
  status?: string;
  /** Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event. */
  eventId?: string;
  /** Identifier that can be used to group similar insights. */
  groupId?: string;
  /** Contains title & description for the insight */
  content: Content;
  /** Time of the event, which has been correlated the impact. */
  eventTime?: Date;
  /** unique id of the insight. */
  insightUniqueId: string;
  /** details of of the impact for which insight has been generated. */
  impact: ImpactDetails;
  /** additional details of the insight. */
  additionalDetails?: Record<string, unknown>;
}

/** Article details of the insight like title, description etc */
export interface Content {
  /** Title of the insight */
  title: string;
  /** Description of the insight */
  description: string;
}

/** details of of the impact for which insight has been generated. */
export interface ImpactDetails {
  /** List of impacted Azure resources. */
  impactedResourceId: string;
  /** Time at which impact was started according to reported impact. */
  startTime: Date;
  /** Time at which impact was ended according to reported impact. */
  endTime?: Date;
  /** Azure Id of the impact. */
  impactId: string;
}

/** additional user defined field. */
export interface AdditionalField {
  /** name of the field. */
  name: string;
  /** value of the field. */
  value: string;
}

/** impacted azure resource id. */
export interface ImpactedResource {
  /** impacted azure resource id */
  impactedResourceId: string;
}

/** context of post call for insight */
export interface InsightCustomResourceCommonParameters {
  /** The API version to use for this operation. */
  apiVersion: string;
  /** The ID of the target subscription. The value must be an UUID. */
  subscriptionId: string;
  /** The provider namespace for the resource. */
  provider: "Microsoft.Impact";
  /** Filter by resource type */
  azureResourceId?: string;
}

/** Body of the get all insights */
export interface InsightDetails {
  /** The ID of the azure resource. */
  azureResourceId?: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** A connector is a resource that can be used to proactively report impacts against workloads in Azure to Microsoft. */
export interface Connector extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: ConnectorProperties;
}

/** ImpactCategory resource */
export interface ImpactCategory extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: ImpactCategoryProperties;
}

/** Workload Impact properties */
export interface WorkloadImpact extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: WorkloadImpactProperties;
}

/** Insight resource */
export interface Insight extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: InsightProperties;
}

/** Insight resource */
export interface InsightUnderSubscription extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: InsightProperties;
}

/** Defines headers for Connectors_createOrUpdate operation. */
export interface ConnectorsCreateOrUpdateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for WorkloadImpacts_create operation. */
export interface WorkloadImpactsCreateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Provisioning Succeeded */
  Succeeded = "Succeeded",
  /** Provisioning Failed */
  Failed = "Failed",
  /** Provisioning Canceled */
  Canceled = "Canceled",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Provisioning Succeeded \
 * **Failed**: Provisioning Failed \
 * **Canceled**: Provisioning Canceled
 */
export type ProvisioningState = string;

/** Known values of {@link Platform} that the service accepts. */
export enum KnownPlatform {
  /** Type of Azure Monitor */
  AzureMonitor = "AzureMonitor",
}

/**
 * Defines values for Platform. \
 * {@link KnownPlatform} can be used interchangeably with Platform,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureMonitor**: Type of Azure Monitor
 */
export type Platform = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link MetricUnit} that the service accepts. */
export enum KnownMetricUnit {
  /** When measurement is in ByteSeconds */
  ByteSeconds = "ByteSeconds",
  /** When measurement is in Bytes */
  Bytes = "Bytes",
  /** When measurement is in BytesPerSecond */
  BytesPerSecond = "BytesPerSecond",
  /** When measurement is in Cores */
  Cores = "Cores",
  /** When measurement is in Count */
  Count = "Count",
  /** When measurement is in CountPerSecond */
  CountPerSecond = "CountPerSecond",
  /** When measurement is in MilliCores */
  MilliCores = "MilliCores",
  /** When measurement is in MilliSeconds */
  MilliSeconds = "MilliSeconds",
  /** When measurement is in NanoCores */
  NanoCores = "NanoCores",
  /** When measurement is in Percent */
  Percent = "Percent",
  /** When measurement is in Seconds */
  Seconds = "Seconds",
  /** When measurement is in Other than listed */
  Other = "Other",
}

/**
 * Defines values for MetricUnit. \
 * {@link KnownMetricUnit} can be used interchangeably with MetricUnit,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ByteSeconds**: When measurement is in ByteSeconds \
 * **Bytes**: When measurement is in Bytes \
 * **BytesPerSecond**: When measurement is in BytesPerSecond \
 * **Cores**: When measurement is in Cores \
 * **Count**: When measurement is in Count \
 * **CountPerSecond**: When measurement is in CountPerSecond \
 * **MilliCores**: When measurement is in MilliCores \
 * **MilliSeconds**: When measurement is in MilliSeconds \
 * **NanoCores**: When measurement is in NanoCores \
 * **Percent**: When measurement is in Percent \
 * **Seconds**: When measurement is in Seconds \
 * **Other**: When measurement is in Other than listed
 */
export type MetricUnit = string;

/** Known values of {@link Protocol} that the service accepts. */
export enum KnownProtocol {
  /** When communication protocol is TCP */
  TCP = "TCP",
  /** When communication protocol is UDP */
  UDP = "UDP",
  /** When communication protocol is HTTP */
  Http = "HTTP",
  /** When communication protocol is HTTPS */
  Https = "HTTPS",
  /** When communication protocol is RDP */
  RDP = "RDP",
  /** When communication protocol is FTP */
  FTP = "FTP",
  /** When communication protocol is SSH */
  SSH = "SSH",
  /** When communication protocol is Other */
  Other = "Other",
}

/**
 * Defines values for Protocol. \
 * {@link KnownProtocol} can be used interchangeably with Protocol,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **TCP**: When communication protocol is TCP \
 * **UDP**: When communication protocol is UDP \
 * **HTTP**: When communication protocol is HTTP \
 * **HTTPS**: When communication protocol is HTTPS \
 * **RDP**: When communication protocol is RDP \
 * **FTP**: When communication protocol is FTP \
 * **SSH**: When communication protocol is SSH \
 * **Other**: When communication protocol is Other
 */
export type Protocol = string;

/** Known values of {@link Toolset} that the service accepts. */
export enum KnownToolset {
  /** If communication toolset is Terraform */
  Terraform = "Terraform",
  /** If communication toolset is Puppet */
  Puppet = "Puppet",
  /** If communication toolset is Chef */
  Chef = "Chef",
  /** If communication toolset is SDK */
  SDK = "SDK",
  /** If communication toolset is Ansible */
  Ansible = "Ansible",
  /** If communication toolset is ARM */
  ARM = "ARM",
  /** If communication toolset is Portal */
  Portal = "Portal",
  /** If communication toolset is Shell */
  Shell = "Shell",
  /** If communication toolset is Other */
  Other = "Other",
}

/**
 * Defines values for Toolset. \
 * {@link KnownToolset} can be used interchangeably with Toolset,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Terraform**: If communication toolset is Terraform \
 * **Puppet**: If communication toolset is Puppet \
 * **Chef**: If communication toolset is Chef \
 * **SDK**: If communication toolset is SDK \
 * **Ansible**: If communication toolset is Ansible \
 * **ARM**: If communication toolset is ARM \
 * **Portal**: If communication toolset is Portal \
 * **Shell**: If communication toolset is Shell \
 * **Other**: If communication toolset is Other
 */
export type Toolset = string;

/** Known values of {@link ConfidenceLevel} that the service accepts. */
export enum KnownConfidenceLevel {
  /** Low confidence on azure being the source of impact */
  Low = "Low",
  /** Medium confidence on azure being the source of impact */
  Medium = "Medium",
  /** High confidence on azure being the source of impact */
  High = "High",
}

/**
 * Defines values for ConfidenceLevel. \
 * {@link KnownConfidenceLevel} can be used interchangeably with ConfidenceLevel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Low**: Low confidence on azure being the source of impact \
 * **Medium**: Medium confidence on azure being the source of impact \
 * **High**: High confidence on azure being the source of impact
 */
export type ConfidenceLevel = string;

/** Known values of {@link IncidentSource} that the service accepts. */
export enum KnownIncidentSource {
  /** When source of Incident is AzureDevops */
  AzureDevops = "AzureDevops",
  /** When source of Incident is Microsoft ICM */
  ICM = "ICM",
  /** When source of Incident is Jira */
  Jira = "Jira",
  /** When source of Incident is ServiceNow */
  ServiceNow = "ServiceNow",
  /** When source of Incident is Other */
  Other = "Other",
}

/**
 * Defines values for IncidentSource. \
 * {@link KnownIncidentSource} can be used interchangeably with IncidentSource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AzureDevops**: When source of Incident is AzureDevops \
 * **ICM**: When source of Incident is Microsoft ICM \
 * **Jira**: When source of Incident is Jira \
 * **ServiceNow**: When source of Incident is ServiceNow \
 * **Other**: When source of Incident is Other
 */
export type IncidentSource = string;

/** Known values of {@link ImpactCategoryEnum} that the service accepts. */
export enum KnownImpactCategoryEnum {
  /** Availability category */
  Availability = "Availability",
  /** Performance category */
  Performance = "Performance",
  /** Other category */
  Other = "Other",
}

/**
 * Defines values for ImpactCategoryEnum. \
 * {@link KnownImpactCategoryEnum} can be used interchangeably with ImpactCategoryEnum,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Availability**: Availability category \
 * **Performance**: Performance category \
 * **Other**: Other category
 */
export type ImpactCategoryEnum = string;

/** Optional parameters. */
export interface OperationsListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface ConnectorsListBySubscriptionOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type ConnectorsListBySubscriptionResponse = ConnectorListResult;

/** Optional parameters. */
export interface ConnectorsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ConnectorsGetResponse = Connector;

/** Optional parameters. */
export interface ConnectorsCreateOrUpdateOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ConnectorsCreateOrUpdateResponse = Connector;

/** Optional parameters. */
export interface ConnectorsUpdateOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ConnectorsUpdateResponse = Connector;

/** Optional parameters. */
export interface ConnectorsDeleteOptionalParams extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface ConnectorsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type ConnectorsListBySubscriptionNextResponse = ConnectorListResult;

/** Optional parameters. */
export interface ImpactCategoriesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Filter by category name */
  categoryName?: string;
}

/** Contains response data for the listBySubscription operation. */
export type ImpactCategoriesListBySubscriptionResponse = ImpactCategoryListResult;

/** Optional parameters. */
export interface ImpactCategoriesGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ImpactCategoriesGetResponse = ImpactCategory;

/** Optional parameters. */
export interface ImpactCategoriesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type ImpactCategoriesListBySubscriptionNextResponse = ImpactCategoryListResult;

/** Optional parameters. */
export interface WorkloadImpactsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type WorkloadImpactsListBySubscriptionResponse = WorkloadImpactListResult;

/** Optional parameters. */
export interface WorkloadImpactsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type WorkloadImpactsGetResponse = WorkloadImpact;

/** Optional parameters. */
export interface WorkloadImpactsCreateOptionalParams extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type WorkloadImpactsCreateResponse = WorkloadImpact;

/** Optional parameters. */
export interface WorkloadImpactsDeleteOptionalParams extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface WorkloadImpactsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type WorkloadImpactsListBySubscriptionNextResponse = WorkloadImpactListResult;

/** Optional parameters. */
export interface InsightsListBySubscriptionOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type InsightsListBySubscriptionResponse = InsightListResult;

/** Optional parameters. */
export interface InsightsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type InsightsGetResponse = Insight;

/** Optional parameters. */
export interface InsightsCreateOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type InsightsCreateResponse = Insight;

/** Optional parameters. */
export interface InsightsDeleteOptionalParams extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface InsightsListBySubscriptionNextOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type InsightsListBySubscriptionNextResponse = InsightListResult;

/** Optional parameters. */
export interface MicrosoftImpactOptionalParams extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
