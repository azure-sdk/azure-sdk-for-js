/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { UploadService } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { MicrosoftImpact } from "../microsoftImpact";
import {
  UploadServiceGetUploadTokenOptionalParams,
  UploadServiceGetUploadTokenResponse,
} from "../models";

/** Class containing UploadService operations. */
export class UploadServiceImpl implements UploadService {
  private readonly client: MicrosoftImpact;

  /**
   * Initialize a new instance of the class UploadService class.
   * @param client Reference to the service client
   */
  constructor(client: MicrosoftImpact) {
    this.client = client;
  }

  /**
   * Customer can use this POST endpoint to trigger an action, where the UserRP/AzImpactRP service
   * creates and returns a user-delegate SAS token for the storage account/container unique to the
   * customer (identified by subscription ID).
   * @param options The options parameters.
   */
  getUploadToken(
    options?: UploadServiceGetUploadTokenOptionalParams,
  ): Promise<UploadServiceGetUploadTokenResponse> {
    return this.client.sendOperationRequest(
      { options },
      getUploadTokenOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getUploadTokenOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/providers/Microsoft.Impact/getUploadToken",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.UploadTokenResponse,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  headerParameters: [Parameters.accept],
  serializer,
};
