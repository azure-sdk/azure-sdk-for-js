/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const Alert: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Alert",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isActive: {
        serializedName: "properties.isActive",
        type: {
          name: "Boolean"
        }
      },
      incidentCount: {
        serializedName: "properties.incidentCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      lastModifiedDateTime: {
        serializedName: "properties.lastModifiedDateTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      lastScannedDateTime: {
        serializedName: "properties.lastScannedDateTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      alertDefinition: {
        serializedName: "properties.alertDefinition",
        type: {
          name: "Composite",
          className: "AlertDefinition"
        }
      },
      alertIncidents: {
        serializedName: "properties.alertIncidents",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertIncident"
            }
          }
        }
      },
      alertConfiguration: {
        serializedName: "properties.alertConfiguration",
        type: {
          name: "Composite",
          className: "AlertConfiguration"
        }
      }
    }
  }
};

export const AlertDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertDefinition",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      severityLevel: {
        serializedName: "properties.severityLevel",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      securityImpact: {
        serializedName: "properties.securityImpact",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      mitigationSteps: {
        serializedName: "properties.mitigationSteps",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      howToPrevent: {
        serializedName: "properties.howToPrevent",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isRemediatable: {
        serializedName: "properties.isRemediatable",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      isConfigurable: {
        serializedName: "properties.isConfigurable",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AlertIncident: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertIncident",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      alertIncidentType: {
        serializedName: "properties.alertIncidentType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertIncidentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertIncidentProperties",
    uberParent: "AlertIncidentProperties",
    polymorphicDiscriminator: {
      serializedName: "alertIncidentType",
      clientName: "alertIncidentType"
    },
    modelProperties: {
      alertIncidentType: {
        serializedName: "alertIncidentType",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertConfiguration",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      alertDefinitionId: {
        serializedName: "properties.alertDefinitionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "properties.scope",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isEnabled: {
        serializedName: "properties.isEnabled",
        type: {
          name: "Boolean"
        }
      },
      alertConfigurationType: {
        serializedName: "properties.alertConfigurationType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertConfigurationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertConfigurationProperties",
    uberParent: "AlertConfigurationProperties",
    polymorphicDiscriminator: {
      serializedName: "alertConfigurationType",
      clientName: "alertConfigurationType"
    },
    modelProperties: {
      alertDefinitionId: {
        serializedName: "alertDefinitionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isEnabled: {
        serializedName: "isEnabled",
        type: {
          name: "Boolean"
        }
      },
      alertConfigurationType: {
        serializedName: "alertConfigurationType",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody"
        }
      }
    }
  }
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Alert"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertOperationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertOperationResult",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertConfigurationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertConfigurationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertConfiguration"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertDefinitionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertDefinitionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertDefinition"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertIncidentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertIncidentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertIncident"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertOperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertOperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertOperationResult"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureRolesAssignedOutsidePimAlertIncidentProperties: coreClient.CompositeMapper = {
  serializedName: "AzureRolesAssignedOutsidePimAlertIncident",
  type: {
    name: "Composite",
    className: "AzureRolesAssignedOutsidePimAlertIncidentProperties",
    uberParent: "AlertIncidentProperties",
    polymorphicDiscriminator:
      AlertIncidentProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertIncidentProperties.type.modelProperties,
      assigneeDisplayName: {
        serializedName: "assigneeDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      assigneeUserPrincipalName: {
        serializedName: "assigneeUserPrincipalName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      assigneeId: {
        serializedName: "assigneeId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      roleDisplayName: {
        serializedName: "roleDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      roleTemplateId: {
        serializedName: "roleTemplateId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "roleDefinitionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      assignmentActivatedDate: {
        serializedName: "assignmentActivatedDate",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      requestorId: {
        serializedName: "requestorId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      requestorDisplayName: {
        serializedName: "requestorDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      requestorUserPrincipalName: {
        serializedName: "requestorUserPrincipalName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DuplicateRoleCreatedAlertIncidentProperties: coreClient.CompositeMapper = {
  serializedName: "DuplicateRoleCreatedAlertIncident",
  type: {
    name: "Composite",
    className: "DuplicateRoleCreatedAlertIncidentProperties",
    uberParent: "AlertIncidentProperties",
    polymorphicDiscriminator:
      AlertIncidentProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertIncidentProperties.type.modelProperties,
      roleName: {
        serializedName: "roleName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      duplicateRoles: {
        serializedName: "duplicateRoles",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TooManyOwnersAssignedToResourceAlertIncidentProperties: coreClient.CompositeMapper = {
  serializedName: "TooManyOwnersAssignedToResourceAlertIncident",
  type: {
    name: "Composite",
    className: "TooManyOwnersAssignedToResourceAlertIncidentProperties",
    uberParent: "AlertIncidentProperties",
    polymorphicDiscriminator:
      AlertIncidentProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertIncidentProperties.type.modelProperties,
      assigneeName: {
        serializedName: "assigneeName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      assigneeType: {
        serializedName: "assigneeType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TooManyPermanentOwnersAssignedToResourceAlertIncidentProperties: coreClient.CompositeMapper = {
  serializedName: "TooManyPermanentOwnersAssignedToResourceAlertIncident",
  type: {
    name: "Composite",
    className:
      "TooManyPermanentOwnersAssignedToResourceAlertIncidentProperties",
    uberParent: "AlertIncidentProperties",
    polymorphicDiscriminator:
      AlertIncidentProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertIncidentProperties.type.modelProperties,
      assigneeName: {
        serializedName: "assigneeName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      assigneeType: {
        serializedName: "assigneeType",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureRolesAssignedOutsidePimAlertConfigurationProperties: coreClient.CompositeMapper = {
  serializedName: "AzureRolesAssignedOutsidePimAlertConfiguration",
  type: {
    name: "Composite",
    className: "AzureRolesAssignedOutsidePimAlertConfigurationProperties",
    uberParent: "AlertConfigurationProperties",
    polymorphicDiscriminator:
      AlertConfigurationProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertConfigurationProperties.type.modelProperties
    }
  }
};

export const DuplicateRoleCreatedAlertConfigurationProperties: coreClient.CompositeMapper = {
  serializedName: "DuplicateRoleCreatedAlertConfiguration",
  type: {
    name: "Composite",
    className: "DuplicateRoleCreatedAlertConfigurationProperties",
    uberParent: "AlertConfigurationProperties",
    polymorphicDiscriminator:
      AlertConfigurationProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertConfigurationProperties.type.modelProperties
    }
  }
};

export const TooManyOwnersAssignedToResourceAlertConfigurationProperties: coreClient.CompositeMapper = {
  serializedName: "TooManyOwnersAssignedToResourceAlertConfiguration",
  type: {
    name: "Composite",
    className: "TooManyOwnersAssignedToResourceAlertConfigurationProperties",
    uberParent: "AlertConfigurationProperties",
    polymorphicDiscriminator:
      AlertConfigurationProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertConfigurationProperties.type.modelProperties,
      thresholdNumberOfOwners: {
        serializedName: "thresholdNumberOfOwners",
        type: {
          name: "Number"
        }
      },
      thresholdPercentageOfOwnersOutOfAllRoleMembers: {
        serializedName: "thresholdPercentageOfOwnersOutOfAllRoleMembers",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const TooManyPermanentOwnersAssignedToResourceAlertConfigurationProperties: coreClient.CompositeMapper = {
  serializedName: "TooManyPermanentOwnersAssignedToResourceAlertConfiguration",
  type: {
    name: "Composite",
    className:
      "TooManyPermanentOwnersAssignedToResourceAlertConfigurationProperties",
    uberParent: "AlertConfigurationProperties",
    polymorphicDiscriminator:
      AlertConfigurationProperties.type.polymorphicDiscriminator,
    modelProperties: {
      ...AlertConfigurationProperties.type.modelProperties,
      thresholdNumberOfPermanentOwners: {
        serializedName: "thresholdNumberOfPermanentOwners",
        type: {
          name: "Number"
        }
      },
      thresholdPercentageOfPermanentOwnersOutOfAllOwners: {
        serializedName: "thresholdPercentageOfPermanentOwnersOutOfAllOwners",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AlertsRefreshHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertsRefreshHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertsRefreshAllHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertsRefreshAllHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export let discriminators = {
  AlertIncidentProperties: AlertIncidentProperties,
  AlertConfigurationProperties: AlertConfigurationProperties,
  "AlertIncidentProperties.AzureRolesAssignedOutsidePimAlertIncident": AzureRolesAssignedOutsidePimAlertIncidentProperties,
  "AlertIncidentProperties.DuplicateRoleCreatedAlertIncident": DuplicateRoleCreatedAlertIncidentProperties,
  "AlertIncidentProperties.TooManyOwnersAssignedToResourceAlertIncident": TooManyOwnersAssignedToResourceAlertIncidentProperties,
  "AlertIncidentProperties.TooManyPermanentOwnersAssignedToResourceAlertIncident": TooManyPermanentOwnersAssignedToResourceAlertIncidentProperties,
  "AlertConfigurationProperties.AzureRolesAssignedOutsidePimAlertConfiguration": AzureRolesAssignedOutsidePimAlertConfigurationProperties,
  "AlertConfigurationProperties.DuplicateRoleCreatedAlertConfiguration": DuplicateRoleCreatedAlertConfigurationProperties,
  "AlertConfigurationProperties.TooManyOwnersAssignedToResourceAlertConfiguration": TooManyOwnersAssignedToResourceAlertConfigurationProperties,
  "AlertConfigurationProperties.TooManyPermanentOwnersAssignedToResourceAlertConfiguration": TooManyPermanentOwnersAssignedToResourceAlertConfigurationProperties
};
