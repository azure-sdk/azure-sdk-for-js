/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Response for the ListGroundStations API service call. */
export interface GroundStationListResult {
  /** A list of ground station resources. */
  value?: GroundStation[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** List of ground station resource properties. */
export interface GroundStationsProperties {
  /** City of ground station. */
  city?: string;
  /** Ground station capabilities. */
  capabilities: Capability[];
  /** Ground station provider name. */
  providerName?: string;
  /** Longitude of the ground station in decimal degrees. */
  longitudeDegrees?: number;
  /** Latitude of the ground station in decimal degrees. */
  latitudeDegrees?: number;
  /** Altitude of the ground station. */
  altitudeMeters?: number;
  /**
   * Release Status of a ground station.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly releaseMode?: ReleaseMode;
  /** The Azure Orbital Digital Ground site's resource ID. */
  id: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Tags object for patch operations. */
export interface TagsObject {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Properties object for an edge site. */
export interface EdgeSitesProperties {
  /** The Azure Orbital Digital Ground site's resource ID. */
  id: string;
}

/** An error response from the service. */
export interface CloudError {
  /** An error response from the service. */
  error?: CloudErrorBody;
}

/** An error response from the service. */
export interface CloudErrorBody {
  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */
  code?: string;
  /** A message describing the error, intended to be suitable for display in a user interface. */
  message?: string;
  /** The target of the particular error. For example, the name of the property in error. */
  target?: string;
  /** A list of additional details about the error. */
  details?: CloudErrorBody[];
}

/** Response for an API service call that lists Edge Sites. */
export interface EdgeSiteListResult {
  /** A list of edge site resources. */
  value?: EdgeSite[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Properties object for an L2 Connection. */
export interface L2ConnectionsProperties {
  /**
   * The current state of the resource's creation, deletion, or modification.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: L2ConnectionsPropertiesProvisioningState;
  /**
   * Globally-unique identifier for this connection that is to be used as a circuit ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly circuitId?: string;
  /** The VLAN ID for the L2 connection. */
  vlanId: number;
  /** The unique name of the partner router that cross-connects with the Orbital Edge Router at the ground station site. */
  nameGroundStationPartnerRouterName: string;
  /** The ground station's resource ID. */
  idGroundStationId: string;
  /** The unique name of the partner router that cross-connects with the Orbital Edge Router at the edge site. */
  nameEdgeSitePartnerRouterName: string;
  /** The edge site's resource ID. */
  idEdgeSiteId: string;
}

/** Response for an API service call that lists L2 Connections. */
export interface L2ConnectionListResult {
  /** A list of L2 Connection resources. */
  value?: L2Connection[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Response for an API service call that lists the resource IDs of resources associated with another resource. */
export interface ResourceIdListResult {
  /** A list of Azure Resource IDs. */
  value?: ResourceIdListResultValueItem[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

export interface ResourceIdListResultValueItem {
  /** The Azure Resource ID. */
  id?: string;
}

/** Response for an API service call that lists Global Communications Sites. */
export interface GlobalCommunicationsSiteListResult {
  /** A list of global communications sites. */
  value?: GlobalCommunicationsSite[];
  /**
   * The URL to get the next set of results.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Properties object for a Azure Orbital Digital Ground site. */
export interface GlobalCommunicationsSitesProperties {
  /** Describes the location of the Azure Orbital Digital Ground site. */
  locationData?: GlobalCommunicationsSitesPropertiesLocationData;
  /** The type of the Azure Orbital Digital Ground site. EdgeSite or GroundStation. */
  globalCommunicationsSiteType?: GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType;
  /**
   * Partner routers connected to this site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly partnerRouters?: PartnerRouter[];
  /**
   * The bandwidth per partner router cross-connection at this Azure Orbital Digital Ground site, measured in bits per second.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly partnerSiteBandwidth?: number;
}

/** Describes a location outside of Azure. */
export interface LocationData {
  /** The city of the location (e.g., Miami). */
  city: string;
  /** For example, the state (e.g., Florida), province (e.g., Ontario), or region (e.g., Tuscany) of the location. */
  district: string;
  /** The nation (e.g., United States of America) of the location. */
  country: string;
  /** The name of the closest Azure region, (e.g., westus2). */
  closestAzureRegion?: string;
  /** Any extra information needed to uniquely identify the location (e.g., zip code). */
  extra?: string;
}

/** One of the partner routers within a global communications site. */
export interface PartnerRouter {
  /**
   * The unique name of the partnerRouter.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
}

/** The approximate bandwidth provisioned for a partner on a global communications site. */
export interface ProvisionedBandwidth {
  /**
   * The approximate number of megabits per second that are provisioned for the partner on this global communications site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly mbps?: number;
}

/** Properties of the Ground Station. */
export interface GroundStationProperties extends GroundStationsProperties {}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** The properties bag for this resource. */
export interface EdgeSiteProperties extends EdgeSitesProperties {}

/** The properties bag for this resource. */
export interface L2ConnectionProperties extends L2ConnectionsProperties {}

/** The properties bag for this resource. */
export interface GlobalCommunicationsSiteProperties
  extends GlobalCommunicationsSitesProperties {}

/** Describes the location of the Azure Orbital Digital Ground site. */
export interface GlobalCommunicationsSitesPropertiesLocationData
  extends LocationData {}

/** Ground Station contains one or more antennas. */
export interface GroundStation extends TrackedResource {
  /** City of ground station. */
  city?: string;
  /** Ground station capabilities. */
  capabilities?: Capability[];
  /** Ground station provider name. */
  providerName?: string;
  /** Longitude of the ground station in decimal degrees. */
  longitudeDegrees?: number;
  /** Latitude of the ground station in decimal degrees. */
  latitudeDegrees?: number;
  /** Altitude of the ground station. */
  altitudeMeters?: number;
  /**
   * Release Status of a ground station.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly releaseMode?: ReleaseMode;
  /** The Azure Orbital Digital Ground site's resource ID. */
  idPropertiesGlobalCommunicationsSiteId?: string;
}

/** A customer's reference to a global communications site site. */
export interface EdgeSite extends TrackedResource {
  /** The Azure Orbital Digital Ground site's resource ID. */
  idPropertiesGlobalCommunicationsSiteId: string;
}

/** Connects an edge site to an orbital gateway and describes what layer 2 traffic to forward between them. */
export interface L2Connection extends TrackedResource {
  /**
   * The current state of the resource's creation, deletion, or modification.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: L2ConnectionsPropertiesProvisioningState;
  /**
   * Globally-unique identifier for this connection that is to be used as a circuit ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly circuitId?: string;
  /** The VLAN ID for the L2 connection. */
  vlanId: number;
  /** The unique name of the partner router that cross-connects with the Orbital Edge Router at the ground station site. */
  namePropertiesGroundStationPartnerRouterName: string;
  /** The ground station's resource ID. */
  idPropertiesGroundStationId: string;
  /** The unique name of the partner router that cross-connects with the Orbital Edge Router at the edge site. */
  namePropertiesEdgeSitePartnerRouterName: string;
  /** The edge site's resource ID. */
  idPropertiesEdgeSiteId: string;
}

/** A site where the Orbital network is connected to a partner network. */
export interface GlobalCommunicationsSite extends ProxyResource {
  /** Describes the location of the Azure Orbital Digital Ground site. */
  locationData?: GlobalCommunicationsSitesPropertiesLocationData;
  /** The type of the Azure Orbital Digital Ground site. EdgeSite or GroundStation. */
  globalCommunicationsSiteType?: GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType;
  /**
   * Partner routers connected to this site.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly partnerRouters?: PartnerRouter[];
  /**
   * The bandwidth per partner router cross-connection at this Azure Orbital Digital Ground site, measured in bits per second.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly partnerSiteBandwidth?: number;
}

/** Defines headers for L2Connections_createOrUpdate operation. */
export interface L2ConnectionsCreateOrUpdateHeaders {
  /** URL for checking the ongoing status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for L2Connections_delete operation. */
export interface L2ConnectionsDeleteHeaders {
  /** URL for determining when an operation has completed. */
  location?: string;
}

/** Defines headers for L2Connections_updateTags operation. */
export interface L2ConnectionsUpdateTagsHeaders {
  /** URL for determining when an operation has completed. */
  location?: string;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link Capability} that the service accepts. */
export enum KnownCapability {
  /** EarthObservation */
  EarthObservation = "EarthObservation",
  /** Communication */
  Communication = "Communication",
}

/**
 * Defines values for Capability. \
 * {@link KnownCapability} can be used interchangeably with Capability,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EarthObservation** \
 * **Communication**
 */
export type Capability = string;

/** Known values of {@link ReleaseMode} that the service accepts. */
export enum KnownReleaseMode {
  /** Preview */
  Preview = "Preview",
  /** GA */
  GA = "GA",
}

/**
 * Defines values for ReleaseMode. \
 * {@link KnownReleaseMode} can be used interchangeably with ReleaseMode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Preview** \
 * **GA**
 */
export type ReleaseMode = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Creating */
  Creating = "Creating",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Updating** \
 * **Deleting**
 */
export type ProvisioningState = string;

/** Known values of {@link L2ConnectionsPropertiesProvisioningState} that the service accepts. */
export enum KnownL2ConnectionsPropertiesProvisioningState {
  /** Creating */
  Creating = "Creating",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
}

/**
 * Defines values for L2ConnectionsPropertiesProvisioningState. \
 * {@link KnownL2ConnectionsPropertiesProvisioningState} can be used interchangeably with L2ConnectionsPropertiesProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled** \
 * **Updating** \
 * **Deleting**
 */
export type L2ConnectionsPropertiesProvisioningState = string;

/** Known values of {@link GlobalCommunicationsSiteType} that the service accepts. */
export enum KnownGlobalCommunicationsSiteType {
  /** Edge */
  Edge = "Edge",
  /** GroundStation */
  GroundStation = "GroundStation",
}

/**
 * Defines values for GlobalCommunicationsSiteType. \
 * {@link KnownGlobalCommunicationsSiteType} can be used interchangeably with GlobalCommunicationsSiteType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Edge** \
 * **GroundStation**
 */
export type GlobalCommunicationsSiteType = string;

/** Known values of {@link GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType} that the service accepts. */
export enum KnownGlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType {
  /** Edge */
  Edge = "Edge",
  /** GroundStation */
  GroundStation = "GroundStation",
}

/**
 * Defines values for GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType. \
 * {@link KnownGlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType} can be used interchangeably with GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Edge** \
 * **GroundStation**
 */
export type GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType =
  string;

/** Known values of {@link Status} that the service accepts. */
export enum KnownStatus {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Canceled */
  Canceled = "Canceled",
  /** Failed */
  Failed = "Failed",
  /** Running */
  Running = "Running",
}

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Canceled** \
 * **Failed** \
 * **Running**
 */
export type Status = string;

/** Known values of {@link CapabilityParameter} that the service accepts. */
export enum KnownCapabilityParameter {
  /** EarthObservation */
  EarthObservation = "EarthObservation",
  /** Communication */
  Communication = "Communication",
}

/**
 * Defines values for CapabilityParameter. \
 * {@link KnownCapabilityParameter} can be used interchangeably with CapabilityParameter,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EarthObservation** \
 * **Communication**
 */
export type CapabilityParameter = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface GroundStationsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type GroundStationsListBySubscriptionResponse = GroundStationListResult;

/** Optional parameters. */
export interface GroundStationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type GroundStationsListResponse = GroundStationListResult;

/** Optional parameters. */
export interface GroundStationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type GroundStationsGetResponse = GroundStation;

/** Optional parameters. */
export interface GroundStationsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** City of ground station. */
  city?: string;
  /** Ground station capabilities. */
  capabilities?: Capability[];
  /** Ground station provider name. */
  providerName?: string;
  /** Longitude of the ground station in decimal degrees. */
  longitudeDegrees?: number;
  /** Latitude of the ground station in decimal degrees. */
  latitudeDegrees?: number;
  /** Altitude of the ground station. */
  altitudeMeters?: number;
  /** The Azure Orbital Digital Ground site's resource ID. */
  id?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type GroundStationsCreateOrUpdateResponse = GroundStation;

/** Optional parameters. */
export interface GroundStationsUpdateTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateTags operation. */
export type GroundStationsUpdateTagsResponse = GroundStation;

/** Optional parameters. */
export interface GroundStationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface GroundStationsListL2ConnectionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listL2Connections operation. */
export type GroundStationsListL2ConnectionsResponse = ResourceIdListResult;

/** Optional parameters. */
export interface GroundStationsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type GroundStationsListBySubscriptionNextResponse =
  GroundStationListResult;

/** Optional parameters. */
export interface GroundStationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type GroundStationsListNextResponse = GroundStationListResult;

/** Optional parameters. */
export interface GroundStationsListL2ConnectionsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listL2ConnectionsNext operation. */
export type GroundStationsListL2ConnectionsNextResponse = ResourceIdListResult;

/** Optional parameters. */
export interface EdgeSitesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EdgeSitesGetResponse = EdgeSite;

/** Optional parameters. */
export interface EdgeSitesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** Contains response data for the createOrUpdate operation. */
export type EdgeSitesCreateOrUpdateResponse = EdgeSite;

/** Optional parameters. */
export interface EdgeSitesDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface EdgeSitesUpdateTagsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the updateTags operation. */
export type EdgeSitesUpdateTagsResponse = EdgeSite;

/** Optional parameters. */
export interface EdgeSitesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type EdgeSitesListBySubscriptionResponse = EdgeSiteListResult;

/** Optional parameters. */
export interface EdgeSitesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type EdgeSitesListResponse = EdgeSiteListResult;

/** Optional parameters. */
export interface EdgeSitesListL2ConnectionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listL2Connections operation. */
export type EdgeSitesListL2ConnectionsResponse = ResourceIdListResult;

/** Optional parameters. */
export interface EdgeSitesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type EdgeSitesListBySubscriptionNextResponse = EdgeSiteListResult;

/** Optional parameters. */
export interface EdgeSitesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type EdgeSitesListNextResponse = EdgeSiteListResult;

/** Optional parameters. */
export interface EdgeSitesListL2ConnectionsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listL2ConnectionsNext operation. */
export type EdgeSitesListL2ConnectionsNextResponse = ResourceIdListResult;

/** Optional parameters. */
export interface L2ConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type L2ConnectionsGetResponse = L2Connection;

/** Optional parameters. */
export interface L2ConnectionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type L2ConnectionsCreateOrUpdateResponse = L2Connection;

/** Optional parameters. */
export interface L2ConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type L2ConnectionsDeleteResponse = L2ConnectionsDeleteHeaders;

/** Optional parameters. */
export interface L2ConnectionsUpdateTagsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateTags operation. */
export type L2ConnectionsUpdateTagsResponse = L2Connection;

/** Optional parameters. */
export interface L2ConnectionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type L2ConnectionsListResponse = L2ConnectionListResult;

/** Optional parameters. */
export interface L2ConnectionsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type L2ConnectionsListBySubscriptionResponse = L2ConnectionListResult;

/** Optional parameters. */
export interface L2ConnectionsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type L2ConnectionsListNextResponse = L2ConnectionListResult;

/** Optional parameters. */
export interface L2ConnectionsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type L2ConnectionsListBySubscriptionNextResponse =
  L2ConnectionListResult;

/** Optional parameters. */
export interface GlobalCommunicationsSitesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type GlobalCommunicationsSitesListBySubscriptionResponse =
  GlobalCommunicationsSiteListResult;

/** Optional parameters. */
export interface GlobalCommunicationsSitesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type GlobalCommunicationsSitesGetResponse = GlobalCommunicationsSite;

/** Optional parameters. */
export interface GlobalCommunicationsSitesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type GlobalCommunicationsSitesListBySubscriptionNextResponse =
  GlobalCommunicationsSiteListResult;

/** Optional parameters. */
export interface AzureOrbitalOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. */
  skiptoken?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
