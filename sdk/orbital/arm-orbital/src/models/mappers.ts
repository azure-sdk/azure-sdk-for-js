/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const GroundStationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroundStationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GroundStation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroundStationsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroundStationsProperties",
    modelProperties: {
      city: {
        serializedName: "city",
        type: {
          name: "String",
        },
      },
      capabilities: {
        serializedName: "capabilities",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      providerName: {
        serializedName: "providerName",
        type: {
          name: "String",
        },
      },
      longitudeDegrees: {
        serializedName: "longitudeDegrees",
        type: {
          name: "Number",
        },
      },
      latitudeDegrees: {
        serializedName: "latitudeDegrees",
        type: {
          name: "Number",
        },
      },
      altitudeMeters: {
        serializedName: "altitudeMeters",
        type: {
          name: "Number",
        },
      },
      releaseMode: {
        serializedName: "releaseMode",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "globalCommunicationsSite.id",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const TagsObject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TagsObject",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const EdgeSitesProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EdgeSitesProperties",
    modelProperties: {
      id: {
        serializedName: "globalCommunicationsSite.id",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody",
        },
      },
    },
  },
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody",
            },
          },
        },
      },
    },
  },
};

export const EdgeSiteListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EdgeSiteListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EdgeSite",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const L2ConnectionsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "L2ConnectionsProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      circuitId: {
        serializedName: "circuitId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      vlanId: {
        constraints: {
          InclusiveMaximum: 4094,
          InclusiveMinimum: 1,
        },
        serializedName: "vlanId",
        required: true,
        type: {
          name: "Number",
        },
      },
      nameGroundStationPartnerRouterName: {
        serializedName: "groundStationPartnerRouter.name",
        required: true,
        type: {
          name: "String",
        },
      },
      idGroundStationId: {
        serializedName: "groundStation.id",
        required: true,
        type: {
          name: "String",
        },
      },
      nameEdgeSitePartnerRouterName: {
        serializedName: "edgeSitePartnerRouter.name",
        required: true,
        type: {
          name: "String",
        },
      },
      idEdgeSiteId: {
        serializedName: "edgeSite.id",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const L2ConnectionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "L2ConnectionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "L2Connection",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceIdListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceIdListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResourceIdListResultValueItem",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceIdListResultValueItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceIdListResultValueItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GlobalCommunicationsSiteListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GlobalCommunicationsSiteListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GlobalCommunicationsSite",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GlobalCommunicationsSitesProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GlobalCommunicationsSitesProperties",
    modelProperties: {
      locationData: {
        serializedName: "locationData",
        type: {
          name: "Composite",
          className: "GlobalCommunicationsSitesPropertiesLocationData",
        },
      },
      globalCommunicationsSiteType: {
        serializedName: "globalCommunicationsSiteType",
        type: {
          name: "String",
        },
      },
      partnerRouters: {
        serializedName: "partnerRouters",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PartnerRouter",
            },
          },
        },
      },
      partnerSiteBandwidth: {
        constraints: {
          InclusiveMinimum: 0,
        },
        serializedName: "partnerSiteBandwidth",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LocationData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LocationData",
    modelProperties: {
      city: {
        serializedName: "city",
        required: true,
        type: {
          name: "String",
        },
      },
      district: {
        serializedName: "district",
        required: true,
        type: {
          name: "String",
        },
      },
      country: {
        serializedName: "country",
        required: true,
        type: {
          name: "String",
        },
      },
      closestAzureRegion: {
        serializedName: "closestAzureRegion",
        type: {
          name: "String",
        },
      },
      extra: {
        serializedName: "extra",
        nullable: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PartnerRouter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PartnerRouter",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProvisionedBandwidth: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProvisionedBandwidth",
    modelProperties: {
      mbps: {
        constraints: {
          InclusiveMinimum: 0,
        },
        serializedName: "mbps",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GroundStationProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroundStationProperties",
    modelProperties: {
      ...GroundStationsProperties.type.modelProperties,
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const EdgeSiteProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EdgeSiteProperties",
    modelProperties: {
      ...EdgeSitesProperties.type.modelProperties,
    },
  },
};

export const L2ConnectionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "L2ConnectionProperties",
    modelProperties: {
      ...L2ConnectionsProperties.type.modelProperties,
    },
  },
};

export const GlobalCommunicationsSiteProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GlobalCommunicationsSiteProperties",
    modelProperties: {
      ...GlobalCommunicationsSitesProperties.type.modelProperties,
    },
  },
};

export const GlobalCommunicationsSitesPropertiesLocationData: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GlobalCommunicationsSitesPropertiesLocationData",
      modelProperties: {
        ...LocationData.type.modelProperties,
      },
    },
  };

export const GroundStation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroundStation",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      city: {
        serializedName: "properties.city",
        type: {
          name: "String",
        },
      },
      capabilities: {
        serializedName: "properties.capabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      providerName: {
        serializedName: "properties.providerName",
        type: {
          name: "String",
        },
      },
      longitudeDegrees: {
        serializedName: "properties.longitudeDegrees",
        type: {
          name: "Number",
        },
      },
      latitudeDegrees: {
        serializedName: "properties.latitudeDegrees",
        type: {
          name: "Number",
        },
      },
      altitudeMeters: {
        serializedName: "properties.altitudeMeters",
        type: {
          name: "Number",
        },
      },
      releaseMode: {
        serializedName: "properties.releaseMode",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      idPropertiesGlobalCommunicationsSiteId: {
        serializedName: "properties.globalCommunicationsSite.id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EdgeSite: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EdgeSite",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      idPropertiesGlobalCommunicationsSiteId: {
        serializedName: "properties.globalCommunicationsSite.id",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const L2Connection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "L2Connection",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      circuitId: {
        serializedName: "properties.circuitId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      vlanId: {
        constraints: {
          InclusiveMaximum: 4094,
          InclusiveMinimum: 1,
        },
        serializedName: "properties.vlanId",
        required: true,
        type: {
          name: "Number",
        },
      },
      namePropertiesGroundStationPartnerRouterName: {
        serializedName: "properties.groundStationPartnerRouter.name",
        required: true,
        type: {
          name: "String",
        },
      },
      idPropertiesGroundStationId: {
        serializedName: "properties.groundStation.id",
        required: true,
        type: {
          name: "String",
        },
      },
      namePropertiesEdgeSitePartnerRouterName: {
        serializedName: "properties.edgeSitePartnerRouter.name",
        required: true,
        type: {
          name: "String",
        },
      },
      idPropertiesEdgeSiteId: {
        serializedName: "properties.edgeSite.id",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GlobalCommunicationsSite: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GlobalCommunicationsSite",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      locationData: {
        serializedName: "properties.locationData",
        type: {
          name: "Composite",
          className: "GlobalCommunicationsSitesPropertiesLocationData",
        },
      },
      globalCommunicationsSiteType: {
        serializedName: "properties.globalCommunicationsSiteType",
        type: {
          name: "String",
        },
      },
      partnerRouters: {
        serializedName: "properties.partnerRouters",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PartnerRouter",
            },
          },
        },
      },
      partnerSiteBandwidth: {
        constraints: {
          InclusiveMinimum: 0,
        },
        serializedName: "properties.partnerSiteBandwidth",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const L2ConnectionsCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "L2ConnectionsCreateOrUpdateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const L2ConnectionsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "L2ConnectionsDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const L2ConnectionsUpdateTagsHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "L2ConnectionsUpdateTagsHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};
