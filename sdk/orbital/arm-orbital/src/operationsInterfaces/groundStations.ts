/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  GroundStation,
  GroundStationsListBySubscriptionOptionalParams,
  GroundStationsListOptionalParams,
  ResourceIdListResultValueItem,
  GroundStationsListL2ConnectionsOptionalParams,
  GroundStationsGetOptionalParams,
  GroundStationsGetResponse,
  GroundStationsCreateOrUpdateOptionalParams,
  GroundStationsCreateOrUpdateResponse,
  TagsObject,
  GroundStationsUpdateTagsOptionalParams,
  GroundStationsUpdateTagsResponse,
  GroundStationsDeleteOptionalParams,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GroundStations. */
export interface GroundStations {
  /**
   * Return list of ground stations.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: GroundStationsListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<GroundStation>;
  /**
   * Return list of ground stations.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    options?: GroundStationsListOptionalParams,
  ): PagedAsyncIterableIterator<GroundStation>;
  /**
   * Returns a list of L2 Connections attached to an ground station.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param groundStationName Ground Station name.
   * @param options The options parameters.
   */
  listL2Connections(
    resourceGroupName: string,
    groundStationName: string,
    options?: GroundStationsListL2ConnectionsOptionalParams,
  ): PagedAsyncIterableIterator<ResourceIdListResultValueItem>;
  /**
   * Gets the specified ground station in a specified resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param groundStationName Ground Station name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    groundStationName: string,
    options?: GroundStationsGetOptionalParams,
  ): Promise<GroundStationsGetResponse>;
  /**
   * Creates or updates a ground station resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param groundStationName Ground Station name.
   * @param location The geo-location where the resource lives
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    groundStationName: string,
    location: string,
    options?: GroundStationsCreateOrUpdateOptionalParams,
  ): Promise<GroundStationsCreateOrUpdateResponse>;
  /**
   * Updates the specified ground station tags.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param groundStationName Ground Station name.
   * @param parameters Parameters supplied to update ground station tags.
   * @param options The options parameters.
   */
  updateTags(
    resourceGroupName: string,
    groundStationName: string,
    parameters: TagsObject,
    options?: GroundStationsUpdateTagsOptionalParams,
  ): Promise<GroundStationsUpdateTagsResponse>;
  /**
   * Deletes a specified ground station resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param groundStationName Ground Station name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    groundStationName: string,
    options?: GroundStationsDeleteOptionalParams,
  ): Promise<void>;
}
