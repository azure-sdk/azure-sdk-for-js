/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  L2Connection,
  L2ConnectionsListOptionalParams,
  L2ConnectionsListBySubscriptionOptionalParams,
  L2ConnectionsGetOptionalParams,
  L2ConnectionsGetResponse,
  L2ConnectionsCreateOrUpdateOptionalParams,
  L2ConnectionsCreateOrUpdateResponse,
  L2ConnectionsDeleteOptionalParams,
  L2ConnectionsDeleteResponse,
  TagsObject,
  L2ConnectionsUpdateTagsOptionalParams,
  L2ConnectionsUpdateTagsResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a L2Connections. */
export interface L2Connections {
  /**
   * Returns a list of L2 Connections attached to an orbital gateway.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    options?: L2ConnectionsListOptionalParams,
  ): PagedAsyncIterableIterator<L2Connection>;
  /**
   * Returns a list of L2 Connections attached to a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: L2ConnectionsListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<L2Connection>;
  /**
   * Gets the specified L2 connection in a specified resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2ConnectionName L2 Connection name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    l2ConnectionName: string,
    options?: L2ConnectionsGetOptionalParams,
  ): Promise<L2ConnectionsGetResponse>;
  /**
   * Creates or updates an L2 Connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2ConnectionName L2 Connection name.
   * @param location The geo-location where the resource lives
   * @param vlanId The VLAN ID for the L2 connection.
   * @param name The unique name of the partner router that cross-connects with the Orbital Edge Router
   *             at the ground station site.
   * @param id The ground station's resource ID.
   * @param l2ConnectionsPropertiesEdgeSitePartnerRouterName The unique name of the partner router that
   *                                                         cross-connects with the Orbital Edge Router at the edge site.
   * @param l2ConnectionsPropertiesEdgeSiteId The edge site's resource ID.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    l2ConnectionName: string,
    location: string,
    vlanId: number,
    name: string,
    id: string,
    l2ConnectionsPropertiesEdgeSitePartnerRouterName: string,
    l2ConnectionsPropertiesEdgeSiteId: string,
    options?: L2ConnectionsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<L2ConnectionsCreateOrUpdateResponse>,
      L2ConnectionsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates an L2 Connection.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2ConnectionName L2 Connection name.
   * @param location The geo-location where the resource lives
   * @param vlanId The VLAN ID for the L2 connection.
   * @param name The unique name of the partner router that cross-connects with the Orbital Edge Router
   *             at the ground station site.
   * @param id The ground station's resource ID.
   * @param l2ConnectionsPropertiesEdgeSitePartnerRouterName The unique name of the partner router that
   *                                                         cross-connects with the Orbital Edge Router at the edge site.
   * @param l2ConnectionsPropertiesEdgeSiteId The edge site's resource ID.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    l2ConnectionName: string,
    location: string,
    vlanId: number,
    name: string,
    id: string,
    l2ConnectionsPropertiesEdgeSitePartnerRouterName: string,
    l2ConnectionsPropertiesEdgeSiteId: string,
    options?: L2ConnectionsCreateOrUpdateOptionalParams,
  ): Promise<L2ConnectionsCreateOrUpdateResponse>;
  /**
   * Deletes a specified L2 Connection resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2ConnectionName L2 Connection name.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    l2ConnectionName: string,
    options?: L2ConnectionsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<L2ConnectionsDeleteResponse>,
      L2ConnectionsDeleteResponse
    >
  >;
  /**
   * Deletes a specified L2 Connection resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2ConnectionName L2 Connection name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    l2ConnectionName: string,
    options?: L2ConnectionsDeleteOptionalParams,
  ): Promise<L2ConnectionsDeleteResponse>;
  /**
   * Updates the specified L2 Connection's tags.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2ConnectionName L2 Connection name.
   * @param parameters Parameters supplied to update the L2 Connection's tags.
   * @param options The options parameters.
   */
  beginUpdateTags(
    resourceGroupName: string,
    l2ConnectionName: string,
    parameters: TagsObject,
    options?: L2ConnectionsUpdateTagsOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<L2ConnectionsUpdateTagsResponse>,
      L2ConnectionsUpdateTagsResponse
    >
  >;
  /**
   * Updates the specified L2 Connection's tags.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2ConnectionName L2 Connection name.
   * @param parameters Parameters supplied to update the L2 Connection's tags.
   * @param options The options parameters.
   */
  beginUpdateTagsAndWait(
    resourceGroupName: string,
    l2ConnectionName: string,
    parameters: TagsObject,
    options?: L2ConnectionsUpdateTagsOptionalParams,
  ): Promise<L2ConnectionsUpdateTagsResponse>;
}
