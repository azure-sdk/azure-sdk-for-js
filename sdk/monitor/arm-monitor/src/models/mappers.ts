/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const EmailReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      emailAddress: {
        serializedName: "emailAddress",
        required: true,
        type: {
          name: "String"
        }
      },
      useCommonAlertSchema: {
        defaultValue: false,
        serializedName: "useCommonAlertSchema",
        type: {
          name: "Boolean"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: ["NotSpecified", "Enabled", "Disabled"]
        }
      }
    }
  }
};

export const SmsReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SmsReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      countryCode: {
        serializedName: "countryCode",
        required: true,
        type: {
          name: "String"
        }
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: ["NotSpecified", "Enabled", "Disabled"]
        }
      }
    }
  }
};

export const WebhookReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebhookReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      serviceUri: {
        serializedName: "serviceUri",
        required: true,
        type: {
          name: "String"
        }
      },
      useCommonAlertSchema: {
        defaultValue: false,
        serializedName: "useCommonAlertSchema",
        type: {
          name: "Boolean"
        }
      },
      useAadAuth: {
        defaultValue: false,
        serializedName: "useAadAuth",
        type: {
          name: "Boolean"
        }
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "String"
        }
      },
      identifierUri: {
        serializedName: "identifierUri",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureAppPushReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureAppPushReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      emailAddress: {
        serializedName: "emailAddress",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VoiceReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VoiceReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      countryCode: {
        serializedName: "countryCode",
        required: true,
        type: {
          name: "String"
        }
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionGroupPatchBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionGroupPatchBody",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      enabled: {
        defaultValue: true,
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const TenantActionGroupList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TenantActionGroupList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TenantActionGroupResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TenantNotificationRequestBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TenantNotificationRequestBody",
    modelProperties: {
      alertType: {
        constraints: {
          MaxLength: 30
        },
        serializedName: "alertType",
        required: true,
        type: {
          name: "String"
        }
      },
      emailReceivers: {
        serializedName: "emailReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EmailReceiver"
            }
          }
        }
      },
      smsReceivers: {
        serializedName: "smsReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SmsReceiver"
            }
          }
        }
      },
      webhookReceivers: {
        serializedName: "webhookReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebhookReceiver"
            }
          }
        }
      },
      azureAppPushReceivers: {
        serializedName: "azureAppPushReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureAppPushReceiver"
            }
          }
        }
      },
      voiceReceivers: {
        serializedName: "voiceReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VoiceReceiver"
            }
          }
        }
      }
    }
  }
};

export const TestNotificationDetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestNotificationDetailsResponse",
    modelProperties: {
      context: {
        serializedName: "context",
        type: {
          name: "Composite",
          className: "Context"
        }
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      completedTime: {
        serializedName: "completedTime",
        type: {
          name: "String"
        }
      },
      createdTime: {
        serializedName: "createdTime",
        type: {
          name: "String"
        }
      },
      actionDetails: {
        serializedName: "actionDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActionDetail"
            }
          }
        }
      }
    }
  }
};

export const Context: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Context",
    modelProperties: {
      notificationSource: {
        serializedName: "notificationSource",
        type: {
          name: "String"
        }
      },
      contextType: {
        serializedName: "contextType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionDetail",
    modelProperties: {
      mechanismType: {
        serializedName: "mechanismType",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      subState: {
        serializedName: "subState",
        type: {
          name: "String"
        }
      },
      sendTime: {
        serializedName: "sendTime",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TenantActionGroupResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TenantActionGroupResource",
    modelProperties: {
      ...AzureResource.type.modelProperties,
      groupShortName: {
        constraints: {
          MaxLength: 12
        },
        serializedName: "properties.groupShortName",
        type: {
          name: "String"
        }
      },
      enabled: {
        defaultValue: true,
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      emailReceivers: {
        serializedName: "properties.emailReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EmailReceiver"
            }
          }
        }
      },
      smsReceivers: {
        serializedName: "properties.smsReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SmsReceiver"
            }
          }
        }
      },
      webhookReceivers: {
        serializedName: "properties.webhookReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebhookReceiver"
            }
          }
        }
      },
      azureAppPushReceivers: {
        serializedName: "properties.azureAppPushReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureAppPushReceiver"
            }
          }
        }
      },
      voiceReceivers: {
        serializedName: "properties.voiceReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VoiceReceiver"
            }
          }
        }
      }
    }
  }
};

export const MonitorClientCreateNotificationsAtTenantActionGroupResourceLevelHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "MonitorClientCreateNotificationsAtTenantActionGroupResourceLevelHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};
