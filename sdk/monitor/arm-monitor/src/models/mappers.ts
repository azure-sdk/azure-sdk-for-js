/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const EmailReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EmailReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      emailAddress: {
        serializedName: "emailAddress",
        required: true,
        type: {
          name: "String",
        },
      },
      useCommonAlertSchema: {
        defaultValue: false,
        serializedName: "useCommonAlertSchema",
        type: {
          name: "Boolean",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: ["NotSpecified", "Enabled", "Disabled"],
        },
      },
    },
  },
};

export const SmsReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SmsReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      countryCode: {
        serializedName: "countryCode",
        required: true,
        type: {
          name: "String",
        },
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        required: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: ["NotSpecified", "Enabled", "Disabled"],
        },
      },
    },
  },
};

export const WebhookReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebhookReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      serviceUri: {
        serializedName: "serviceUri",
        required: true,
        type: {
          name: "String",
        },
      },
      useCommonAlertSchema: {
        defaultValue: false,
        serializedName: "useCommonAlertSchema",
        type: {
          name: "Boolean",
        },
      },
      useAadAuth: {
        defaultValue: false,
        serializedName: "useAadAuth",
        type: {
          name: "Boolean",
        },
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "String",
        },
      },
      identifierUri: {
        serializedName: "identifierUri",
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String",
        },
      },
      managedIdentity: {
        serializedName: "managedIdentity",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ItsmReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ItsmReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      workspaceId: {
        serializedName: "workspaceId",
        required: true,
        type: {
          name: "String",
        },
      },
      connectionId: {
        serializedName: "connectionId",
        required: true,
        type: {
          name: "String",
        },
      },
      ticketConfiguration: {
        serializedName: "ticketConfiguration",
        required: true,
        type: {
          name: "String",
        },
      },
      region: {
        serializedName: "region",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureAppPushReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureAppPushReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      emailAddress: {
        serializedName: "emailAddress",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AutomationRunbookReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AutomationRunbookReceiver",
    modelProperties: {
      automationAccountId: {
        serializedName: "automationAccountId",
        required: true,
        type: {
          name: "String",
        },
      },
      runbookName: {
        serializedName: "runbookName",
        required: true,
        type: {
          name: "String",
        },
      },
      webhookResourceId: {
        serializedName: "webhookResourceId",
        required: true,
        type: {
          name: "String",
        },
      },
      isGlobalRunbook: {
        serializedName: "isGlobalRunbook",
        required: true,
        type: {
          name: "Boolean",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      serviceUri: {
        serializedName: "serviceUri",
        type: {
          name: "String",
        },
      },
      useCommonAlertSchema: {
        defaultValue: false,
        serializedName: "useCommonAlertSchema",
        type: {
          name: "Boolean",
        },
      },
      managedIdentity: {
        serializedName: "managedIdentity",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VoiceReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VoiceReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      countryCode: {
        serializedName: "countryCode",
        required: true,
        type: {
          name: "String",
        },
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LogicAppReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogicAppReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      resourceId: {
        serializedName: "resourceId",
        required: true,
        type: {
          name: "String",
        },
      },
      callbackUrl: {
        serializedName: "callbackUrl",
        required: true,
        type: {
          name: "String",
        },
      },
      useCommonAlertSchema: {
        defaultValue: false,
        serializedName: "useCommonAlertSchema",
        type: {
          name: "Boolean",
        },
      },
      managedIdentity: {
        serializedName: "managedIdentity",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureFunctionReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureFunctionReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      functionAppResourceId: {
        serializedName: "functionAppResourceId",
        required: true,
        type: {
          name: "String",
        },
      },
      functionName: {
        serializedName: "functionName",
        required: true,
        type: {
          name: "String",
        },
      },
      httpTriggerUrl: {
        serializedName: "httpTriggerUrl",
        required: true,
        type: {
          name: "String",
        },
      },
      useCommonAlertSchema: {
        defaultValue: false,
        serializedName: "useCommonAlertSchema",
        type: {
          name: "Boolean",
        },
      },
      managedIdentity: {
        serializedName: "managedIdentity",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ArmRoleReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ArmRoleReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      roleId: {
        serializedName: "roleId",
        required: true,
        type: {
          name: "String",
        },
      },
      useCommonAlertSchema: {
        defaultValue: false,
        serializedName: "useCommonAlertSchema",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const EventHubReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EventHubReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      eventHubNameSpace: {
        serializedName: "eventHubNameSpace",
        required: true,
        type: {
          name: "String",
        },
      },
      eventHubName: {
        serializedName: "eventHubName",
        required: true,
        type: {
          name: "String",
        },
      },
      useCommonAlertSchema: {
        defaultValue: false,
        serializedName: "useCommonAlertSchema",
        type: {
          name: "Boolean",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String",
        },
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String",
        },
      },
      managedIdentity: {
        serializedName: "managedIdentity",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const IncidentReceiver: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentReceiver",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      connection: {
        serializedName: "connection",
        type: {
          name: "Composite",
          className: "IncidentServiceConnection",
        },
      },
      incidentManagementService: {
        serializedName: "incidentManagementService",
        required: true,
        type: {
          name: "String",
        },
      },
      mappings: {
        serializedName: "mappings",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const IncidentServiceConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IncidentServiceConnection",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
    },
  },
};

export const ManagedServiceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedServiceIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" },
          },
        },
      },
    },
  },
};

export const UserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ActionGroupPatchBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionGroupPatchBody",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
      enabled: {
        defaultValue: true,
        serializedName: "properties.enabled",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const NotificationRequestBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NotificationRequestBody",
    modelProperties: {
      alertType: {
        constraints: {
          MaxLength: 30,
        },
        serializedName: "alertType",
        required: true,
        type: {
          name: "String",
        },
      },
      emailReceivers: {
        serializedName: "emailReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EmailReceiver",
            },
          },
        },
      },
      smsReceivers: {
        serializedName: "smsReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SmsReceiver",
            },
          },
        },
      },
      webhookReceivers: {
        serializedName: "webhookReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebhookReceiver",
            },
          },
        },
      },
      itsmReceivers: {
        serializedName: "itsmReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ItsmReceiver",
            },
          },
        },
      },
      azureAppPushReceivers: {
        serializedName: "azureAppPushReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureAppPushReceiver",
            },
          },
        },
      },
      automationRunbookReceivers: {
        serializedName: "automationRunbookReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AutomationRunbookReceiver",
            },
          },
        },
      },
      voiceReceivers: {
        serializedName: "voiceReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VoiceReceiver",
            },
          },
        },
      },
      logicAppReceivers: {
        serializedName: "logicAppReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogicAppReceiver",
            },
          },
        },
      },
      azureFunctionReceivers: {
        serializedName: "azureFunctionReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFunctionReceiver",
            },
          },
        },
      },
      armRoleReceivers: {
        serializedName: "armRoleReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArmRoleReceiver",
            },
          },
        },
      },
      eventHubReceivers: {
        serializedName: "eventHubReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventHubReceiver",
            },
          },
        },
      },
      incidentReceivers: {
        serializedName: "incidentReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IncidentReceiver",
            },
          },
        },
      },
    },
  },
};

export const TestNotificationDetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TestNotificationDetailsResponse",
    modelProperties: {
      context: {
        serializedName: "context",
        type: {
          name: "Composite",
          className: "Context",
        },
      },
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String",
        },
      },
      completedTime: {
        serializedName: "completedTime",
        type: {
          name: "String",
        },
      },
      createdTime: {
        serializedName: "createdTime",
        type: {
          name: "String",
        },
      },
      actionDetails: {
        serializedName: "actionDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActionDetail",
            },
          },
        },
      },
    },
  },
};

export const Context: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Context",
    modelProperties: {
      notificationSource: {
        serializedName: "notificationSource",
        type: {
          name: "String",
        },
      },
      contextType: {
        serializedName: "contextType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ActionDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionDetail",
    modelProperties: {
      mechanismType: {
        serializedName: "MechanismType",
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "Name",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "Status",
        type: {
          name: "String",
        },
      },
      subState: {
        serializedName: "SubState",
        type: {
          name: "String",
        },
      },
      sendTime: {
        serializedName: "SendTime",
        type: {
          name: "String",
        },
      },
      detail: {
        serializedName: "Detail",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ActionGroupList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionGroupList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActionGroupResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EnableRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnableRequest",
    modelProperties: {
      receiverName: {
        serializedName: "receiverName",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ScheduledQueryRuleResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScheduledQueryRuleResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScheduledQueryRuleResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ScheduledQueryRuleResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScheduledQueryRuleResource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "Identity",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String",
        },
      },
      etag: {
        serializedName: "etag",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
      createdWithApiVersion: {
        serializedName: "properties.createdWithApiVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isLegacyLogAnalyticsRule: {
        serializedName: "properties.isLegacyLogAnalyticsRule",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String",
        },
      },
      severity: {
        serializedName: "properties.severity",
        type: {
          name: "Number",
        },
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean",
        },
      },
      scopes: {
        serializedName: "properties.scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      evaluationFrequency: {
        serializedName: "properties.evaluationFrequency",
        type: {
          name: "TimeSpan",
        },
      },
      windowSize: {
        serializedName: "properties.windowSize",
        type: {
          name: "TimeSpan",
        },
      },
      overrideQueryTimeRange: {
        serializedName: "properties.overrideQueryTimeRange",
        type: {
          name: "TimeSpan",
        },
      },
      targetResourceTypes: {
        serializedName: "properties.targetResourceTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      criteria: {
        serializedName: "properties.criteria",
        type: {
          name: "Composite",
          className: "ScheduledQueryRuleCriteria",
        },
      },
      muteActionsDuration: {
        serializedName: "properties.muteActionsDuration",
        type: {
          name: "TimeSpan",
        },
      },
      actions: {
        serializedName: "properties.actions",
        type: {
          name: "Composite",
          className: "Actions",
        },
      },
      isWorkspaceAlertsStorageConfigured: {
        serializedName: "properties.isWorkspaceAlertsStorageConfigured",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      checkWorkspaceAlertsStorageConfigured: {
        serializedName: "properties.checkWorkspaceAlertsStorageConfigured",
        type: {
          name: "Boolean",
        },
      },
      skipQueryValidation: {
        serializedName: "properties.skipQueryValidation",
        type: {
          name: "Boolean",
        },
      },
      autoMitigate: {
        serializedName: "properties.autoMitigate",
        type: {
          name: "Boolean",
        },
      },
      resolveConfiguration: {
        serializedName: "properties.resolveConfiguration",
        type: {
          name: "Composite",
          className: "RuleResolveConfiguration",
        },
      },
    },
  },
};

export const Identity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Identity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "Enum",
          allowedValues: ["SystemAssigned", "UserAssigned", "None"],
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserIdentityProperties" },
          },
        },
      },
    },
  },
};

export const UserIdentityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserIdentityProperties",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ScheduledQueryRuleCriteria: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScheduledQueryRuleCriteria",
    modelProperties: {
      allOf: {
        serializedName: "allOf",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Condition",
            },
          },
        },
      },
    },
  },
};

export const Condition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Condition",
    modelProperties: {
      criterionType: {
        serializedName: "criterionType",
        type: {
          name: "String",
        },
      },
      query: {
        serializedName: "query",
        type: {
          name: "String",
        },
      },
      timeAggregation: {
        serializedName: "timeAggregation",
        type: {
          name: "String",
        },
      },
      metricMeasureColumn: {
        serializedName: "metricMeasureColumn",
        type: {
          name: "String",
        },
      },
      resourceIdColumn: {
        serializedName: "resourceIdColumn",
        type: {
          name: "String",
        },
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Dimension",
            },
          },
        },
      },
      operator: {
        serializedName: "operator",
        type: {
          name: "String",
        },
      },
      threshold: {
        serializedName: "threshold",
        type: {
          name: "Number",
        },
      },
      alertSensitivity: {
        serializedName: "alertSensitivity",
        type: {
          name: "String",
        },
      },
      ignoreDataBefore: {
        serializedName: "ignoreDataBefore",
        type: {
          name: "DateTime",
        },
      },
      failingPeriods: {
        serializedName: "failingPeriods",
        type: {
          name: "Composite",
          className: "ConditionFailingPeriods",
        },
      },
      metricName: {
        serializedName: "metricName",
        type: {
          name: "String",
        },
      },
      minRecurrenceCount: {
        serializedName: "minRecurrenceCount",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const Dimension: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Dimension",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      operator: {
        serializedName: "operator",
        required: true,
        type: {
          name: "String",
        },
      },
      values: {
        serializedName: "values",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const ConditionFailingPeriods: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConditionFailingPeriods",
    modelProperties: {
      numberOfEvaluationPeriods: {
        defaultValue: 1,
        serializedName: "numberOfEvaluationPeriods",
        type: {
          name: "Number",
        },
      },
      minFailingPeriodsToAlert: {
        defaultValue: 1,
        serializedName: "minFailingPeriodsToAlert",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const Actions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Actions",
    modelProperties: {
      actionGroups: {
        serializedName: "actionGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      customProperties: {
        serializedName: "customProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      actionProperties: {
        serializedName: "actionProperties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const RuleResolveConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RuleResolveConfiguration",
    modelProperties: {
      autoResolved: {
        serializedName: "autoResolved",
        type: {
          name: "Boolean",
        },
      },
      timeToResolve: {
        serializedName: "timeToResolve",
        type: {
          name: "TimeSpan",
        },
      },
    },
  },
};

export const ErrorContract: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorContract",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponseAutoGenerated",
        },
      },
    },
  },
};

export const ErrorResponseAutoGenerated: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponseAutoGenerated",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponseAutoGenerated",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const ScheduledQueryRuleResourcePatch: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScheduledQueryRuleResourcePatch",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "Identity",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      createdWithApiVersion: {
        serializedName: "properties.createdWithApiVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isLegacyLogAnalyticsRule: {
        serializedName: "properties.isLegacyLogAnalyticsRule",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String",
        },
      },
      severity: {
        serializedName: "properties.severity",
        type: {
          name: "Number",
        },
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean",
        },
      },
      scopes: {
        serializedName: "properties.scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      evaluationFrequency: {
        serializedName: "properties.evaluationFrequency",
        type: {
          name: "TimeSpan",
        },
      },
      windowSize: {
        serializedName: "properties.windowSize",
        type: {
          name: "TimeSpan",
        },
      },
      overrideQueryTimeRange: {
        serializedName: "properties.overrideQueryTimeRange",
        type: {
          name: "TimeSpan",
        },
      },
      targetResourceTypes: {
        serializedName: "properties.targetResourceTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      criteria: {
        serializedName: "properties.criteria",
        type: {
          name: "Composite",
          className: "ScheduledQueryRuleCriteria",
        },
      },
      muteActionsDuration: {
        serializedName: "properties.muteActionsDuration",
        type: {
          name: "TimeSpan",
        },
      },
      actions: {
        serializedName: "properties.actions",
        type: {
          name: "Composite",
          className: "Actions",
        },
      },
      isWorkspaceAlertsStorageConfigured: {
        serializedName: "properties.isWorkspaceAlertsStorageConfigured",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      checkWorkspaceAlertsStorageConfigured: {
        serializedName: "properties.checkWorkspaceAlertsStorageConfigured",
        type: {
          name: "Boolean",
        },
      },
      skipQueryValidation: {
        serializedName: "properties.skipQueryValidation",
        type: {
          name: "Boolean",
        },
      },
      autoMitigate: {
        serializedName: "properties.autoMitigate",
        type: {
          name: "Boolean",
        },
      },
      resolveConfiguration: {
        serializedName: "properties.resolveConfiguration",
        type: {
          name: "Composite",
          className: "RuleResolveConfiguration",
        },
      },
    },
  },
};

export const ActionGroupResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ActionGroupResource",
    modelProperties: {
      ...AzureResource.type.modelProperties,
      groupShortName: {
        constraints: {
          MaxLength: 12,
        },
        serializedName: "properties.groupShortName",
        type: {
          name: "String",
        },
      },
      enabled: {
        defaultValue: true,
        serializedName: "properties.enabled",
        type: {
          name: "Boolean",
        },
      },
      emailReceivers: {
        serializedName: "properties.emailReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EmailReceiver",
            },
          },
        },
      },
      smsReceivers: {
        serializedName: "properties.smsReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SmsReceiver",
            },
          },
        },
      },
      webhookReceivers: {
        serializedName: "properties.webhookReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebhookReceiver",
            },
          },
        },
      },
      itsmReceivers: {
        serializedName: "properties.itsmReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ItsmReceiver",
            },
          },
        },
      },
      azureAppPushReceivers: {
        serializedName: "properties.azureAppPushReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureAppPushReceiver",
            },
          },
        },
      },
      automationRunbookReceivers: {
        serializedName: "properties.automationRunbookReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AutomationRunbookReceiver",
            },
          },
        },
      },
      voiceReceivers: {
        serializedName: "properties.voiceReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VoiceReceiver",
            },
          },
        },
      },
      logicAppReceivers: {
        serializedName: "properties.logicAppReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LogicAppReceiver",
            },
          },
        },
      },
      azureFunctionReceivers: {
        serializedName: "properties.azureFunctionReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureFunctionReceiver",
            },
          },
        },
      },
      armRoleReceivers: {
        serializedName: "properties.armRoleReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArmRoleReceiver",
            },
          },
        },
      },
      eventHubReceivers: {
        serializedName: "properties.eventHubReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventHubReceiver",
            },
          },
        },
      },
      incidentReceivers: {
        serializedName: "properties.incidentReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IncidentReceiver",
            },
          },
        },
      },
    },
  },
};

export const ActionGroupsCreateNotificationsAtActionGroupResourceLevelHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ActionGroupsCreateNotificationsAtActionGroupResourceLevelHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };
