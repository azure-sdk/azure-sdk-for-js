/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** An email receiver. */
export interface EmailReceiver {
  /** The name of the email receiver. Names must be unique across all receivers within a tenant action group. */
  name: string;
  /** The email address of this receiver. */
  emailAddress: string;
  /** Indicates whether to use common alert schema. */
  useCommonAlertSchema?: boolean;
  /**
   * The receiver status of the e-mail.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: ReceiverStatus;
}

/** An SMS receiver. */
export interface SmsReceiver {
  /** The name of the SMS receiver. Names must be unique across all receivers within a tenant action group. */
  name: string;
  /** The country code of the SMS receiver. */
  countryCode: string;
  /** The phone number of the SMS receiver. */
  phoneNumber: string;
  /**
   * The status of the receiver.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: ReceiverStatus;
}

/** A webhook receiver. */
export interface WebhookReceiver {
  /** The name of the webhook receiver. Names must be unique across all receivers within a tenant action group. */
  name: string;
  /** The URI where webhooks should be sent. */
  serviceUri: string;
  /** Indicates whether to use common alert schema. */
  useCommonAlertSchema?: boolean;
  /** Indicates whether or not use AAD authentication. */
  useAadAuth?: boolean;
  /** Indicates the webhook app object Id for aad auth. */
  objectId?: string;
  /** Indicates the identifier uri for aad auth. */
  identifierUri?: string;
  /** Indicates the tenant id for aad auth. */
  tenantId?: string;
}

/** The Azure mobile App push notification receiver. */
export interface AzureAppPushReceiver {
  /** The name of the Azure mobile app push receiver. Names must be unique across all receivers within a tenant action group. */
  name: string;
  /** The email address registered for the Azure mobile app. */
  emailAddress: string;
}

/** A voice receiver. */
export interface VoiceReceiver {
  /** The name of the voice receiver. Names must be unique across all receivers within a tenant action group. */
  name: string;
  /** The country code of the voice receiver. */
  countryCode: string;
  /** The phone number of the voice receiver. */
  phoneNumber: string;
}

/** An azure resource object */
export interface AzureResource {
  /**
   * Azure resource Id
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Azure resource name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Azure resource type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** Resource location */
  location: string;
  /** Resource tags */
  tags?: { [propertyName: string]: string };
}

/** Describes the format of Error response. */
export interface ErrorResponse {
  /** Error code */
  code?: string;
  /** Error message indicating why the operation failed. */
  message?: string;
}

/** A tenant action group object for the body of patch operations. */
export interface ActionGroupPatchBody {
  /** Resource tags */
  tags?: { [propertyName: string]: string };
  /** Indicates whether this tenant action group is enabled. If a tenant action group is not enabled, then none of its actions will be activated. */
  enabled?: boolean;
}

/** A list of tenant action groups. */
export interface TenantActionGroupList {
  /** The list of tenant action groups. */
  value?: TenantActionGroupResource[];
  /** Provides the link to retrieve the next set of elements. */
  nextLink?: string;
}

/** The request body which contain contact detail metadata */
export interface TenantNotificationRequestBody {
  /** The value of the supported alert type. Supported alert type value is: servicehealth */
  alertType: string;
  /** The list of email receivers that are part of this action group. */
  emailReceivers?: EmailReceiver[];
  /** The list of SMS receivers that are part of this action group. */
  smsReceivers?: SmsReceiver[];
  /** The list of webhook receivers that are part of this action group. */
  webhookReceivers?: WebhookReceiver[];
  /** The list of AzureAppPush receivers that are part of this action group. */
  azureAppPushReceivers?: AzureAppPushReceiver[];
  /** The list of voice receivers that are part of this action group. */
  voiceReceivers?: VoiceReceiver[];
}

/** The details of the test notification results. */
export interface TestNotificationDetailsResponse {
  /** The context info */
  context?: Context;
  /** The overall state */
  state: string;
  /** The completed time */
  completedTime?: string;
  /** The created time */
  createdTime?: string;
  /** The list of action detail */
  actionDetails?: ActionDetail[];
}

/** The context info */
export interface Context {
  /** The source of the notification request */
  notificationSource?: string;
  /** The context id type */
  contextType?: string;
}

/** The action detail */
export interface ActionDetail {
  /** The mechanism type */
  mechanismType?: string;
  /** The name of the action */
  name?: string;
  /** The status of the action */
  status?: string;
  /** The substatus of the action */
  subState?: string;
  /** The send time */
  sendTime?: string;
  /** The detail of the friendly error message */
  message?: string;
}

/** A tenant action group resource. */
export interface TenantActionGroupResource extends AzureResource {
  /** The short name of the action group. This will be used in SMS messages. */
  groupShortName?: string;
  /** Indicates whether this tenant action group is enabled. If a tenant action group is not enabled, then none of its receivers will receive communications. */
  enabled?: boolean;
  /** The list of email receivers that are part of this tenant action group. */
  emailReceivers?: EmailReceiver[];
  /** The list of SMS receivers that are part of this tenant action group. */
  smsReceivers?: SmsReceiver[];
  /** The list of webhook receivers that are part of this tenant action group. */
  webhookReceivers?: WebhookReceiver[];
  /** The list of AzureAppPush receivers that are part of this tenant action group. */
  azureAppPushReceivers?: AzureAppPushReceiver[];
  /** The list of voice receivers that are part of this tenant action group. */
  voiceReceivers?: VoiceReceiver[];
}

/** Defines headers for MonitorClient_createNotificationsAtTenantActionGroupResourceLevel operation. */
export interface MonitorClientCreateNotificationsAtTenantActionGroupResourceLevelHeaders {
  /** The location header that has the polling uri. */
  location?: string;
}

/** Defines values for ReceiverStatus. */
export type ReceiverStatus = "NotSpecified" | "Enabled" | "Disabled";

/** Optional parameters. */
export interface TenantActionGroupsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type TenantActionGroupsCreateOrUpdateResponse = TenantActionGroupResource;

/** Optional parameters. */
export interface TenantActionGroupsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type TenantActionGroupsGetResponse = TenantActionGroupResource;

/** Optional parameters. */
export interface TenantActionGroupsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface TenantActionGroupsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type TenantActionGroupsUpdateResponse = TenantActionGroupResource;

/** Optional parameters. */
export interface TenantActionGroupsListByManagementGroupIdOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByManagementGroupId operation. */
export type TenantActionGroupsListByManagementGroupIdResponse = TenantActionGroupList;

/** Optional parameters. */
export interface CreateNotificationsAtTenantActionGroupResourceLevelOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createNotificationsAtTenantActionGroupResourceLevel operation. */
export type CreateNotificationsAtTenantActionGroupResourceLevelResponse = TestNotificationDetailsResponse;

/** Optional parameters. */
export interface GetTestNotificationsAtTenantActionGroupResourceLevelOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getTestNotificationsAtTenantActionGroupResourceLevel operation. */
export type GetTestNotificationsAtTenantActionGroupResourceLevelResponse = TestNotificationDetailsResponse;

/** Optional parameters. */
export interface MonitorClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
