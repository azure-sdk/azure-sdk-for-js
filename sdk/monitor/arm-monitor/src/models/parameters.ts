/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  TenantActionGroupResource as TenantActionGroupResourceMapper,
  ActionGroupPatchBody as ActionGroupPatchBodyMapper,
  TenantNotificationRequestBody as TenantNotificationRequestBodyMapper
} from "../models/mappers";

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const actionGroup: OperationParameter = {
  parameterPath: "actionGroup",
  mapper: TenantActionGroupResourceMapper
};

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const managementGroupId: OperationURLParameter = {
  parameterPath: "managementGroupId",
  mapper: {
    serializedName: "managementGroupId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const tenantActionGroupName: OperationURLParameter = {
  parameterPath: "tenantActionGroupName",
  mapper: {
    serializedName: "tenantActionGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const xMsClientTenantId: OperationParameter = {
  parameterPath: "xMsClientTenantId",
  mapper: {
    serializedName: "x-ms-client-tenant-id",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2023-05-01-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const tenantActionGroupPatch: OperationParameter = {
  parameterPath: "tenantActionGroupPatch",
  mapper: ActionGroupPatchBodyMapper
};

export const notificationRequest: OperationParameter = {
  parameterPath: "notificationRequest",
  mapper: TenantNotificationRequestBodyMapper
};

export const notificationId: OperationURLParameter = {
  parameterPath: "notificationId",
  mapper: {
    serializedName: "notificationId",
    required: true,
    type: {
      name: "String"
    }
  }
};
