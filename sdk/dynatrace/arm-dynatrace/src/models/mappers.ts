/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const LogStatusRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogStatusRequest",
    modelProperties: {
      monitoredResourceIds: {
        serializedName: "monitoredResourceIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const MonitoredResourceListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredResourceListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MonitoredResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MonitoredResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredResource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      sendingMetrics: {
        serializedName: "sendingMetrics",
        type: {
          name: "String",
        },
      },
      reasonForMetricsStatus: {
        serializedName: "reasonForMetricsStatus",
        type: {
          name: "String",
        },
      },
      sendingLogs: {
        serializedName: "sendingLogs",
        type: {
          name: "String",
        },
      },
      reasonForLogsStatus: {
        serializedName: "reasonForLogsStatus",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const MonitoredSubscriptionPropertiesList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredSubscriptionPropertiesList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MonitoredSubscriptionProperties",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MonitoredSubscriptionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredSubscriptionProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SubscriptionList",
        },
      },
    },
  },
};

export const SubscriptionList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SubscriptionList",
    modelProperties: {
      operation: {
        serializedName: "operation",
        type: {
          name: "String",
        },
      },
      monitoredSubscriptionList: {
        serializedName: "monitoredSubscriptionList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MonitoredSubscription",
            },
          },
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MonitoredSubscription: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredSubscription",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      error: {
        serializedName: "error",
        type: {
          name: "String",
        },
      },
      tagRules: {
        serializedName: "tagRules",
        type: {
          name: "Composite",
          className: "MonitoringTagRulesProperties",
        },
      },
    },
  },
};

export const MonitoringTagRulesProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoringTagRulesProperties",
    modelProperties: {
      logRules: {
        serializedName: "logRules",
        type: {
          name: "Composite",
          className: "LogRules",
        },
      },
      metricRules: {
        serializedName: "metricRules",
        type: {
          name: "Composite",
          className: "MetricRules",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LogRules: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LogRules",
    modelProperties: {
      sendAadLogs: {
        serializedName: "sendAadLogs",
        type: {
          name: "String",
        },
      },
      sendSubscriptionLogs: {
        serializedName: "sendSubscriptionLogs",
        type: {
          name: "String",
        },
      },
      sendActivityLogs: {
        serializedName: "sendActivityLogs",
        type: {
          name: "String",
        },
      },
      filteringTags: {
        serializedName: "filteringTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FilteringTag",
            },
          },
        },
      },
    },
  },
};

export const FilteringTag: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FilteringTag",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
      action: {
        serializedName: "action",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MetricRules: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricRules",
    modelProperties: {
      sendingMetrics: {
        serializedName: "sendingMetrics",
        type: {
          name: "String",
        },
      },
      filteringTags: {
        serializedName: "filteringTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FilteringTag",
            },
          },
        },
      },
    },
  },
};

export const CreateResourceSupportedResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateResourceSupportedResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CreateResourceSupportedProperties",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CreateResourceSupportedProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateResourceSupportedProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      creationSupported: {
        serializedName: "creationSupported",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const VMExtensionPayload: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VMExtensionPayload",
    modelProperties: {
      ingestionKey: {
        serializedName: "ingestionKey",
        type: {
          name: "String",
        },
      },
      environmentId: {
        serializedName: "environmentId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AgentStatusRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgentStatusRequest",
    modelProperties: {
      agentStatusList: {
        serializedName: "agentStatusList",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AgentStatus",
            },
          },
        },
      },
      action: {
        serializedName: "action",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AgentStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AgentStatus",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String",
        },
      },
      dynatraceResourceId: {
        serializedName: "dynatraceResourceId",
        type: {
          name: "String",
        },
      },
      dynatraceEnvironmentId: {
        serializedName: "dynatraceEnvironmentId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DynatraceEnvironmentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DynatraceEnvironmentProperties",
    modelProperties: {
      userId: {
        serializedName: "userId",
        type: {
          name: "String",
        },
      },
      accountInfo: {
        serializedName: "accountInfo",
        type: {
          name: "Composite",
          className: "AccountInfo",
        },
      },
      environmentInfo: {
        serializedName: "environmentInfo",
        type: {
          name: "Composite",
          className: "EnvironmentInfo",
        },
      },
      singleSignOnProperties: {
        serializedName: "singleSignOnProperties",
        type: {
          name: "Composite",
          className: "DynatraceSingleSignOnProperties",
        },
      },
    },
  },
};

export const AccountInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccountInfo",
    modelProperties: {
      accountId: {
        serializedName: "accountId",
        type: {
          name: "String",
        },
      },
      regionId: {
        serializedName: "regionId",
        type: {
          name: "String",
        },
      },
      companyName: {
        serializedName: "companyName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EnvironmentInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EnvironmentInfo",
    modelProperties: {
      environmentId: {
        serializedName: "environmentId",
        type: {
          name: "String",
        },
      },
      ingestionKey: {
        serializedName: "ingestionKey",
        type: {
          name: "String",
        },
      },
      logsIngestionEndpoint: {
        serializedName: "logsIngestionEndpoint",
        type: {
          name: "String",
        },
      },
      landingURL: {
        serializedName: "landingURL",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DynatraceSingleSignOnProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DynatraceSingleSignOnProperties",
    modelProperties: {
      singleSignOnState: {
        serializedName: "singleSignOnState",
        type: {
          name: "String",
        },
      },
      enterpriseAppId: {
        serializedName: "enterpriseAppId",
        type: {
          name: "String",
        },
      },
      singleSignOnUrl: {
        serializedName: "singleSignOnUrl",
        type: {
          name: "String",
        },
      },
      aadDomains: {
        serializedName: "aadDomains",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UserInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserInfo",
    modelProperties: {
      firstName: {
        serializedName: "firstName",
        type: {
          name: "String",
        },
      },
      lastName: {
        serializedName: "lastName",
        type: {
          name: "String",
        },
      },
      emailAddress: {
        constraints: {
          Pattern: new RegExp(
            "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$",
          ),
        },
        serializedName: "emailAddress",
        type: {
          name: "String",
        },
      },
      phoneNumber: {
        constraints: {
          MaxLength: 40,
        },
        serializedName: "phoneNumber",
        type: {
          name: "String",
        },
      },
      country: {
        serializedName: "country",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PlanData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlanData",
    modelProperties: {
      usageType: {
        serializedName: "usageType",
        type: {
          name: "String",
        },
      },
      billingCycle: {
        serializedName: "billingCycle",
        type: {
          name: "String",
        },
      },
      planDetails: {
        serializedName: "planDetails",
        type: {
          name: "String",
        },
      },
      effectiveDate: {
        serializedName: "effectiveDate",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const IdentityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IdentityProperties",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" },
          },
        },
      },
    },
  },
};

export const UserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const MonitorResourceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitorResourceUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MonitorUpdateProperties",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
    },
  },
};

export const MonitorUpdateProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitorUpdateProperties",
    modelProperties: {
      planData: {
        serializedName: "planData",
        type: {
          name: "Composite",
          className: "PlanData",
        },
      },
    },
  },
};

export const ManagedServiceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedServiceIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" },
          },
        },
      },
    },
  },
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MonitorResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitorResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MonitorResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TagRuleListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TagRuleListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TagRule",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MarketplaceSubscriptionIdRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MarketplaceSubscriptionIdRequest",
    modelProperties: {
      marketplaceSubscriptionId: {
        serializedName: "marketplaceSubscriptionId",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ConnectedResourcesCountResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectedResourcesCountResponse",
    modelProperties: {
      connectedResourcesCount: {
        serializedName: "connectedResourcesCount",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const MarketplaceSaaSResourceDetailsRequest: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "MarketplaceSaaSResourceDetailsRequest",
      modelProperties: {
        tenantId: {
          serializedName: "tenantId",
          required: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const MarketplaceSaaSResourceDetailsResponse: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "MarketplaceSaaSResourceDetailsResponse",
      modelProperties: {
        marketplaceSaaSResourceId: {
          serializedName: "marketplaceSaaSResourceId",
          type: {
            name: "String",
          },
        },
        planId: {
          serializedName: "planId",
          type: {
            name: "String",
          },
        },
        marketplaceSubscriptionStatus: {
          serializedName: "marketplaceSubscriptionStatus",
          type: {
            name: "String",
          },
        },
        marketplaceSaaSResourceName: {
          serializedName: "marketplaceSaaSResourceName",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const DynatraceSingleSignOnResourceListResult: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "DynatraceSingleSignOnResourceListResult",
      modelProperties: {
        value: {
          serializedName: "value",
          required: true,
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "DynatraceSingleSignOnResource",
              },
            },
          },
        },
        nextLink: {
          serializedName: "nextLink",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const VMHostsListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VMHostsListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VMInfo",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VMInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VMInfo",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
      monitoringType: {
        serializedName: "monitoringType",
        type: {
          name: "String",
        },
      },
      autoUpdateSetting: {
        serializedName: "autoUpdateSetting",
        type: {
          name: "String",
        },
      },
      updateStatus: {
        serializedName: "updateStatus",
        type: {
          name: "String",
        },
      },
      availabilityState: {
        serializedName: "availabilityState",
        type: {
          name: "String",
        },
      },
      logModule: {
        serializedName: "logModule",
        type: {
          name: "String",
        },
      },
      hostGroup: {
        serializedName: "hostGroup",
        type: {
          name: "String",
        },
      },
      hostName: {
        serializedName: "hostName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MetricStatusRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricStatusRequest",
    modelProperties: {
      monitoredResourceIds: {
        serializedName: "monitoredResourceIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const MetricsStatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricsStatusResponse",
    modelProperties: {
      azureResourceIds: {
        serializedName: "azureResourceIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AppServiceListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppServiceListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AppServiceInfo",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AppServiceInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppServiceInfo",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
      monitoringType: {
        serializedName: "monitoringType",
        type: {
          name: "String",
        },
      },
      autoUpdateSetting: {
        serializedName: "autoUpdateSetting",
        type: {
          name: "String",
        },
      },
      updateStatus: {
        serializedName: "updateStatus",
        type: {
          name: "String",
        },
      },
      availabilityState: {
        serializedName: "availabilityState",
        type: {
          name: "String",
        },
      },
      logModule: {
        serializedName: "logModule",
        type: {
          name: "String",
        },
      },
      hostGroup: {
        serializedName: "hostGroup",
        type: {
          name: "String",
        },
      },
      hostName: {
        serializedName: "hostName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UpgradePlanRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpgradePlanRequest",
    modelProperties: {
      planData: {
        serializedName: "planData",
        type: {
          name: "Composite",
          className: "PlanData",
        },
      },
    },
  },
};

export const SSODetailsRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SSODetailsRequest",
    modelProperties: {
      userPrincipal: {
        serializedName: "userPrincipal",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SSODetailsResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SSODetailsResponse",
    modelProperties: {
      isSsoEnabled: {
        serializedName: "isSsoEnabled",
        type: {
          name: "String",
        },
      },
      metadataUrl: {
        serializedName: "metadataUrl",
        type: {
          name: "String",
        },
      },
      singleSignOnUrl: {
        serializedName: "singleSignOnUrl",
        type: {
          name: "String",
        },
      },
      aadDomains: {
        serializedName: "aadDomains",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      adminUsers: {
        serializedName: "adminUsers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const LinkableEnvironmentRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LinkableEnvironmentRequest",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        required: true,
        type: {
          name: "String",
        },
      },
      userPrincipal: {
        serializedName: "userPrincipal",
        required: true,
        type: {
          name: "String",
        },
      },
      region: {
        serializedName: "region",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LinkableEnvironmentListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LinkableEnvironmentListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LinkableEnvironmentResponse",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LinkableEnvironmentResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LinkableEnvironmentResponse",
    modelProperties: {
      environmentId: {
        serializedName: "environmentId",
        type: {
          name: "String",
        },
      },
      environmentName: {
        serializedName: "environmentName",
        type: {
          name: "String",
        },
      },
      planData: {
        serializedName: "planData",
        type: {
          name: "Composite",
          className: "PlanData",
        },
      },
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const MonitorResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitorResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityProperties",
        },
      },
      monitoringStatus: {
        serializedName: "properties.monitoringStatus",
        type: {
          name: "String",
        },
      },
      marketplaceSubscriptionStatus: {
        serializedName: "properties.marketplaceSubscriptionStatus",
        type: {
          name: "String",
        },
      },
      marketplaceSaasAutoRenew: {
        serializedName: "properties.marketplaceSaasAutoRenew",
        type: {
          name: "String",
        },
      },
      dynatraceEnvironmentProperties: {
        serializedName: "properties.dynatraceEnvironmentProperties",
        type: {
          name: "Composite",
          className: "DynatraceEnvironmentProperties",
        },
      },
      userInfo: {
        serializedName: "properties.userInfo",
        type: {
          name: "Composite",
          className: "UserInfo",
        },
      },
      planData: {
        serializedName: "properties.planData",
        type: {
          name: "Composite",
          className: "PlanData",
        },
      },
      liftrResourceCategory: {
        serializedName: "properties.liftrResourceCategory",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      liftrResourcePreference: {
        serializedName: "properties.liftrResourcePreference",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TagRule: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TagRule",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      logRules: {
        serializedName: "properties.logRules",
        type: {
          name: "Composite",
          className: "LogRules",
        },
      },
      metricRules: {
        serializedName: "properties.metricRules",
        type: {
          name: "Composite",
          className: "MetricRules",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DynatraceSingleSignOnResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DynatraceSingleSignOnResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      singleSignOnState: {
        serializedName: "properties.singleSignOnState",
        type: {
          name: "String",
        },
      },
      enterpriseAppId: {
        serializedName: "properties.enterpriseAppId",
        type: {
          name: "String",
        },
      },
      singleSignOnUrl: {
        serializedName: "properties.singleSignOnUrl",
        type: {
          name: "String",
        },
      },
      aadDomains: {
        serializedName: "properties.aadDomains",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MonitorsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitorsDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MonitorsUpgradePlanHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitorsUpgradePlanHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MonitoredSubscriptionsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredSubscriptionsUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MonitoredSubscriptionsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MonitoredSubscriptionsDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TagRulesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TagRulesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
    },
  },
};
