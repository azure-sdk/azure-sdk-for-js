/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { OperationOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { EducationManagementClient } from "../educationManagementClient";
import {
  OperationStatusOptionalParams,
  OperationStatusResponse
} from "../models";

/** Class containing OperationOperations operations. */
export class OperationOperationsImpl implements OperationOperations {
  private readonly client: EducationManagementClient;

  /**
   * Initialize a new instance of the class OperationOperations class.
   * @param client Reference to the service client
   */
  constructor(client: EducationManagementClient) {
    this.client = client;
  }

  /**
   * Get operation status
   * @param operationId Operation Id.
   * @param options The options parameters.
   */
  status(
    operationId: string,
    options?: OperationStatusOptionalParams
  ): Promise<OperationStatusResponse> {
    return this.client.sendOperationRequest(
      { operationId, options },
      statusOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const statusOperationSpec: coreClient.OperationSpec = {
  path: "/providers/Microsoft.Education/operationStatus/{operationId}",
  httpMethod: "GET",
  responses: {
    200: {
      headersMapper: Mappers.OperationStatusHeaders
    },
    default: {
      bodyMapper: Mappers.ErrorResponseBody
    }
  },
  queryParameters: [Parameters.apiVersion1],
  urlParameters: [Parameters.$host, Parameters.operationId],
  headerParameters: [Parameters.accept],
  serializer
};
