/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { UpgradeWindowTrigger } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { EventHubManagementClient } from "../eventHubManagementClient";
import { UpgradeWindowTriggerPostOptionalParams } from "../models";

/** Class containing UpgradeWindowTrigger operations. */
export class UpgradeWindowTriggerImpl implements UpgradeWindowTrigger {
  private readonly client: EventHubManagementClient;

  /**
   * Initialize a new instance of the class UpgradeWindowTrigger class.
   * @param client Reference to the service client
   */
  constructor(client: EventHubManagementClient) {
    this.client = client;
  }

  /**
   * Trigger cluster upgrade if and when possible
   * @param resourceGroupName Name of the resource group within the azure subscription.
   * @param clusterName The name of the Event Hubs Cluster.
   * @param options The options parameters.
   */
  post(
    resourceGroupName: string,
    clusterName: string,
    options?: UpgradeWindowTriggerPostOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      { resourceGroupName, clusterName, options },
      postOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const postOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}/upgradewindowtrigger",
  httpMethod: "POST",
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.clusterName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
