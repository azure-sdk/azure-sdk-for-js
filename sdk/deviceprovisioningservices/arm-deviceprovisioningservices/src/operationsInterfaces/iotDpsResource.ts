/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ProvisioningServiceDescription,
  IotDpsResourceListBySubscriptionOptionalParams,
  IotDpsResourceListByResourceGroupOptionalParams,
  SharedAccessSignatureAuthorizationRuleAccessRightsDescription,
  IotDpsResourceListKeysOptionalParams,
  IotDpsSkuDefinition,
  IotDpsResourceListValidSkusOptionalParams,
  OperationInputs,
  IotDpsResourceCheckProvisioningServiceNameAvailabilityOptionalParams,
  IotDpsResourceCheckProvisioningServiceNameAvailabilityResponse,
  IotDpsResourceGetOptionalParams,
  IotDpsResourceGetResponse,
  IotDpsResourceCreateOrUpdateOptionalParams,
  IotDpsResourceCreateOrUpdateResponse,
  TagsResource,
  IotDpsResourceUpdateOptionalParams,
  IotDpsResourceUpdateResponse,
  IotDpsResourceDeleteOptionalParams,
  IotDpsResourceListKeysForKeyNameOptionalParams,
  IotDpsResourceListKeysForKeyNameResponse,
  IotDpsResourceGetOperationResultOptionalParams,
  IotDpsResourceGetOperationResultResponse,
  IotDpsResourceListPrivateEndpointConnectionsOptionalParams,
  IotDpsResourceListPrivateEndpointConnectionsResponse,
  IotDpsResourceGetPrivateEndpointConnectionOptionalParams,
  IotDpsResourceGetPrivateEndpointConnectionResponse,
  PrivateEndpointConnection,
  IotDpsResourceCreateOrUpdatePrivateEndpointConnectionOptionalParams,
  IotDpsResourceCreateOrUpdatePrivateEndpointConnectionResponse,
  IotDpsResourceDeletePrivateEndpointConnectionOptionalParams,
  IotDpsResourceDeletePrivateEndpointConnectionResponse,
  IotDpsResourceListPrivateLinkResourcesOptionalParams,
  IotDpsResourceListPrivateLinkResourcesResponse,
  IotDpsResourceGetPrivateLinkResourcesOptionalParams,
  IotDpsResourceGetPrivateLinkResourcesResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a IotDpsResource. */
export interface IotDpsResource {
  /**
   * List all the provisioning services for a given subscription id.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: IotDpsResourceListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<ProvisioningServiceDescription>;
  /**
   * Get a list of all provisioning services in the given resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: IotDpsResourceListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<ProvisioningServiceDescription>;
  /**
   * List the primary and secondary keys for a provisioning service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param options The options parameters.
   */
  listKeys(
    resourceGroupName: string,
    provisioningServiceName: string,
    options?: IotDpsResourceListKeysOptionalParams,
  ): PagedAsyncIterableIterator<SharedAccessSignatureAuthorizationRuleAccessRightsDescription>;
  /**
   * Gets the list of valid SKUs and tiers for a provisioning service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param options The options parameters.
   */
  listValidSkus(
    resourceGroupName: string,
    provisioningServiceName: string,
    options?: IotDpsResourceListValidSkusOptionalParams,
  ): PagedAsyncIterableIterator<IotDpsSkuDefinition>;
  /**
   * Check if a provisioning service name is available. This will validate if the name is syntactically
   * valid and if the name is usable
   * @param argumentsParam The request body
   * @param options The options parameters.
   */
  checkProvisioningServiceNameAvailability(
    argumentsParam: OperationInputs,
    options?: IotDpsResourceCheckProvisioningServiceNameAvailabilityOptionalParams,
  ): Promise<IotDpsResourceCheckProvisioningServiceNameAvailabilityResponse>;
  /**
   * Get the metadata of the provisioning service without SAS keys.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    provisioningServiceName: string,
    options?: IotDpsResourceGetOptionalParams,
  ): Promise<IotDpsResourceGetResponse>;
  /**
   * Create or update the metadata of the provisioning service. The usual pattern to modify a property is
   * to retrieve the provisioning service metadata and security metadata, and then combine them with the
   * modified values in a new body to update the provisioning service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param iotDpsDescription Description of the provisioning service to create or update.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    provisioningServiceName: string,
    iotDpsDescription: ProvisioningServiceDescription,
    options?: IotDpsResourceCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<IotDpsResourceCreateOrUpdateResponse>,
      IotDpsResourceCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update the metadata of the provisioning service. The usual pattern to modify a property is
   * to retrieve the provisioning service metadata and security metadata, and then combine them with the
   * modified values in a new body to update the provisioning service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param iotDpsDescription Description of the provisioning service to create or update.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    provisioningServiceName: string,
    iotDpsDescription: ProvisioningServiceDescription,
    options?: IotDpsResourceCreateOrUpdateOptionalParams,
  ): Promise<IotDpsResourceCreateOrUpdateResponse>;
  /**
   * Update an existing provisioning service's tags. to update other fields use the CreateOrUpdate method
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param provisioningServiceTags Updated tag information to set into the provisioning service
   *                                instance.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    provisioningServiceName: string,
    provisioningServiceTags: TagsResource,
    options?: IotDpsResourceUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<IotDpsResourceUpdateResponse>, IotDpsResourceUpdateResponse>
  >;
  /**
   * Update an existing provisioning service's tags. to update other fields use the CreateOrUpdate method
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param provisioningServiceTags Updated tag information to set into the provisioning service
   *                                instance.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    provisioningServiceName: string,
    provisioningServiceTags: TagsResource,
    options?: IotDpsResourceUpdateOptionalParams,
  ): Promise<IotDpsResourceUpdateResponse>;
  /**
   * Deletes the Provisioning Service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    provisioningServiceName: string,
    options?: IotDpsResourceDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes the Provisioning Service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    provisioningServiceName: string,
    options?: IotDpsResourceDeleteOptionalParams,
  ): Promise<void>;
  /**
   * List primary and secondary keys for a specific key name
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param keyName Logical key name to get key-values for.
   * @param options The options parameters.
   */
  listKeysForKeyName(
    resourceGroupName: string,
    provisioningServiceName: string,
    keyName: string,
    options?: IotDpsResourceListKeysForKeyNameOptionalParams,
  ): Promise<IotDpsResourceListKeysForKeyNameResponse>;
  /**
   * Gets the status of a long running operation, such as create, update or delete a provisioning
   * service.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param operationId Operation id corresponding to long running operation. Use this to poll for the
   *                    status.
   * @param asyncinfo Async header used to poll on the status of the operation, obtained while creating
   *                  the long running operation.
   * @param options The options parameters.
   */
  getOperationResult(
    resourceGroupName: string,
    provisioningServiceName: string,
    operationId: string,
    asyncinfo: string,
    options?: IotDpsResourceGetOperationResultOptionalParams,
  ): Promise<IotDpsResourceGetOperationResultResponse>;
  /**
   * List private endpoint connection properties
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param options The options parameters.
   */
  listPrivateEndpointConnections(
    resourceGroupName: string,
    provisioningServiceName: string,
    options?: IotDpsResourceListPrivateEndpointConnectionsOptionalParams,
  ): Promise<IotDpsResourceListPrivateEndpointConnectionsResponse>;
  /**
   * Get private endpoint connection properties
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param privateEndpointConnectionName The name of the private endpoint connection
   * @param options The options parameters.
   */
  getPrivateEndpointConnection(
    resourceGroupName: string,
    provisioningServiceName: string,
    privateEndpointConnectionName: string,
    options?: IotDpsResourceGetPrivateEndpointConnectionOptionalParams,
  ): Promise<IotDpsResourceGetPrivateEndpointConnectionResponse>;
  /**
   * Create or update the status of a private endpoint connection with the specified name
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param privateEndpointConnectionName The name of the private endpoint connection
   * @param privateEndpointConnection The private endpoint connection with updated properties
   * @param options The options parameters.
   */
  beginCreateOrUpdatePrivateEndpointConnection(
    resourceGroupName: string,
    provisioningServiceName: string,
    privateEndpointConnectionName: string,
    privateEndpointConnection: PrivateEndpointConnection,
    options?: IotDpsResourceCreateOrUpdatePrivateEndpointConnectionOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<IotDpsResourceCreateOrUpdatePrivateEndpointConnectionResponse>,
      IotDpsResourceCreateOrUpdatePrivateEndpointConnectionResponse
    >
  >;
  /**
   * Create or update the status of a private endpoint connection with the specified name
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param privateEndpointConnectionName The name of the private endpoint connection
   * @param privateEndpointConnection The private endpoint connection with updated properties
   * @param options The options parameters.
   */
  beginCreateOrUpdatePrivateEndpointConnectionAndWait(
    resourceGroupName: string,
    provisioningServiceName: string,
    privateEndpointConnectionName: string,
    privateEndpointConnection: PrivateEndpointConnection,
    options?: IotDpsResourceCreateOrUpdatePrivateEndpointConnectionOptionalParams,
  ): Promise<IotDpsResourceCreateOrUpdatePrivateEndpointConnectionResponse>;
  /**
   * Delete private endpoint connection with the specified name
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param privateEndpointConnectionName The name of the private endpoint connection
   * @param options The options parameters.
   */
  beginDeletePrivateEndpointConnection(
    resourceGroupName: string,
    provisioningServiceName: string,
    privateEndpointConnectionName: string,
    options?: IotDpsResourceDeletePrivateEndpointConnectionOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<IotDpsResourceDeletePrivateEndpointConnectionResponse>,
      IotDpsResourceDeletePrivateEndpointConnectionResponse
    >
  >;
  /**
   * Delete private endpoint connection with the specified name
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param privateEndpointConnectionName The name of the private endpoint connection
   * @param options The options parameters.
   */
  beginDeletePrivateEndpointConnectionAndWait(
    resourceGroupName: string,
    provisioningServiceName: string,
    privateEndpointConnectionName: string,
    options?: IotDpsResourceDeletePrivateEndpointConnectionOptionalParams,
  ): Promise<IotDpsResourceDeletePrivateEndpointConnectionResponse>;
  /**
   * List private link resources for the given provisioning service
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param options The options parameters.
   */
  listPrivateLinkResources(
    resourceGroupName: string,
    provisioningServiceName: string,
    options?: IotDpsResourceListPrivateLinkResourcesOptionalParams,
  ): Promise<IotDpsResourceListPrivateLinkResourcesResponse>;
  /**
   * Get the specified private link resource for the given provisioning service
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param provisioningServiceName Name of the provisioning service to retrieve.
   * @param groupId The name of the private link resource
   * @param options The options parameters.
   */
  getPrivateLinkResources(
    resourceGroupName: string,
    provisioningServiceName: string,
    groupId: string,
    options?: IotDpsResourceGetPrivateLinkResourcesOptionalParams,
  ): Promise<IotDpsResourceGetPrivateLinkResourcesResponse>;
}
