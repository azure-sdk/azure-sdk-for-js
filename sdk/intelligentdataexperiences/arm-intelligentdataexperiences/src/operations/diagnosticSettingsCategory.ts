/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { DiagnosticSettingsCategory } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { Aadcustomsecurityattributesdiagnosticsettings } from "../aadcustomsecurityattributesdiagnosticsettings";
import {
  DiagnosticSettingsCategoryListOptionalParams,
  DiagnosticSettingsCategoryListResponse
} from "../models";

/** Class containing DiagnosticSettingsCategory operations. */
export class DiagnosticSettingsCategoryImpl
  implements DiagnosticSettingsCategory {
  private readonly client: Aadcustomsecurityattributesdiagnosticsettings;

  /**
   * Initialize a new instance of the class DiagnosticSettingsCategory class.
   * @param client Reference to the service client
   */
  constructor(client: Aadcustomsecurityattributesdiagnosticsettings) {
    this.client = client;
  }

  /**
   * Lists the diagnostic settings categories for AadCustomSecurityAttributesDiagnosticSettings.
   * @param options The options parameters.
   */
  list(
    options?: DiagnosticSettingsCategoryListOptionalParams
  ): Promise<DiagnosticSettingsCategoryListResponse> {
    return this.client.sendOperationRequest({ options }, listOperationSpec);
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listOperationSpec: coreClient.OperationSpec = {
  path:
    "/providers/Microsoft.AadCustomSecurityAttributesDiagnosticSettings/diagnosticSettingsCategories",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DiagnosticSettingsCategoryResourceCollection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.accept],
  serializer
};
