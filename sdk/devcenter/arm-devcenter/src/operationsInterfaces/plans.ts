/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DevCenterPlan,
  PlansListBySubscriptionOptionalParams,
  PlansListByResourceGroupOptionalParams,
  PlansGetOptionalParams,
  PlansGetResponse,
  PlansCreateOrUpdateOptionalParams,
  PlansCreateOrUpdateResponse,
  PlanUpdate,
  PlansUpdateOptionalParams,
  PlansUpdateResponse,
  PlansDeleteOptionalParams,
  PlansDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Plans. */
export interface Plans {
  /**
   * Lists all devcenter plans in a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: PlansListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<DevCenterPlan>;
  /**
   * Lists all devcenter plans in a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: PlansListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<DevCenterPlan>;
  /**
   * Gets a devcenter plan.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param planName The name of the devcenter plan.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    planName: string,
    options?: PlansGetOptionalParams,
  ): Promise<PlansGetResponse>;
  /**
   * Creates or updates a devcenter plan resource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param planName The name of the devcenter plan.
   * @param body Represents a devcenter plan.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    planName: string,
    body: DevCenterPlan,
    options?: PlansCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<PlansCreateOrUpdateResponse>,
      PlansCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a devcenter plan resource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param planName The name of the devcenter plan.
   * @param body Represents a devcenter plan.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    planName: string,
    body: DevCenterPlan,
    options?: PlansCreateOrUpdateOptionalParams,
  ): Promise<PlansCreateOrUpdateResponse>;
  /**
   * Partially updates a devcenter plan.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param planName The name of the devcenter plan.
   * @param body Updatable devcenter plan properties.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    planName: string,
    body: PlanUpdate,
    options?: PlansUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<PlansUpdateResponse>, PlansUpdateResponse>
  >;
  /**
   * Partially updates a devcenter plan.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param planName The name of the devcenter plan.
   * @param body Updatable devcenter plan properties.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    planName: string,
    body: PlanUpdate,
    options?: PlansUpdateOptionalParams,
  ): Promise<PlansUpdateResponse>;
  /**
   * Deletes a devcenter plan
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param planName The name of the devcenter plan.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    planName: string,
    options?: PlansDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<PlansDeleteResponse>, PlansDeleteResponse>
  >;
  /**
   * Deletes a devcenter plan
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param planName The name of the devcenter plan.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    planName: string,
    options?: PlansDeleteOptionalParams,
  ): Promise<PlansDeleteResponse>;
}
