/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  CurationProfile,
  CurationProfilesListByDevCenterOptionalParams,
  CurationProfilesGetOptionalParams,
  CurationProfilesGetResponse,
  CurationProfilesCreateOrUpdateOptionalParams,
  CurationProfilesCreateOrUpdateResponse,
  CurationProfileUpdate,
  CurationProfilesUpdateOptionalParams,
  CurationProfilesUpdateResponse,
  CurationProfilesDeleteOptionalParams,
  CurationProfilesDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a CurationProfiles. */
export interface CurationProfiles {
  /**
   * Lists all curation profiles in the dev center
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param options The options parameters.
   */
  listByDevCenter(
    resourceGroupName: string,
    devCenterName: string,
    options?: CurationProfilesListByDevCenterOptionalParams,
  ): PagedAsyncIterableIterator<CurationProfile>;
  /**
   * Gets a specific curation profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param curationProfileName The name of the curation profile.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    devCenterName: string,
    curationProfileName: string,
    options?: CurationProfilesGetOptionalParams,
  ): Promise<CurationProfilesGetResponse>;
  /**
   * Creates or updates an curation profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param curationProfileName The name of the curation profile.
   * @param body Represents an curation profile.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    devCenterName: string,
    curationProfileName: string,
    body: CurationProfile,
    options?: CurationProfilesCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<CurationProfilesCreateOrUpdateResponse>,
      CurationProfilesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates an curation profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param curationProfileName The name of the curation profile.
   * @param body Represents an curation profile.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    devCenterName: string,
    curationProfileName: string,
    body: CurationProfile,
    options?: CurationProfilesCreateOrUpdateOptionalParams,
  ): Promise<CurationProfilesCreateOrUpdateResponse>;
  /**
   * Partially updates an curation profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param curationProfileName The name of the curation profile.
   * @param body Updatable curation profile properties.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    devCenterName: string,
    curationProfileName: string,
    body: CurationProfileUpdate,
    options?: CurationProfilesUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<CurationProfilesUpdateResponse>,
      CurationProfilesUpdateResponse
    >
  >;
  /**
   * Partially updates an curation profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param curationProfileName The name of the curation profile.
   * @param body Updatable curation profile properties.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    devCenterName: string,
    curationProfileName: string,
    body: CurationProfileUpdate,
    options?: CurationProfilesUpdateOptionalParams,
  ): Promise<CurationProfilesUpdateResponse>;
  /**
   * Deletes an curation profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param curationProfileName The name of the curation profile.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    devCenterName: string,
    curationProfileName: string,
    options?: CurationProfilesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<CurationProfilesDeleteResponse>,
      CurationProfilesDeleteResponse
    >
  >;
  /**
   * Deletes an curation profile.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param curationProfileName The name of the curation profile.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    devCenterName: string,
    curationProfileName: string,
    options?: CurationProfilesDeleteOptionalParams,
  ): Promise<CurationProfilesDeleteResponse>;
}
