/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ProjectPolicy,
  ProjectPoliciesListByDevCenterOptionalParams,
  ProjectPoliciesGetOptionalParams,
  ProjectPoliciesGetResponse,
  ProjectPoliciesCreateOrUpdateOptionalParams,
  ProjectPoliciesCreateOrUpdateResponse,
  ProjectPolicyUpdate,
  ProjectPoliciesUpdateOptionalParams,
  ProjectPoliciesUpdateResponse,
  ProjectPoliciesDeleteOptionalParams,
  ProjectPoliciesDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ProjectPolicies. */
export interface ProjectPolicies {
  /**
   * Lists all project policies in the dev center
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param options The options parameters.
   */
  listByDevCenter(
    resourceGroupName: string,
    devCenterName: string,
    options?: ProjectPoliciesListByDevCenterOptionalParams,
  ): PagedAsyncIterableIterator<ProjectPolicy>;
  /**
   * Gets a specific project policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param projectPolicyName The name of the project policy.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    devCenterName: string,
    projectPolicyName: string,
    options?: ProjectPoliciesGetOptionalParams,
  ): Promise<ProjectPoliciesGetResponse>;
  /**
   * Creates or updates an project policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param projectPolicyName The name of the project policy.
   * @param body Represents an project policy.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    devCenterName: string,
    projectPolicyName: string,
    body: ProjectPolicy,
    options?: ProjectPoliciesCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProjectPoliciesCreateOrUpdateResponse>,
      ProjectPoliciesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates an project policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param projectPolicyName The name of the project policy.
   * @param body Represents an project policy.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    devCenterName: string,
    projectPolicyName: string,
    body: ProjectPolicy,
    options?: ProjectPoliciesCreateOrUpdateOptionalParams,
  ): Promise<ProjectPoliciesCreateOrUpdateResponse>;
  /**
   * Partially updates an project policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param projectPolicyName The name of the project policy.
   * @param body Updatable project policy properties.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    devCenterName: string,
    projectPolicyName: string,
    body: ProjectPolicyUpdate,
    options?: ProjectPoliciesUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProjectPoliciesUpdateResponse>,
      ProjectPoliciesUpdateResponse
    >
  >;
  /**
   * Partially updates an project policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param projectPolicyName The name of the project policy.
   * @param body Updatable project policy properties.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    devCenterName: string,
    projectPolicyName: string,
    body: ProjectPolicyUpdate,
    options?: ProjectPoliciesUpdateOptionalParams,
  ): Promise<ProjectPoliciesUpdateResponse>;
  /**
   * Deletes an project policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param projectPolicyName The name of the project policy.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    devCenterName: string,
    projectPolicyName: string,
    options?: ProjectPoliciesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ProjectPoliciesDeleteResponse>,
      ProjectPoliciesDeleteResponse
    >
  >;
  /**
   * Deletes an project policy.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param devCenterName The name of the devcenter.
   * @param projectPolicyName The name of the project policy.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    devCenterName: string,
    projectPolicyName: string,
    options?: ProjectPoliciesDeleteOptionalParams,
  ): Promise<ProjectPoliciesDeleteResponse>;
}
