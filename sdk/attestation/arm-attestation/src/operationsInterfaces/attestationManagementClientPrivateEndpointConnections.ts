/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  AttestationManagementClientPrivateEndpointConnection,
  AttestationManagementClientPrivateEndpointConnectionsListByAttestationProviderOptionalParams,
  AttestationManagementClientPrivateEndpointConnectionsGetOptionalParams,
  AttestationManagementClientPrivateEndpointConnectionsGetResponse,
  AttestationManagementClientPrivateEndpointConnectionsCreateOptionalParams,
  AttestationManagementClientPrivateEndpointConnectionsCreateResponse,
  AttestationManagementClientPrivateEndpointConnectionsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AttestationManagementClientPrivateEndpointConnections. */
export interface AttestationManagementClientPrivateEndpointConnections {
  /**
   * List all the private endpoint connections associated with the attestation provider.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param providerName Name of the attestation provider.
   * @param options The options parameters.
   */
  listByAttestationProvider(
    resourceGroupName: string,
    providerName: string,
    options?: AttestationManagementClientPrivateEndpointConnectionsListByAttestationProviderOptionalParams
  ): PagedAsyncIterableIterator<
    AttestationManagementClientPrivateEndpointConnection
  >;
  /**
   * Gets the specified private endpoint connection associated with the attestation provider.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param providerName Name of the attestation provider.
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
   *                                      Azure resource
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    providerName: string,
    privateEndpointConnectionName: string,
    options?: AttestationManagementClientPrivateEndpointConnectionsGetOptionalParams
  ): Promise<AttestationManagementClientPrivateEndpointConnectionsGetResponse>;
  /**
   * Update the state of specified private endpoint connection associated with the attestation provider.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param providerName Name of the attestation provider.
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
   *                                      Azure resource
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    providerName: string,
    privateEndpointConnectionName: string,
    resource: AttestationManagementClientPrivateEndpointConnection,
    options?: AttestationManagementClientPrivateEndpointConnectionsCreateOptionalParams
  ): Promise<
    AttestationManagementClientPrivateEndpointConnectionsCreateResponse
  >;
  /**
   * Deletes the specified private endpoint connection associated with the attestation provider.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param providerName Name of the attestation provider.
   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the
   *                                      Azure resource
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    providerName: string,
    privateEndpointConnectionName: string,
    options?: AttestationManagementClientPrivateEndpointConnectionsDeleteOptionalParams
  ): Promise<void>;
}
