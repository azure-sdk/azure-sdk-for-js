/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  FluxConfiguration,
  FluxConfigurationsListByResourceGroupOptionalParams,
  FluxConfigurationsGetOptionalParams,
  FluxConfigurationsGetResponse,
  FluxConfigurationsCreateOptionalParams,
  FluxConfigurationsCreateResponse,
  FluxConfigurationUpdate,
  FluxConfigurationsUpdateOptionalParams,
  FluxConfigurationsUpdateResponse,
  FluxConfigurationsDeleteOptionalParams,
  FluxConfigurationsDeleteResponse,
  FluxConfigurationsOperationStatusOptionalParams,
  FluxConfigurationsOperationStatusResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a FluxConfigurations. */
export interface FluxConfigurations {
  /**
   * List all Flux Configurations.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp Cluster Resource Provider Name
   * @param clusterResourceName cluster Resource Name
   * @param clusterName cluster Name
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    clusterRp: string,
    clusterResourceName: string,
    clusterName: string,
    options?: FluxConfigurationsListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<FluxConfiguration>;
  /**
   * Gets details of the Flux Configuration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp Cluster Resource Provider Name
   * @param clusterResourceName cluster Resource Name
   * @param clusterName cluster Name
   * @param fluxConfigurationName Name of the Flux Configuration.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    clusterRp: string,
    clusterResourceName: string,
    clusterName: string,
    fluxConfigurationName: string,
    options?: FluxConfigurationsGetOptionalParams,
  ): Promise<FluxConfigurationsGetResponse>;
  /**
   * Create a new Kubernetes Flux Configuration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp Cluster Resource Provider Name
   * @param clusterResourceName cluster Resource Name
   * @param clusterName cluster Name
   * @param fluxConfigurationName Name of the Flux Configuration.
   * @param resource Properties necessary to Create a FluxConfiguration.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    clusterRp: string,
    clusterResourceName: string,
    clusterName: string,
    fluxConfigurationName: string,
    resource: FluxConfiguration,
    options?: FluxConfigurationsCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<FluxConfigurationsCreateResponse>,
      FluxConfigurationsCreateResponse
    >
  >;
  /**
   * Create a new Kubernetes Flux Configuration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp Cluster Resource Provider Name
   * @param clusterResourceName cluster Resource Name
   * @param clusterName cluster Name
   * @param fluxConfigurationName Name of the Flux Configuration.
   * @param resource Properties necessary to Create a FluxConfiguration.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    clusterRp: string,
    clusterResourceName: string,
    clusterName: string,
    fluxConfigurationName: string,
    resource: FluxConfiguration,
    options?: FluxConfigurationsCreateOptionalParams,
  ): Promise<FluxConfigurationsCreateResponse>;
  /**
   * Update an existing Kubernetes Flux Configuration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp Cluster Resource Provider Name
   * @param clusterResourceName cluster Resource Name
   * @param clusterName cluster Name
   * @param fluxConfigurationName Name of the Flux Configuration.
   * @param properties Properties to Patch in an existing Flux Configuration.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    clusterRp: string,
    clusterResourceName: string,
    clusterName: string,
    fluxConfigurationName: string,
    properties: FluxConfigurationUpdate,
    options?: FluxConfigurationsUpdateOptionalParams,
  ): Promise<FluxConfigurationsUpdateResponse>;
  /**
   * This will delete the YAML file used to set up the Flux Configuration, thus stopping future sync from
   * the source repo.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp Cluster Resource Provider Name
   * @param clusterResourceName cluster Resource Name
   * @param clusterName cluster Name
   * @param fluxConfigurationName Name of the Flux Configuration.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    clusterRp: string,
    clusterResourceName: string,
    clusterName: string,
    fluxConfigurationName: string,
    options?: FluxConfigurationsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<FluxConfigurationsDeleteResponse>,
      FluxConfigurationsDeleteResponse
    >
  >;
  /**
   * This will delete the YAML file used to set up the Flux Configuration, thus stopping future sync from
   * the source repo.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp Cluster Resource Provider Name
   * @param clusterResourceName cluster Resource Name
   * @param clusterName cluster Name
   * @param fluxConfigurationName Name of the Flux Configuration.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    clusterRp: string,
    clusterResourceName: string,
    clusterName: string,
    fluxConfigurationName: string,
    options?: FluxConfigurationsDeleteOptionalParams,
  ): Promise<FluxConfigurationsDeleteResponse>;
  /**
   * Get Async Operation status
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterRp Cluster Resource Provider Name
   * @param clusterResourceName cluster Resource Name
   * @param clusterName cluster Name
   * @param fluxConfigurationName Name of the Flux Configuration.
   * @param operationId operationId value
   * @param body Any object
   * @param options The options parameters.
   */
  operationStatus(
    resourceGroupName: string,
    clusterRp: string,
    clusterResourceName: string,
    clusterName: string,
    fluxConfigurationName: string,
    operationId: string,
    body: Record<string, unknown>,
    options?: FluxConfigurationsOperationStatusOptionalParams,
  ): Promise<FluxConfigurationsOperationStatusResponse>;
}
