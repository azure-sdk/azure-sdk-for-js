/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response of a Extension list operation. */
export interface ExtensionListResult {
  /** The Extension items on this page */
  value: Extension[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Scope of the extension. It can be either Cluster or Namespace; but not both. */
export interface Scope {
  /** Specifies that the scope of the extension is Cluster */
  cluster?: ScopeCluster;
  /** Specifies that the scope of the extension is Namespace */
  namespace?: ScopeNamespace;
}

/** Specifies that the scope of the extension is Cluster */
export interface ScopeCluster {
  /** Namespace where the extension Release must be placed, for a Cluster scoped extension.  If this namespace does not exist, it will be created */
  releaseNamespace?: string;
}

/** Specifies that the scope of the extension is Namespace */
export interface ScopeNamespace {
  /** Namespace where the extension will be created for an Namespace scoped extension.  If this namespace does not exist, it will be created */
  targetNamespace?: string;
}

/** Status from the extension. */
export interface ExtensionStatus {
  /** Status code provided by the Extension */
  code?: string;
  /** Short description of status of the extension. */
  displayStatus?: string;
  /** Level of the status. */
  level?: LevelType;
  /** Detailed message of the status from the Extension. */
  message?: string;
  /** DateLiteral (per ISO8601) noting the time of installation status. */
  time?: string;
}

/** Identity of the Extension resource in an AKS cluster */
export interface ExtensionPropertiesAksAssignedIdentity {
  /**
   * The principal ID of resource identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** The identity type. */
  type?: AKSIdentityType;
}

/** Managed service identity (system assigned and/or user assigned identities) */
export interface ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */
  type: ManagedServiceIdentityType;
  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
  userAssignedIdentities?: {
    [propertyName: string]: UserAssignedIdentity | null;
  };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Plan for the resource. */
export interface Plan {
  /** A user defined name of the 3rd Party Artifact that is being procured. */
  name: string;
  /** The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic */
  publisher: string;
  /** The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. */
  product: string;
  /** A publisher provided promotion code as provisioned in Data Market for the said product/artifact. */
  promotionCode?: string;
  /** The version of the desired product/artifact. */
  version?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The type used for update operations of the Extension. */
export interface ExtensionUpdate {
  /** The managed service identities assigned to this resource. */
  identity?: ManagedServiceIdentity;
  /** Details of the resource plan. */
  plan?: Plan;
  /** Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher. */
  extensionType?: string;
  /** Flag to note if this extension participates in auto upgrade of minor version, or not. */
  autoUpgradeMinorVersion?: boolean;
  /** ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'. */
  releaseTrain?: string;
  /** User-specified version of the extension for this extension to 'pin'. To use 'version', autoUpgradeMinorVersion must be 'false'. */
  version?: string;
  /** Scope at which the extension is installed. */
  scope?: Scope;
  /** Configuration settings, as name-value pairs for configuring this extension. */
  configurationSettings?: { [propertyName: string]: string };
  /** Configuration settings that are sensitive, as name-value pairs for configuring this extension. */
  configurationProtectedSettings?: { [propertyName: string]: string };
  /** Status from this extension. */
  statuses?: ExtensionStatus[];
  /** Identity of the Extension resource in an AKS cluster */
  aksAssignedIdentity?: ExtensionPropertiesAksAssignedIdentity;
  /** autoUpgrade value for autoUpgradeV2 */
  autoUpgradeChannel?: string;
}

/** Standard Azure Resource Manager operation status response */
export interface Paths1B0Hq6PSubscriptionsSubscriptionidResourcegroupsResourcegroupnameProviderClusterrpClusterresourcenameClusternameProvidersMicrosoftKubernetesconfigurationExtensionsExtensionnameOperationsOperationidGetResponses200ContentApplicationJsonSchema {
  /** The operation status */
  status: ResourceProvisioningState;
  /** The unique identifier for the operationStatus resource */
  id: string;
  /**
   * The name of the  operationStatus resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Operation start time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * Operation complete time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
  /**
   * The progress made toward completing the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly percentComplete?: number;
  /**
   * Errors that occurred if the operation ended with Canceled or Failed status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly error?: ErrorDetail;
}

/** The response of a FluxConfiguration list operation. */
export interface FluxConfigurationListResult {
  /** The FluxConfiguration items on this page */
  value: FluxConfiguration[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Parameters to reconcile to the GitRepository source kind type. */
export interface GitRepositoryDefinition {
  /** The URL to sync for the flux configuration git repository. */
  url?: string;
  /** The maximum time to attempt to reconcile the cluster git repository source with the remote. */
  timeoutInSeconds?: number;
  /** The interval at which to re-reconcile the cluster git repository source with the remote. */
  syncIntervalInSeconds?: number;
  /** The source reference for the GitRepository object. */
  repositoryRef?: RepositoryRefDefinition;
  /** Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH */
  sshKnownHosts?: string;
  /** Plaintext HTTPS username used to access private git repositories over HTTPS */
  httpsUser?: string;
  /** Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS */
  httpsCACert?: string;
  /** Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. */
  localAuthRef?: string;
}

/** The source reference for the GitRepository object. */
export interface RepositoryRefDefinition {
  /** The git repository branch name to checkout. */
  branch?: string;
  /** The git repository tag name to checkout. This takes precedence over branch. */
  tag?: string;
  /** The semver range used to match against git repository tags. This takes precedence over tag. */
  semver?: string;
  /** The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver. */
  commit?: string;
}

/** Parameters to reconcile to the Bucket source kind type. */
export interface BucketDefinition {
  /** The URL to sync for the flux configuration S3 bucket. */
  url?: string;
  /** The bucket name to sync from the url endpoint for the flux configuration. */
  bucketName?: string;
  /** Specify whether to use insecure communication when puling data from the S3 bucket. */
  insecure?: boolean;
  /** The maximum time to attempt to reconcile the cluster bucket source with the remote. */
  timeoutInSeconds?: number;
  /** The interval at which to re-reconcile the cluster bucket source with the remote. */
  syncIntervalInSeconds?: number;
  /** Plaintext access key used to securely access the S3 bucket */
  accessKey?: string;
  /** Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. */
  localAuthRef?: string;
}

/** Parameters to reconcile to the AzureBlob source kind type. */
export interface AzureBlobDefinition {
  /** The URL to sync for the flux configuration Azure Blob storage account. */
  url?: string;
  /** The Azure Blob container name to sync from the url endpoint for the flux configuration. */
  containerName?: string;
  /** The maximum time to attempt to reconcile the cluster Azure Blob source with the remote. */
  timeoutInSeconds?: number;
  /** The interval at which to re-reconcile the cluster Azure Blob source with the remote. */
  syncIntervalInSeconds?: number;
  /** Parameters to authenticate using Service Principal. */
  servicePrincipal?: ServicePrincipalDefinition;
  /** The account key (shared key) to access the storage account */
  accountKey?: string;
  /** The Shared Access token to access the storage container */
  sasToken?: string;
  /** Parameters to authenticate using a Managed Identity. */
  managedIdentity?: ManagedIdentityDefinition;
  /** Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. */
  localAuthRef?: string;
}

/** Parameters to authenticate using Service Principal. */
export interface ServicePrincipalDefinition {
  /** The client Id for authenticating a Service Principal. */
  clientId?: string;
  /** The tenant Id for authenticating a Service Principal */
  tenantId?: string;
  /**
   * The client secret for authenticating a Service Principal
   * This value contains a credential. Consider obscuring before showing to users
   */
  clientSecret?: string;
  /**
   * Base64-encoded certificate used to authenticate a Service Principal
   * This value contains a credential. Consider obscuring before showing to users
   */
  clientCertificate?: string;
  /**
   * The password for the certificate used to authenticate a Service Principal
   * This value contains a credential. Consider obscuring before showing to users
   */
  clientCertificatePassword?: string;
  /** Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate */
  clientCertificateSendChain?: boolean;
}

/** Parameters to authenticate using a Managed Identity. */
export interface ManagedIdentityDefinition {
  /** The client Id for authenticating a Managed Identity. */
  clientId?: string;
}

/** The Kustomization defining how to reconcile the artifact pulled by the source type on the cluster. */
export interface KustomizationDefinition {
  /**
   * Name of the Kustomization, matching the key in the Kustomizations object map.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** The path in the source reference to reconcile on the cluster. */
  path?: string;
  /** Specifies other Kustomizations that this Kustomization depends on. This Kustomization will not reconcile until all dependencies have completed their reconciliation. */
  dependsOn?: string[];
  /** The maximum time to attempt to reconcile the Kustomization on the cluster. */
  timeoutInSeconds?: number;
  /** The interval at which to re-reconcile the Kustomization on the cluster. */
  syncIntervalInSeconds?: number;
  /** The interval at which to re-reconcile the Kustomization on the cluster in the event of failure on reconciliation. */
  retryIntervalInSeconds?: number;
  /** Enable/disable garbage collections of Kubernetes objects created by this Kustomization. */
  prune?: boolean;
  /** Enable/disable re-creating Kubernetes resources on the cluster when patching fails due to an immutable field change. */
  force?: boolean;
  /** Enable/disable health check for all Kubernetes objects created by this Kustomization. */
  wait?: boolean;
  /** Used for variable substitution for this Kustomization after kustomize build. */
  postBuild?: PostBuildDefinition;
}

/** The postBuild definitions defining variable substitutions for this Kustomization after kustomize build. */
export interface PostBuildDefinition {
  /** Key/value pairs holding the variables to be substituted in this Kustomization. */
  substitute?: { [propertyName: string]: string };
  /** Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization. */
  substituteFrom?: SubstituteFromDefinition[];
}

/** Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization. */
export interface SubstituteFromDefinition {
  /** Define whether it is ConfigMap or Secret that holds the variables to be used in substitution. */
  kind?: string;
  /** Name of the ConfigMap/Secret that holds the variables to be used in substitution. */
  name?: string;
  /** Set to True to proceed without ConfigMap/Secret, if it is not present. */
  optional?: boolean;
}

/** Statuses of objects deployed by the user-specified kustomizations from the git repository. */
export interface ObjectStatusDefinition {
  /** Name of the applied object */
  name?: string;
  /** Namespace of the applied object */
  namespace?: string;
  /** Kind of the applied object */
  kind?: string;
  /** Compliance state of the applied object showing whether the applied object has come into a ready state on the cluster. */
  complianceState?: FluxComplianceState;
  /** Object reference to the Kustomization that applied this object */
  appliedBy?: ObjectReferenceDefinition;
  /** List of Kubernetes object status conditions present on the cluster */
  statusConditions?: ObjectStatusConditionDefinition[];
  /** Additional properties that are provided from objects of the HelmRelease kind */
  helmReleaseProperties?: HelmReleasePropertiesDefinition;
}

/** Object reference to a Kubernetes object on a cluster */
export interface ObjectReferenceDefinition {
  /** Name of the object */
  name?: string;
  /** Namespace of the object */
  namespace?: string;
}

/** Status condition of Kubernetes object */
export interface ObjectStatusConditionDefinition {
  /** Last time this status condition has changed */
  lastTransitionTime?: Date;
  /** A more verbose description of the object status condition */
  message?: string;
  /** Reason for the specified status condition type status */
  reason?: string;
  /** Status of the Kubernetes object condition type */
  status?: string;
  /** Object status condition type for this object */
  type?: string;
}

/** Properties for HelmRelease objects */
export interface HelmReleasePropertiesDefinition {
  /** The revision number of the last released object change */
  lastRevisionApplied?: number;
  /** The reference to the HelmChart object used as the source to this HelmRelease */
  helmChartRef?: ObjectReferenceDefinition;
  /** Total number of times that the HelmRelease failed to install or upgrade */
  failureCount?: number;
  /** Number of times that the HelmRelease failed to install */
  installFailureCount?: number;
  /** Number of times that the HelmRelease failed to upgrade */
  upgradeFailureCount?: number;
}

/** The type used for update operations of the FluxConfiguration. */
export interface FluxConfigurationUpdate {
  /** Updatable properties of an Flux Configuration Patch Request */
  properties?: FluxConfigurationPatchProperties;
}

/** Updatable properties of an Flux Configuration Patch Request */
export interface FluxConfigurationPatchProperties {
  /** Source Kind to pull the configuration data from. */
  sourceKind?: SourceKindType;
  /** Whether this configuration should suspend its reconciliation of its kustomizations and sources. */
  suspend?: boolean;
  /** Parameters to reconcile to the GitRepository source kind type. */
  gitRepository?: GitRepositoryPatchDefinition;
  /** Parameters to reconcile to the Bucket source kind type. */
  bucket?: BucketPatchDefinition;
  /** Parameters to reconcile to the AzureBlob source kind type. */
  azureBlob?: AzureBlobPatchDefinition;
  /** Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster. */
  kustomizations?: { [propertyName: string]: KustomizationPatchDefinition };
  /** Key-value pairs of protected configuration settings for the configuration */
  configurationProtectedSettings?: { [propertyName: string]: string };
}

/** Parameters to reconcile to the GitRepository source kind type. */
export interface GitRepositoryPatchDefinition {
  /** The URL to sync for the flux configuration git repository. */
  url?: string;
  /** The maximum time to attempt to reconcile the cluster git repository source with the remote. */
  timeoutInSeconds?: number;
  /** The interval at which to re-reconcile the cluster git repository source with the remote. */
  syncIntervalInSeconds?: number;
  /** The source reference for the GitRepository object. */
  repositoryRef?: RepositoryRefDefinition;
  /** Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH */
  sshKnownHosts?: string;
  /** Plaintext HTTPS username used to access private git repositories over HTTPS */
  httpsUser?: string;
  /** Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS */
  httpsCACert?: string;
  /** Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. */
  localAuthRef?: string;
}

/** Parameters to reconcile to the Bucket source kind type. */
export interface BucketPatchDefinition {
  /** The URL to sync for the flux configuration S3 bucket. */
  url?: string;
  /** The bucket name to sync from the url endpoint for the flux configuration. */
  bucketName?: string;
  /** Specify whether to use insecure communication when puling data from the S3 bucket. */
  insecure?: boolean;
  /** The maximum time to attempt to reconcile the cluster bucket source with the remote. */
  timeoutInSeconds?: number;
  /** The interval at which to re-reconcile the cluster bucket source with the remote. */
  syncIntervalInSeconds?: number;
  /** Plaintext access key used to securely access the S3 bucket */
  accessKey?: string;
  /** Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. */
  localAuthRef?: string;
}

/** Parameters to reconcile to the AzureBlob source kind type. */
export interface AzureBlobPatchDefinition {
  /** The URL to sync for the flux configuration Azure Blob storage account. */
  url?: string;
  /** The Azure Blob container name to sync from the url endpoint for the flux configuration. */
  containerName?: string;
  /** The maximum time to attempt to reconcile the cluster Azure Blob source with the remote. */
  timeoutInSeconds?: number;
  /** The interval at which to re-reconcile the cluster Azure Blob source with the remote. */
  syncIntervalInSeconds?: number;
  /** Parameters to authenticate using Service Principal. */
  servicePrincipal?: ServicePrincipalPatchDefinition;
  /** The account key (shared key) to access the storage account */
  accountKey?: string;
  /** The Shared Access token to access the storage container */
  sasToken?: string;
  /** Parameters to authenticate using a Managed Identity. */
  managedIdentity?: ManagedIdentityPatchDefinition;
  /** Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. */
  localAuthRef?: string;
}

/** Parameters to authenticate using Service Principal. */
export interface ServicePrincipalPatchDefinition {
  /** The client Id for authenticating a Service Principal. */
  clientId?: string;
  /** The tenant Id for authenticating a Service Principal */
  tenantId?: string;
  /**
   * The client secret for authenticating a Service Principal
   * This value contains a credential. Consider obscuring before showing to users
   */
  clientSecret?: string;
  /**
   * Base64-encoded certificate used to authenticate a Service Principal
   * This value contains a credential. Consider obscuring before showing to users
   */
  clientCertificate?: string;
  /**
   * The password for the certificate used to authenticate a Service Principal
   * This value contains a credential. Consider obscuring before showing to users
   */
  clientCertificatePassword?: string;
  /** Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate */
  clientCertificateSendChain?: boolean;
}

/** Parameters to authenticate using a Managed Identity. */
export interface ManagedIdentityPatchDefinition {
  /** The client Id for authenticating a Managed Identity. */
  clientId?: string;
}

/** The Kustomization defining how to reconcile the artifact pulled by the source type on the cluster. */
export interface KustomizationPatchDefinition {
  /** The path in the source reference to reconcile on the cluster. */
  path?: string;
  /** Specifies other Kustomizations that this Kustomization depends on. This Kustomization will not reconcile until all dependencies have completed their reconciliation. */
  dependsOn?: string[];
  /** The maximum time to attempt to reconcile the Kustomization on the cluster. */
  timeoutInSeconds?: number;
  /** The interval at which to re-reconcile the Kustomization on the cluster. */
  syncIntervalInSeconds?: number;
  /** The interval at which to re-reconcile the Kustomization on the cluster in the event of failure on reconciliation. */
  retryIntervalInSeconds?: number;
  /** Enable/disable garbage collections of Kubernetes objects created by this Kustomization. */
  prune?: boolean;
  /** Enable/disable re-creating Kubernetes resources on the cluster when patching fails due to an immutable field change. */
  force?: boolean;
  /** Enable/disable health check for all Kubernetes objects created by this Kustomization. */
  wait?: boolean;
  /** Used for variable substitution for this Kustomization after kustomize build. */
  postBuild?: PostBuildDefinition;
}

/** Standard Azure Resource Manager operation status response */
export interface PathsT3WamfSubscriptionsSubscriptionidResourcegroupsResourcegroupnameProviderClusterrpClusterresourcenameClusternameProvidersMicrosoftKubernetesconfigurationFluxconfigurationsFluxconfigurationnameOperationsOperationidGetResponses200ContentApplicationJsonSchema {
  /** The operation status */
  status: ResourceProvisioningState;
  /** The unique identifier for the operationStatus resource */
  id: string;
  /**
   * The name of the  operationStatus resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Operation start time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startTime?: Date;
  /**
   * Operation complete time
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endTime?: Date;
  /**
   * The progress made toward completing the operation
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly percentComplete?: number;
  /**
   * Errors that occurred if the operation ended with Canceled or Failed status
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly error?: ErrorDetail;
}

/** The response of a OperationModel list operation. */
export interface OperationModelListResult {
  /** The OperationModel items on this page */
  value: OperationModel[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The response of a SourceControlConfiguration list operation. */
export interface SourceControlConfigurationListResult {
  /** The SourceControlConfiguration items on this page */
  value: SourceControlConfiguration[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Properties for Helm operator. */
export interface HelmOperatorProperties {
  /** Version of the operator Helm chart. */
  chartVersion?: string;
  /** Values override for the operator Helm chart. */
  chartValues?: string;
}

/** Compliance Status details */
export interface ComplianceStatus {
  /**
   * The compliance state of the configuration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly complianceState?: ComplianceStateType;
  /** Datetime the configuration was last applied. */
  lastConfigApplied?: Date;
  /** Message from when the configuration was applied. */
  message?: string;
  /** Level of the message. */
  messageLevel?: MessageLevelType;
}

/** The Flux Configuration Patch Request object. */
export interface FluxConfigurationPatch {
  /** Updatable properties of an Flux Configuration Patch Request */
  properties?: FluxConfigurationPatchProperties;
}

/** Identity for the resource. */
export interface Identity {
  /**
   * The principal ID of resource identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** The identity type. */
  type?: "SystemAssigned";
}

/** The Extension Patch Request object. */
export interface PatchExtension {
  /** Updatable properties of an Extension Patch Request */
  properties?: PatchExtensionProperties;
}

/** Updatable properties of an Extension Patch Request */
export interface PatchExtensionProperties {
  /** Flag to note if this extension participates in auto upgrade of minor version, or not. */
  autoUpgradeMinorVersion?: boolean;
  /** ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'. */
  releaseTrain?: string;
  /** Version of the extension for this extension, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'. */
  version?: string;
  /** Configuration settings, as name-value pairs for configuring this extension. */
  configurationSettings?: { [propertyName: string]: string };
  /** Configuration settings that are sensitive, as name-value pairs for configuring this extension. */
  configurationProtectedSettings?: { [propertyName: string]: string };
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** The Extension object. */
export interface Extension extends ProxyResource {
  /** The managed service identities assigned to this resource. */
  identity?: ManagedServiceIdentity;
  /** Details of the resource plan. */
  plan?: Plan;
  /** Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher. */
  extensionType?: string;
  /** Flag to note if this extension participates in auto upgrade of minor version, or not. */
  autoUpgradeMinorVersion?: boolean;
  /** ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'. */
  releaseTrain?: string;
  /** User-specified version of the extension for this extension to 'pin'. To use 'version', autoUpgradeMinorVersion must be 'false'. */
  version?: string;
  /** Scope at which the extension is installed. */
  scope?: Scope;
  /** Configuration settings, as name-value pairs for configuring this extension. */
  configurationSettings?: { [propertyName: string]: string };
  /** Configuration settings that are sensitive, as name-value pairs for configuring this extension. */
  configurationProtectedSettings?: { [propertyName: string]: string };
  /**
   * Currently installed version of the extension.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly currentVersion?: string;
  /**
   * Status of installation of this extension.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Status from this extension. */
  statuses?: ExtensionStatus[];
  /**
   * Error information from the Agent - e.g. errors during installation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorInfo?: ErrorDetail;
  /**
   * Custom Location settings properties.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly customLocationSettings?: { [propertyName: string]: string };
  /**
   * Uri of the Helm package
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly packageUri?: string;
  /** Identity of the Extension resource in an AKS cluster */
  aksAssignedIdentity?: ExtensionPropertiesAksAssignedIdentity;
  /**
   * Flag to note if this extension is a system extension
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isSystemExtension?: boolean;
  /** autoUpgrade value for autoUpgradeV2 */
  autoUpgradeChannel?: string;
}

/** The Flux Configuration object returned in Get & Put response. */
export interface FluxConfiguration extends ProxyResource {
  /** Scope at which the operator will be installed. */
  scope?: ScopeType;
  /** The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only. */
  namespace?: string;
  /** Source Kind to pull the configuration data from. */
  sourceKind?: SourceKindType;
  /** Whether this configuration should suspend its reconciliation of its kustomizations and sources. */
  suspend?: boolean;
  /** Parameters to reconcile to the GitRepository source kind type. */
  gitRepository?: GitRepositoryDefinition;
  /** Parameters to reconcile to the Bucket source kind type. */
  bucket?: BucketDefinition;
  /** Parameters to reconcile to the AzureBlob source kind type. */
  azureBlob?: AzureBlobDefinition;
  /** Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster. */
  kustomizations?: { [propertyName: string]: KustomizationDefinition };
  /** Key-value pairs of protected configuration settings for the configuration */
  configurationProtectedSettings?: { [propertyName: string]: string };
  /**
   * Statuses of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects provisioned by the fluxConfiguration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statuses?: ObjectStatusDefinition[];
  /**
   * Public Key associated with this fluxConfiguration (either generated within the cluster or provided by the user).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly repositoryPublicKey?: string;
  /**
   * Branch and/or SHA of the source commit synced with the cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceSyncedCommitId?: string;
  /**
   * Datetime the fluxConfiguration synced its source on the cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceUpdatedAt?: Date;
  /**
   * Datetime the fluxConfiguration synced its status on the cluster with Azure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusUpdatedAt?: Date;
  /** Whether flux configuration deployment should wait for cluster to reconcile the kustomizations. */
  waitForReconciliation?: boolean;
  /** Maximum duration to wait for flux configuration reconciliation. E.g PT1H, PT5M, P1D */
  reconciliationWait?: string;
  /**
   * Combined status of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly complianceState?: FluxComplianceState;
  /**
   * Status of the creation of the fluxConfiguration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Error message returned to the user in the case of provisioning failure.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly errorMessage?: string;
}

/** Concrete proxy resource types can be created by aliasing this type using a specific property type. */
export interface OperationModel extends ProxyResource {
  /** operationId value */
  operationId?: string;
  /**
   * Status of installation of this extension.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** The SourceControl Configuration object returned in Get & Put response. */
export interface SourceControlConfiguration extends ProxyResource {
  /** Url of the SourceControl Repository. */
  repositoryUrl?: string;
  /** The namespace to which this operator is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only. */
  operatorNamespace?: string;
  /** Instance name of the operator - identifying the specific configuration. */
  operatorInstanceName?: string;
  /** Type of the operator */
  operatorType?: OperatorType;
  /** Any Parameters for the Operator instance in string format. */
  operatorParams?: string;
  /** Name-value pairs of protected configuration settings for the configuration */
  configurationProtectedSettings?: { [propertyName: string]: string };
  /** Scope at which the operator will be installed. */
  operatorScope?: OperatorScopeType;
  /**
   * Public Key associated with this SourceControl configuration (either generated within the cluster or provided by the user).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly repositoryPublicKey?: string;
  /** Base64-encoded known_hosts contents containing public SSH keys required to access private Git instances */
  sshKnownHostsContents?: string;
  /** Option to enable Helm Operator for this git configuration. */
  enableHelmOperator?: boolean;
  /** Properties for Helm operator. */
  helmOperatorProperties?: HelmOperatorProperties;
  /**
   * The provisioning state of the resource provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningStateType;
  /**
   * Compliance Status of the Configuration
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly complianceStatus?: ComplianceStatus;
}

/** Defines headers for Extensions_create operation. */
export interface ExtensionsCreateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for Extensions_delete operation. */
export interface ExtensionsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for FluxConfigurations_create operation. */
export interface FluxConfigurationsCreateHeaders {
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for FluxConfigurations_delete operation. */
export interface FluxConfigurationsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for SourceControlConfigurations_delete operation. */
export interface SourceControlConfigurationsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
  /** Creating */
  Creating = "Creating",
  /** Updating */
  Updating = "Updating",
  /** Deleting */
  Deleting = "Deleting",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Succeeded \
 * **Failed**: Failed \
 * **Canceled**: Canceled \
 * **Creating**: Creating \
 * **Updating**: Updating \
 * **Deleting**: Deleting
 */
export type ProvisioningState = string;

/** Known values of {@link LevelType} that the service accepts. */
export enum KnownLevelType {
  /** Error */
  Error = "Error",
  /** Warning */
  Warning = "Warning",
  /** Information */
  Information = "Information",
}

/**
 * Defines values for LevelType. \
 * {@link KnownLevelType} can be used interchangeably with LevelType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Error**: Error \
 * **Warning**: Warning \
 * **Information**: Information
 */
export type LevelType = string;

/** Known values of {@link AKSIdentityType} that the service accepts. */
export enum KnownAKSIdentityType {
  /** System Assigned Identity */
  SystemAssigned = "SystemAssigned",
  /** User Assigned Identity */
  UserAssigned = "UserAssigned",
}

/**
 * Defines values for AKSIdentityType. \
 * {@link KnownAKSIdentityType} can be used interchangeably with AKSIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SystemAssigned**: System Assigned Identity \
 * **UserAssigned**: User Assigned Identity
 */
export type AKSIdentityType = string;

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned,UserAssigned",
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned,UserAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link ResourceProvisioningState} that the service accepts. */
export enum KnownResourceProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
}

/**
 * Defines values for ResourceProvisioningState. \
 * {@link KnownResourceProvisioningState} can be used interchangeably with ResourceProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled.
 */
export type ResourceProvisioningState = string;

/** Known values of {@link ScopeType} that the service accepts. */
export enum KnownScopeType {
  /** cluster */
  Cluster = "cluster",
  /** namespace */
  NameSpace = "namespace",
}

/**
 * Defines values for ScopeType. \
 * {@link KnownScopeType} can be used interchangeably with ScopeType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **cluster**: cluster \
 * **namespace**: namespace
 */
export type ScopeType = string;

/** Known values of {@link SourceKindType} that the service accepts. */
export enum KnownSourceKindType {
  /** GitRepository */
  GitRepository = "GitRepository",
  /** Bucket */
  Bucket = "Bucket",
  /** AzureBlob */
  AzureBlob = "AzureBlob",
}

/**
 * Defines values for SourceKindType. \
 * {@link KnownSourceKindType} can be used interchangeably with SourceKindType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GitRepository**: GitRepository \
 * **Bucket**: Bucket \
 * **AzureBlob**: AzureBlob
 */
export type SourceKindType = string;

/** Known values of {@link FluxComplianceState} that the service accepts. */
export enum KnownFluxComplianceState {
  /** Compliant */
  Compliant = "Compliant",
  /** Non-Compliant */
  NonCompliant = "Non-Compliant",
  /** Pending */
  Pending = "Pending",
  /** Suspended */
  Suspended = "Suspended",
  /** Unknown */
  Unknown = "Unknown",
}

/**
 * Defines values for FluxComplianceState. \
 * {@link KnownFluxComplianceState} can be used interchangeably with FluxComplianceState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Compliant**: Compliant \
 * **Non-Compliant**: Non-Compliant \
 * **Pending**: Pending \
 * **Suspended**: Suspended \
 * **Unknown**: Unknown
 */
export type FluxComplianceState = string;

/** Known values of {@link OperatorType} that the service accepts. */
export enum KnownOperatorType {
  /** Flux */
  Flux = "Flux",
}

/**
 * Defines values for OperatorType. \
 * {@link KnownOperatorType} can be used interchangeably with OperatorType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Flux**
 */
export type OperatorType = string;

/** Known values of {@link OperatorScopeType} that the service accepts. */
export enum KnownOperatorScopeType {
  /** Cluster */
  Cluster = "cluster",
  /** NameSpace */
  NameSpace = "namespace",
}

/**
 * Defines values for OperatorScopeType. \
 * {@link KnownOperatorScopeType} can be used interchangeably with OperatorScopeType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **cluster** \
 * **namespace**
 */
export type OperatorScopeType = string;

/** Known values of {@link ProvisioningStateType} that the service accepts. */
export enum KnownProvisioningStateType {
  /** Accepted */
  Accepted = "Accepted",
  /** Deleting */
  Deleting = "Deleting",
  /** Running */
  Running = "Running",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Canceled */
  Canceled = "Canceled",
}

/**
 * Defines values for ProvisioningStateType. \
 * {@link KnownProvisioningStateType} can be used interchangeably with ProvisioningStateType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Deleting** \
 * **Running** \
 * **Succeeded** \
 * **Failed** \
 * **Canceled**
 */
export type ProvisioningStateType = string;

/** Known values of {@link ComplianceStateType} that the service accepts. */
export enum KnownComplianceStateType {
  /** Pending */
  Pending = "Pending",
  /** Compliant */
  Compliant = "Compliant",
  /** Noncompliant */
  Noncompliant = "Noncompliant",
  /** Installed */
  Installed = "Installed",
  /** Failed */
  Failed = "Failed",
}

/**
 * Defines values for ComplianceStateType. \
 * {@link KnownComplianceStateType} can be used interchangeably with ComplianceStateType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Compliant** \
 * **Noncompliant** \
 * **Installed** \
 * **Failed**
 */
export type ComplianceStateType = string;

/** Known values of {@link MessageLevelType} that the service accepts. */
export enum KnownMessageLevelType {
  /** Message level : Error */
  Error = "Error",
  /** Message level : Warning */
  Warning = "Warning",
  /** Message level : Information */
  Information = "Information",
}

/**
 * Defines values for MessageLevelType. \
 * {@link KnownMessageLevelType} can be used interchangeably with MessageLevelType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Error**: Message level : Error \
 * **Warning**: Message level : Warning \
 * **Information**: Message level : Information
 */
export type MessageLevelType = string;

/** Known values of {@link KustomizationValidationType} that the service accepts. */
export enum KnownKustomizationValidationType {
  /** No validation */
  None = "none",
  /** client side validation */
  Client = "client",
  /** server side validation */
  Server = "server",
}

/**
 * Defines values for KustomizationValidationType. \
 * {@link KnownKustomizationValidationType} can be used interchangeably with KustomizationValidationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **none**: No validation \
 * **client**: client side validation \
 * **server**: server side validation
 */
export type KustomizationValidationType = string;

/** Known values of {@link Versions} that the service accepts. */
export enum KnownVersions {
  /** The 2024-06-01 API version. */
  V20240601Preview = "2024-06-01-preview",
}

/**
 * Defines values for Versions. \
 * {@link KnownVersions} can be used interchangeably with Versions,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **2024-06-01-preview**: The 2024-06-01 API version.
 */
export type Versions = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface ExtensionsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ExtensionsListByResourceGroupResponse = ExtensionListResult;

/** Optional parameters. */
export interface ExtensionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ExtensionsGetResponse = Extension;

/** Optional parameters. */
export interface ExtensionsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type ExtensionsCreateResponse = Extension;

/** Optional parameters. */
export interface ExtensionsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type ExtensionsUpdateResponse = Extension;

/** Optional parameters. */
export interface ExtensionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delete the extension resource in Azure - not the normal asynchronous delete. */
  forceDelete?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ExtensionsDeleteResponse = ExtensionsDeleteHeaders;

/** Optional parameters. */
export interface ExtensionsOperationStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the operationStatus operation. */
export type ExtensionsOperationStatusResponse =
  Paths1B0Hq6PSubscriptionsSubscriptionidResourcegroupsResourcegroupnameProviderClusterrpClusterresourcenameClusternameProvidersMicrosoftKubernetesconfigurationExtensionsExtensionnameOperationsOperationidGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface ExtensionsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type ExtensionsListByResourceGroupNextResponse = ExtensionListResult;

/** Optional parameters. */
export interface FluxConfigurationsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type FluxConfigurationsListByResourceGroupResponse =
  FluxConfigurationListResult;

/** Optional parameters. */
export interface FluxConfigurationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type FluxConfigurationsGetResponse = FluxConfiguration;

/** Optional parameters. */
export interface FluxConfigurationsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type FluxConfigurationsCreateResponse = FluxConfiguration;

/** Optional parameters. */
export interface FluxConfigurationsUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the update operation. */
export type FluxConfigurationsUpdateResponse = FluxConfiguration;

/** Optional parameters. */
export interface FluxConfigurationsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delete the extension resource in Azure - not the normal asynchronous delete. */
  forceDelete?: boolean;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type FluxConfigurationsDeleteResponse = FluxConfigurationsDeleteHeaders;

/** Optional parameters. */
export interface FluxConfigurationsOperationStatusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the operationStatus operation. */
export type FluxConfigurationsOperationStatusResponse =
  PathsT3WamfSubscriptionsSubscriptionidResourcegroupsResourcegroupnameProviderClusterrpClusterresourcenameClusternameProvidersMicrosoftKubernetesconfigurationFluxconfigurationsFluxconfigurationnameOperationsOperationidGetResponses200ContentApplicationJsonSchema;

/** Optional parameters. */
export interface FluxConfigurationsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type FluxConfigurationsListByResourceGroupNextResponse =
  FluxConfigurationListResult;

/** Optional parameters. */
export interface OperationStatusListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type OperationStatusListByResourceGroupResponse =
  OperationModelListResult;

/** Optional parameters. */
export interface OperationStatusListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type OperationStatusListByResourceGroupNextResponse =
  OperationModelListResult;

/** Optional parameters. */
export interface SourceControlConfigurationsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type SourceControlConfigurationsListByResourceGroupResponse =
  SourceControlConfigurationListResult;

/** Optional parameters. */
export interface SourceControlConfigurationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SourceControlConfigurationsGetResponse = SourceControlConfiguration;

/** Optional parameters. */
export interface SourceControlConfigurationsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type SourceControlConfigurationsCreateOrUpdateResponse =
  SourceControlConfiguration;

/** Optional parameters. */
export interface SourceControlConfigurationsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type SourceControlConfigurationsDeleteResponse =
  SourceControlConfigurationsDeleteHeaders;

/** Optional parameters. */
export interface SourceControlConfigurationsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type SourceControlConfigurationsListByResourceGroupNextResponse =
  SourceControlConfigurationListResult;

/** Optional parameters. */
export interface SourceControlConfigurationClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
