/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Properties for Helm operator. */
export interface HelmOperatorProperties {
  /** Version of the operator Helm chart. */
  chartVersion?: string;
  /** Values override for the operator Helm chart. */
  chartValues?: string;
}

/** Compliance Status details */
export interface ComplianceStatus {
  /**
   * The compliance state of the configuration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly complianceState?: ComplianceStateType;
  /** Datetime the configuration was last applied. */
  lastConfigApplied?: Date;
  /** Message from when the configuration was applied. */
  message?: string;
  /** Level of the message. */
  messageLevel?: MessageLevelType;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** Result of the request to list Source Control Configurations.  It contains a list of SourceControlConfiguration objects and a URL link to get the next set of results. */
export interface SourceControlConfigurationList {
  /**
   * List of Source Control Configurations within a Kubernetes cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SourceControlConfiguration[];
  /**
   * URL to get the next set of configuration objects, if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** The SourceControl Configuration object returned in Get & Put response. */
export interface SourceControlConfiguration extends ProxyResource {
  /**
   * Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Url of the SourceControl Repository. */
  repositoryUrl?: string;
  /** The namespace to which this operator is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only. */
  operatorNamespace?: string;
  /** Instance name of the operator - identifying the specific configuration. */
  operatorInstanceName?: string;
  /** Type of the operator */
  operatorType?: OperatorType;
  /** Any Parameters for the Operator instance in string format. */
  operatorParams?: string;
  /** Name-value pairs of protected configuration settings for the configuration */
  configurationProtectedSettings?: { [propertyName: string]: string };
  /** Scope at which the operator will be installed. */
  operatorScope?: OperatorScopeType;
  /**
   * Public Key associated with this SourceControl configuration (either generated within the cluster or provided by the user).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly repositoryPublicKey?: string;
  /** Base64-encoded known_hosts contents containing public SSH keys required to access private Git instances */
  sshKnownHostsContents?: string;
  /** Option to enable Helm Operator for this git configuration. */
  enableHelmOperator?: boolean;
  /** Properties for Helm operator. */
  helmOperatorProperties?: HelmOperatorProperties;
  /**
   * The provisioning state of the resource provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningStateType;
  /**
   * Compliance Status of the Configuration
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly complianceStatus?: ComplianceStatus;
}

/** Known values of {@link OperatorType} that the service accepts. */
export enum KnownOperatorType {
  /** Flux */
  Flux = "Flux",
}

/**
 * Defines values for OperatorType. \
 * {@link KnownOperatorType} can be used interchangeably with OperatorType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Flux**
 */
export type OperatorType = string;

/** Known values of {@link OperatorScopeType} that the service accepts. */
export enum KnownOperatorScopeType {
  /** Cluster */
  Cluster = "cluster",
  /** Namespace */
  Namespace = "namespace",
}

/**
 * Defines values for OperatorScopeType. \
 * {@link KnownOperatorScopeType} can be used interchangeably with OperatorScopeType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **cluster** \
 * **namespace**
 */
export type OperatorScopeType = string;

/** Known values of {@link ProvisioningStateType} that the service accepts. */
export enum KnownProvisioningStateType {
  /** Accepted */
  Accepted = "Accepted",
  /** Deleting */
  Deleting = "Deleting",
  /** Running */
  Running = "Running",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
}

/**
 * Defines values for ProvisioningStateType. \
 * {@link KnownProvisioningStateType} can be used interchangeably with ProvisioningStateType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Deleting** \
 * **Running** \
 * **Succeeded** \
 * **Failed**
 */
export type ProvisioningStateType = string;

/** Known values of {@link ComplianceStateType} that the service accepts. */
export enum KnownComplianceStateType {
  /** Pending */
  Pending = "Pending",
  /** Compliant */
  Compliant = "Compliant",
  /** Noncompliant */
  Noncompliant = "Noncompliant",
  /** Installed */
  Installed = "Installed",
  /** Failed */
  Failed = "Failed",
}

/**
 * Defines values for ComplianceStateType. \
 * {@link KnownComplianceStateType} can be used interchangeably with ComplianceStateType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Compliant** \
 * **Noncompliant** \
 * **Installed** \
 * **Failed**
 */
export type ComplianceStateType = string;

/** Known values of {@link MessageLevelType} that the service accepts. */
export enum KnownMessageLevelType {
  /** Error */
  Error = "Error",
  /** Warning */
  Warning = "Warning",
  /** Information */
  Information = "Information",
}

/**
 * Defines values for MessageLevelType. \
 * {@link KnownMessageLevelType} can be used interchangeably with MessageLevelType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Error** \
 * **Warning** \
 * **Information**
 */
export type MessageLevelType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Optional parameters. */
export interface SourceControlConfigurationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type SourceControlConfigurationsGetResponse = SourceControlConfiguration;

/** Optional parameters. */
export interface SourceControlConfigurationsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type SourceControlConfigurationsCreateOrUpdateResponse =
  SourceControlConfiguration;

/** Optional parameters. */
export interface SourceControlConfigurationsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SourceControlConfigurationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SourceControlConfigurationsListResponse =
  SourceControlConfigurationList;

/** Optional parameters. */
export interface SourceControlConfigurationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type SourceControlConfigurationsListNextResponse =
  SourceControlConfigurationList;

/** Optional parameters. */
export interface SourceControlConfigurationClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
