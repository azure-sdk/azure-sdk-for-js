/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  AzureExtendedZone,
  AzureExtendedZonesListBySubscriptionOptionalParams,
  AzureExtendedZonesGetOptionalParams,
  AzureExtendedZonesGetResponse,
  AzureExtendedZonesRegisterOptionalParams,
  AzureExtendedZonesRegisterResponse,
  AzureExtendedZonesUnregisterOptionalParams,
  AzureExtendedZonesUnregisterResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AzureExtendedZones. */
export interface AzureExtendedZones {
  /**
   * Lists the Azure Extended Zones for a subscription
   * @param options The options parameters.
   */
  listBySubscription(
    options?: AzureExtendedZonesListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<AzureExtendedZone>;
  /**
   * Get an Azure Extended Zone for a subscription
   * @param azureExtendedZoneName The name of the AzureExtendedZone
   * @param options The options parameters.
   */
  get(
    azureExtendedZoneName: string,
    options?: AzureExtendedZonesGetOptionalParams,
  ): Promise<AzureExtendedZonesGetResponse>;
  /**
   * Registers a subscription for an Azure Extended Zone
   * @param azureExtendedZoneName The name of the AzureExtendedZone
   * @param options The options parameters.
   */
  register(
    azureExtendedZoneName: string,
    options?: AzureExtendedZonesRegisterOptionalParams,
  ): Promise<AzureExtendedZonesRegisterResponse>;
  /**
   * Unregisters a subscription for an Azure Extended Zone
   * @param azureExtendedZoneName The name of the AzureExtendedZone
   * @param options The options parameters.
   */
  unregister(
    azureExtendedZoneName: string,
    options?: AzureExtendedZonesUnregisterOptionalParams,
  ): Promise<AzureExtendedZonesUnregisterResponse>;
}
