/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DeidService,
  DeidServicesListBySubscriptionOptionalParams,
  DeidServicesListByResourceGroupOptionalParams,
  DeidServicesGetOptionalParams,
  DeidServicesGetResponse,
  DeidServicesCreateOptionalParams,
  DeidServicesCreateResponse,
  DeidUpdate,
  DeidServicesUpdateOptionalParams,
  DeidServicesUpdateResponse,
  DeidServicesDeleteOptionalParams,
  DeidServicesDeleteResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DeidServices. */
export interface DeidServices {
  /**
   * List DeidService resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: DeidServicesListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<DeidService>;
  /**
   * List DeidService resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: DeidServicesListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<DeidService>;
  /**
   * Get a DeidService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param deidServiceName The name of the deid service
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    deidServiceName: string,
    options?: DeidServicesGetOptionalParams,
  ): Promise<DeidServicesGetResponse>;
  /**
   * Create a DeidService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param deidServiceName The name of the deid service
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    deidServiceName: string,
    resource: DeidService,
    options?: DeidServicesCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DeidServicesCreateResponse>,
      DeidServicesCreateResponse
    >
  >;
  /**
   * Create a DeidService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param deidServiceName The name of the deid service
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    deidServiceName: string,
    resource: DeidService,
    options?: DeidServicesCreateOptionalParams,
  ): Promise<DeidServicesCreateResponse>;
  /**
   * Update a DeidService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param deidServiceName The name of the deid service
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    deidServiceName: string,
    properties: DeidUpdate,
    options?: DeidServicesUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DeidServicesUpdateResponse>,
      DeidServicesUpdateResponse
    >
  >;
  /**
   * Update a DeidService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param deidServiceName The name of the deid service
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    deidServiceName: string,
    properties: DeidUpdate,
    options?: DeidServicesUpdateOptionalParams,
  ): Promise<DeidServicesUpdateResponse>;
  /**
   * Delete a DeidService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param deidServiceName The name of the deid service
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    deidServiceName: string,
    options?: DeidServicesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DeidServicesDeleteResponse>,
      DeidServicesDeleteResponse
    >
  >;
  /**
   * Delete a DeidService
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param deidServiceName The name of the deid service
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    deidServiceName: string,
    options?: DeidServicesDeleteOptionalParams,
  ): Promise<DeidServicesDeleteResponse>;
}
