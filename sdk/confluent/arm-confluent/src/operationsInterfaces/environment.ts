/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  EnvironmentCreateOrUpdateOptionalParams,
  EnvironmentCreateOrUpdateResponse,
  EnvironmentDeleteOptionalParams,
  EnvironmentDeleteResponse,
} from "../models";

/** Interface representing a Environment. */
export interface Environment {
  /**
   * Create confluent environment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Organization resource name
   * @param environmentId Confluent environment id
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    organizationName: string,
    environmentId: string,
    options?: EnvironmentCreateOrUpdateOptionalParams,
  ): Promise<EnvironmentCreateOrUpdateResponse>;
  /**
   * Delete confluent environment by id
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Organization resource name
   * @param environmentId Confluent environment id
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    organizationName: string,
    environmentId: string,
    options?: EnvironmentDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<EnvironmentDeleteResponse>,
      EnvironmentDeleteResponse
    >
  >;
  /**
   * Delete confluent environment by id
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Organization resource name
   * @param environmentId Confluent environment id
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    organizationName: string,
    environmentId: string,
    options?: EnvironmentDeleteOptionalParams,
  ): Promise<EnvironmentDeleteResponse>;
}
