/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  ConfluentAgreementResource as ConfluentAgreementResourceMapper,
  OrganizationResource as OrganizationResourceMapper,
  OrganizationResourceUpdate as OrganizationResourceUpdateMapper,
  ListAccessRequestModel as ListAccessRequestModelMapper,
  CreateAPIKeyModel as CreateAPIKeyModelMapper,
  AccessInviteUserAccountModel as AccessInviteUserAccountModelMapper,
  AccessCreateRoleBindingRequestModel as AccessCreateRoleBindingRequestModelMapper,
  SCEnvironmentRecord as SCEnvironmentRecordMapper,
  SCClusterRecord as SCClusterRecordMapper,
  ConnectorResource as ConnectorResourceMapper,
  TopicRecord as TopicRecordMapper,
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2024-07-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const body: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: ConfluentAgreementResourceMapper,
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const organizationName: OperationURLParameter = {
  parameterPath: "organizationName",
  mapper: {
    serializedName: "organizationName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const body1: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: OrganizationResourceMapper,
};

export const body2: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: OrganizationResourceUpdateMapper,
};

export const resourceGroupName1: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const pageSize: OperationQueryParameter = {
  parameterPath: ["options", "pageSize"],
  mapper: {
    serializedName: "pageSize",
    type: {
      name: "Number",
    },
  },
};

export const pageToken: OperationQueryParameter = {
  parameterPath: ["options", "pageToken"],
  mapper: {
    serializedName: "pageToken",
    type: {
      name: "String",
    },
  },
};

export const environmentId: OperationURLParameter = {
  parameterPath: "environmentId",
  mapper: {
    serializedName: "environmentId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const body3: OperationParameter = {
  parameterPath: "body",
  mapper: ListAccessRequestModelMapper,
};

export const body4: OperationParameter = {
  parameterPath: "body",
  mapper: CreateAPIKeyModelMapper,
};

export const clusterId: OperationURLParameter = {
  parameterPath: "clusterId",
  mapper: {
    serializedName: "clusterId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const apiKeyId: OperationURLParameter = {
  parameterPath: "apiKeyId",
  mapper: {
    serializedName: "apiKeyId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const body5: OperationParameter = {
  parameterPath: "body",
  mapper: OrganizationResourceMapper,
};

export const body6: OperationParameter = {
  parameterPath: "body",
  mapper: AccessInviteUserAccountModelMapper,
};

export const body7: OperationParameter = {
  parameterPath: "body",
  mapper: AccessCreateRoleBindingRequestModelMapper,
};

export const roleBindingId: OperationURLParameter = {
  parameterPath: "roleBindingId",
  mapper: {
    serializedName: "roleBindingId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const body8: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: SCEnvironmentRecordMapper,
};

export const body9: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: SCClusterRecordMapper,
};

export const connectorName: OperationURLParameter = {
  parameterPath: "connectorName",
  mapper: {
    serializedName: "connectorName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const body10: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: ConnectorResourceMapper,
};

export const topicName: OperationURLParameter = {
  parameterPath: "topicName",
  mapper: {
    serializedName: "topicName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const body11: OperationParameter = {
  parameterPath: ["options", "body"],
  mapper: TopicRecordMapper,
};
