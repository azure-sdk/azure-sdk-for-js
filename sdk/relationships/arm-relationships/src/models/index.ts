/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** dependencyOf relationship properties. */
export interface DependencyOfRelationshipProperties {
  /**
   * The relationship source resource id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceId: string;
  /** The relationship target resource id. */
  targetId: string;
  /** The relationship target tenant id. */
  targetTenant?: string;
  /**
   * Information about the origin of the relationship.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly originInformation: RelationshipOriginInformation;
  /**
   * Metadata about the relationship.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly metadata: RelationshipMetadata;
  /**
   * The provisioning state of the relationship.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Provides information about the origin of a relationship. */
export interface RelationshipOriginInformation {
  /**
   * Identifies the origin type of the relationship.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly relationshipOriginType: RelationshipOrigins;
  /**
   * The name of the discovery engine that created the relationship.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly discoveryEngine?: string;
}

/** Provides information about the relationship properties. */
export interface RelationshipMetadata {
  /**
   * The type of the relationship source resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceType: string;
  /**
   * The type of the relationship target resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly targetType: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** ServiceGroupMember relationship properties. */
export interface ServiceGroupMemberRelationshipProperties {
  /**
   * The relationship source resource id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sourceId: string;
  /** The relationship target resource id. */
  targetId: string;
  /** The relationship target tenant id. */
  targetTenant?: string;
  /**
   * Information about the origin of the relationship.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly originInformation: RelationshipOriginInformation;
  /**
   * Metadata about the relationship.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly metadata: RelationshipMetadata;
  /**
   * The provisioning state of the relationship.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Defines a dependencyOf relationship resource. */
export interface DependencyOfRelationship extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: DependencyOfRelationshipProperties;
}

/** Defines a ServiceGroupMember relationship resource. */
export interface ServiceGroupMemberRelationship extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: ServiceGroupMemberRelationshipProperties;
}

/** Defines headers for DependencyOfRelationships_createOrUpdate operation. */
export interface DependencyOfRelationshipsCreateOrUpdateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for DependencyOfRelationships_delete operation. */
export interface DependencyOfRelationshipsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for ServiceGroupMemberRelationships_createOrUpdate operation. */
export interface ServiceGroupMemberRelationshipsCreateOrUpdateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for ServiceGroupMemberRelationships_delete operation. */
export interface ServiceGroupMemberRelationshipsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Known values of {@link RelationshipOrigins} that the service accepts. */
export enum KnownRelationshipOrigins {
  /** The relationship was explicitly created by a system. */
  ServiceExplicitlyCreated = "ServiceExplicitlyCreated",
  /** The relationship was discovered by a system-created rule. */
  SystemDiscoveredByRule = "SystemDiscoveredByRule",
  /** The relationship was explicitly created by a user. */
  UserExplicitlyCreated = "UserExplicitlyCreated",
  /** The relationship was discovered by a user-created rule. */
  UserDiscoveredByRule = "UserDiscoveredByRule",
}

/**
 * Defines values for RelationshipOrigins. \
 * {@link KnownRelationshipOrigins} can be used interchangeably with RelationshipOrigins,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ServiceExplicitlyCreated**: The relationship was explicitly created by a system. \
 * **SystemDiscoveredByRule**: The relationship was discovered by a system-created rule. \
 * **UserExplicitlyCreated**: The relationship was explicitly created by a user. \
 * **UserDiscoveredByRule**: The relationship was discovered by a user-created rule.
 */
export type RelationshipOrigins = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** The resource is being provisioned. */
  Provisioning = "Provisioning",
  /** The resource is being updated. */
  Updating = "Updating",
  /** The resource is being deleted. */
  Deleting = "Deleting",
  /** The resource provisioning request has been accepted. */
  Accepted = "Accepted",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Provisioning**: The resource is being provisioned. \
 * **Updating**: The resource is being updated. \
 * **Deleting**: The resource is being deleted. \
 * **Accepted**: The resource provisioning request has been accepted.
 */
export type ProvisioningState = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Optional parameters. */
export interface DependencyOfRelationshipsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DependencyOfRelationshipsGetResponse = DependencyOfRelationship;

/** Optional parameters. */
export interface DependencyOfRelationshipsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type DependencyOfRelationshipsCreateOrUpdateResponse =
  DependencyOfRelationship;

/** Optional parameters. */
export interface DependencyOfRelationshipsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type DependencyOfRelationshipsDeleteResponse =
  DependencyOfRelationshipsDeleteHeaders;

/** Optional parameters. */
export interface ServiceGroupMemberRelationshipsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ServiceGroupMemberRelationshipsGetResponse =
  ServiceGroupMemberRelationship;

/** Optional parameters. */
export interface ServiceGroupMemberRelationshipsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ServiceGroupMemberRelationshipsCreateOrUpdateResponse =
  ServiceGroupMemberRelationship;

/** Optional parameters. */
export interface ServiceGroupMemberRelationshipsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type ServiceGroupMemberRelationshipsDeleteResponse =
  ServiceGroupMemberRelationshipsDeleteHeaders;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface MicrosoftRelationshipsManagementServiceOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
