/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const OnlineExperimentWorkspaceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OnlineExperimentWorkspaceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OnlineExperimentWorkspace",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OnlineExperimentWorkspaceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OnlineExperimentWorkspaceProperties",
    modelProperties: {
      workspaceId: {
        serializedName: "workspaceId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      logAnalyticsWorkspaceResourceId: {
        serializedName: "logAnalyticsWorkspaceResourceId",
        required: true,
        type: {
          name: "String",
        },
      },
      logsExporterStorageAccountResourceId: {
        serializedName: "logsExporterStorageAccountResourceId",
        required: true,
        type: {
          name: "String",
        },
      },
      appConfigurationResourceId: {
        serializedName: "appConfigurationResourceId",
        required: true,
        type: {
          name: "String",
        },
      },
      encryption: {
        serializedName: "encryption",
        type: {
          name: "Composite",
          className: "ResourceEncryptionConfiguration",
        },
      },
      endpoint: {
        serializedName: "endpoint",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceEncryptionConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceEncryptionConfiguration",
    modelProperties: {
      customerManagedKeyEncryption: {
        serializedName: "customerManagedKeyEncryption",
        type: {
          name: "Composite",
          className: "CustomerManagedKeyEncryption",
        },
      },
    },
  },
};

export const CustomerManagedKeyEncryption: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomerManagedKeyEncryption",
    modelProperties: {
      keyEncryptionKeyIdentity: {
        serializedName: "keyEncryptionKeyIdentity",
        type: {
          name: "Composite",
          className: "KeyEncryptionKeyIdentity",
        },
      },
      keyEncryptionKeyUrl: {
        serializedName: "keyEncryptionKeyUrl",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KeyEncryptionKeyIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyEncryptionKeyIdentity",
    modelProperties: {
      identityType: {
        serializedName: "identityType",
        type: {
          name: "String",
        },
      },
      userAssignedIdentityResourceId: {
        serializedName: "userAssignedIdentityResourceId",
        type: {
          name: "String",
        },
      },
      federatedClientId: {
        serializedName: "federatedClientId",
        type: {
          name: "Uuid",
        },
      },
      delegatedIdentityClientId: {
        serializedName: "delegatedIdentityClientId",
        type: {
          name: "Uuid",
        },
      },
    },
  },
};

export const ManagedServiceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedServiceIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" },
          },
        },
      },
    },
  },
};

export const UserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
    },
  },
};

export const Sku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "Enum",
          allowedValues: ["Free", "Basic", "Standard", "Premium"],
        },
      },
      size: {
        serializedName: "size",
        type: {
          name: "String",
        },
      },
      family: {
        serializedName: "family",
        type: {
          name: "String",
        },
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const OnlineExperimentWorkspacePropertiesUpdate: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "OnlineExperimentWorkspacePropertiesUpdate",
      modelProperties: {
        logAnalyticsWorkspaceResourceId: {
          serializedName: "logAnalyticsWorkspaceResourceId",
          type: {
            name: "String",
          },
        },
        logsExporterStorageAccountResourceId: {
          serializedName: "logsExporterStorageAccountResourceId",
          type: {
            name: "String",
          },
        },
        encryption: {
          serializedName: "encryption",
          type: {
            name: "Composite",
            className: "ResourceEncryptionConfiguration",
          },
        },
      },
    },
  };

export const AzureResourceManagerCommonTypesManagedServiceIdentityUpdate: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AzureResourceManagerCommonTypesManagedServiceIdentityUpdate",
      modelProperties: {
        type: {
          serializedName: "type",
          type: {
            name: "String",
          },
        },
        userAssignedIdentities: {
          serializedName: "userAssignedIdentities",
          type: {
            name: "Dictionary",
            value: {
              type: {
                name: "Composite",
                className:
                  "Components19Kgb1NSchemasAzureResourcemanagerCommontypesManagedserviceidentityupdatePropertiesUserassignedidentitiesAdditionalproperties",
              },
            },
          },
        },
      },
    },
  };

export const AzureResourceManagerCommonTypesSkuUpdate: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AzureResourceManagerCommonTypesSkuUpdate",
      modelProperties: {
        name: {
          serializedName: "name",
          type: {
            name: "String",
          },
        },
        tier: {
          serializedName: "tier",
          type: {
            name: "Enum",
            allowedValues: ["Free", "Basic", "Standard", "Premium"],
          },
        },
        size: {
          serializedName: "size",
          type: {
            name: "String",
          },
        },
        family: {
          serializedName: "family",
          type: {
            name: "String",
          },
        },
        capacity: {
          serializedName: "capacity",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const Components19Kgb1NSchemasAzureResourcemanagerCommontypesManagedserviceidentityupdatePropertiesUserassignedidentitiesAdditionalproperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className:
        "Components19Kgb1NSchemasAzureResourcemanagerCommontypesManagedserviceidentityupdatePropertiesUserassignedidentitiesAdditionalproperties",
      modelProperties: {
        ...UserAssignedIdentity.type.modelProperties,
      },
    },
  };

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureResourceManagerCommonTypesTrackedResourceUpdate: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AzureResourceManagerCommonTypesTrackedResourceUpdate",
      modelProperties: {
        ...Resource.type.modelProperties,
        tags: {
          serializedName: "tags",
          type: {
            name: "Dictionary",
            value: { type: { name: "String" } },
          },
        },
      },
    },
  };

export const OnlineExperimentWorkspace: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OnlineExperimentWorkspace",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "OnlineExperimentWorkspaceProperties",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku",
        },
      },
    },
  },
};

export const OnlineExperimentWorkspaceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OnlineExperimentWorkspaceUpdate",
    modelProperties: {
      ...AzureResourceManagerCommonTypesTrackedResourceUpdate.type
        .modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "OnlineExperimentWorkspacePropertiesUpdate",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className:
            "AzureResourceManagerCommonTypesManagedServiceIdentityUpdate",
        },
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "AzureResourceManagerCommonTypesSkuUpdate",
        },
      },
    },
  },
};

export const OnlineExperimentWorkspacesCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "OnlineExperimentWorkspacesCreateOrUpdateHeaders",
      modelProperties: {
        azureAsyncOperation: {
          serializedName: "azure-asyncoperation",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const OnlineExperimentWorkspacesUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "OnlineExperimentWorkspacesUpdateHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const OnlineExperimentWorkspacesDeleteHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "OnlineExperimentWorkspacesDeleteHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };
