/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  LandingZoneAccountResource,
  LandingZoneAccountOperationsListBySubscriptionOptionalParams,
  LandingZoneAccountOperationsListByResourceGroupOptionalParams,
  LandingZoneAccountOperationsGetOptionalParams,
  LandingZoneAccountOperationsGetResponse,
  LandingZoneAccountOperationsCreateOptionalParams,
  LandingZoneAccountOperationsCreateResponse,
  LandingZoneAccountResourceUpdate,
  LandingZoneAccountOperationsUpdateOptionalParams,
  LandingZoneAccountOperationsUpdateResponse,
  LandingZoneAccountOperationsDeleteOptionalParams,
  LandingZoneAccountOperationsDeleteResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a LandingZoneAccountOperations. */
export interface LandingZoneAccountOperations {
  /**
   * List the landing zone accounts within a subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: LandingZoneAccountOperationsListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<LandingZoneAccountResource>;
  /**
   * List the landing zone accounts within a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: LandingZoneAccountOperationsListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<LandingZoneAccountResource>;
  /**
   * Get a landing zone account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param landingZoneAccountName The landing zone account.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    landingZoneAccountName: string,
    options?: LandingZoneAccountOperationsGetOptionalParams,
  ): Promise<LandingZoneAccountOperationsGetResponse>;
  /**
   * Create a landing zone account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param landingZoneAccountName The landing zone account.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    landingZoneAccountName: string,
    resource: LandingZoneAccountResource,
    options?: LandingZoneAccountOperationsCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LandingZoneAccountOperationsCreateResponse>,
      LandingZoneAccountOperationsCreateResponse
    >
  >;
  /**
   * Create a landing zone account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param landingZoneAccountName The landing zone account.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    landingZoneAccountName: string,
    resource: LandingZoneAccountResource,
    options?: LandingZoneAccountOperationsCreateOptionalParams,
  ): Promise<LandingZoneAccountOperationsCreateResponse>;
  /**
   * Update a landing zone account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param landingZoneAccountName The landing zone account.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    landingZoneAccountName: string,
    properties: LandingZoneAccountResourceUpdate,
    options?: LandingZoneAccountOperationsUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LandingZoneAccountOperationsUpdateResponse>,
      LandingZoneAccountOperationsUpdateResponse
    >
  >;
  /**
   * Update a landing zone account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param landingZoneAccountName The landing zone account.
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    landingZoneAccountName: string,
    properties: LandingZoneAccountResourceUpdate,
    options?: LandingZoneAccountOperationsUpdateOptionalParams,
  ): Promise<LandingZoneAccountOperationsUpdateResponse>;
  /**
   * Deletes a landing zone account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param landingZoneAccountName The landing zone account.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    landingZoneAccountName: string,
    options?: LandingZoneAccountOperationsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LandingZoneAccountOperationsDeleteResponse>,
      LandingZoneAccountOperationsDeleteResponse
    >
  >;
  /**
   * Deletes a landing zone account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param landingZoneAccountName The landing zone account.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    landingZoneAccountName: string,
    options?: LandingZoneAccountOperationsDeleteOptionalParams,
  ): Promise<LandingZoneAccountOperationsDeleteResponse>;
}
