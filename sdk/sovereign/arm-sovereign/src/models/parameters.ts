/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  LandingZoneAccountResource as LandingZoneAccountResourceMapper,
  LandingZoneAccountResourceUpdate as LandingZoneAccountResourceUpdateMapper,
  LandingZoneConfigurationResource as LandingZoneConfigurationResourceMapper,
  LandingZoneConfigurationResourceUpdate as LandingZoneConfigurationResourceUpdateMapper,
  CreateLandingZoneConfigurationCopyRequest as CreateLandingZoneConfigurationCopyRequestMapper,
  GenerateLandingZoneRequest as GenerateLandingZoneRequestMapper,
  UpdateAuthoringStatusRequest as UpdateAuthoringStatusRequestMapper,
  LandingZoneRegistrationResource as LandingZoneRegistrationResourceMapper,
  LandingZoneRegistrationResourceUpdate as LandingZoneRegistrationResourceUpdateMapper,
} from "../models/mappers.js";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2025-02-27-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "Uuid",
    },
  },
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const landingZoneAccountName: OperationURLParameter = {
  parameterPath: "landingZoneAccountName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[a-zA-Z0-9-]{3,64}$"),
    },
    serializedName: "landingZoneAccountName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const resource: OperationParameter = {
  parameterPath: "resource",
  mapper: LandingZoneAccountResourceMapper,
};

export const properties: OperationParameter = {
  parameterPath: "properties",
  mapper: LandingZoneAccountResourceUpdateMapper,
};

export const landingZoneConfigurationName: OperationURLParameter = {
  parameterPath: "landingZoneConfigurationName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[a-zA-Z0-9-]{3,64}$"),
    },
    serializedName: "landingZoneConfigurationName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource1: OperationParameter = {
  parameterPath: "resource",
  mapper: LandingZoneConfigurationResourceMapper,
};

export const properties1: OperationParameter = {
  parameterPath: "properties",
  mapper: LandingZoneConfigurationResourceUpdateMapper,
};

export const body: OperationParameter = {
  parameterPath: "body",
  mapper: CreateLandingZoneConfigurationCopyRequestMapper,
};

export const body1: OperationParameter = {
  parameterPath: "body",
  mapper: GenerateLandingZoneRequestMapper,
};

export const body2: OperationParameter = {
  parameterPath: "body",
  mapper: UpdateAuthoringStatusRequestMapper,
};

export const landingZoneRegistrationName: OperationURLParameter = {
  parameterPath: "landingZoneRegistrationName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[a-zA-Z0-9-]{3,64}$"),
    },
    serializedName: "landingZoneRegistrationName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource2: OperationParameter = {
  parameterPath: "resource",
  mapper: LandingZoneRegistrationResourceMapper,
};

export const properties2: OperationParameter = {
  parameterPath: "properties",
  mapper: LandingZoneRegistrationResourceUpdateMapper,
};
