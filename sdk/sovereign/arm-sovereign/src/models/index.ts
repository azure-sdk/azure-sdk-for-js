/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The response of a LandingZoneAccountResource list operation. */
export interface LandingZoneAccountResourceListResult {
  /** The LandingZoneAccountResource items on this page */
  value: LandingZoneAccountResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The properties of landing zone account resource type. */
export interface LandingZoneAccountResourceProperties {
  /**
   * The state that reflects the current stage in the creation, updating, or deletion process of the landing zone account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The storage account that will host the generated infrastructure as code (IaC) for a landing zone deployment. */
  storageAccount: string;
}

/** Managed service identity (system assigned and/or user assigned identities) */
export interface ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). */
  type: ManagedServiceIdentityType;
  /** The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests. */
  userAssignedIdentities?: {
    [propertyName: string]: UserAssignedIdentity | null;
  };
}

/** User assigned identity properties */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** The response of a LandingZoneConfigurationResource list operation. */
export interface LandingZoneConfigurationResourceListResult {
  /** The LandingZoneConfigurationResource items on this page */
  value: LandingZoneConfigurationResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The properties of landing zone configuration resource type. */
export interface LandingZoneConfigurationResourceProperties {
  /**
   * The state that reflects the current stage in the creation, updating, or deletion process of the landing zone configuration.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The status that indicates the current phase of the configuration process for a deployment.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly authoringStatus?: AuthoringStatus;
  /** Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing DDoS protection plan. */
  ddosProtectionCreationOption: ResourceCreationOptions;
  /** The resource ID of the DDoS protection plan when reusing an existing one. */
  existingDdosProtectionId?: string;
  /** Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing log analytics workspace. */
  logAnalyticsWorkspaceCreationOption: ResourceCreationOptions;
  /** The resource ID of the log analytics workspace when reusing an existing one. */
  existingLogAnalyticsWorkspaceId?: string;
  /** Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name': 'a tag name', 'value': 'a tag value'} */
  tags?: Tags[];
  /** Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium' to deploy the Premium SKU. */
  firewallCreationOption: FirewallCreationOptions;
  /** The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation. */
  firewallSubnetCidrBlock?: string;
  /** The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation. */
  gatewaySubnetCidrBlock: string;
  /** Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days. */
  logRetentionInDays: number;
  /** The Virtual Network address. Specify the address using IPv4 CIDR notation. */
  hubNetworkCidrBlock: string;
  /** Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing Bastion. */
  azureBastionCreationOption: ResourceCreationOptions;
  /** The resource ID of the Bastion when reusing an existing one. */
  existingAzureBastionId?: string;
  /** The Bastion subnet address. Specify the address using IPv4 CIDR notation. */
  azureBastionSubnetCidrBlock?: string;
  /** The child management groups of 'Landing Zones' management group and their assigned policies. */
  landingZonesMgChildren?: LandingZoneManagementGroupProperties[];
  /** The assigned policies of the parent management group. */
  topLevelMgMetadata?: ManagementGroupProperties;
  /** The assigned policies of the 'Landing Zones' management group. */
  landingZonesMgMetadata?: ManagementGroupProperties;
  /** The assigned policies of the 'Platform' management group. */
  platformMgMetadata?: ManagementGroupProperties;
  /** The assigned policies of the 'Management' management group under 'Platform' management group. */
  platformManagementMgMetadata?: ManagementGroupProperties;
  /** The assigned policies of the 'Connectivity' management group under 'Platform' management group. */
  platformConnectivityMgMetadata?: ManagementGroupProperties;
  /** The assigned policies of the 'Identity' management group under 'Platform' management group. */
  platformIdentityMgMetadata?: ManagementGroupProperties;
  /** The assigned policies of the 'Decommissioned' management group and indicator to create it or not. */
  decommissionedMgMetadata?: DecommissionedManagementGroupProperties;
  /** The assigned policies of the 'Sandbox' management group and indicator to create it or not. */
  sandboxMgMetadata?: SandboxManagementGroupProperties;
  /** The managed identity to be assigned to this landing zone configuration. */
  managedIdentity: ManagedIdentityProperties;
  /** The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity', 'Identity', and 'Management' */
  platformMgChildren?: PlatformManagementGroupProperties[];
  /** The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing */
  namingConventionFormula?: string;
  /** The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls', 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}] */
  customNamingConvention?: CustomNamingConvention[];
}

/** Key-value pairs that can be assigned to this resource. */
export interface Tags {
  /** A tag name. */
  name: string;
  /** A tag value. */
  value?: string;
}

/** The 'Landing Zones' management group properties.. */
export interface LandingZoneManagementGroupProperties {
  /** Array of policy initiatives applied to the management group. */
  policyInitiativesAssignmentProperties: PolicyInitiativeAssignmentProperties[];
  /** Management group name. */
  name: string;
}

/** The properties of assigned policy initiatives. */
export interface PolicyInitiativeAssignmentProperties {
  /** The fully qualified id of the policy initiative. */
  policyInitiativeId: string;
  /** The parameters of the assigned policy initiative. */
  assignmentParameters: { [propertyName: string]: any };
}

/** The properties of policy initiatives applied to the management group. */
export interface ManagementGroupProperties {
  /** Array of policy initiatives applied to the management group. */
  policyInitiativesAssignmentProperties: PolicyInitiativeAssignmentProperties[];
}

/** The 'Decommissioned' management group properties. */
export interface DecommissionedManagementGroupProperties {
  /** Array of policy initiatives applied to the management group. */
  policyInitiativesAssignmentProperties: PolicyInitiativeAssignmentProperties[];
  /** This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false. */
  create: boolean;
}

/** The 'Sandbox' management group properties. */
export interface SandboxManagementGroupProperties {
  /** Array of policy initiatives applied to the management group. */
  policyInitiativesAssignmentProperties: PolicyInitiativeAssignmentProperties[];
  /** This parameter determines whether the 'Sandbox' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false. */
  create: boolean;
}

/** The properties of managed identity, specifically including type and resource ID. */
export interface ManagedIdentityProperties {
  /** The type of managed identity. */
  type: ManagedIdentityResourceType;
  /** The resource id of the managed identity. */
  userAssignedIdentityResourceId?: string;
}

/** The 'Platform' management group properties. */
export interface PlatformManagementGroupProperties {
  /** Array of policy initiatives applied to the management group. */
  policyInitiativesAssignmentProperties: PolicyInitiativeAssignmentProperties[];
  /** Management group name. */
  name: string;
}

/** The details for the custom naming convention override for a specific resource type. */
export interface CustomNamingConvention {
  /** The type of the resource. */
  resourceType: ResourceType;
  /** The custom naming formula for the resource type. */
  formula: string;
}

/** The response of a LandingZoneRegistrationResource list operation. */
export interface LandingZoneRegistrationResourceListResult {
  /** The LandingZoneRegistrationResource items on this page */
  value: LandingZoneRegistrationResource[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** The properties of landing zone registration resource type. */
export interface LandingZoneRegistrationResourceProperties {
  /**
   * The state that reflects the current stage in the creation, updating, or deletion process of the landing zone registration resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The resource id of the top level management group */
  existingTopLevelMgId: string;
  /** The resource id of the associated landing zone configuration. */
  existingLandingZoneConfigurationId: string;
  /** The managed identity to be assigned to this landing zone registration. */
  managedIdentity?: ManagedIdentityProperties;
}

/** The properties of landing zone account resource type. */
export interface LandingZoneAccountResourcePropertiesUpdate {
  /** The storage account that will host the generated infrastructure as code (IaC) for a landing zone deployment. */
  storageAccount?: string;
}

/** Managed service identity (system assigned and/or user assigned identities) */
export interface AzureResourceManagerCommonTypesManagedServiceIdentityUpdate {
  /** The type of managed identity assigned to this resource. */
  type?: ManagedServiceIdentityType;
  /** The identities assigned to this resource by the user. */
  userAssignedIdentities?: {
    [
      propertyName: string
    ]: Components19Kgb1NSchemasAzureResourcemanagerCommontypesManagedserviceidentityupdatePropertiesUserassignedidentitiesAdditionalproperties | null;
  };
}

/** The properties of landing zone configuration resource type. */
export interface LandingZoneConfigurationResourcePropertiesUpdate {
  /** Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing DDoS protection plan. */
  ddosProtectionCreationOption?: ResourceCreationOptions;
  /** The resource ID of the DDoS protection plan when reusing an existing one. */
  existingDdosProtectionId?: string;
  /** Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing log analytics workspace. */
  logAnalyticsWorkspaceCreationOption?: ResourceCreationOptions;
  /** The resource ID of the log analytics workspace when reusing an existing one. */
  existingLogAnalyticsWorkspaceId?: string;
  /** Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name': 'a tag name', 'value': 'a tag value'} */
  tags?: Tags[];
  /** Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium' to deploy the Premium SKU. */
  firewallCreationOption?: FirewallCreationOptions;
  /** The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation. */
  firewallSubnetCidrBlock?: string;
  /** The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation. */
  gatewaySubnetCidrBlock?: string;
  /** Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days. */
  logRetentionInDays?: number;
  /** The Virtual Network address. Specify the address using IPv4 CIDR notation. */
  hubNetworkCidrBlock?: string;
  /** Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing Bastion. */
  azureBastionCreationOption?: ResourceCreationOptions;
  /** The resource ID of the Bastion when reusing an existing one. */
  existingAzureBastionId?: string;
  /** The Bastion subnet address. Specify the address using IPv4 CIDR notation. */
  azureBastionSubnetCidrBlock?: string;
  /** The child management groups of 'Landing Zones' management group and their assigned policies. */
  landingZonesMgChildren?: LandingZoneManagementGroupProperties[];
  /** The assigned policies of the parent management group. */
  topLevelMgMetadata?: ManagementGroupPropertiesUpdate;
  /** The assigned policies of the 'Landing Zones' management group. */
  landingZonesMgMetadata?: ManagementGroupPropertiesUpdate;
  /** The assigned policies of the 'Platform' management group. */
  platformMgMetadata?: ManagementGroupPropertiesUpdate;
  /** The assigned policies of the 'Management' management group under 'Platform' management group. */
  platformManagementMgMetadata?: ManagementGroupPropertiesUpdate;
  /** The assigned policies of the 'Connectivity' management group under 'Platform' management group. */
  platformConnectivityMgMetadata?: ManagementGroupPropertiesUpdate;
  /** The assigned policies of the 'Identity' management group under 'Platform' management group. */
  platformIdentityMgMetadata?: ManagementGroupPropertiesUpdate;
  /** The assigned policies of the 'Decommissioned' management group and indicator to create it or not. */
  decommissionedMgMetadata?: DecommissionedManagementGroupPropertiesUpdate;
  /** The assigned policies of the 'Sandbox' management group and indicator to create it or not. */
  sandboxMgMetadata?: SandboxManagementGroupPropertiesUpdate;
  /** The managed identity to be assigned to this landing zone configuration. */
  managedIdentity?: ManagedIdentityPropertiesUpdate;
  /** The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity', 'Identity', and 'Management' */
  platformMgChildren?: PlatformManagementGroupProperties[];
  /** The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing */
  namingConventionFormula?: string;
  /** The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls', 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}] */
  customNamingConvention?: CustomNamingConvention[];
}

/** The properties of policy initiatives applied to the management group. */
export interface ManagementGroupPropertiesUpdate {
  /** Array of policy initiatives applied to the management group. */
  policyInitiativesAssignmentProperties?: PolicyInitiativeAssignmentProperties[];
}

/** The 'Decommissioned' management group properties. */
export interface DecommissionedManagementGroupPropertiesUpdate {
  /** Array of policy initiatives applied to the management group. */
  policyInitiativesAssignmentProperties?: PolicyInitiativeAssignmentProperties[];
  /** This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false. */
  create?: boolean;
}

/** The 'Sandbox' management group properties. */
export interface SandboxManagementGroupPropertiesUpdate {
  /** Array of policy initiatives applied to the management group. */
  policyInitiativesAssignmentProperties?: PolicyInitiativeAssignmentProperties[];
  /** This parameter determines whether the 'Sandbox' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false. */
  create?: boolean;
}

/** The properties of managed identity, specifically including type and resource ID. */
export interface ManagedIdentityPropertiesUpdate {
  /** The type of managed identity. */
  type?: ManagedIdentityResourceType;
  /** The resource id of the managed identity. */
  userAssignedIdentityResourceId?: string;
}

/** The request for create duplicate landing zone configuration. */
export interface CreateLandingZoneConfigurationCopyRequest {
  /** The name of the duplicate landing zone configuration resource. */
  name: string;
}

/** The response of the create duplicate landing zone configuration. */
export interface CreateLandingZoneConfigurationCopyResponse {
  /** The ID of the duplicate landing zone configuration resource. */
  copiedLandingZoneConfigurationId: string;
}

/** The request to generate Infrastructure as Code (IaC) for a landing zone. */
export interface GenerateLandingZoneRequest {
  /** The export options available for code generation. */
  infrastructureAsCodeOutputOptions: InfrastructureAsCodeOutputOptions;
  /** Existing 'Management' subscription ID to be linked with this deployment when reusing instead of creating a new subscription. */
  existingManagementSubscriptionId?: string;
  /** Existing 'Identity' subscription ID to be linked with this deployment when reusing instead of creating a new subscription. */
  existingIdentitySubscriptionId?: string;
  /** Existing 'Connectivity' subscription ID to be linked with this deployment when reusing instead of creating a new subscription. */
  existingConnectivitySubscriptionId?: string;
  /** The complete resource ID of the billing scope linked to the EA, MCA, or MPA account where you want to create the subscription. */
  subscriptionBillingScope?: string;
  /** Optional parent for the management group hierarchy, serving as an intermediate root management group parent if specified. If left empty, the default will be to deploy under the tenant root management group. */
  existingTopLevelMgParentId?: string;
  /** The prefix that will be added to all resources created by this deployment. Use between 2 and 5 characters, consisting only of letters, digits, '-', '.', or '_'. No other special characters are supported. */
  deploymentPrefix: string;
  /** The optional suffix that will be appended to all resources created by this deployment, maximum 5 characters. */
  deploymentSuffix?: string;
  /** The display name assigned to the top management group of the landing zone deployment hierarchy. It is recommended to use unique names for each landing zone deployment. */
  topLevelMgDisplayName: string;
  /** The Azure region where the landing zone will be deployed. All Azure regions are supported. */
  deploymentLocation: string;
  /** The name of the organization or agency for which the landing zone is being deployed. This is optional. */
  organization?: string;
  /** The environment where the landing zone is being deployed, such as ppe, prod, test, etc. */
  environment?: string;
}

/** The response payload for generating infrastructure-as-code for the landing zone. */
export interface GenerateLandingZoneResponse {
  /** The parent management group name of the landing zone deployment. */
  topLevelMgDisplayName: string;
  /** The name of the Landing zone configuration resource. */
  landingZoneConfigurationName: string;
  /**
   * The url to access the generated code.
   * This value contains a credential. Consider obscuring before showing to users
   */
  generatedCodeUrl: string;
  /**
   * The storage account name to access the generated code.
   * This value contains a credential. Consider obscuring before showing to users
   */
  storageAccountName: string;
  /**
   * The storage account container to access the generated code.
   * This value contains a credential. Consider obscuring before showing to users
   */
  containerName: string;
  /**
   * The storage account blob name to access the generated code.
   * This value contains a credential. Consider obscuring before showing to users
   */
  blobName: string;
  /**
   * The generated code content in JSON string format.
   * This value contains a credential. Consider obscuring before showing to users
   */
  generatedArmTemplate?: string;
}

/** The request to update the authoring status of a configuration. */
export interface UpdateAuthoringStatusRequest {
  /** The authoring status value to be updated. Possible values include: 'Authoring', 'ReadyForUse' and 'Disabled'. */
  authoringStatus: AuthoringStatus;
}

/** The response for authoring status update request. */
export interface UpdateAuthoringStatusResponse {
  /** The name of the landing zone configuration resource. */
  landingZoneConfigurationName: string;
  /** The authoring status value to be updated. */
  authoringStatus: AuthoringStatus;
}

/** The properties of landing zone registration resource type. */
export interface LandingZoneRegistrationResourcePropertiesUpdate {
  /** The resource id of the top level management group */
  existingTopLevelMgId?: string;
  /** The resource id of the associated landing zone configuration. */
  existingLandingZoneConfigurationId?: string;
  /** The managed identity to be assigned to this landing zone registration. */
  managedIdentity?: ManagedIdentityPropertiesUpdate;
}

/** The request for duplicate landing zone configuration. */
export interface CreateCopyRequest {
  /** The name of the duplicate landing zone configuration resource. */
  name: string;
}

/** The response of the request for duplicate landing zone configuration. */
export interface CreateCopyResponse {
  /** The ID of the duplicate landing zone configuration resource. */
  copiedLandingZoneConfigurationId: string;
}

export interface Components19Kgb1NSchemasAzureResourcemanagerCommontypesManagedserviceidentityupdatePropertiesUserassignedidentitiesAdditionalproperties
  extends UserAssignedIdentity {}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface AzureResourceManagerCommonTypesTrackedResourceUpdate
  extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** The Landing zone account resource type. A Landing zone account is the container for configuring, deploying and managing multiple landing zones. */
export interface LandingZoneAccountResource extends TrackedResource {
  /** The resource-specific properties for this resource. */
  properties?: LandingZoneAccountResourceProperties;
  /** The managed service identities assigned to this resource. */
  identity?: ManagedServiceIdentity;
}

/** Concrete proxy resource types can be created by aliasing this type using a specific property type. */
export interface LandingZoneConfigurationResource extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: LandingZoneConfigurationResourceProperties;
}

/** The Landing zone registration resource type. */
export interface LandingZoneRegistrationResource extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: LandingZoneRegistrationResourceProperties;
}

/** Concrete proxy resource types can be created by aliasing this type using a specific property type. */
export interface LandingZoneConfigurationResourceUpdate extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: LandingZoneConfigurationResourcePropertiesUpdate;
}

/** The Landing zone registration resource type. */
export interface LandingZoneRegistrationResourceUpdate extends ProxyResource {
  /** The resource-specific properties for this resource. */
  properties?: LandingZoneRegistrationResourcePropertiesUpdate;
}

/** The Landing zone account resource type. A Landing zone account is the container for configuring, deploying and managing multiple landing zones. */
export interface LandingZoneAccountResourceUpdate
  extends AzureResourceManagerCommonTypesTrackedResourceUpdate {
  /** The resource-specific properties for this resource. */
  properties?: LandingZoneAccountResourcePropertiesUpdate;
  /** The managed service identities assigned to this resource. */
  identity?: AzureResourceManagerCommonTypesManagedServiceIdentityUpdate;
}

/** Defines headers for LandingZoneAccountOperations_create operation. */
export interface LandingZoneAccountOperationsCreateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for LandingZoneAccountOperations_update operation. */
export interface LandingZoneAccountOperationsUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for LandingZoneAccountOperations_delete operation. */
export interface LandingZoneAccountOperationsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for LandingZoneConfigurationOperations_create operation. */
export interface LandingZoneConfigurationOperationsCreateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for LandingZoneConfigurationOperations_update operation. */
export interface LandingZoneConfigurationOperationsUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for LandingZoneConfigurationOperations_delete operation. */
export interface LandingZoneConfigurationOperationsDeleteHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for LandingZoneConfigurationOperations_createCopy operation. */
export interface LandingZoneConfigurationOperationsCreateCopyHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for LandingZoneConfigurationOperations_generateLandingZone operation. */
export interface LandingZoneConfigurationOperationsGenerateLandingZoneHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for LandingZoneConfigurationOperations_updateAuthoringStatus operation. */
export interface LandingZoneConfigurationOperationsUpdateAuthoringStatusHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for LandingZoneRegistrationOperations_create operation. */
export interface LandingZoneRegistrationOperationsCreateHeaders {
  /** A link to the status monitor */
  azureAsyncOperation?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Defines headers for LandingZoneRegistrationOperations_update operation. */
export interface LandingZoneRegistrationOperationsUpdateHeaders {
  /** The Location header contains the URL where the status of the long running operation can be checked. */
  location?: string;
  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */
  retryAfter?: number;
}

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system",
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal",
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Resource has been created. */
  Succeeded = "Succeeded",
  /** Resource creation failed. */
  Failed = "Failed",
  /** Resource creation was canceled. */
  Canceled = "Canceled",
  /** The state of the resource when creating */
  Creating = "Creating",
  /** The state of the resource when updating */
  Updating = "Updating",
  /** The state of the resource when deleting */
  Deleting = "Deleting",
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded**: Resource has been created. \
 * **Failed**: Resource creation failed. \
 * **Canceled**: Resource creation was canceled. \
 * **Creating**: The state of the resource when creating \
 * **Updating**: The state of the resource when updating \
 * **Deleting**: The state of the resource when deleting
 */
export type ProvisioningState = string;

/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
export enum KnownManagedServiceIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned,UserAssigned",
}

/**
 * Defines values for ManagedServiceIdentityType. \
 * {@link KnownManagedServiceIdentityType} can be used interchangeably with ManagedServiceIdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned,UserAssigned**
 */
export type ManagedServiceIdentityType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key",
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link AuthoringStatus} that the service accepts. */
export enum KnownAuthoringStatus {
  /** 'Authoring' is the default status when a create configuration request is made. In this state, the Landing zone configuration can be modified. */
  Authoring = "Authoring",
  /** 'ReadyForUse' status is set when the configuration updates are finished, and the configuration is ready for code generation or deployment. */
  ReadyForUse = "ReadyForUse",
  /** 'Disabled' status is set when the landing zone configuration is no longer in use. */
  Disabled = "Disabled",
}

/**
 * Defines values for AuthoringStatus. \
 * {@link KnownAuthoringStatus} can be used interchangeably with AuthoringStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Authoring**: 'Authoring' is the default status when a create configuration request is made. In this state, the Landing zone configuration can be modified. \
 * **ReadyForUse**: 'ReadyForUse' status is set when the configuration updates are finished, and the configuration is ready for code generation or deployment. \
 * **Disabled**: 'Disabled' status is set when the landing zone configuration is no longer in use.
 */
export type AuthoringStatus = string;

/** Known values of {@link ResourceCreationOptions} that the service accepts. */
export enum KnownResourceCreationOptions {
  /** Value to create a new resource. */
  Yes = "Yes",
  /** Value to not create a new resource. */
  No = "No",
  /** Value to use an existing resource. */
  UseExisting = "UseExisting",
}

/**
 * Defines values for ResourceCreationOptions. \
 * {@link KnownResourceCreationOptions} can be used interchangeably with ResourceCreationOptions,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Yes**: Value to create a new resource. \
 * **No**: Value to not create a new resource. \
 * **UseExisting**: Value to use an existing resource.
 */
export type ResourceCreationOptions = string;

/** Known values of {@link FirewallCreationOptions} that the service accepts. */
export enum KnownFirewallCreationOptions {
  /** Select 'None' value to skip Firewall deployment. */
  None = "None",
  /** Select 'Standard' value to deploy the Firewall Standard SKU. */
  Standard = "Standard",
  /** Select 'Premium' value to deploy the Firewall Premium SKU. */
  Premium = "Premium",
}

/**
 * Defines values for FirewallCreationOptions. \
 * {@link KnownFirewallCreationOptions} can be used interchangeably with FirewallCreationOptions,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None**: Select 'None' value to skip Firewall deployment. \
 * **Standard**: Select 'Standard' value to deploy the Firewall Standard SKU. \
 * **Premium**: Select 'Premium' value to deploy the Firewall Premium SKU.
 */
export type FirewallCreationOptions = string;

/** Known values of {@link ManagedIdentityResourceType} that the service accepts. */
export enum KnownManagedIdentityResourceType {
  /** System assigned managed identity. */
  SystemAssigned = "SystemAssigned",
  /** User assigned managed identity. */
  UserAssigned = "UserAssigned",
}

/**
 * Defines values for ManagedIdentityResourceType. \
 * {@link KnownManagedIdentityResourceType} can be used interchangeably with ManagedIdentityResourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SystemAssigned**: System assigned managed identity. \
 * **UserAssigned**: User assigned managed identity.
 */
export type ManagedIdentityResourceType = string;

/** Known values of {@link ResourceType} that the service accepts. */
export enum KnownResourceType {
  /** Value when customer wants to provide a custom naming convention for Azure Firewall. */
  AzureFirewalls = "azureFirewalls",
  /** Value when customer wants to provide a custom naming convention for Log Analytics workspace. */
  Workspaces = "workspaces",
  /** Value when customer wants to provide a custom naming convention for automation account. */
  AutomationAccounts = "automationAccounts",
  /** Value when customer wants to provide a custom naming convention for dashboard. */
  Dashboards = "dashboards",
  /** Value when customer wants to provide a custom naming convention for managed identity. */
  UserAssignedIdentities = "userAssignedIdentities",
  /** Value when customer wants to provide a custom naming convention for Bastion. */
  BastionHosts = "bastionHosts",
  /** Value when customer wants to provide a custom naming convention for DDoS protection plan. */
  DdosProtectionPlans = "ddosProtectionPlans",
  /** Value when customer wants to provide a custom naming convention for Bastion NSG. */
  NetworkSecurityGroups = "networkSecurityGroups",
  /** Value when customer wants to provide a custom naming convention for virtual network. */
  VirtualNetworks = "virtualNetworks",
  /** Value when customer wants to provide a custom naming convention for route table. */
  RouteTables = "routeTables",
}

/**
 * Defines values for ResourceType. \
 * {@link KnownResourceType} can be used interchangeably with ResourceType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **azureFirewalls**: Value when customer wants to provide a custom naming convention for Azure Firewall. \
 * **workspaces**: Value when customer wants to provide a custom naming convention for Log Analytics workspace. \
 * **automationAccounts**: Value when customer wants to provide a custom naming convention for automation account. \
 * **dashboards**: Value when customer wants to provide a custom naming convention for dashboard. \
 * **userAssignedIdentities**: Value when customer wants to provide a custom naming convention for managed identity. \
 * **bastionHosts**: Value when customer wants to provide a custom naming convention for Bastion. \
 * **ddosProtectionPlans**: Value when customer wants to provide a custom naming convention for DDoS protection plan. \
 * **networkSecurityGroups**: Value when customer wants to provide a custom naming convention for Bastion NSG. \
 * **virtualNetworks**: Value when customer wants to provide a custom naming convention for virtual network. \
 * **routeTables**: Value when customer wants to provide a custom naming convention for route table.
 */
export type ResourceType = string;

/** Known values of {@link InfrastructureAsCodeOutputOptions} that the service accepts. */
export enum KnownInfrastructureAsCodeOutputOptions {
  /** Value when generating Landing zone code in Bicep format. */
  Bicep = "Bicep",
  /** Value when generating Landing zone code in ARM format. */
  ARM = "ARM",
}

/**
 * Defines values for InfrastructureAsCodeOutputOptions. \
 * {@link KnownInfrastructureAsCodeOutputOptions} can be used interchangeably with InfrastructureAsCodeOutputOptions,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Bicep**: Value when generating Landing zone code in Bicep format. \
 * **ARM**: Value when generating Landing zone code in ARM format.
 */
export type InfrastructureAsCodeOutputOptions = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface LandingZoneAccountOperationsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type LandingZoneAccountOperationsListBySubscriptionResponse =
  LandingZoneAccountResourceListResult;

/** Optional parameters. */
export interface LandingZoneAccountOperationsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type LandingZoneAccountOperationsListByResourceGroupResponse =
  LandingZoneAccountResourceListResult;

/** Optional parameters. */
export interface LandingZoneAccountOperationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type LandingZoneAccountOperationsGetResponse =
  LandingZoneAccountResource;

/** Optional parameters. */
export interface LandingZoneAccountOperationsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type LandingZoneAccountOperationsCreateResponse =
  LandingZoneAccountResource;

/** Optional parameters. */
export interface LandingZoneAccountOperationsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type LandingZoneAccountOperationsUpdateResponse =
  LandingZoneAccountResource;

/** Optional parameters. */
export interface LandingZoneAccountOperationsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type LandingZoneAccountOperationsDeleteResponse =
  LandingZoneAccountOperationsDeleteHeaders;

/** Optional parameters. */
export interface LandingZoneAccountOperationsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type LandingZoneAccountOperationsListBySubscriptionNextResponse =
  LandingZoneAccountResourceListResult;

/** Optional parameters. */
export interface LandingZoneAccountOperationsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type LandingZoneAccountOperationsListByResourceGroupNextResponse =
  LandingZoneAccountResourceListResult;

/** Optional parameters. */
export interface LandingZoneConfigurationOperationsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type LandingZoneConfigurationOperationsListBySubscriptionResponse =
  LandingZoneConfigurationResourceListResult;

/** Optional parameters. */
export interface LandingZoneConfigurationOperationsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type LandingZoneConfigurationOperationsListByResourceGroupResponse =
  LandingZoneConfigurationResourceListResult;

/** Optional parameters. */
export interface LandingZoneConfigurationOperationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type LandingZoneConfigurationOperationsGetResponse =
  LandingZoneConfigurationResource;

/** Optional parameters. */
export interface LandingZoneConfigurationOperationsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type LandingZoneConfigurationOperationsCreateResponse =
  LandingZoneConfigurationResource;

/** Optional parameters. */
export interface LandingZoneConfigurationOperationsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type LandingZoneConfigurationOperationsUpdateResponse =
  LandingZoneConfigurationResource;

/** Optional parameters. */
export interface LandingZoneConfigurationOperationsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the delete operation. */
export type LandingZoneConfigurationOperationsDeleteResponse =
  LandingZoneConfigurationOperationsDeleteHeaders;

/** Optional parameters. */
export interface LandingZoneConfigurationOperationsCreateCopyOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createCopy operation. */
export type LandingZoneConfigurationOperationsCreateCopyResponse =
  CreateLandingZoneConfigurationCopyResponse;

/** Optional parameters. */
export interface LandingZoneConfigurationOperationsGenerateLandingZoneOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the generateLandingZone operation. */
export type LandingZoneConfigurationOperationsGenerateLandingZoneResponse =
  GenerateLandingZoneResponse;

/** Optional parameters. */
export interface LandingZoneConfigurationOperationsUpdateAuthoringStatusOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updateAuthoringStatus operation. */
export type LandingZoneConfigurationOperationsUpdateAuthoringStatusResponse =
  UpdateAuthoringStatusResponse;

/** Optional parameters. */
export interface LandingZoneConfigurationOperationsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type LandingZoneConfigurationOperationsListBySubscriptionNextResponse =
  LandingZoneConfigurationResourceListResult;

/** Optional parameters. */
export interface LandingZoneConfigurationOperationsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type LandingZoneConfigurationOperationsListByResourceGroupNextResponse =
  LandingZoneConfigurationResourceListResult;

/** Optional parameters. */
export interface LandingZoneRegistrationOperationsListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscription operation. */
export type LandingZoneRegistrationOperationsListBySubscriptionResponse =
  LandingZoneRegistrationResourceListResult;

/** Optional parameters. */
export interface LandingZoneRegistrationOperationsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type LandingZoneRegistrationOperationsListByResourceGroupResponse =
  LandingZoneRegistrationResourceListResult;

/** Optional parameters. */
export interface LandingZoneRegistrationOperationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type LandingZoneRegistrationOperationsGetResponse =
  LandingZoneRegistrationResource;

/** Optional parameters. */
export interface LandingZoneRegistrationOperationsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type LandingZoneRegistrationOperationsCreateResponse =
  LandingZoneRegistrationResource;

/** Optional parameters. */
export interface LandingZoneRegistrationOperationsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type LandingZoneRegistrationOperationsUpdateResponse =
  LandingZoneRegistrationResource;

/** Optional parameters. */
export interface LandingZoneRegistrationOperationsDeleteOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface LandingZoneRegistrationOperationsListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBySubscriptionNext operation. */
export type LandingZoneRegistrationOperationsListBySubscriptionNextResponse =
  LandingZoneRegistrationResourceListResult;

/** Optional parameters. */
export interface LandingZoneRegistrationOperationsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type LandingZoneRegistrationOperationsListByResourceGroupNextResponse =
  LandingZoneRegistrationResourceListResult;

/** Optional parameters. */
export interface MicrosoftSovereignOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
