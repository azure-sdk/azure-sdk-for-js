/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const LandingZoneAccountResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneAccountResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LandingZoneAccountResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LandingZoneAccountResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneAccountResourceProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      storageAccount: {
        serializedName: "storageAccount",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ManagedServiceIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedServiceIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserAssignedIdentity" },
          },
        },
      },
    },
  },
};

export const UserAssignedIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "Uuid",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const LandingZoneAccountResourcePropertiesUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneAccountResourcePropertiesUpdate",
    modelProperties: {
      storageAccount: {
        serializedName: "storageAccount",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureResourceManagerCommonTypesManagedServiceIdentityUpdate: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AzureResourceManagerCommonTypesManagedServiceIdentityUpdate",
      modelProperties: {
        type: {
          serializedName: "type",
          type: {
            name: "String",
          },
        },
        userAssignedIdentities: {
          serializedName: "userAssignedIdentities",
          type: {
            name: "Dictionary",
            value: {
              type: { name: "Composite", className: "UserAssignedIdentity" },
            },
          },
        },
      },
    },
  };

export const LandingZoneConfigurationResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneConfigurationResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LandingZoneConfigurationResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LandingZoneConfigurationResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneConfigurationResourceProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      authoringStatus: {
        serializedName: "authoringStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      ddosProtectionCreationOption: {
        serializedName: "ddosProtectionCreationOption",
        required: true,
        type: {
          name: "String",
        },
      },
      existingDdosProtectionId: {
        serializedName: "existingDdosProtectionId",
        type: {
          name: "String",
        },
      },
      logAnalyticsWorkspaceCreationOption: {
        serializedName: "logAnalyticsWorkspaceCreationOption",
        required: true,
        type: {
          name: "String",
        },
      },
      existingLogAnalyticsWorkspaceId: {
        serializedName: "existingLogAnalyticsWorkspaceId",
        type: {
          name: "String",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Tags",
            },
          },
        },
      },
      firewallCreationOption: {
        serializedName: "firewallCreationOption",
        required: true,
        type: {
          name: "String",
        },
      },
      firewallSubnetCidrBlock: {
        serializedName: "firewallSubnetCidrBlock",
        type: {
          name: "String",
        },
      },
      gatewaySubnetCidrBlock: {
        serializedName: "gatewaySubnetCidrBlock",
        required: true,
        type: {
          name: "String",
        },
      },
      logRetentionInDays: {
        constraints: {
          InclusiveMaximum: 730,
          InclusiveMinimum: 30,
        },
        serializedName: "logRetentionInDays",
        required: true,
        type: {
          name: "Number",
        },
      },
      hubNetworkCidrBlock: {
        serializedName: "hubNetworkCidrBlock",
        required: true,
        type: {
          name: "String",
        },
      },
      azureBastionCreationOption: {
        serializedName: "azureBastionCreationOption",
        required: true,
        type: {
          name: "String",
        },
      },
      existingAzureBastionId: {
        serializedName: "existingAzureBastionId",
        type: {
          name: "String",
        },
      },
      azureBastionSubnetCidrBlock: {
        serializedName: "azureBastionSubnetCidrBlock",
        type: {
          name: "String",
        },
      },
      landingZonesMgChildren: {
        serializedName: "landingZonesMgChildren",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LandingZoneManagementGroupProperties",
            },
          },
        },
      },
      topLevelMgMetadata: {
        serializedName: "topLevelMgMetadata",
        type: {
          name: "Composite",
          className: "ManagementGroupProperties",
        },
      },
      landingZonesMgMetadata: {
        serializedName: "landingZonesMgMetadata",
        type: {
          name: "Composite",
          className: "ManagementGroupProperties",
        },
      },
      platformMgMetadata: {
        serializedName: "platformMgMetadata",
        type: {
          name: "Composite",
          className: "ManagementGroupProperties",
        },
      },
      platformManagementMgMetadata: {
        serializedName: "platformManagementMgMetadata",
        type: {
          name: "Composite",
          className: "ManagementGroupProperties",
        },
      },
      platformConnectivityMgMetadata: {
        serializedName: "platformConnectivityMgMetadata",
        type: {
          name: "Composite",
          className: "ManagementGroupProperties",
        },
      },
      platformIdentityMgMetadata: {
        serializedName: "platformIdentityMgMetadata",
        type: {
          name: "Composite",
          className: "ManagementGroupProperties",
        },
      },
      decommissionedMgMetadata: {
        serializedName: "decommissionedMgMetadata",
        type: {
          name: "Composite",
          className: "DecommissionedManagementGroupProperties",
        },
      },
      sandboxMgMetadata: {
        serializedName: "sandboxMgMetadata",
        type: {
          name: "Composite",
          className: "SandboxManagementGroupProperties",
        },
      },
      managedIdentity: {
        serializedName: "managedIdentity",
        type: {
          name: "Composite",
          className: "ManagedIdentityProperties",
        },
      },
      platformMgChildren: {
        serializedName: "platformMgChildren",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PlatformManagementGroupProperties",
            },
          },
        },
      },
      namingConventionFormula: {
        serializedName: "namingConventionFormula",
        type: {
          name: "String",
        },
      },
      customNamingConvention: {
        serializedName: "customNamingConvention",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomNamingConvention",
            },
          },
        },
      },
    },
  },
};

export const Tags: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Tags",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LandingZoneManagementGroupProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneManagementGroupProperties",
    modelProperties: {
      policyInitiativesAssignmentProperties: {
        serializedName: "policyInitiativesAssignmentProperties",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyInitiativeAssignmentProperties",
            },
          },
        },
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PolicyInitiativeAssignmentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyInitiativeAssignmentProperties",
    modelProperties: {
      policyInitiativeId: {
        serializedName: "policyInitiativeId",
        required: true,
        type: {
          name: "String",
        },
      },
      assignmentParameters: {
        serializedName: "assignmentParameters",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const ManagementGroupProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagementGroupProperties",
    modelProperties: {
      policyInitiativesAssignmentProperties: {
        serializedName: "policyInitiativesAssignmentProperties",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyInitiativeAssignmentProperties",
            },
          },
        },
      },
    },
  },
};

export const DecommissionedManagementGroupProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DecommissionedManagementGroupProperties",
    modelProperties: {
      policyInitiativesAssignmentProperties: {
        serializedName: "policyInitiativesAssignmentProperties",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyInitiativeAssignmentProperties",
            },
          },
        },
      },
      create: {
        serializedName: "create",
        required: true,
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const SandboxManagementGroupProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SandboxManagementGroupProperties",
    modelProperties: {
      policyInitiativesAssignmentProperties: {
        serializedName: "policyInitiativesAssignmentProperties",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyInitiativeAssignmentProperties",
            },
          },
        },
      },
      create: {
        serializedName: "create",
        required: true,
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const ManagedIdentityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedIdentityProperties",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      userAssignedIdentityResourceId: {
        serializedName: "userAssignedIdentityResourceId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PlatformManagementGroupProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlatformManagementGroupProperties",
    modelProperties: {
      policyInitiativesAssignmentProperties: {
        serializedName: "policyInitiativesAssignmentProperties",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyInitiativeAssignmentProperties",
            },
          },
        },
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CustomNamingConvention: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomNamingConvention",
    modelProperties: {
      resourceType: {
        serializedName: "resourceType",
        required: true,
        type: {
          name: "String",
        },
      },
      formula: {
        serializedName: "formula",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LandingZoneConfigurationResourcePropertiesUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneConfigurationResourcePropertiesUpdate",
    modelProperties: {
      ddosProtectionCreationOption: {
        serializedName: "ddosProtectionCreationOption",
        type: {
          name: "String",
        },
      },
      existingDdosProtectionId: {
        serializedName: "existingDdosProtectionId",
        type: {
          name: "String",
        },
      },
      logAnalyticsWorkspaceCreationOption: {
        serializedName: "logAnalyticsWorkspaceCreationOption",
        type: {
          name: "String",
        },
      },
      existingLogAnalyticsWorkspaceId: {
        serializedName: "existingLogAnalyticsWorkspaceId",
        type: {
          name: "String",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Tags",
            },
          },
        },
      },
      firewallCreationOption: {
        serializedName: "firewallCreationOption",
        type: {
          name: "String",
        },
      },
      firewallSubnetCidrBlock: {
        serializedName: "firewallSubnetCidrBlock",
        type: {
          name: "String",
        },
      },
      gatewaySubnetCidrBlock: {
        serializedName: "gatewaySubnetCidrBlock",
        type: {
          name: "String",
        },
      },
      logRetentionInDays: {
        constraints: {
          InclusiveMaximum: 730,
          InclusiveMinimum: 30,
        },
        serializedName: "logRetentionInDays",
        type: {
          name: "Number",
        },
      },
      hubNetworkCidrBlock: {
        serializedName: "hubNetworkCidrBlock",
        type: {
          name: "String",
        },
      },
      azureBastionCreationOption: {
        serializedName: "azureBastionCreationOption",
        type: {
          name: "String",
        },
      },
      existingAzureBastionId: {
        serializedName: "existingAzureBastionId",
        type: {
          name: "String",
        },
      },
      azureBastionSubnetCidrBlock: {
        serializedName: "azureBastionSubnetCidrBlock",
        type: {
          name: "String",
        },
      },
      landingZonesMgChildren: {
        serializedName: "landingZonesMgChildren",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LandingZoneManagementGroupProperties",
            },
          },
        },
      },
      topLevelMgMetadata: {
        serializedName: "topLevelMgMetadata",
        type: {
          name: "Composite",
          className: "ManagementGroupPropertiesUpdate",
        },
      },
      landingZonesMgMetadata: {
        serializedName: "landingZonesMgMetadata",
        type: {
          name: "Composite",
          className: "ManagementGroupPropertiesUpdate",
        },
      },
      platformMgMetadata: {
        serializedName: "platformMgMetadata",
        type: {
          name: "Composite",
          className: "ManagementGroupPropertiesUpdate",
        },
      },
      platformManagementMgMetadata: {
        serializedName: "platformManagementMgMetadata",
        type: {
          name: "Composite",
          className: "ManagementGroupPropertiesUpdate",
        },
      },
      platformConnectivityMgMetadata: {
        serializedName: "platformConnectivityMgMetadata",
        type: {
          name: "Composite",
          className: "ManagementGroupPropertiesUpdate",
        },
      },
      platformIdentityMgMetadata: {
        serializedName: "platformIdentityMgMetadata",
        type: {
          name: "Composite",
          className: "ManagementGroupPropertiesUpdate",
        },
      },
      decommissionedMgMetadata: {
        serializedName: "decommissionedMgMetadata",
        type: {
          name: "Composite",
          className: "DecommissionedManagementGroupPropertiesUpdate",
        },
      },
      sandboxMgMetadata: {
        serializedName: "sandboxMgMetadata",
        type: {
          name: "Composite",
          className: "SandboxManagementGroupPropertiesUpdate",
        },
      },
      managedIdentity: {
        serializedName: "managedIdentity",
        type: {
          name: "Composite",
          className: "ManagedIdentityPropertiesUpdate",
        },
      },
      platformMgChildren: {
        serializedName: "platformMgChildren",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PlatformManagementGroupProperties",
            },
          },
        },
      },
      namingConventionFormula: {
        serializedName: "namingConventionFormula",
        type: {
          name: "String",
        },
      },
      customNamingConvention: {
        serializedName: "customNamingConvention",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomNamingConvention",
            },
          },
        },
      },
    },
  },
};

export const ManagementGroupPropertiesUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagementGroupPropertiesUpdate",
    modelProperties: {
      policyInitiativesAssignmentProperties: {
        serializedName: "policyInitiativesAssignmentProperties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyInitiativeAssignmentProperties",
            },
          },
        },
      },
    },
  },
};

export const DecommissionedManagementGroupPropertiesUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DecommissionedManagementGroupPropertiesUpdate",
    modelProperties: {
      policyInitiativesAssignmentProperties: {
        serializedName: "policyInitiativesAssignmentProperties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyInitiativeAssignmentProperties",
            },
          },
        },
      },
      create: {
        serializedName: "create",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const SandboxManagementGroupPropertiesUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SandboxManagementGroupPropertiesUpdate",
    modelProperties: {
      policyInitiativesAssignmentProperties: {
        serializedName: "policyInitiativesAssignmentProperties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyInitiativeAssignmentProperties",
            },
          },
        },
      },
      create: {
        serializedName: "create",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const ManagedIdentityPropertiesUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ManagedIdentityPropertiesUpdate",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
      userAssignedIdentityResourceId: {
        serializedName: "userAssignedIdentityResourceId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CreateLandingZoneConfigurationCopyRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateLandingZoneConfigurationCopyRequest",
    modelProperties: {
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z0-9-]{3,64}$"),
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CreateLandingZoneConfigurationCopyResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateLandingZoneConfigurationCopyResponse",
    modelProperties: {
      copiedLandingZoneConfigurationId: {
        serializedName: "copiedLandingZoneConfigurationId",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GenerateLandingZoneRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenerateLandingZoneRequest",
    modelProperties: {
      infrastructureAsCodeOutputOptions: {
        serializedName: "infrastructureAsCodeOutputOptions",
        required: true,
        type: {
          name: "String",
        },
      },
      existingManagementSubscriptionId: {
        serializedName: "existingManagementSubscriptionId",
        type: {
          name: "String",
        },
      },
      existingIdentitySubscriptionId: {
        serializedName: "existingIdentitySubscriptionId",
        type: {
          name: "String",
        },
      },
      existingConnectivitySubscriptionId: {
        serializedName: "existingConnectivitySubscriptionId",
        type: {
          name: "String",
        },
      },
      subscriptionBillingScope: {
        serializedName: "subscriptionBillingScope",
        type: {
          name: "String",
        },
      },
      existingTopLevelMgParentId: {
        serializedName: "existingTopLevelMgParentId",
        type: {
          name: "String",
        },
      },
      deploymentPrefix: {
        constraints: {
          Pattern: new RegExp("^([a-zA-Z0-9-]*)$"),
          MaxLength: 5,
          MinLength: 2,
        },
        serializedName: "deploymentPrefix",
        required: true,
        type: {
          name: "String",
        },
      },
      deploymentSuffix: {
        constraints: {
          MaxLength: 5,
          MinLength: 2,
        },
        serializedName: "deploymentSuffix",
        type: {
          name: "String",
        },
      },
      topLevelMgDisplayName: {
        constraints: {
          MaxLength: 90,
          MinLength: 1,
        },
        serializedName: "topLevelMgDisplayName",
        required: true,
        type: {
          name: "String",
        },
      },
      deploymentLocation: {
        constraints: {
          Pattern: new RegExp("^([a-zA-Z0-9]+)$"),
        },
        serializedName: "deploymentLocation",
        required: true,
        type: {
          name: "String",
        },
      },
      organization: {
        serializedName: "organization",
        type: {
          name: "String",
        },
      },
      environment: {
        serializedName: "environment",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GenerateLandingZoneResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenerateLandingZoneResponse",
    modelProperties: {
      topLevelMgDisplayName: {
        serializedName: "topLevelMgDisplayName",
        required: true,
        type: {
          name: "String",
        },
      },
      landingZoneConfigurationName: {
        serializedName: "landingZoneConfigurationName",
        required: true,
        type: {
          name: "String",
        },
      },
      generatedCodeUrl: {
        serializedName: "generatedCodeUrl",
        required: true,
        type: {
          name: "String",
        },
      },
      storageAccountName: {
        serializedName: "storageAccountName",
        required: true,
        type: {
          name: "String",
        },
      },
      containerName: {
        serializedName: "containerName",
        required: true,
        type: {
          name: "String",
        },
      },
      blobName: {
        serializedName: "blobName",
        required: true,
        type: {
          name: "String",
        },
      },
      generatedArmTemplate: {
        serializedName: "generatedArmTemplate",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UpdateAuthoringStatusRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateAuthoringStatusRequest",
    modelProperties: {
      authoringStatus: {
        serializedName: "authoringStatus",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UpdateAuthoringStatusResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateAuthoringStatusResponse",
    modelProperties: {
      landingZoneConfigurationName: {
        serializedName: "landingZoneConfigurationName",
        required: true,
        type: {
          name: "String",
        },
      },
      authoringStatus: {
        serializedName: "authoringStatus",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LandingZoneRegistrationResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneRegistrationResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LandingZoneRegistrationResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const LandingZoneRegistrationResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneRegistrationResourceProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      existingTopLevelMgId: {
        serializedName: "existingTopLevelMgId",
        required: true,
        type: {
          name: "String",
        },
      },
      existingLandingZoneConfigurationId: {
        serializedName: "existingLandingZoneConfigurationId",
        required: true,
        type: {
          name: "String",
        },
      },
      managedIdentity: {
        serializedName: "managedIdentity",
        type: {
          name: "Composite",
          className: "ManagedIdentityProperties",
        },
      },
    },
  },
};

export const LandingZoneRegistrationResourcePropertiesUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneRegistrationResourcePropertiesUpdate",
    modelProperties: {
      existingTopLevelMgId: {
        serializedName: "existingTopLevelMgId",
        type: {
          name: "String",
        },
      },
      existingLandingZoneConfigurationId: {
        serializedName: "existingLandingZoneConfigurationId",
        type: {
          name: "String",
        },
      },
      managedIdentity: {
        serializedName: "managedIdentity",
        type: {
          name: "Composite",
          className: "ManagedIdentityPropertiesUpdate",
        },
      },
    },
  },
};

export const CreateCopyRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateCopyRequest",
    modelProperties: {
      name: {
        constraints: {
          Pattern: new RegExp("^[a-zA-Z0-9-]{3,24}$"),
        },
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CreateCopyResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CreateCopyResponse",
    modelProperties: {
      copiedLandingZoneConfigurationId: {
        serializedName: "copiedLandingZoneConfigurationId",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureResourceManagerCommonTypesTrackedResourceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceManagerCommonTypesTrackedResourceUpdate",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const LandingZoneAccountResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneAccountResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "LandingZoneAccountResourceProperties",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ManagedServiceIdentity",
        },
      },
    },
  },
};

export const LandingZoneAccountResourceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneAccountResourceUpdate",
    modelProperties: {
      ...AzureResourceManagerCommonTypesTrackedResourceUpdate.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "LandingZoneAccountResourcePropertiesUpdate",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "AzureResourceManagerCommonTypesManagedServiceIdentityUpdate",
        },
      },
    },
  },
};

export const LandingZoneConfigurationResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneConfigurationResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "LandingZoneConfigurationResourceProperties",
        },
      },
    },
  },
};

export const LandingZoneConfigurationResourceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneConfigurationResourceUpdate",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "LandingZoneConfigurationResourcePropertiesUpdate",
        },
      },
    },
  },
};

export const LandingZoneRegistrationResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneRegistrationResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "LandingZoneRegistrationResourceProperties",
        },
      },
    },
  },
};

export const LandingZoneRegistrationResourceUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneRegistrationResourceUpdate",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "LandingZoneRegistrationResourcePropertiesUpdate",
        },
      },
    },
  },
};

export const LandingZoneAccountOperationsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneAccountOperationsCreateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LandingZoneAccountOperationsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneAccountOperationsUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LandingZoneAccountOperationsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneAccountOperationsDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LandingZoneConfigurationOperationsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneConfigurationOperationsCreateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LandingZoneConfigurationOperationsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneConfigurationOperationsUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LandingZoneConfigurationOperationsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneConfigurationOperationsDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LandingZoneConfigurationOperationsCreateCopyHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneConfigurationOperationsCreateCopyHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LandingZoneConfigurationOperationsGenerateLandingZoneHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "LandingZoneConfigurationOperationsGenerateLandingZoneHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const LandingZoneConfigurationOperationsUpdateAuthoringStatusHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "LandingZoneConfigurationOperationsUpdateAuthoringStatusHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const LandingZoneRegistrationOperationsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneRegistrationOperationsCreateHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const LandingZoneRegistrationOperationsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LandingZoneRegistrationOperationsUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};
