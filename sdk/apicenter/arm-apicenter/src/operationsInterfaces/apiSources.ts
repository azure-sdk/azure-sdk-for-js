/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ApiSource,
  ApiSourcesListOptionalParams,
  ApiSourcesGetOptionalParams,
  ApiSourcesGetResponse,
  ApiSourcesCreateOrUpdateOptionalParams,
  ApiSourcesCreateOrUpdateResponse,
  ApiSourcesDeleteOptionalParams,
  ApiSourcesHeadOptionalParams,
  ApiSourcesHeadResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ApiSources. */
export interface ApiSources {
  /**
   * Returns a collection of API sources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    options?: ApiSourcesListOptionalParams,
  ): PagedAsyncIterableIterator<ApiSource>;
  /**
   * Returns details of the API source.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param apiSourceName The name of the API.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    apiSourceName: string,
    options?: ApiSourcesGetOptionalParams,
  ): Promise<ApiSourcesGetResponse>;
  /**
   * Creates new or updates existing API source.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param apiSourceName The name of the API.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    apiSourceName: string,
    resource: ApiSource,
    options?: ApiSourcesCreateOrUpdateOptionalParams,
  ): Promise<ApiSourcesCreateOrUpdateResponse>;
  /**
   * Deletes specified API source.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param apiSourceName The name of the API.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    apiSourceName: string,
    options?: ApiSourcesDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Checks if specified API source exists.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param apiSourceName The name of the API.
   * @param options The options parameters.
   */
  head(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    apiSourceName: string,
    options?: ApiSourcesHeadOptionalParams,
  ): Promise<ApiSourcesHeadResponse>;
}
