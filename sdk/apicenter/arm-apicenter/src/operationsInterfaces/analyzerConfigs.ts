/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  AnalyzerConfig,
  AnalyzerConfigsListOptionalParams,
  AnalyzerConfigsGetOptionalParams,
  AnalyzerConfigsGetResponse,
  AnalyzerConfigsCreateOrUpdateOptionalParams,
  AnalyzerConfigsCreateOrUpdateResponse,
  AnalyzerConfigsDeleteOptionalParams,
  AnalyzerConfigsExportRulesetOptionalParams,
  AnalyzerConfigsExportRulesetResponse,
  RulesetImportRequest,
  AnalyzerConfigsImportRulesetOptionalParams,
  AnalyzerConfigsImportRulesetResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AnalyzerConfigs. */
export interface AnalyzerConfigs {
  /**
   * Lists API analyzer configurations.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    options?: AnalyzerConfigsListOptionalParams,
  ): PagedAsyncIterableIterator<AnalyzerConfig>;
  /**
   * Returns details of the API analyzer configuration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param analyzerConfigName The name of the configuration.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    analyzerConfigName: string,
    options?: AnalyzerConfigsGetOptionalParams,
  ): Promise<AnalyzerConfigsGetResponse>;
  /**
   * Creates new or updates existing API analyzer configuration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param analyzerConfigName The name of the configuration.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    analyzerConfigName: string,
    resource: AnalyzerConfig,
    options?: AnalyzerConfigsCreateOrUpdateOptionalParams,
  ): Promise<AnalyzerConfigsCreateOrUpdateResponse>;
  /**
   * Permanently deletes API analyzer configuration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param analyzerConfigName The name of the configuration.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    analyzerConfigName: string,
    options?: AnalyzerConfigsDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Exports the API analyzer ruleset.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param analyzerConfigName The name of the configuration.
   * @param options The options parameters.
   */
  beginExportRuleset(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    analyzerConfigName: string,
    options?: AnalyzerConfigsExportRulesetOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<AnalyzerConfigsExportRulesetResponse>,
      AnalyzerConfigsExportRulesetResponse
    >
  >;
  /**
   * Exports the API analyzer ruleset.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param analyzerConfigName The name of the configuration.
   * @param options The options parameters.
   */
  beginExportRulesetAndWait(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    analyzerConfigName: string,
    options?: AnalyzerConfigsExportRulesetOptionalParams,
  ): Promise<AnalyzerConfigsExportRulesetResponse>;
  /**
   * Imports the API analyzer ruleset.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param analyzerConfigName The name of the configuration.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginImportRuleset(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    analyzerConfigName: string,
    body: RulesetImportRequest,
    options?: AnalyzerConfigsImportRulesetOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<AnalyzerConfigsImportRulesetResponse>,
      AnalyzerConfigsImportRulesetResponse
    >
  >;
  /**
   * Imports the API analyzer ruleset.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param serviceName The name of Azure API Center service.
   * @param workspaceName The name of the workspace.
   * @param analyzerConfigName The name of the configuration.
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginImportRulesetAndWait(
    resourceGroupName: string,
    serviceName: string,
    workspaceName: string,
    analyzerConfigName: string,
    body: RulesetImportRequest,
    options?: AnalyzerConfigsImportRulesetOptionalParams,
  ): Promise<AnalyzerConfigsImportRulesetResponse>;
}
