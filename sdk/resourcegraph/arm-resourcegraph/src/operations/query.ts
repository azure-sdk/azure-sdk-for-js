/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Query } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ResourceGraphClient } from "../resourceGraphClient";
import {
  QueryGenerationRequest,
  QueryGenerateQueryOptionalParams,
  QueryGenerateQueryResponse
} from "../models";

/** Class containing Query operations. */
export class QueryImpl implements Query {
  private readonly client: ResourceGraphClient;

  /**
   * Initialize a new instance of the class Query class.
   * @param client Reference to the service client
   */
  constructor(client: ResourceGraphClient) {
    this.client = client;
  }

  /**
   * Generates ARG query for a given user prompt.
   * @param body Query Generation Request
   * @param options The options parameters.
   */
  generateQuery(
    body: QueryGenerationRequest,
    options?: QueryGenerateQueryOptionalParams
  ): Promise<QueryGenerateQueryResponse> {
    return this.client.sendOperationRequest(
      { body, options },
      generateQueryOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const generateQueryOperationSpec: coreClient.OperationSpec = {
  path: "/providers/Microsoft.ResourceGraph/generateQuery",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.QueryGenerationResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  requestBody: Parameters.body,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
